!function (t) {
    function e(n) {
        if (i[n])
            return i[n].exports;
        var r = i[n] = {
            i: n,
            l: !1,
            exports: {}
        };
        return t[n].call(r.exports, r, r.exports, e),
            r.l = !0,
            r.exports
    }
    var i = {};
    e.m = t,
        e.c = i,
        e.i = function (t) {
            return t
        }
        ,
        e.d = function (t, i, n) {
            e.o(t, i) || Object.defineProperty(t, i, {
                configurable: !1,
                enumerable: !0,
                get: n
            })
        }
        ,
        e.n = function (t) {
            var i = t && t.__esModule ? function () {
                return t.default
            }
                : function () {
                    return t
                }
                ;
            return e.d(i, "a", i),
                i
        }
        ,
        e.o = function (t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }
        ,
        e.p = "/dist",
        e(e.s = 37)
}([function (t, e, i) {
    "use strict";
    function n() { }
    function r(t, e) {
        this.x = t || 0,
            this.y = e || 0
    }
    function a(t, e, i, n, o, s, h, l, c, u) {
        Object.defineProperty(this, "id", {
            value: Ms++
        }),
            this.uuid = bs.generateUUID(),
            this.name = "",
            this.image = void 0 !== t ? t : a.DEFAULT_IMAGE,
            this.mipmaps = [],
            this.mapping = void 0 !== e ? e : a.DEFAULT_MAPPING,
            this.wrapS = void 0 !== i ? i : vo,
            this.wrapT = void 0 !== n ? n : vo,
            this.magFilter = void 0 !== o ? o : bo,
            this.minFilter = void 0 !== s ? s : To,
            this.anisotropy = void 0 !== c ? c : 1,
            this.format = void 0 !== h ? h : Bo,
            this.type = void 0 !== l ? l : Po,
            this.offset = new r(0, 0),
            this.repeat = new r(1, 1),
            this.generateMipmaps = !0,
            this.premultiplyAlpha = !1,
            this.flipY = !0,
            this.unpackAlignment = 4,
            this.encoding = void 0 !== u ? u : ps,
            this.version = 0,
            this.onUpdate = null
    }
    function o(t, e, i, n) {
        this.x = t || 0,
            this.y = e || 0,
            this.z = i || 0,
            this.w = void 0 !== n ? n : 1
    }
    function s(t, e, i) {
        this.uuid = bs.generateUUID(),
            this.width = t,
            this.height = e,
            this.scissor = new o(0, 0, t, e),
            this.scissorTest = !1,
            this.viewport = new o(0, 0, t, e),
            i = i || {},
            void 0 === i.minFilter && (i.minFilter = bo),
            this.texture = new a(void 0, void 0, i.wrapS, i.wrapT, i.magFilter, i.minFilter, i.format, i.type, i.anisotropy, i.encoding),
            this.depthBuffer = void 0 === i.depthBuffer || i.depthBuffer,
            this.stencilBuffer = void 0 === i.stencilBuffer || i.stencilBuffer,
            this.depthTexture = void 0 !== i.depthTexture ? i.depthTexture : null
    }
    function h(t, e, i) {
        s.call(this, t, e, i),
            this.activeCubeFace = 0,
            this.activeMipMapLevel = 0
    }
    function l(t, e, i, n) {
        this._x = t || 0,
            this._y = e || 0,
            this._z = i || 0,
            this._w = void 0 !== n ? n : 1
    }
    function c(t, e, i) {
        this.x = t || 0,
            this.y = e || 0,
            this.z = i || 0
    }
    function u() {
        this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
            arguments.length
    }
    function p(t, e, i, n, r, o, s, h, l, c, u, p) {
        a.call(this, null, o, s, h, l, c, n, r, u, p),
            this.image = {
                data: t,
                width: e,
                height: i
            },
            this.magFilter = void 0 !== l ? l : _o,
            this.minFilter = void 0 !== c ? c : _o,
            this.generateMipmaps = !1,
            this.flipY = !1,
            this.unpackAlignment = 1
    }
    function d(t, e, i, n, r, o, s, h, l, c) {
        t = void 0 !== t ? t : [],
            e = void 0 !== e ? e : ho,
            a.call(this, t, e, i, n, r, o, s, h, l, c),
            this.flipY = !1
    }
    function f() {
        this.seq = [],
            this.map = {}
    }
    function m(t, e, i) {
        var n = t[0];
        if (n <= 0 || n > 0)
            return t;
        var r = e * i
            , a = Ss[r];
        if (void 0 === a && (a = new Float32Array(r),
            Ss[r] = a),
            0 !== e) {
            n.toArray(a, 0);
            for (var o = 1, s = 0; o !== e; ++o)
                s += i,
                    t[o].toArray(a, s)
        }
        return a
    }
    function g(t, e) {
        var i = As[e];
        void 0 === i && (i = new Int32Array(e),
            As[e] = i);
        for (var n = 0; n !== e; ++n)
            i[n] = t.allocTextureUnit();
        return i
    }
    function v(t, e) {
        t.uniform1f(this.addr, e)
    }
    function y(t, e) {
        t.uniform1i(this.addr, e)
    }
    function _(t, e) {
        void 0 === e.x ? t.uniform2fv(this.addr, e) : t.uniform2f(this.addr, e.x, e.y)
    }
    function x(t, e) {
        void 0 !== e.x ? t.uniform3f(this.addr, e.x, e.y, e.z) : void 0 !== e.r ? t.uniform3f(this.addr, e.r, e.g, e.b) : t.uniform3fv(this.addr, e)
    }
    function w(t, e) {
        void 0 === e.x ? t.uniform4fv(this.addr, e) : t.uniform4f(this.addr, e.x, e.y, e.z, e.w)
    }
    function b(t, e) {
        t.uniformMatrix2fv(this.addr, !1, e.elements || e)
    }
    function M(t, e) {
        void 0 === e.elements ? t.uniformMatrix3fv(this.addr, !1, e) : (Ls.set(e.elements),
            t.uniformMatrix3fv(this.addr, !1, Ls))
    }
    function T(t, e) {
        void 0 === e.elements ? t.uniformMatrix4fv(this.addr, !1, e) : (Es.set(e.elements),
            t.uniformMatrix4fv(this.addr, !1, Es))
    }
    function P(t, e, i) {
        var n = i.allocTextureUnit();
        t.uniform1i(this.addr, n),
            i.setTexture2D(e || Ts, n)
    }
    function S(t, e, i) {
        var n = i.allocTextureUnit();
        t.uniform1i(this.addr, n),
            i.setTextureCube(e || Ps, n)
    }
    function A(t, e) {
        t.uniform2iv(this.addr, e)
    }
    function E(t, e) {
        t.uniform3iv(this.addr, e)
    }
    function L(t, e) {
        t.uniform4iv(this.addr, e)
    }
    function C(t) {
        switch (t) {
            case 5126:
                return v;
            case 35664:
                return _;
            case 35665:
                return x;
            case 35666:
                return w;
            case 35674:
                return b;
            case 35675:
                return M;
            case 35676:
                return T;
            case 35678:
                return P;
            case 35680:
                return S;
            case 5124:
            case 35670:
                return y;
            case 35667:
            case 35671:
                return A;
            case 35668:
            case 35672:
                return E;
            case 35669:
            case 35673:
                return L
        }
    }
    function O(t, e) {
        t.uniform1fv(this.addr, e)
    }
    function R(t, e) {
        t.uniform1iv(this.addr, e)
    }
    function I(t, e) {
        t.uniform2fv(this.addr, m(e, this.size, 2))
    }
    function k(t, e) {
        t.uniform3fv(this.addr, m(e, this.size, 3))
    }
    function z(t, e) {
        t.uniform4fv(this.addr, m(e, this.size, 4))
    }
    function F(t, e) {
        t.uniformMatrix2fv(this.addr, !1, m(e, this.size, 4))
    }
    function D(t, e) {
        t.uniformMatrix3fv(this.addr, !1, m(e, this.size, 9))
    }
    function N(t, e) {
        t.uniformMatrix4fv(this.addr, !1, m(e, this.size, 16))
    }
    function B(t, e, i) {
        var n = e.length
            , r = g(i, n);
        t.uniform1iv(this.addr, r);
        for (var a = 0; a !== n; ++a)
            i.setTexture2D(e[a] || Ts, r[a])
    }
    function U(t, e, i) {
        var n = e.length
            , r = g(i, n);
        t.uniform1iv(this.addr, r);
        for (var a = 0; a !== n; ++a)
            i.setTextureCube(e[a] || Ps, r[a])
    }
    function j(t) {
        switch (t) {
            case 5126:
                return O;
            case 35664:
                return I;
            case 35665:
                return k;
            case 35666:
                return z;
            case 35674:
                return F;
            case 35675:
                return D;
            case 35676:
                return N;
            case 35678:
                return B;
            case 35680:
                return U;
            case 5124:
            case 35670:
                return R;
            case 35667:
            case 35671:
                return A;
            case 35668:
            case 35672:
                return E;
            case 35669:
            case 35673:
                return L
        }
    }
    function G(t, e, i) {
        this.id = t,
            this.addr = i,
            this.setValue = C(e.type)
    }
    function V(t, e, i) {
        this.id = t,
            this.addr = i,
            this.size = e.size,
            this.setValue = j(e.type)
    }
    function H(t) {
        this.id = t,
            f.call(this)
    }
    function W(t, e) {
        t.seq.push(e),
            t.map[e.id] = e
    }
    function X(t, e, i) {
        var n = t.name
            , r = n.length;
        for (Cs.lastIndex = 0; ;) {
            var a = Cs.exec(n)
                , o = Cs.lastIndex
                , s = a[1]
                , h = "]" === a[2]
                , l = a[3];
            if (h && (s |= 0),
                void 0 === l || "[" === l && o + 2 === r) {
                W(i, void 0 === l ? new G(s, t, e) : new V(s, t, e));
                break
            }
            var c = i.map
                , u = c[s];
            void 0 === u && (u = new H(s),
                W(i, u)),
                i = u
        }
    }
    function Y(t, e, i) {
        f.call(this),
            this.renderer = i;
        for (var n = t.getProgramParameter(e, t.ACTIVE_UNIFORMS), r = 0; r < n; ++r) {
            var a = t.getActiveUniform(e, r)
                , o = a.name;
            X(a, t.getUniformLocation(e, o), this)
        }
    }
    function q(t, e, i) {
        return void 0 === e && void 0 === i ? this.set(t) : this.setRGB(t, e, i)
    }
    function Z(t, e) {
        this.min = void 0 !== t ? t : new r(1 / 0, 1 / 0),
            this.max = void 0 !== e ? e : new r(-1 / 0, -1 / 0)
    }
    function K(t, e) {
        function i() {
            var t = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1])
                , e = new Uint16Array([0, 1, 2, 0, 2, 3]);
            a = f.createBuffer(),
                o = f.createBuffer(),
                f.bindBuffer(f.ARRAY_BUFFER, a),
                f.bufferData(f.ARRAY_BUFFER, t, f.STATIC_DRAW),
                f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, o),
                f.bufferData(f.ELEMENT_ARRAY_BUFFER, e, f.STATIC_DRAW),
                p = f.createTexture(),
                d = f.createTexture(),
                m.bindTexture(f.TEXTURE_2D, p),
                f.texImage2D(f.TEXTURE_2D, 0, f.RGB, 16, 16, 0, f.RGB, f.UNSIGNED_BYTE, null),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_S, f.CLAMP_TO_EDGE),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_T, f.CLAMP_TO_EDGE),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MAG_FILTER, f.NEAREST),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MIN_FILTER, f.NEAREST),
                m.bindTexture(f.TEXTURE_2D, d),
                f.texImage2D(f.TEXTURE_2D, 0, f.RGBA, 16, 16, 0, f.RGBA, f.UNSIGNED_BYTE, null),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_S, f.CLAMP_TO_EDGE),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_WRAP_T, f.CLAMP_TO_EDGE),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MAG_FILTER, f.NEAREST),
                f.texParameteri(f.TEXTURE_2D, f.TEXTURE_MIN_FILTER, f.NEAREST),
                s = {
                    vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if ( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                    fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if ( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if ( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
                },
                h = n(s),
                l = {
                    vertex: f.getAttribLocation(h, "position"),
                    uv: f.getAttribLocation(h, "uv")
                },
                u = {
                    renderType: f.getUniformLocation(h, "renderType"),
                    map: f.getUniformLocation(h, "map"),
                    occlusionMap: f.getUniformLocation(h, "occlusionMap"),
                    opacity: f.getUniformLocation(h, "opacity"),
                    color: f.getUniformLocation(h, "color"),
                    scale: f.getUniformLocation(h, "scale"),
                    rotation: f.getUniformLocation(h, "rotation"),
                    screenPosition: f.getUniformLocation(h, "screenPosition")
                }
        }
        function n(e) {
            var i = f.createProgram()
                , n = f.createShader(f.FRAGMENT_SHADER)
                , r = f.createShader(f.VERTEX_SHADER)
                , a = "precision " + t.getPrecision() + " float;\n";
            return f.shaderSource(n, a + e.fragmentShader),
                f.shaderSource(r, a + e.vertexShader),
                f.compileShader(n),
                f.compileShader(r),
                f.attachShader(i, n),
                f.attachShader(i, r),
                f.linkProgram(i),
                i
        }
        var a, o, s, h, l, u, p, d, f = t.context, m = t.state;
        this.render = function (n, s, g) {
            if (0 !== e.length) {
                var v = new c
                    , y = g.w / g.z
                    , _ = .5 * g.z
                    , x = .5 * g.w
                    , w = 16 / g.w
                    , b = new r(w * y, w)
                    , M = new c(1, 1, 0)
                    , T = new r(1, 1)
                    , P = new Z;
                P.min.set(g.x, g.y),
                    P.max.set(g.x + (g.z - 16), g.y + (g.w - 16)),
                    void 0 === h && i(),
                    f.useProgram(h),
                    m.initAttributes(),
                    m.enableAttribute(l.vertex),
                    m.enableAttribute(l.uv),
                    m.disableUnusedAttributes(),
                    f.uniform1i(u.occlusionMap, 0),
                    f.uniform1i(u.map, 1),
                    f.bindBuffer(f.ARRAY_BUFFER, a),
                    f.vertexAttribPointer(l.vertex, 2, f.FLOAT, !1, 16, 0),
                    f.vertexAttribPointer(l.uv, 2, f.FLOAT, !1, 16, 8),
                    f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, o),
                    m.disable(f.CULL_FACE),
                    m.buffers.depth.setMask(!1);
                for (var S = 0, A = e.length; S < A; S++) {
                    w = 16 / g.w,
                        b.set(w * y, w);
                    var E = e[S];
                    if (v.set(E.matrixWorld.elements[12], E.matrixWorld.elements[13], E.matrixWorld.elements[14]),
                        v.applyMatrix4(s.matrixWorldInverse),
                        v.applyMatrix4(s.projectionMatrix),
                        M.copy(v),
                        T.x = g.x + M.x * _ + _ - 8,
                        T.y = g.y + M.y * x + x - 8,
                        !0 === P.containsPoint(T)) {
                        m.activeTexture(f.TEXTURE0),
                            m.bindTexture(f.TEXTURE_2D, null),
                            m.activeTexture(f.TEXTURE1),
                            m.bindTexture(f.TEXTURE_2D, p),
                            f.copyTexImage2D(f.TEXTURE_2D, 0, f.RGB, T.x, T.y, 16, 16, 0),
                            f.uniform1i(u.renderType, 0),
                            f.uniform2f(u.scale, b.x, b.y),
                            f.uniform3f(u.screenPosition, M.x, M.y, M.z),
                            m.disable(f.BLEND),
                            m.enable(f.DEPTH_TEST),
                            f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0),
                            m.activeTexture(f.TEXTURE0),
                            m.bindTexture(f.TEXTURE_2D, d),
                            f.copyTexImage2D(f.TEXTURE_2D, 0, f.RGBA, T.x, T.y, 16, 16, 0),
                            f.uniform1i(u.renderType, 1),
                            m.disable(f.DEPTH_TEST),
                            m.activeTexture(f.TEXTURE1),
                            m.bindTexture(f.TEXTURE_2D, p),
                            f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0),
                            E.positionScreen.copy(M),
                            E.customUpdateCallback ? E.customUpdateCallback(E) : E.updateLensFlares(),
                            f.uniform1i(u.renderType, 2),
                            m.enable(f.BLEND);
                        for (var L = 0, C = E.lensFlares.length; L < C; L++) {
                            var O = E.lensFlares[L];
                            O.opacity > .001 && O.scale > .001 && (M.x = O.x,
                                M.y = O.y,
                                M.z = O.z,
                                w = O.size * O.scale / g.w,
                                b.x = w * y,
                                b.y = w,
                                f.uniform3f(u.screenPosition, M.x, M.y, M.z),
                                f.uniform2f(u.scale, b.x, b.y),
                                f.uniform1f(u.rotation, O.rotation),
                                f.uniform1f(u.opacity, O.opacity),
                                f.uniform3f(u.color, O.color.r, O.color.g, O.color.b),
                                m.setBlending(O.blending, O.blendEquation, O.blendSrc, O.blendDst),
                                t.setTexture2D(O.texture, 1),
                                f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0))
                        }
                    }
                }
                m.enable(f.CULL_FACE),
                    m.enable(f.DEPTH_TEST),
                    m.buffers.depth.setMask(!0),
                    t.resetGLState()
            }
        }
    }
    function Q(t, e) {
        function i() {
            var t = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1])
                , e = new Uint16Array([0, 1, 2, 0, 2, 3]);
            o = f.createBuffer(),
                s = f.createBuffer(),
                f.bindBuffer(f.ARRAY_BUFFER, o),
                f.bufferData(f.ARRAY_BUFFER, t, f.STATIC_DRAW),
                f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, s),
                f.bufferData(f.ELEMENT_ARRAY_BUFFER, e, f.STATIC_DRAW),
                h = n(),
                u = {
                    position: f.getAttribLocation(h, "position"),
                    uv: f.getAttribLocation(h, "uv")
                },
                p = {
                    uvOffset: f.getUniformLocation(h, "uvOffset"),
                    uvScale: f.getUniformLocation(h, "uvScale"),
                    rotation: f.getUniformLocation(h, "rotation"),
                    scale: f.getUniformLocation(h, "scale"),
                    color: f.getUniformLocation(h, "color"),
                    map: f.getUniformLocation(h, "map"),
                    opacity: f.getUniformLocation(h, "opacity"),
                    modelViewMatrix: f.getUniformLocation(h, "modelViewMatrix"),
                    projectionMatrix: f.getUniformLocation(h, "projectionMatrix"),
                    fogType: f.getUniformLocation(h, "fogType"),
                    fogDensity: f.getUniformLocation(h, "fogDensity"),
                    fogNear: f.getUniformLocation(h, "fogNear"),
                    fogFar: f.getUniformLocation(h, "fogFar"),
                    fogColor: f.getUniformLocation(h, "fogColor"),
                    alphaTest: f.getUniformLocation(h, "alphaTest")
                };
            var i = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
            i.width = 8,
                i.height = 8;
            var r = i.getContext("2d");
            r.fillStyle = "white",
                r.fillRect(0, 0, 8, 8),
                d = new a(i),
                d.needsUpdate = !0
        }
        function n() {
            var e = f.createProgram()
                , i = f.createShader(f.VERTEX_SHADER)
                , n = f.createShader(f.FRAGMENT_SHADER);
            return f.shaderSource(i, ["precision " + t.getPrecision() + " float;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position * scale;", "vec2 rotatedPosition;", "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "vec4 finalPosition;", "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition;", "finalPosition = projectionMatrix * finalPosition;", "gl_Position = finalPosition;", "}"].join("\n")),
                f.shaderSource(n, ["precision " + t.getPrecision() + " float;", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}"].join("\n")),
                f.compileShader(i),
                f.compileShader(n),
                f.attachShader(e, i),
                f.attachShader(e, n),
                f.linkProgram(e),
                e
        }
        function r(t, e) {
            return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : e.id - t.id
        }
        var o, s, h, u, p, d, f = t.context, m = t.state, g = new c, v = new l, y = new c;
        this.render = function (n, a) {
            if (0 !== e.length) {
                void 0 === h && i(),
                    f.useProgram(h),
                    m.initAttributes(),
                    m.enableAttribute(u.position),
                    m.enableAttribute(u.uv),
                    m.disableUnusedAttributes(),
                    m.disable(f.CULL_FACE),
                    m.enable(f.BLEND),
                    f.bindBuffer(f.ARRAY_BUFFER, o),
                    f.vertexAttribPointer(u.position, 2, f.FLOAT, !1, 16, 0),
                    f.vertexAttribPointer(u.uv, 2, f.FLOAT, !1, 16, 8),
                    f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, s),
                    f.uniformMatrix4fv(p.projectionMatrix, !1, a.projectionMatrix.elements),
                    m.activeTexture(f.TEXTURE0),
                    f.uniform1i(p.map, 0);
                var l = 0
                    , c = 0
                    , _ = n.fog;
                _ ? (f.uniform3f(p.fogColor, _.color.r, _.color.g, _.color.b),
                    _.isFog ? (f.uniform1f(p.fogNear, _.near),
                        f.uniform1f(p.fogFar, _.far),
                        f.uniform1i(p.fogType, 1),
                        l = 1,
                        c = 1) : _.isFogExp2 && (f.uniform1f(p.fogDensity, _.density),
                            f.uniform1i(p.fogType, 2),
                            l = 2,
                            c = 2)) : (f.uniform1i(p.fogType, 0),
                                l = 0,
                                c = 0);
                for (var x = 0, w = e.length; x < w; x++) {
                    var b = e[x];
                    b.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse, b.matrixWorld),
                        b.z = -b.modelViewMatrix.elements[14]
                }
                e.sort(r);
                for (var M = [], x = 0, w = e.length; x < w; x++) {
                    var b = e[x]
                        , T = b.material;
                    if (!1 !== T.visible) {
                        f.uniform1f(p.alphaTest, T.alphaTest),
                            f.uniformMatrix4fv(p.modelViewMatrix, !1, b.modelViewMatrix.elements),
                            b.matrixWorld.decompose(g, v, y),
                            M[0] = y.x,
                            M[1] = y.y;
                        var P = 0;
                        n.fog && T.fog && (P = c),
                            l !== P && (f.uniform1i(p.fogType, P),
                                l = P),
                            null !== T.map ? (f.uniform2f(p.uvOffset, T.map.offset.x, T.map.offset.y),
                                f.uniform2f(p.uvScale, T.map.repeat.x, T.map.repeat.y)) : (f.uniform2f(p.uvOffset, 0, 0),
                                    f.uniform2f(p.uvScale, 1, 1)),
                            f.uniform1f(p.opacity, T.opacity),
                            f.uniform3f(p.color, T.color.r, T.color.g, T.color.b),
                            f.uniform1f(p.rotation, T.rotation),
                            f.uniform2fv(p.scale, M),
                            m.setBlending(T.blending, T.blendEquation, T.blendSrc, T.blendDst),
                            m.buffers.depth.setTest(T.depthTest),
                            m.buffers.depth.setMask(T.depthWrite),
                            T.map ? t.setTexture2D(T.map, 0) : t.setTexture2D(d, 0),
                            f.drawElements(f.TRIANGLES, 6, f.UNSIGNED_SHORT, 0)
                    }
                }
                m.enable(f.CULL_FACE),
                    t.resetGLState()
            }
        }
    }
    function J() {
        Object.defineProperty(this, "id", {
            value: Fs++
        }),
            this.uuid = bs.generateUUID(),
            this.name = "",
            this.type = "Material",
            this.fog = !0,
            this.lights = !0,
            this.blending = Ta,
            this.side = ma,
            this.shading = _a,
            this.vertexColors = xa,
            this.opacity = 1,
            this.transparent = !1,
            this.blendSrc = Na,
            this.blendDst = Ba,
            this.blendEquation = La,
            this.blendSrcAlpha = null,
            this.blendDstAlpha = null,
            this.blendEquationAlpha = null,
            this.depthFunc = qa,
            this.depthTest = !0,
            this.depthWrite = !0,
            this.clippingPlanes = null,
            this.clipIntersection = !1,
            this.clipShadows = !1,
            this.colorWrite = !0,
            this.precision = null,
            this.polygonOffset = !1,
            this.polygonOffsetFactor = 0,
            this.polygonOffsetUnits = 0,
            this.dithering = !1,
            this.alphaTest = 0,
            this.premultipliedAlpha = !1,
            this.overdraw = 0,
            this.visible = !0,
            this.needsUpdate = !0
    }
    function $(t) {
        J.call(this),
            this.type = "ShaderMaterial",
            this.defines = {},
            this.uniforms = {},
            this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
            this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
            this.linewidth = 1,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.fog = !1,
            this.lights = !1,
            this.clipping = !1,
            this.skinning = !1,
            this.morphTargets = !1,
            this.morphNormals = !1,
            this.extensions = {
                derivatives: !1,
                fragDepth: !1,
                drawBuffers: !1,
                shaderTextureLOD: !1
            },
            this.defaultAttributeValues = {
                color: [1, 1, 1],
                uv: [0, 0],
                uv2: [0, 0]
            },
            this.index0AttributeName = void 0,
            void 0 !== t && (t.attributes,
                this.setValues(t))
    }
    function tt(t) {
        J.call(this),
            this.type = "MeshDepthMaterial",
            this.depthPacking = xs,
            this.skinning = !1,
            this.morphTargets = !1,
            this.map = null,
            this.alphaMap = null,
            this.displacementMap = null,
            this.displacementScale = 1,
            this.displacementBias = 0,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.fog = !1,
            this.lights = !1,
            this.setValues(t)
    }
    function et(t, e) {
        this.min = void 0 !== t ? t : new c(1 / 0, 1 / 0, 1 / 0),
            this.max = void 0 !== e ? e : new c(-1 / 0, -1 / 0, -1 / 0)
    }
    function it(t, e) {
        this.center = void 0 !== t ? t : new c,
            this.radius = void 0 !== e ? e : 0
    }
    function nt() {
        this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1],
            arguments.length
    }
    function rt(t, e) {
        this.normal = void 0 !== t ? t : new c(1, 0, 0),
            this.constant = void 0 !== e ? e : 0
    }
    function at(t, e, i, n, r, a) {
        this.planes = [void 0 !== t ? t : new rt, void 0 !== e ? e : new rt, void 0 !== i ? i : new rt, void 0 !== n ? n : new rt, void 0 !== r ? r : new rt, void 0 !== a ? a : new rt]
    }
    function ot(t, e, i, n) {
        function a(e, i, n, r) {
            var a = e.geometry
                , o = null
                , s = M
                , h = e.customDepthMaterial;
            if (n && (s = T,
                h = e.customDistanceMaterial),
                h)
                o = h;
            else {
                var l = !1;
                i.morphTargets && (a && a.isBufferGeometry ? l = a.morphAttributes && a.morphAttributes.position && a.morphAttributes.position.length > 0 : a && a.isGeometry && (l = a.morphTargets && a.morphTargets.length > 0)),
                    e.isSkinnedMesh && i.skinning;
                var c = e.isSkinnedMesh && i.skinning
                    , u = 0;
                l && (u |= x),
                    c && (u |= w),
                    o = s[u]
            }
            if (t.localClippingEnabled && !0 === i.clipShadows && 0 !== i.clippingPlanes.length) {
                var p = o.uuid
                    , d = i.uuid
                    , f = P[p];
                void 0 === f && (f = {},
                    P[p] = f);
                var m = f[d];
                void 0 === m && (m = o.clone(),
                    f[d] = m),
                    o = m
            }
            o.visible = i.visible,
                o.wireframe = i.wireframe;
            var g = i.side;
            return D.renderSingleSided && g == va && (g = ma),
                D.renderReverseSided && (g === ma ? g = ga : g === ga && (g = ma)),
                o.side = g,
                o.clipShadows = i.clipShadows,
                o.clippingPlanes = i.clippingPlanes,
                o.wireframeLinewidth = i.wireframeLinewidth,
                o.linewidth = i.linewidth,
                n && void 0 !== o.uniforms.lightPos && o.uniforms.lightPos.value.copy(r),
                o
        }
        function h(e, n, r, o) {
            if (!1 !== e.visible) {
                if (e.layers.test(n.layers) && (e.isMesh || e.isLine || e.isPoints) && e.castShadow && (!e.frustumCulled || d.intersectsObject(e))) {
                    e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse, e.matrixWorld);
                    var s = i.update(e)
                        , l = e.material;
                    if (Array.isArray(l))
                        for (var c = s.groups, u = 0, p = c.length; u < p; u++) {
                            var f = c[u]
                                , m = l[f.materialIndex];
                            if (m && m.visible) {
                                var g = a(e, m, o, _);
                                t.renderBufferDirect(r, null, s, g, e, f)
                            }
                        }
                    else if (l.visible) {
                        var g = a(e, l, o, _);
                        t.renderBufferDirect(r, null, s, g, e, null)
                    }
                }
                for (var v = e.children, y = 0, x = v.length; y < x; y++)
                    h(v[y], n, r, o)
            }
        }
        var l = t.context
            , p = t.state
            , d = new at
            , f = new u
            , m = e.shadows
            , g = new r
            , v = new r(n.maxTextureSize, n.maxTextureSize)
            , y = new c
            , _ = new c
            , x = 1
            , w = 2
            , b = 1 + (x | w)
            , M = new Array(b)
            , T = new Array(b)
            , P = {}
            , S = [new c(1, 0, 0), new c(-1, 0, 0), new c(0, 0, 1), new c(0, 0, -1), new c(0, 1, 0), new c(0, -1, 0)]
            , A = [new c(0, 1, 0), new c(0, 1, 0), new c(0, 1, 0), new c(0, 1, 0), new c(0, 0, 1), new c(0, 0, -1)]
            , E = [new o, new o, new o, new o, new o, new o]
            , L = new tt;
        L.depthPacking = ws,
            L.clipping = !0;
        for (var C = zs.distanceRGBA, O = Is.clone(C.uniforms), R = 0; R !== b; ++R) {
            var I = 0 != (R & x)
                , k = 0 != (R & w)
                , z = L.clone();
            z.morphTargets = I,
                z.skinning = k,
                M[R] = z;
            var F = new $({
                defines: {
                    USE_SHADOWMAP: ""
                },
                uniforms: O,
                vertexShader: C.vertexShader,
                fragmentShader: C.fragmentShader,
                morphTargets: I,
                skinning: k,
                clipping: !0
            });
            T[R] = F
        }
        var D = this;
        this.enabled = !1,
            this.autoUpdate = !0,
            this.needsUpdate = !1,
            this.type = da,
            this.renderReverseSided = !0,
            this.renderSingleSided = !0,
            this.render = function (e, i) {
                if (!1 !== D.enabled && (!1 !== D.autoUpdate || !1 !== D.needsUpdate) && 0 !== m.length) {
                    p.disable(l.BLEND),
                        p.buffers.color.setClear(1, 1, 1, 1),
                        p.buffers.depth.setTest(!0),
                        p.setScissorTest(!1);
                    for (var n, r, a = 0, o = m.length; a < o; a++) {
                        var c = m[a]
                            , u = c.shadow;
                        if (void 0 !== u) {
                            var x = u.camera
                                , w = u.matrix;
                            if (_.setFromMatrixPosition(c.matrixWorld),
                                x.position.copy(_),
                                g.copy(u.mapSize),
                                g.min(v),
                                c && c.isPointLight) {
                                n = 6,
                                    r = !0;
                                var b = g.x
                                    , M = g.y;
                                E[0].set(2 * b, M, b, M),
                                    E[1].set(0, M, b, M),
                                    E[2].set(3 * b, M, b, M),
                                    E[3].set(b, M, b, M),
                                    E[4].set(3 * b, 0, b, M),
                                    E[5].set(b, 0, b, M),
                                    g.x *= 4,
                                    g.y *= 2,
                                    w.makeTranslation(-_.x, -_.y, -_.z)
                            } else
                                n = 1,
                                    r = !1,
                                    y.setFromMatrixPosition(c.target.matrixWorld),
                                    x.lookAt(y),
                                    x.updateMatrixWorld(),
                                    x.matrixWorldInverse.getInverse(x.matrixWorld),
                                    w.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                                    w.multiply(x.projectionMatrix),
                                    w.multiply(x.matrixWorldInverse);
                            if (null === u.map) {
                                var T = {
                                    minFilter: _o,
                                    magFilter: _o,
                                    format: Bo
                                };
                                u.map = new s(g.x, g.y, T),
                                    u.map.texture.name = c.name + ".shadowMap",
                                    x.updateProjectionMatrix()
                            }
                            u.isSpotLightShadow && u.update(c);
                            var P = u.map;
                            t.setRenderTarget(P),
                                t.clear();
                            for (var L = 0; L < n; L++) {
                                if (r) {
                                    y.copy(x.position),
                                        y.add(S[L]),
                                        x.up.copy(A[L]),
                                        x.lookAt(y),
                                        x.updateMatrixWorld(),
                                        x.matrixWorldInverse.getInverse(x.matrixWorld);
                                    var C = E[L];
                                    p.viewport(C)
                                }
                                f.multiplyMatrices(x.projectionMatrix, x.matrixWorldInverse),
                                    d.setFromMatrix(f),
                                    h(e, i, x, r)
                            }
                        }
                    }
                    var O = t.getClearColor()
                        , R = t.getClearAlpha();
                    t.setClearColor(O, R),
                        D.needsUpdate = !1
                }
            }
    }
    function st(t, e) {
        this.origin = void 0 !== t ? t : new c,
            this.direction = void 0 !== e ? e : new c
    }
    function ht(t, e, i, n) {
        this._x = t || 0,
            this._y = e || 0,
            this._z = i || 0,
            this._order = n || ht.DefaultOrder
    }
    function lt() {
        this.mask = 1
    }
    function ct() {
        function t() {
            r.setFromEuler(n, !1)
        }
        function e() {
            n.setFromQuaternion(r, void 0, !1)
        }
        Object.defineProperty(this, "id", {
            value: Ds++
        }),
            this.uuid = bs.generateUUID(),
            this.name = "",
            this.type = "Object3D",
            this.parent = null,
            this.children = [],
            this.up = ct.DefaultUp.clone();
        var i = new c
            , n = new ht
            , r = new l
            , a = new c(1, 1, 1);
        n.onChange(t),
            r.onChange(e),
            Object.defineProperties(this, {
                position: {
                    enumerable: !0,
                    value: i
                },
                rotation: {
                    enumerable: !0,
                    value: n
                },
                quaternion: {
                    enumerable: !0,
                    value: r
                },
                scale: {
                    enumerable: !0,
                    value: a
                },
                modelViewMatrix: {
                    value: new u
                },
                normalMatrix: {
                    value: new nt
                }
            }),
            this.matrix = new u,
            this.matrixWorld = new u,
            this.matrixAutoUpdate = ct.DefaultMatrixAutoUpdate,
            this.matrixWorldNeedsUpdate = !1,
            this.layers = new lt,
            this.visible = !0,
            this.castShadow = !1,
            this.receiveShadow = !1,
            this.frustumCulled = !0,
            this.renderOrder = 0,
            this.userData = {},
            this.onBeforeRender = function () { }
            ,
            this.onAfterRender = function () { }
    }
    function ut(t, e) {
        this.start = void 0 !== t ? t : new c,
            this.end = void 0 !== e ? e : new c
    }
    function pt(t, e, i) {
        this.a = void 0 !== t ? t : new c,
            this.b = void 0 !== e ? e : new c,
            this.c = void 0 !== i ? i : new c
    }
    function dt(t, e, i, n, r, a) {
        this.a = t,
            this.b = e,
            this.c = i,
            this.normal = n && n.isVector3 ? n : new c,
            this.vertexNormals = Array.isArray(n) ? n : [],
            this.color = r && r.isColor ? r : new q,
            this.vertexColors = Array.isArray(r) ? r : [],
            this.materialIndex = void 0 !== a ? a : 0
    }
    function ft(t) {
        J.call(this),
            this.type = "MeshBasicMaterial",
            this.color = new q(16777215),
            this.map = null,
            this.lightMap = null,
            this.lightMapIntensity = 1,
            this.aoMap = null,
            this.aoMapIntensity = 1,
            this.specularMap = null,
            this.alphaMap = null,
            this.envMap = null,
            this.combine = $a,
            this.reflectivity = 1,
            this.refractionRatio = .98,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.wireframeLinecap = "round",
            this.wireframeLinejoin = "round",
            this.skinning = !1,
            this.morphTargets = !1,
            this.lights = !1,
            this.setValues(t)
    }
    function mt(t, e, i) {
        if (Array.isArray(t))
            throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.uuid = bs.generateUUID(),
            this.array = t,
            this.itemSize = e,
            this.count = void 0 !== t ? t.length / e : 0,
            this.normalized = !0 === i,
            this.dynamic = !1,
            this.updateRange = {
                offset: 0,
                count: -1
            },
            this.onUploadCallback = function () { }
            ,
            this.version = 0
    }
    function gt(t, e) {
        mt.call(this, new Int8Array(t), e)
    }
    function vt(t, e) {
        mt.call(this, new Uint8Array(t), e)
    }
    function yt(t, e) {
        mt.call(this, new Uint8ClampedArray(t), e)
    }
    function _t(t, e) {
        mt.call(this, new Int16Array(t), e)
    }
    function xt(t, e) {
        mt.call(this, new Uint16Array(t), e)
    }
    function wt(t, e) {
        mt.call(this, new Int32Array(t), e)
    }
    function bt(t, e) {
        mt.call(this, new Uint32Array(t), e)
    }
    function Mt(t, e) {
        mt.call(this, new Float32Array(t), e)
    }
    function Tt(t, e) {
        mt.call(this, new Float64Array(t), e)
    }
    function Pt() {
        this.indices = [],
            this.vertices = [],
            this.normals = [],
            this.colors = [],
            this.uvs = [],
            this.uvs2 = [],
            this.groups = [],
            this.morphTargets = {},
            this.skinWeights = [],
            this.skinIndices = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.verticesNeedUpdate = !1,
            this.normalsNeedUpdate = !1,
            this.colorsNeedUpdate = !1,
            this.uvsNeedUpdate = !1,
            this.groupsNeedUpdate = !1
    }
    function St(t) {
        if (0 === t.length)
            return -1 / 0;
        for (var e = t[0], i = 1, n = t.length; i < n; ++i)
            t[i] > e && (e = t[i]);
        return e
    }
    function At() {
        return Ns++
    }
    function Et() {
        Object.defineProperty(this, "id", {
            value: At()
        }),
            this.uuid = bs.generateUUID(),
            this.name = "",
            this.type = "Geometry",
            this.vertices = [],
            this.colors = [],
            this.faces = [],
            this.faceVertexUvs = [[]],
            this.morphTargets = [],
            this.morphNormals = [],
            this.skinWeights = [],
            this.skinIndices = [],
            this.lineDistances = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.elementsNeedUpdate = !1,
            this.verticesNeedUpdate = !1,
            this.uvsNeedUpdate = !1,
            this.normalsNeedUpdate = !1,
            this.colorsNeedUpdate = !1,
            this.lineDistancesNeedUpdate = !1,
            this.groupsNeedUpdate = !1
    }
    function Lt() {
        Object.defineProperty(this, "id", {
            value: At()
        }),
            this.uuid = bs.generateUUID(),
            this.name = "",
            this.type = "BufferGeometry",
            this.index = null,
            this.attributes = {},
            this.morphAttributes = {},
            this.groups = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.drawRange = {
                start: 0,
                count: 1 / 0
            }
    }
    function Ct(t, e) {
        ct.call(this),
            this.type = "Mesh",
            this.geometry = void 0 !== t ? t : new Lt,
            this.material = void 0 !== e ? e : new ft({
                color: 16777215 * Math.random()
            }),
            this.drawMode = ls,
            this.updateMorphTargets()
    }
    function Ot(t, e, i, n, r, a) {
        Et.call(this),
            this.type = "BoxGeometry",
            this.parameters = {
                width: t,
                height: e,
                depth: i,
                widthSegments: n,
                heightSegments: r,
                depthSegments: a
            },
            this.fromBufferGeometry(new Rt(t, e, i, n, r, a)),
            this.mergeVertices()
    }
    function Rt(t, e, i, n, r, a) {
        function o(t, e, i, n, r, a, o, m, g, v, y) {
            var _, x, w = a / g, b = o / v, M = a / 2, T = o / 2, P = m / 2, S = g + 1, A = v + 1, E = 0, L = 0, C = new c;
            for (x = 0; x < A; x++) {
                var O = x * b - T;
                for (_ = 0; _ < S; _++) {
                    var R = _ * w - M;
                    C[t] = R * n,
                        C[e] = O * r,
                        C[i] = P,
                        l.push(C.x, C.y, C.z),
                        C[t] = 0,
                        C[e] = 0,
                        C[i] = m > 0 ? 1 : -1,
                        u.push(C.x, C.y, C.z),
                        p.push(_ / g),
                        p.push(1 - x / v),
                        E += 1
                }
            }
            for (x = 0; x < v; x++)
                for (_ = 0; _ < g; _++) {
                    var I = d + _ + S * x
                        , k = d + _ + S * (x + 1)
                        , z = d + (_ + 1) + S * (x + 1)
                        , F = d + (_ + 1) + S * x;
                    h.push(I, k, F),
                        h.push(k, z, F),
                        L += 6
                }
            s.addGroup(f, L, y),
                f += L,
                d += E
        }
        Lt.call(this),
            this.type = "BoxBufferGeometry",
            this.parameters = {
                width: t,
                height: e,
                depth: i,
                widthSegments: n,
                heightSegments: r,
                depthSegments: a
            };
        var s = this;
        n = Math.floor(n) || 1,
            r = Math.floor(r) || 1,
            a = Math.floor(a) || 1;
        var h = []
            , l = []
            , u = []
            , p = []
            , d = 0
            , f = 0;
        o("z", "y", "x", -1, -1, i, e, t, a, r, 0),
            o("z", "y", "x", 1, -1, i, e, -t, a, r, 1),
            o("x", "z", "y", 1, 1, t, i, e, n, a, 2),
            o("x", "z", "y", 1, -1, t, i, -e, n, a, 3),
            o("x", "y", "z", 1, -1, t, e, i, n, r, 4),
            o("x", "y", "z", -1, -1, t, e, -i, n, r, 5),
            this.setIndex(h),
            this.addAttribute("position", new Mt(l, 3)),
            this.addAttribute("normal", new Mt(u, 3)),
            this.addAttribute("uv", new Mt(p, 2))
    }
    function It(t, e, i, n) {
        Et.call(this),
            this.type = "PlaneGeometry",
            this.parameters = {
                width: t,
                height: e,
                widthSegments: i,
                heightSegments: n
            },
            this.fromBufferGeometry(new kt(t, e, i, n)),
            this.mergeVertices()
    }
    function kt(t, e, i, n) {
        Lt.call(this),
            this.type = "PlaneBufferGeometry",
            this.parameters = {
                width: t,
                height: e,
                widthSegments: i,
                heightSegments: n
            };
        var r, a, o = t / 2, s = e / 2, h = Math.floor(i) || 1, l = Math.floor(n) || 1, c = h + 1, u = l + 1, p = t / h, d = e / l, f = [], m = [], g = [], v = [];
        for (a = 0; a < u; a++) {
            var y = a * d - s;
            for (r = 0; r < c; r++) {
                var _ = r * p - o;
                m.push(_, -y, 0),
                    g.push(0, 0, 1),
                    v.push(r / h),
                    v.push(1 - a / l)
            }
        }
        for (a = 0; a < l; a++)
            for (r = 0; r < h; r++) {
                var x = r + c * a
                    , w = r + c * (a + 1)
                    , b = r + 1 + c * (a + 1)
                    , M = r + 1 + c * a;
                f.push(x, w, M),
                    f.push(w, b, M)
            }
        this.setIndex(f),
            this.addAttribute("position", new Mt(m, 3)),
            this.addAttribute("normal", new Mt(g, 3)),
            this.addAttribute("uv", new Mt(v, 2))
    }
    function zt() {
        ct.call(this),
            this.type = "Camera",
            this.matrixWorldInverse = new u,
            this.projectionMatrix = new u
    }
    function Ft(t, e, i, n) {
        zt.call(this),
            this.type = "PerspectiveCamera",
            this.fov = void 0 !== t ? t : 50,
            this.zoom = 1,
            this.near = void 0 !== i ? i : .1,
            this.far = void 0 !== n ? n : 2e3,
            this.focus = 10,
            this.aspect = void 0 !== e ? e : 1,
            this.view = null,
            this.filmGauge = 35,
            this.filmOffset = 0,
            this.updateProjectionMatrix()
    }
    function Dt(t, e, i, n, r, a) {
        zt.call(this),
            this.type = "OrthographicCamera",
            this.zoom = 1,
            this.view = null,
            this.left = t,
            this.right = e,
            this.top = i,
            this.bottom = n,
            this.near = void 0 !== r ? r : .1,
            this.far = void 0 !== a ? a : 2e3,
            this.updateProjectionMatrix()
    }
    function Nt(t) {
        function e(e, i) {
            var n = e.array
                , r = e.dynamic ? t.DYNAMIC_DRAW : t.STATIC_DRAW
                , a = t.createBuffer();
            t.bindBuffer(i, a),
                t.bufferData(i, n, r),
                e.onUploadCallback();
            var o = t.FLOAT;
            return n instanceof Float32Array ? o = t.FLOAT : n instanceof Float64Array || (n instanceof Uint16Array ? o = t.UNSIGNED_SHORT : n instanceof Int16Array ? o = t.SHORT : n instanceof Uint32Array ? o = t.UNSIGNED_INT : n instanceof Int32Array ? o = t.INT : n instanceof Int8Array ? o = t.BYTE : n instanceof Uint8Array && (o = t.UNSIGNED_BYTE)),
            {
                buffer: a,
                type: o,
                bytesPerElement: n.BYTES_PER_ELEMENT,
                version: e.version
            }
        }
        function i(e, i, n) {
            var r = i.array
                , a = i.updateRange;
            t.bindBuffer(n, e),
                !1 === i.dynamic ? t.bufferData(n, r, t.STATIC_DRAW) : -1 === a.count ? t.bufferSubData(n, 0, r) : 0 === a.count || (t.bufferSubData(n, a.offset * r.BYTES_PER_ELEMENT, r.subarray(a.offset, a.offset + a.count)),
                    a.count = 0)
        }
        function n(t) {
            return t.isInterleavedBufferAttribute && (t = t.data),
                o[t.uuid]
        }
        function r(e) {
            var i = o[e.uuid];
            i && (t.deleteBuffer(i.buffer),
                delete o[e.uuid])
        }
        function a(t, n) {
            t.isInterleavedBufferAttribute && (t = t.data);
            var r = o[t.uuid];
            void 0 === r ? o[t.uuid] = e(t, n) : r.version < t.version && (i(r.buffer, t, n),
                r.version = t.version)
        }
        var o = {};
        return {
            get: n,
            remove: r,
            update: a
        }
    }
    function Bt(t, e) {
        return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.program && e.program && t.program !== e.program ? t.program.id - e.program.id : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id
    }
    function Ut(t, e) {
        return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id
    }
    function jt() {
        function t() {
            a = -1,
                s = -1
        }
        function e(t, e, i, n, h) {
            var l, c;
            i.transparent ? (l = o,
                c = ++s) : (l = r,
                    c = ++a);
            var u = l[c];
            u ? (u.id = t.id,
                u.object = t,
                u.geometry = e,
                u.material = i,
                u.program = i.program,
                u.renderOrder = t.renderOrder,
                u.z = n,
                u.group = h) : (u = {
                    id: t.id,
                    object: t,
                    geometry: e,
                    material: i,
                    program: i.program,
                    renderOrder: t.renderOrder,
                    z: n,
                    group: h
                },
                    l.push(u))
        }
        function i() {
            r.length = a + 1,
                o.length = s + 1
        }
        function n() {
            r.sort(Bt),
                o.sort(Ut)
        }
        var r = []
            , a = -1
            , o = []
            , s = -1;
        return {
            opaque: r,
            transparent: o,
            init: t,
            push: e,
            finish: i,
            sort: n
        }
    }
    function Gt() {
        function t(t, e) {
            var n = t.id + "," + e.id
                , r = i[n];
            return void 0 === r && (r = new jt,
                i[n] = r),
                r
        }
        function e() {
            i = {}
        }
        var i = {};
        return {
            get: t,
            dispose: e
        }
    }
    function Vt(t, e, i) {
        function n(t) {
            s = t
        }
        function r(i) {
            i.array instanceof Uint32Array && e.get("OES_element_index_uint") ? (h = t.UNSIGNED_INT,
                l = 4) : i.array instanceof Uint16Array ? (h = t.UNSIGNED_SHORT,
                    l = 2) : (h = t.UNSIGNED_BYTE,
                        l = 1)
        }
        function a(e, n) {
            t.drawElements(s, n, h, e * l),
                i.calls++,
                i.vertices += n,
                s === t.TRIANGLES && (i.faces += n / 3)
        }
        function o(n, r, a) {
            var o = e.get("ANGLE_instanced_arrays");
            null !== o && (o.drawElementsInstancedANGLE(s, a, h, r * l, n.maxInstancedCount),
                i.calls++,
                i.vertices += a * n.maxInstancedCount,
                s === t.TRIANGLES && (i.faces += n.maxInstancedCount * a / 3))
        }
        var s, h, l;
        this.setMode = n,
            this.setIndex = r,
            this.render = a,
            this.renderInstances = o
    }
    function Ht(t, e, i) {
        function n(t) {
            o = t
        }
        function r(e, n) {
            t.drawArrays(o, e, n),
                i.calls++,
                i.vertices += n,
                o === t.TRIANGLES && (i.faces += n / 3)
        }
        function a(n, r, a) {
            var s = e.get("ANGLE_instanced_arrays");
            if (null !== s) {
                var h = n.attributes.position;
                h.isInterleavedBufferAttribute ? (a = h.data.count,
                    s.drawArraysInstancedANGLE(o, 0, a, n.maxInstancedCount)) : s.drawArraysInstancedANGLE(o, r, a, n.maxInstancedCount),
                    i.calls++,
                    i.vertices += a * n.maxInstancedCount,
                    o === t.TRIANGLES && (i.faces += n.maxInstancedCount * a / 3)
            }
        }
        var o;
        this.setMode = n,
            this.render = r,
            this.renderInstances = a
    }
    function Wt(t, e, i) {
        function n(t) {
            var r = t.target
                , a = s[r.id];
            null !== a.index && e.remove(a.index);
            for (var o in a.attributes)
                e.remove(a.attributes[o]);
            r.removeEventListener("dispose", n),
                delete s[r.id];
            var l = h[r.id];
            l && (e.remove(l),
                delete h[r.id]),
                l = h[a.id],
                l && (e.remove(l),
                    delete h[a.id]),
                i.geometries--
        }
        function r(t, e) {
            var r = s[e.id];
            return r || (e.addEventListener("dispose", n),
                e.isBufferGeometry ? r = e : e.isGeometry && (void 0 === e._bufferGeometry && (e._bufferGeometry = (new Lt).setFromObject(t)),
                    r = e._bufferGeometry),
                s[e.id] = r,
                i.geometries++,
                r)
        }
        function a(i) {
            var n = i.index
                , r = i.attributes;
            null !== n && e.update(n, t.ELEMENT_ARRAY_BUFFER);
            for (var a in r)
                e.update(r[a], t.ARRAY_BUFFER);
            var o = i.morphAttributes;
            for (var a in o)
                for (var s = o[a], h = 0, l = s.length; h < l; h++)
                    e.update(s[h], t.ARRAY_BUFFER)
        }
        function o(i) {
            var n = h[i.id];
            if (n)
                return n;
            var r = []
                , a = i.index
                , o = i.attributes;
            if (null !== a)
                for (var s = a.array, l = 0, c = s.length; l < c; l += 3) {
                    var u = s[l + 0]
                        , p = s[l + 1]
                        , d = s[l + 2];
                    r.push(u, p, p, d, d, u)
                }
            else
                for (var s = o.position.array, l = 0, c = s.length / 3 - 1; l < c; l += 3) {
                    var u = l + 0
                        , p = l + 1
                        , d = l + 2;
                    r.push(u, p, p, d, d, u)
                }
            return n = new (St(r) > 65535 ? bt : xt)(r, 1),
                e.update(n, t.ELEMENT_ARRAY_BUFFER),
                h[i.id] = n,
                n
        }
        var s = {}
            , h = {};
        return {
            get: r,
            update: a,
            getWireframeAttribute: o
        }
    }
    function Xt() {
        var t = {};
        return {
            get: function (e) {
                if (void 0 !== t[e.id])
                    return t[e.id];
                var i;
                switch (e.type) {
                    case "DirectionalLight":
                        i = {
                            direction: new c,
                            color: new q,
                            shadow: !1,
                            shadowBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new r
                        };
                        break;
                    case "SpotLight":
                        i = {
                            position: new c,
                            direction: new c,
                            color: new q,
                            distance: 0,
                            coneCos: 0,
                            penumbraCos: 0,
                            decay: 0,
                            shadow: !1,
                            shadowBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new r
                        };
                        break;
                    case "PointLight":
                        i = {
                            position: new c,
                            color: new q,
                            distance: 0,
                            decay: 0,
                            shadow: !1,
                            shadowBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new r
                        };
                        break;
                    case "HemisphereLight":
                        i = {
                            direction: new c,
                            skyColor: new q,
                            groundColor: new q
                        };
                        break;
                    case "RectAreaLight":
                        i = {
                            color: new q,
                            position: new c,
                            halfWidth: new c,
                            halfHeight: new c
                        }
                }
                return t[e.id] = i,
                    i
            }
        }
    }
    function Yt(t, e, i) {
        function n(t) {
            var n = i.frame
                , r = t.geometry
                , o = e.get(t, r);
            return a[o.id] !== n && (r.isGeometry && o.updateFromObject(t),
                e.update(o),
                a[o.id] = n),
                o
        }
        function r() {
            a = {}
        }
        var a = {};
        return {
            update: n,
            clear: r
        }
    }
    function qt(t, e, i) {
        var n = t.createShader(e);
        return t.shaderSource(n, i),
            t.compileShader(n),
            t.getShaderParameter(n, t.COMPILE_STATUS),
            t.getShaderInfoLog(n),
            n
    }
    function Zt(t) {
        switch (t) {
            case ps:
                return ["Linear", "( value )"];
            case ds:
                return ["sRGB", "( value )"];
            case ms:
                return ["RGBE", "( value )"];
            case vs:
                return ["RGBM", "( value, 7.0 )"];
            case ys:
                return ["RGBM", "( value, 16.0 )"];
            case _s:
                return ["RGBD", "( value, 256.0 )"];
            case fs:
                return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
            default:
                throw new Error("unsupported encoding: " + t)
        }
    }
    function Kt(t, e) {
        var i = Zt(e);
        return "vec4 " + t + "( vec4 value ) { return " + i[0] + "ToLinear" + i[1] + "; }"
    }
    function Qt(t, e) {
        var i = Zt(e);
        return "vec4 " + t + "( vec4 value ) { return LinearTo" + i[0] + i[1] + "; }"
    }
    function Jt(t, e) {
        var i;
        switch (e) {
            case no:
                i = "Linear";
                break;
            case ro:
                i = "Reinhard";
                break;
            case ao:
                i = "Uncharted2";
                break;
            case oo:
                i = "OptimizedCineon";
                break;
            default:
                throw new Error("unsupported toneMapping: " + e)
        }
        return "vec3 " + t + "( vec3 color ) { return " + i + "ToneMapping( color ); }"
    }
    function $t(t, e, i) {
        return t = t || {},
            [t.derivatives || e.envMapCubeUV || e.bumpMap || e.normalMap || e.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (t.fragDepth || e.logarithmicDepthBuffer) && i.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", t.drawBuffers && i.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (t.shaderTextureLOD || e.envMap) && i.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(ie).join("\n")
    }
    function te(t) {
        var e = [];
        for (var i in t) {
            var n = t[i];
            !1 !== n && e.push("#define " + i + " " + n)
        }
        return e.join("\n")
    }
    function ee(t, e, i) {
        for (var n = {}, r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), a = 0; a < r; a++) {
            var o = t.getActiveAttrib(e, a)
                , s = o.name;
            n[s] = t.getAttribLocation(e, s)
        }
        return n
    }
    function ie(t) {
        return "" !== t
    }
    function ne(t, e) {
        return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
    }
    function re(t) {
        function e(t, e) {
            var i = ks[e];
            if (void 0 === i)
                throw new Error("Can not resolve #include <" + e + ">");
            return re(i)
        }
        var i = /^[ \t]*#include +<([\w\d.]+)>/gm;
        return t.replace(i, e)
    }
    function ae(t) {
        function e(t, e, i, n) {
            for (var r = "", a = parseInt(e); a < parseInt(i); a++)
                r += n.replace(/\[ i \]/g, "[ " + a + " ]");
            return r
        }
        var i = /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
        return t.replace(i, e)
    }
    function oe(t, e, i, n) {
        var r = t.context
            , a = i.extensions
            , o = i.defines
            , s = i.__webglShader.vertexShader
            , h = i.__webglShader.fragmentShader
            , l = "SHADOWMAP_TYPE_BASIC";
        n.shadowMapType === da ? l = "SHADOWMAP_TYPE_PCF" : n.shadowMapType === fa && (l = "SHADOWMAP_TYPE_PCF_SOFT");
        var c = "ENVMAP_TYPE_CUBE"
            , u = "ENVMAP_MODE_REFLECTION"
            , p = "ENVMAP_BLENDING_MULTIPLY";
        if (n.envMap) {
            switch (i.envMap.mapping) {
                case ho:
                case lo:
                    c = "ENVMAP_TYPE_CUBE";
                    break;
                case fo:
                case mo:
                    c = "ENVMAP_TYPE_CUBE_UV";
                    break;
                case co:
                case uo:
                    c = "ENVMAP_TYPE_EQUIREC";
                    break;
                case po:
                    c = "ENVMAP_TYPE_SPHERE"
            }
            switch (i.envMap.mapping) {
                case lo:
                case uo:
                    u = "ENVMAP_MODE_REFRACTION"
            }
            switch (i.combine) {
                case $a:
                    p = "ENVMAP_BLENDING_MULTIPLY";
                    break;
                case to:
                    p = "ENVMAP_BLENDING_MIX";
                    break;
                case eo:
                    p = "ENVMAP_BLENDING_ADD"
            }
        }
        var d, f, m = t.gammaFactor > 0 ? t.gammaFactor : 1, g = $t(a, n, t.extensions), v = te(o), y = r.createProgram();
        i.isRawShaderMaterial ? (d = [v, "\n"].filter(ie).join("\n"),
            f = [g, v, "\n"].filter(ie).join("\n")) : (d = ["precision " + n.precision + " float;", "precision " + n.precision + " int;", "#define SHADER_NAME " + i.__webglShader.name, v, n.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + m, "#define MAX_BONES " + n.maxBones, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + u : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.displacementMap && n.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.vertexColors ? "#define USE_COLOR" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.skinning ? "#define USE_SKINNING" : "", n.useVertexTexture ? "#define BONE_TEXTURE" : "", n.morphTargets ? "#define USE_MORPHTARGETS" : "", n.morphNormals && !1 === n.flatShading ? "#define USE_MORPHNORMALS" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + n.numClippingPlanes, n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + l : "", n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && t.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(ie).join("\n"),
                f = [g, "precision " + n.precision + " float;", "precision " + n.precision + " int;", "#define SHADER_NAME " + i.__webglShader.name, v, n.alphaTest ? "#define ALPHATEST " + n.alphaTest : "", "#define GAMMA_FACTOR " + m, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + c : "", n.envMap ? "#define " + u : "", n.envMap ? "#define " + p : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.vertexColors ? "#define USE_COLOR" : "", n.gradientMap ? "#define USE_GRADIENTMAP" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + n.numClippingPlanes, "#define UNION_CLIPPING_PLANES " + (n.numClippingPlanes - n.numClipIntersection), n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + l : "", n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", n.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && t.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", n.envMap && t.extensions.get("EXT_shader_texture_lod") ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", n.toneMapping !== io ? "#define TONE_MAPPING" : "", n.toneMapping !== io ? ks.tonemapping_pars_fragment : "", n.toneMapping !== io ? Jt("toneMapping", n.toneMapping) : "", n.dithering ? "#define DITHERING" : "", n.outputEncoding || n.mapEncoding || n.envMapEncoding || n.emissiveMapEncoding ? ks.encodings_pars_fragment : "", n.mapEncoding ? Kt("mapTexelToLinear", n.mapEncoding) : "", n.envMapEncoding ? Kt("envMapTexelToLinear", n.envMapEncoding) : "", n.emissiveMapEncoding ? Kt("emissiveMapTexelToLinear", n.emissiveMapEncoding) : "", n.outputEncoding ? Qt("linearToOutputTexel", n.outputEncoding) : "", n.depthPacking ? "#define DEPTH_PACKING " + i.depthPacking : "", "\n"].filter(ie).join("\n")),
            s = re(s, n),
            s = ne(s, n),
            h = re(h, n),
            h = ne(h, n),
            i.isShaderMaterial || (s = ae(s),
                h = ae(h));
        var _ = d + s
            , x = f + h
            , w = qt(r, r.VERTEX_SHADER, _)
            , b = qt(r, r.FRAGMENT_SHADER, x);
        r.attachShader(y, w),
            r.attachShader(y, b),
            void 0 !== i.index0AttributeName ? r.bindAttribLocation(y, 0, i.index0AttributeName) : !0 === n.morphTargets && r.bindAttribLocation(y, 0, "position"),
            r.linkProgram(y);
        var M = r.getProgramInfoLog(y)
            , T = r.getShaderInfoLog(w)
            , P = r.getShaderInfoLog(b)
            , S = !0
            , A = !0;
        !1 === r.getProgramParameter(y, r.LINK_STATUS) ? S = !1 : "" !== M || "" !== T && "" !== P || (A = !1),
            A && (this.diagnostics = {
                runnable: S,
                material: i,
                programLog: M,
                vertexShader: {
                    log: T,
                    prefix: d
                },
                fragmentShader: {
                    log: P,
                    prefix: f
                }
            }),
            r.deleteShader(w),
            r.deleteShader(b);
        var E;
        this.getUniforms = function () {
            return void 0 === E && (E = new Y(r, y, t)),
                E
        }
            ;
        var L;
        return this.getAttributes = function () {
            return void 0 === L && (L = ee(r, y)),
                L
        }
            ,
            this.destroy = function () {
                r.deleteProgram(y),
                    this.program = void 0
            }
            ,
            Object.defineProperties(this, {
                uniforms: {
                    get: function () {
                        return this.getUniforms()
                    }
                },
                attributes: {
                    get: function () {
                        return this.getAttributes()
                    }
                }
            }),
            this.id = Bs++,
            this.code = e,
            this.usedTimes = 1,
            this.program = y,
            this.vertexShader = w,
            this.fragmentShader = b,
            this
    }
    function se(t, e) {
        function i(t) {
            var i = t.skeleton
                , n = i.bones;
            if (e.floatVertexTextures)
                return 1024;
            var r = e.maxVertexUniforms
                , a = Math.floor((r - 20) / 4)
                , o = Math.min(a, n.length);
            return o < n.length ? 0 : o
        }
        function n(t, e) {
            var i;
            return t ? t.isTexture ? i = t.encoding : t.isWebGLRenderTarget && (i = t.texture.encoding) : i = ps,
                i === ps && e && (i = fs),
                i
        }
        var r = []
            , a = {
                MeshDepthMaterial: "depth",
                MeshNormalMaterial: "normal",
                MeshBasicMaterial: "basic",
                MeshLambertMaterial: "lambert",
                MeshPhongMaterial: "phong",
                MeshToonMaterial: "phong",
                MeshStandardMaterial: "physical",
                MeshPhysicalMaterial: "physical",
                LineBasicMaterial: "basic",
                LineDashedMaterial: "dashed",
                PointsMaterial: "points"
            }
            , o = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering"];
        this.getParameters = function (r, o, s, h, l, c) {
            var u = a[r.type]
                , p = c.isSkinnedMesh ? i(c) : 0
                , d = t.getPrecision();
            null !== r.precision && (d = e.getMaxPrecision(r.precision),
                r.precision);
            var f = t.getRenderTarget();
            return {
                shaderID: u,
                precision: d,
                supportsVertexTextures: e.vertexTextures,
                outputEncoding: n(f ? f.texture : null, t.gammaOutput),
                map: !!r.map,
                mapEncoding: n(r.map, t.gammaInput),
                envMap: !!r.envMap,
                envMapMode: r.envMap && r.envMap.mapping,
                envMapEncoding: n(r.envMap, t.gammaInput),
                envMapCubeUV: !!r.envMap && (r.envMap.mapping === fo || r.envMap.mapping === mo),
                lightMap: !!r.lightMap,
                aoMap: !!r.aoMap,
                emissiveMap: !!r.emissiveMap,
                emissiveMapEncoding: n(r.emissiveMap, t.gammaInput),
                bumpMap: !!r.bumpMap,
                normalMap: !!r.normalMap,
                displacementMap: !!r.displacementMap,
                roughnessMap: !!r.roughnessMap,
                metalnessMap: !!r.metalnessMap,
                specularMap: !!r.specularMap,
                alphaMap: !!r.alphaMap,
                gradientMap: !!r.gradientMap,
                combine: r.combine,
                vertexColors: r.vertexColors,
                fog: !!s,
                useFog: r.fog,
                fogExp: s && s.isFogExp2,
                flatShading: r.shading === ya,
                sizeAttenuation: r.sizeAttenuation,
                logarithmicDepthBuffer: e.logarithmicDepthBuffer,
                skinning: r.skinning && p > 0,
                maxBones: p,
                useVertexTexture: e.floatVertexTextures,
                morphTargets: r.morphTargets,
                morphNormals: r.morphNormals,
                maxMorphTargets: t.maxMorphTargets,
                maxMorphNormals: t.maxMorphNormals,
                numDirLights: o.directional.length,
                numPointLights: o.point.length,
                numSpotLights: o.spot.length,
                numRectAreaLights: o.rectArea.length,
                numHemiLights: o.hemi.length,
                numClippingPlanes: h,
                numClipIntersection: l,
                dithering: r.dithering,
                shadowMapEnabled: t.shadowMap.enabled && c.receiveShadow && o.shadows.length > 0,
                shadowMapType: t.shadowMap.type,
                toneMapping: t.toneMapping,
                physicallyCorrectLights: t.physicallyCorrectLights,
                premultipliedAlpha: r.premultipliedAlpha,
                alphaTest: r.alphaTest,
                doubleSided: r.side === va,
                flipSided: r.side === ga,
                depthPacking: void 0 !== r.depthPacking && r.depthPacking
            }
        }
            ,
            this.getProgramCode = function (t, e) {
                var i = [];
                if (e.shaderID ? i.push(e.shaderID) : (i.push(t.fragmentShader),
                    i.push(t.vertexShader)),
                    void 0 !== t.defines)
                    for (var n in t.defines)
                        i.push(n),
                            i.push(t.defines[n]);
                for (var r = 0; r < o.length; r++)
                    i.push(e[o[r]]);
                return i.join()
            }
            ,
            this.acquireProgram = function (e, i, n) {
                for (var a, o = 0, s = r.length; o < s; o++) {
                    var h = r[o];
                    if (h.code === n) {
                        a = h,
                            ++a.usedTimes;
                        break
                    }
                }
                return void 0 === a && (a = new oe(t, n, e, i),
                    r.push(a)),
                    a
            }
            ,
            this.releaseProgram = function (t) {
                if (0 == --t.usedTimes) {
                    var e = r.indexOf(t);
                    r[e] = r[r.length - 1],
                        r.pop(),
                        t.destroy()
                }
            }
            ,
            this.programs = r
    }
    function he(t, e, i, n, r, a, o) {
        function s(t, e) {
            if (t.width > e || t.height > e) {
                var i = e / Math.max(t.width, t.height)
                    , n = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                n.width = Math.floor(t.width * i),
                    n.height = Math.floor(t.height * i);
                return n.getContext("2d").drawImage(t, 0, 0, t.width, t.height, 0, 0, n.width, n.height),
                    n
            }
            return t
        }
        function h(t) {
            return bs.isPowerOfTwo(t.width) && bs.isPowerOfTwo(t.height)
        }
        function l(t) {
            if (t instanceof HTMLImageElement || t instanceof HTMLCanvasElement) {
                var e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                e.width = bs.nearestPowerOfTwo(t.width),
                    e.height = bs.nearestPowerOfTwo(t.height);
                return e.getContext("2d").drawImage(t, 0, 0, e.width, e.height),
                    e
            }
            return t
        }
        function c(t) {
            return t.wrapS !== vo || t.wrapT !== vo || t.minFilter !== _o && t.minFilter !== bo
        }
        function u(e) {
            return e === _o || e === xo || e === wo ? t.NEAREST : t.LINEAR
        }
        function p(t) {
            var e = t.target;
            e.removeEventListener("dispose", p),
                f(e),
                o.textures--
        }
        function d(t) {
            var e = t.target;
            e.removeEventListener("dispose", d),
                m(e),
                o.textures--
        }
        function f(e) {
            var i = n.get(e);
            if (e.image && i.__image__webglTextureCube)
                t.deleteTexture(i.__image__webglTextureCube);
            else {
                if (void 0 === i.__webglInit)
                    return;
                t.deleteTexture(i.__webglTexture)
            }
            n.remove(e)
        }
        function m(e) {
            var i = n.get(e)
                , r = n.get(e.texture);
            if (e) {
                if (void 0 !== r.__webglTexture && t.deleteTexture(r.__webglTexture),
                    e.depthTexture && e.depthTexture.dispose(),
                    e.isWebGLRenderTargetCube)
                    for (var a = 0; a < 6; a++)
                        t.deleteFramebuffer(i.__webglFramebuffer[a]),
                            i.__webglDepthbuffer && t.deleteRenderbuffer(i.__webglDepthbuffer[a]);
                else
                    t.deleteFramebuffer(i.__webglFramebuffer),
                        i.__webglDepthbuffer && t.deleteRenderbuffer(i.__webglDepthbuffer);
                n.remove(e.texture),
                    n.remove(e)
            }
        }
        function g(e, r) {
            var a = n.get(e);
            if (e.version > 0 && a.__version !== e.version) {
                var o = e.image;
                if (void 0 === o)
                    ;
                else if (!1 !== o.complete)
                    return void x(a, e, r)
            }
            i.activeTexture(t.TEXTURE0 + r),
                i.bindTexture(t.TEXTURE_2D, a.__webglTexture)
        }
        function v(e, l) {
            var c = n.get(e);
            if (6 === e.image.length)
                if (e.version > 0 && c.__version !== e.version) {
                    c.__image__webglTextureCube || (e.addEventListener("dispose", p),
                        c.__image__webglTextureCube = t.createTexture(),
                        o.textures++),
                        i.activeTexture(t.TEXTURE0 + l),
                        i.bindTexture(t.TEXTURE_CUBE_MAP, c.__image__webglTextureCube),
                        t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY);
                    for (var u = e && e.isCompressedTexture, d = e.image[0] && e.image[0].isDataTexture, f = [], m = 0; m < 6; m++)
                        f[m] = u || d ? d ? e.image[m].image : e.image[m] : s(e.image[m], r.maxCubemapSize);
                    var g = f[0]
                        , v = h(g)
                        , y = a(e.format)
                        , x = a(e.type);
                    _(t.TEXTURE_CUBE_MAP, e, v);
                    for (var m = 0; m < 6; m++)
                        if (u)
                            for (var w, b = f[m].mipmaps, M = 0, T = b.length; M < T; M++)
                                w = b[M],
                                    e.format !== Bo && e.format !== No ? i.getCompressedTextureFormats().indexOf(y) > -1 && i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, M, y, w.width, w.height, 0, w.data) : i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, M, y, w.width, w.height, 0, y, x, w.data);
                        else
                            d ? i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, 0, y, f[m].width, f[m].height, 0, y, x, f[m].data) : i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, 0, y, y, x, f[m]);
                    e.generateMipmaps && v && t.generateMipmap(t.TEXTURE_CUBE_MAP),
                        c.__version = e.version,
                        e.onUpdate && e.onUpdate(e)
                } else
                    i.activeTexture(t.TEXTURE0 + l),
                        i.bindTexture(t.TEXTURE_CUBE_MAP, c.__image__webglTextureCube)
        }
        function y(e, r) {
            i.activeTexture(t.TEXTURE0 + r),
                i.bindTexture(t.TEXTURE_CUBE_MAP, n.get(e).__webglTexture)
        }
        function _(i, o, s) {
            var h;
            if (s ? (t.texParameteri(i, t.TEXTURE_WRAP_S, a(o.wrapS)),
                t.texParameteri(i, t.TEXTURE_WRAP_T, a(o.wrapT)),
                t.texParameteri(i, t.TEXTURE_MAG_FILTER, a(o.magFilter)),
                t.texParameteri(i, t.TEXTURE_MIN_FILTER, a(o.minFilter))) : (t.texParameteri(i, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
                    t.texParameteri(i, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
                    o.wrapS !== vo || o.wrapT,
                    t.texParameteri(i, t.TEXTURE_MAG_FILTER, u(o.magFilter)),
                    t.texParameteri(i, t.TEXTURE_MIN_FILTER, u(o.minFilter)),
                    o.minFilter !== _o && o.minFilter),
                h = e.get("EXT_texture_filter_anisotropic")) {
                if (o.type === Oo && null === e.get("OES_texture_float_linear"))
                    return;
                if (o.type === Ro && null === e.get("OES_texture_half_float_linear"))
                    return;
                (o.anisotropy > 1 || n.get(o).__currentAnisotropy) && (t.texParameterf(i, h.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(o.anisotropy, r.getMaxAnisotropy())),
                    n.get(o).__currentAnisotropy = o.anisotropy)
            }
        }
        function x(e, n, u) {
            void 0 === e.__webglInit && (e.__webglInit = !0,
                n.addEventListener("dispose", p),
                e.__webglTexture = t.createTexture(),
                o.textures++),
                i.activeTexture(t.TEXTURE0 + u),
                i.bindTexture(t.TEXTURE_2D, e.__webglTexture),
                t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, n.flipY),
                t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, n.premultiplyAlpha),
                t.pixelStorei(t.UNPACK_ALIGNMENT, n.unpackAlignment);
            var d = s(n.image, r.maxTextureSize);
            c(n) && !1 === h(d) && (d = l(d));
            var f = h(d)
                , m = a(n.format)
                , g = a(n.type);
            _(t.TEXTURE_2D, n, f);
            var v, y = n.mipmaps;
            if (n.isDepthTexture) {
                var x = t.DEPTH_COMPONENT;
                if (n.type === Oo) {
                    if (!A)
                        throw new Error("Float Depth Texture only supported in WebGL2.0");
                    x = t.DEPTH_COMPONENT32F
                } else
                    A && (x = t.DEPTH_COMPONENT16);
                n.format === Vo && x === t.DEPTH_COMPONENT && n.type !== Eo && n.type !== Co && (n.type = Eo,
                    g = a(n.type)),
                    n.format === Ho && (x = t.DEPTH_STENCIL,
                        n.type !== Fo && (n.type = Fo,
                            g = a(n.type))),
                    i.texImage2D(t.TEXTURE_2D, 0, x, d.width, d.height, 0, m, g, null)
            } else if (n.isDataTexture)
                if (y.length > 0 && f) {
                    for (var w = 0, b = y.length; w < b; w++)
                        v = y[w],
                            i.texImage2D(t.TEXTURE_2D, w, m, v.width, v.height, 0, m, g, v.data);
                    n.generateMipmaps = !1
                } else
                    i.texImage2D(t.TEXTURE_2D, 0, m, d.width, d.height, 0, m, g, d.data);
            else if (n.isCompressedTexture)
                for (var w = 0, b = y.length; w < b; w++)
                    v = y[w],
                        n.format !== Bo && n.format !== No ? i.getCompressedTextureFormats().indexOf(m) > -1 && i.compressedTexImage2D(t.TEXTURE_2D, w, m, v.width, v.height, 0, v.data) : i.texImage2D(t.TEXTURE_2D, w, m, v.width, v.height, 0, m, g, v.data);
            else if (y.length > 0 && f) {
                for (var w = 0, b = y.length; w < b; w++)
                    v = y[w],
                        i.texImage2D(t.TEXTURE_2D, w, m, m, g, v);
                n.generateMipmaps = !1
            } else
                i.texImage2D(t.TEXTURE_2D, 0, m, m, g, d);
            n.generateMipmaps && f && t.generateMipmap(t.TEXTURE_2D),
                e.__version = n.version,
                n.onUpdate && n.onUpdate(n)
        }
        function w(e, r, o, s) {
            var h = a(r.texture.format)
                , l = a(r.texture.type);
            i.texImage2D(s, 0, h, r.width, r.height, 0, h, l, null),
                t.bindFramebuffer(t.FRAMEBUFFER, e),
                t.framebufferTexture2D(t.FRAMEBUFFER, o, s, n.get(r.texture).__webglTexture, 0),
                t.bindFramebuffer(t.FRAMEBUFFER, null)
        }
        function b(e, i) {
            t.bindRenderbuffer(t.RENDERBUFFER, e),
                i.depthBuffer && !i.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_COMPONENT16, i.width, i.height),
                    t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.RENDERBUFFER, e)) : i.depthBuffer && i.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_STENCIL, i.width, i.height),
                        t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, e)) : t.renderbufferStorage(t.RENDERBUFFER, t.RGBA4, i.width, i.height),
                t.bindRenderbuffer(t.RENDERBUFFER, null)
        }
        function M(e, i) {
            if (i && i.isWebGLRenderTargetCube)
                throw new Error("Depth Texture with cube render targets is not supported!");
            if (t.bindFramebuffer(t.FRAMEBUFFER, e),
                !i.depthTexture || !i.depthTexture.isDepthTexture)
                throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
            n.get(i.depthTexture).__webglTexture && i.depthTexture.image.width === i.width && i.depthTexture.image.height === i.height || (i.depthTexture.image.width = i.width,
                i.depthTexture.image.height = i.height,
                i.depthTexture.needsUpdate = !0),
                g(i.depthTexture, 0);
            var r = n.get(i.depthTexture).__webglTexture;
            if (i.depthTexture.format === Vo)
                t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, r, 0);
            else {
                if (i.depthTexture.format !== Ho)
                    throw new Error("Unknown depthTexture format");
                t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.TEXTURE_2D, r, 0)
            }
        }
        function T(e) {
            var i = n.get(e)
                , r = !0 === e.isWebGLRenderTargetCube;
            if (e.depthTexture) {
                if (r)
                    throw new Error("target.depthTexture not supported in Cube render targets");
                M(i.__webglFramebuffer, e)
            } else if (r) {
                i.__webglDepthbuffer = [];
                for (var a = 0; a < 6; a++)
                    t.bindFramebuffer(t.FRAMEBUFFER, i.__webglFramebuffer[a]),
                        i.__webglDepthbuffer[a] = t.createRenderbuffer(),
                        b(i.__webglDepthbuffer[a], e)
            } else
                t.bindFramebuffer(t.FRAMEBUFFER, i.__webglFramebuffer),
                    i.__webglDepthbuffer = t.createRenderbuffer(),
                    b(i.__webglDepthbuffer, e);
            t.bindFramebuffer(t.FRAMEBUFFER, null)
        }
        function P(e) {
            var r = n.get(e)
                , a = n.get(e.texture);
            e.addEventListener("dispose", d),
                a.__webglTexture = t.createTexture(),
                o.textures++;
            var s = !0 === e.isWebGLRenderTargetCube
                , l = h(e);
            if (s) {
                r.__webglFramebuffer = [];
                for (var c = 0; c < 6; c++)
                    r.__webglFramebuffer[c] = t.createFramebuffer()
            } else
                r.__webglFramebuffer = t.createFramebuffer();
            if (s) {
                i.bindTexture(t.TEXTURE_CUBE_MAP, a.__webglTexture),
                    _(t.TEXTURE_CUBE_MAP, e.texture, l);
                for (var c = 0; c < 6; c++)
                    w(r.__webglFramebuffer[c], e, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + c);
                e.texture.generateMipmaps && l && t.generateMipmap(t.TEXTURE_CUBE_MAP),
                    i.bindTexture(t.TEXTURE_CUBE_MAP, null)
            } else
                i.bindTexture(t.TEXTURE_2D, a.__webglTexture),
                    _(t.TEXTURE_2D, e.texture, l),
                    w(r.__webglFramebuffer, e, t.COLOR_ATTACHMENT0, t.TEXTURE_2D),
                    e.texture.generateMipmaps && l && t.generateMipmap(t.TEXTURE_2D),
                    i.bindTexture(t.TEXTURE_2D, null);
            e.depthBuffer && T(e)
        }
        function S(e) {
            var r = e.texture;
            if (r.generateMipmaps && h(e) && r.minFilter !== _o && r.minFilter !== bo) {
                var a = e && e.isWebGLRenderTargetCube ? t.TEXTURE_CUBE_MAP : t.TEXTURE_2D
                    , o = n.get(r).__webglTexture;
                i.bindTexture(a, o),
                    t.generateMipmap(a),
                    i.bindTexture(a, null)
            }
        }
        var A = "undefined" != typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext;
        this.setTexture2D = g,
            this.setTextureCube = v,
            this.setTextureCubeDynamic = y,
            this.setupRenderTarget = P,
            this.updateRenderTargetMipmap = S
    }
    function le() {
        function t(t) {
            var e = t.uuid
                , i = n[e];
            return void 0 === i && (i = {},
                n[e] = i),
                i
        }
        function e(t) {
            delete n[t.uuid]
        }
        function i() {
            n = {}
        }
        var n = {};
        return {
            get: t,
            remove: e,
            clear: i
        }
    }
    function ce(t, e, i) {
        function n() {
            var e = !1
                , i = new o
                , n = null
                , r = new o;
            return {
                setMask: function (i) {
                    n === i || e || (t.colorMask(i, i, i, i),
                        n = i)
                },
                setLocked: function (t) {
                    e = t
                },
                setClear: function (e, n, a, o, s) {
                    !0 === s && (e *= o,
                        n *= o,
                        a *= o),
                        i.set(e, n, a, o),
                        !1 === r.equals(i) && (t.clearColor(e, n, a, o),
                            r.copy(i))
                },
                reset: function () {
                    e = !1,
                        n = null,
                        r.set(0, 0, 0, 1)
                }
            }
        }
        function r() {
            var e = !1
                , i = null
                , n = null
                , r = null;
            return {
                setTest: function (e) {
                    e ? d(t.DEPTH_TEST) : f(t.DEPTH_TEST)
                },
                setMask: function (n) {
                    i === n || e || (t.depthMask(n),
                        i = n)
                },
                setFunc: function (e) {
                    if (n !== e) {
                        if (e)
                            switch (e) {
                                case Wa:
                                    t.depthFunc(t.NEVER);
                                    break;
                                case Xa:
                                    t.depthFunc(t.ALWAYS);
                                    break;
                                case Ya:
                                    t.depthFunc(t.LESS);
                                    break;
                                case qa:
                                    t.depthFunc(t.LEQUAL);
                                    break;
                                case Za:
                                    t.depthFunc(t.EQUAL);
                                    break;
                                case Ka:
                                    t.depthFunc(t.GEQUAL);
                                    break;
                                case Qa:
                                    t.depthFunc(t.GREATER);
                                    break;
                                case Ja:
                                    t.depthFunc(t.NOTEQUAL);
                                    break;
                                default:
                                    t.depthFunc(t.LEQUAL)
                            }
                        else
                            t.depthFunc(t.LEQUAL);
                        n = e
                    }
                },
                setLocked: function (t) {
                    e = t
                },
                setClear: function (e) {
                    r !== e && (t.clearDepth(e),
                        r = e)
                },
                reset: function () {
                    e = !1,
                        i = null,
                        n = null,
                        r = null
                }
            }
        }
        function a() {
            var e = !1
                , i = null
                , n = null
                , r = null
                , a = null
                , o = null
                , s = null
                , h = null
                , l = null;
            return {
                setTest: function (e) {
                    e ? d(t.STENCIL_TEST) : f(t.STENCIL_TEST)
                },
                setMask: function (n) {
                    i === n || e || (t.stencilMask(n),
                        i = n)
                },
                setFunc: function (e, i, o) {
                    n === e && r === i && a === o || (t.stencilFunc(e, i, o),
                        n = e,
                        r = i,
                        a = o)
                },
                setOp: function (e, i, n) {
                    o === e && s === i && h === n || (t.stencilOp(e, i, n),
                        o = e,
                        s = i,
                        h = n)
                },
                setLocked: function (t) {
                    e = t
                },
                setClear: function (e) {
                    l !== e && (t.clearStencil(e),
                        l = e)
                },
                reset: function () {
                    e = !1,
                        i = null,
                        n = null,
                        r = null,
                        a = null,
                        o = null,
                        s = null,
                        h = null,
                        l = null
                }
            }
        }
        function s(e, i, n) {
            var r = new Uint8Array(4)
                , a = t.createTexture();
            t.bindTexture(e, a),
                t.texParameteri(e, t.TEXTURE_MIN_FILTER, t.NEAREST),
                t.texParameteri(e, t.TEXTURE_MAG_FILTER, t.NEAREST);
            for (var o = 0; o < n; o++)
                t.texImage2D(i + o, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, r);
            return a
        }
        function h() {
            O.setClear(0, 0, 0, 1),
                R.setClear(1),
                I.setClear(0),
                d(t.DEPTH_TEST),
                R.setFunc(qa),
                y(!1),
                _(sa),
                d(t.CULL_FACE),
                d(t.BLEND),
                g(Ta)
        }
        function l() {
            for (var t = 0, e = z.length; t < e; t++)
                z[t] = 0
        }
        function c(i) {
            if (z[i] = 1,
                0 === F[i] && (t.enableVertexAttribArray(i),
                    F[i] = 1),
                0 !== D[i]) {
                e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i, 0),
                    D[i] = 0
            }
        }
        function u(i, n) {
            if (z[i] = 1,
                0 === F[i] && (t.enableVertexAttribArray(i),
                    F[i] = 1),
                D[i] !== n) {
                e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i, n),
                    D[i] = n
            }
        }
        function p() {
            for (var e = 0, i = F.length; e !== i; ++e)
                F[e] !== z[e] && (t.disableVertexAttribArray(e),
                    F[e] = 0)
        }
        function d(e) {
            !0 !== N[e] && (t.enable(e),
                N[e] = !0)
        }
        function f(e) {
            !1 !== N[e] && (t.disable(e),
                N[e] = !1)
        }
        function m() {
            if (null === B && (B = [],
                e.get("WEBGL_compressed_texture_pvrtc") || e.get("WEBGL_compressed_texture_s3tc") || e.get("WEBGL_compressed_texture_etc1")))
                for (var i = t.getParameter(t.COMPRESSED_TEXTURE_FORMATS), n = 0; n < i.length; n++)
                    B.push(i[n]);
            return B
        }
        function g(e, n, r, a, o, s, h, l) {
            e !== Ma ? d(t.BLEND) : f(t.BLEND),
                e === U && l === Y || (e === Pa ? l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                    t.blendFuncSeparate(t.ONE, t.ONE, t.ONE, t.ONE)) : (t.blendEquation(t.FUNC_ADD),
                        t.blendFunc(t.SRC_ALPHA, t.ONE)) : e === Sa ? l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                            t.blendFuncSeparate(t.ZERO, t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD),
                                t.blendFunc(t.ZERO, t.ONE_MINUS_SRC_COLOR)) : e === Aa ? l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                                    t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD),
                                        t.blendFunc(t.ZERO, t.SRC_COLOR)) : l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                                            t.blendFuncSeparate(t.ONE, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                                                t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)),
                    U = e,
                    Y = l),
                e === Ea ? (o = o || n,
                    s = s || r,
                    h = h || a,
                    n === j && o === H || (t.blendEquationSeparate(i(n), i(o)),
                        j = n,
                        H = o),
                    r === G && a === V && s === W && h === X || (t.blendFuncSeparate(i(r), i(a), i(s), i(h)),
                        G = r,
                        V = a,
                        W = s,
                        X = h)) : (j = null,
                            G = null,
                            V = null,
                            H = null,
                            W = null,
                            X = null)
        }
        function v(e) {
            e.side === va ? f(t.CULL_FACE) : d(t.CULL_FACE),
                y(e.side === ga),
                !0 === e.transparent ? g(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha, e.premultipliedAlpha) : g(Ma),
                R.setFunc(e.depthFunc),
                R.setTest(e.depthTest),
                R.setMask(e.depthWrite),
                O.setMask(e.colorWrite),
                w(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits)
        }
        function y(e) {
            q !== e && (e ? t.frontFace(t.CW) : t.frontFace(t.CCW),
                q = e)
        }
        function _(e) {
            e !== oa ? (d(t.CULL_FACE),
                e !== Z && (e === sa ? t.cullFace(t.BACK) : e === ha ? t.cullFace(t.FRONT) : t.cullFace(t.FRONT_AND_BACK))) : f(t.CULL_FACE),
                Z = e
        }
        function x(e) {
            e !== K && (it && t.lineWidth(e),
                K = e)
        }
        function w(e, i, n) {
            e ? (d(t.POLYGON_OFFSET_FILL),
                Q === i && J === n || (t.polygonOffset(i, n),
                    Q = i,
                    J = n)) : f(t.POLYGON_OFFSET_FILL)
        }
        function b() {
            return $
        }
        function M(e) {
            $ = e,
                e ? d(t.SCISSOR_TEST) : f(t.SCISSOR_TEST)
        }
        function T(e) {
            void 0 === e && (e = t.TEXTURE0 + tt - 1),
                nt !== e && (t.activeTexture(e),
                    nt = e)
        }
        function P(e, i) {
            null === nt && T();
            var n = rt[nt];
            void 0 === n && (n = {
                type: void 0,
                texture: void 0
            },
                rt[nt] = n),
                n.type === e && n.texture === i || (t.bindTexture(e, i || st[e]),
                    n.type = e,
                    n.texture = i)
        }
        function S() {
            try {
                t.compressedTexImage2D.apply(t, arguments)
            } catch (t) { }
        }
        function A() {
            try {
                t.texImage2D.apply(t, arguments)
            } catch (t) { }
        }
        function E(e) {
            !1 === at.equals(e) && (t.scissor(e.x, e.y, e.z, e.w),
                at.copy(e))
        }
        function L(e) {
            !1 === ot.equals(e) && (t.viewport(e.x, e.y, e.z, e.w),
                ot.copy(e))
        }
        function C() {
            for (var e = 0; e < F.length; e++)
                1 === F[e] && (t.disableVertexAttribArray(e),
                    F[e] = 0);
            N = {},
                B = null,
                nt = null,
                rt = {},
                U = null,
                q = null,
                Z = null,
                O.reset(),
                R.reset(),
                I.reset()
        }
        var O = new n
            , R = new r
            , I = new a
            , k = t.getParameter(t.MAX_VERTEX_ATTRIBS)
            , z = new Uint8Array(k)
            , F = new Uint8Array(k)
            , D = new Uint8Array(k)
            , N = {}
            , B = null
            , U = null
            , j = null
            , G = null
            , V = null
            , H = null
            , W = null
            , X = null
            , Y = !1
            , q = null
            , Z = null
            , K = null
            , Q = null
            , J = null
            , $ = null
            , tt = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)
            , et = parseFloat(/^WebGL\ ([0-9])/.exec(t.getParameter(t.VERSION))[1])
            , it = parseFloat(et) >= 1
            , nt = null
            , rt = {}
            , at = new o
            , ot = new o
            , st = {};
        return st[t.TEXTURE_2D] = s(t.TEXTURE_2D, t.TEXTURE_2D, 1),
            st[t.TEXTURE_CUBE_MAP] = s(t.TEXTURE_CUBE_MAP, t.TEXTURE_CUBE_MAP_POSITIVE_X, 6),
        {
            buffers: {
                color: O,
                depth: R,
                stencil: I
            },
            init: h,
            initAttributes: l,
            enableAttribute: c,
            enableAttributeAndDivisor: u,
            disableUnusedAttributes: p,
            enable: d,
            disable: f,
            getCompressedTextureFormats: m,
            setBlending: g,
            setMaterial: v,
            setFlipSided: y,
            setCullFace: _,
            setLineWidth: x,
            setPolygonOffset: w,
            getScissorTest: b,
            setScissorTest: M,
            activeTexture: T,
            bindTexture: P,
            compressedTexImage2D: S,
            texImage2D: A,
            scissor: E,
            viewport: L,
            reset: C
        }
    }
    function ue(t, e, i) {
        function n() {
            if (void 0 !== a)
                return a;
            var i = e.get("EXT_texture_filter_anisotropic");
            return a = null !== i ? t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
        }
        function r(e) {
            if ("highp" === e) {
                if (t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision > 0)
                    return "highp";
                e = "mediump"
            }
            return "mediump" === e && t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
        }
        var a, o = void 0 !== i.precision ? i.precision : "highp", s = r(o);
        s !== o && (o = s);
        var h = !0 === i.logarithmicDepthBuffer && !!e.get("EXT_frag_depth")
            , l = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)
            , c = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)
            , u = t.getParameter(t.MAX_TEXTURE_SIZE)
            , p = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE)
            , d = t.getParameter(t.MAX_VERTEX_ATTRIBS)
            , f = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS)
            , m = t.getParameter(t.MAX_VARYING_VECTORS)
            , g = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS)
            , v = c > 0
            , y = !!e.get("OES_texture_float");
        return {
            getMaxAnisotropy: n,
            getMaxPrecision: r,
            precision: o,
            logarithmicDepthBuffer: h,
            maxTextures: l,
            maxVertexTextures: c,
            maxTextureSize: u,
            maxCubemapSize: p,
            maxAttributes: d,
            maxVertexUniforms: f,
            maxVaryings: m,
            maxFragmentUniforms: g,
            vertexTextures: v,
            floatFragmentTextures: y,
            floatVertexTextures: v && y
        }
    }
    function pe(t) {
        var e = {};
        return {
            get: function (i) {
                if (void 0 !== e[i])
                    return e[i];
                var n;
                switch (i) {
                    case "WEBGL_depth_texture":
                        n = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
                        break;
                    case "EXT_texture_filter_anisotropic":
                        n = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                        break;
                    case "WEBGL_compressed_texture_s3tc":
                        n = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                        break;
                    case "WEBGL_compressed_texture_pvrtc":
                        n = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                        break;
                    case "WEBGL_compressed_texture_etc1":
                        n = t.getExtension("WEBGL_compressed_texture_etc1");
                        break;
                    default:
                        n = t.getExtension(i)
                }
                return e[i] = n,
                    n
            }
        }
    }
    function de() {
        function t() {
            l.value !== n && (l.value = n,
                l.needsUpdate = r > 0),
                i.numPlanes = r,
                i.numIntersection = 0
        }
        function e(t, e, n, r) {
            var a = null !== t ? t.length : 0
                , o = null;
            if (0 !== a) {
                if (o = l.value,
                    !0 !== r || null === o) {
                    var c = n + 4 * a
                        , u = e.matrixWorldInverse;
                    h.getNormalMatrix(u),
                        (null === o || o.length < c) && (o = new Float32Array(c));
                    for (var p = 0, d = n; p !== a; ++p,
                        d += 4)
                        s.copy(t[p]).applyMatrix4(u, h),
                            s.normal.toArray(o, d),
                            o[d + 3] = s.constant
                }
                l.value = o,
                    l.needsUpdate = !0
            }
            return i.numPlanes = a,
                o
        }
        var i = this
            , n = null
            , r = 0
            , a = !1
            , o = !1
            , s = new rt
            , h = new nt
            , l = {
                value: null,
                needsUpdate: !1
            };
        this.uniform = l,
            this.numPlanes = 0,
            this.numIntersection = 0,
            this.init = function (t, i, o) {
                var s = 0 !== t.length || i || 0 !== r || a;
                return a = i,
                    n = e(t, o, 0),
                    r = t.length,
                    s
            }
            ,
            this.beginShadows = function () {
                o = !0,
                    e(null)
            }
            ,
            this.endShadows = function () {
                o = !1,
                    t()
            }
            ,
            this.setState = function (i, s, h, c, u, p) {
                if (!a || null === i || 0 === i.length || o && !h)
                    o ? e(null) : t();
                else {
                    var d = o ? 0 : r
                        , f = 4 * d
                        , m = u.clippingState || null;
                    l.value = m,
                        m = e(i, c, f, p);
                    for (var g = 0; g !== f; ++g)
                        m[g] = n[g];
                    u.clippingState = m,
                        this.numIntersection = s ? this.numPlanes : 0,
                        this.numPlanes += d
                }
            }
    }
    function fe(t) {
        function e() {
            return null === it ? yt : 1
        }
        function i() {
            Kt.init(),
                Kt.scissor(lt.copy(_t).multiplyScalar(yt)),
                Kt.viewport(ut.copy(wt).multiplyScalar(yt)),
                Kt.buffers.color.setClear(dt.r, dt.g, dt.b, mt, G)
        }
        function n() {
            et = null,
                ht = null,
                st = "",
                rt = -1,
                Kt.reset()
        }
        function r(t) {
            t.preventDefault(),
                n(),
                i(),
                Qt.clear(),
                ee.clear()
        }
        function a(t) {
            var e = t.target;
            e.removeEventListener("dispose", a),
                s(e)
        }
        function s(t) {
            h(t),
                Qt.remove(t)
        }
        function h(t) {
            var e = Qt.get(t).program;
            t.program = void 0,
                void 0 !== e && ie.releaseProgram(e)
        }
        function l(t, e, i) {
            t.render(function (t) {
                tt.renderBufferImmediate(t, e, i)
            })
        }
        function d(t, e) {
            return Math.abs(e[0]) - Math.abs(t[0])
        }
        function f(t, e, i, n) {
            if (!i || !i.isInstancedBufferGeometry || null !== qt.get("ANGLE_instanced_arrays")) {
                void 0 === n && (n = 0),
                    Kt.initAttributes();
                var r = i.attributes
                    , a = e.getAttributes()
                    , o = t.defaultAttributeValues;
                for (var s in a) {
                    var h = a[s];
                    if (h >= 0) {
                        var l = r[s];
                        if (void 0 !== l) {
                            var c = l.normalized
                                , u = l.itemSize
                                , p = $t.get(l)
                                , d = p.buffer
                                , f = p.type
                                , m = p.bytesPerElement;
                            if (l.isInterleavedBufferAttribute) {
                                var g = l.data
                                    , v = g.stride
                                    , y = l.offset;
                                g && g.isInstancedInterleavedBuffer ? (Kt.enableAttributeAndDivisor(h, g.meshPerAttribute),
                                    void 0 === i.maxInstancedCount && (i.maxInstancedCount = g.meshPerAttribute * g.count)) : Kt.enableAttribute(h),
                                    Ut.bindBuffer(Ut.ARRAY_BUFFER, d),
                                    Ut.vertexAttribPointer(h, u, f, c, v * m, (n * v + y) * m)
                            } else
                                l.isInstancedBufferAttribute ? (Kt.enableAttributeAndDivisor(h, l.meshPerAttribute),
                                    void 0 === i.maxInstancedCount && (i.maxInstancedCount = l.meshPerAttribute * l.count)) : Kt.enableAttribute(h),
                                    Ut.bindBuffer(Ut.ARRAY_BUFFER, d),
                                    Ut.vertexAttribPointer(h, u, f, c, 0, n * u * m)
                        } else if (void 0 !== o) {
                            var _ = o[s];
                            if (void 0 !== _)
                                switch (_.length) {
                                    case 2:
                                        Ut.vertexAttrib2fv(h, _);
                                        break;
                                    case 3:
                                        Ut.vertexAttrib3fv(h, _);
                                        break;
                                    case 4:
                                        Ut.vertexAttrib4fv(h, _);
                                        break;
                                    default:
                                        Ut.vertexAttrib1fv(h, _)
                                }
                        }
                    }
                }
                Kt.disableUnusedAttributes()
            }
        }
        function m(t, e, i) {
            if (t.visible) {
                if (t.layers.test(e.layers))
                    if (t.isLight)
                        H.push(t);
                    else if (t.isSprite)
                        t.frustumCulled && !bt.intersectsSprite(t) || Z.push(t);
                    else if (t.isLensFlare)
                        J.push(t);
                    else if (t.isImmediateRenderObject)
                        i && At.setFromMatrixPosition(t.matrixWorld).applyMatrix4(St),
                            W.push(t, null, t.material, At.z, null);
                    else if ((t.isMesh || t.isLine || t.isPoints) && (t.isSkinnedMesh && t.skeleton.update(),
                        !t.frustumCulled || bt.intersectsObject(t))) {
                        i && At.setFromMatrixPosition(t.matrixWorld).applyMatrix4(St);
                        var n = ee.update(t)
                            , r = t.material;
                        if (Array.isArray(r))
                            for (var a = n.groups, o = 0, s = a.length; o < s; o++) {
                                var h = a[o]
                                    , l = r[h.materialIndex];
                                l && l.visible && W.push(t, n, l, At.z, h)
                            }
                        else
                            r.visible && W.push(t, n, r, At.z, null)
                    }
                for (var c = t.children, o = 0, s = c.length; o < s; o++)
                    m(c[o], e, i)
            }
        }
        function g(t, e, i, n) {
            for (var r = 0, a = t.length; r < a; r++) {
                var o = t[r]
                    , s = o.object
                    , h = o.geometry
                    , l = void 0 === n ? o.material : n
                    , c = o.group;
                if (s.onBeforeRender(tt, e, i, h, l, c),
                    i.isArrayCamera && i.enabled)
                    for (var u = i.cameras, p = 0, d = u.length; p < d; p++) {
                        var f = u[p]
                            , m = f.bounds;
                        tt.setViewport(m.x * gt * yt, m.y * vt * yt, m.z * gt * yt, m.w * vt * yt),
                            tt.setScissor(m.x * gt * yt, m.y * vt * yt, m.z * gt * yt, m.w * vt * yt),
                            tt.setScissorTest(!0),
                            v(s, e, f, h, l, c)
                    }
                else
                    v(s, e, i, h, l, c);
                s.onAfterRender(tt, e, i, h, l, c)
            }
        }
        function v(t, e, i, n, r, a) {
            if (t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse, t.matrixWorld),
                t.normalMatrix.getNormalMatrix(t.modelViewMatrix),
                t.isImmediateRenderObject) {
                Kt.setMaterial(r);
                var o = _(i, e.fog, r, t);
                st = "",
                    l(t, o, r)
            } else
                tt.renderBufferDirect(i, e.fog, n, r, t, a)
        }
        function y(t, e, i) {
            var n = Qt.get(t)
                , r = ie.getParameters(t, It, e, Mt.numPlanes, Mt.numIntersection, i)
                , o = ie.getProgramCode(t, r)
                , s = n.program
                , l = !0;
            if (void 0 === s)
                t.addEventListener("dispose", a);
            else if (s.code !== o)
                h(t);
            else {
                if (void 0 !== r.shaderID)
                    return;
                l = !1
            }
            if (l) {
                if (r.shaderID) {
                    var c = zs[r.shaderID];
                    n.__webglShader = {
                        name: t.type,
                        uniforms: Is.clone(c.uniforms),
                        vertexShader: c.vertexShader,
                        fragmentShader: c.fragmentShader
                    }
                } else
                    n.__webglShader = {
                        name: t.type,
                        uniforms: t.uniforms,
                        vertexShader: t.vertexShader,
                        fragmentShader: t.fragmentShader
                    };
                t.__webglShader = n.__webglShader,
                    s = ie.acquireProgram(t, r, o),
                    n.program = s,
                    t.program = s
            }
            var u = s.getAttributes();
            if (t.morphTargets) {
                t.numSupportedMorphTargets = 0;
                for (var p = 0; p < tt.maxMorphTargets; p++)
                    u["morphTarget" + p] >= 0 && t.numSupportedMorphTargets++
            }
            if (t.morphNormals) {
                t.numSupportedMorphNormals = 0;
                for (var p = 0; p < tt.maxMorphNormals; p++)
                    u["morphNormal" + p] >= 0 && t.numSupportedMorphNormals++
            }
            var d = n.__webglShader.uniforms;
            (t.isShaderMaterial || t.isRawShaderMaterial) && !0 !== t.clipping || (n.numClippingPlanes = Mt.numPlanes,
                n.numIntersection = Mt.numIntersection,
                d.clippingPlanes = Mt.uniform),
                n.fog = e,
                n.lightsHash = It.hash,
                t.lights && (d.ambientLightColor.value = It.ambient,
                    d.directionalLights.value = It.directional,
                    d.spotLights.value = It.spot,
                    d.rectAreaLights.value = It.rectArea,
                    d.pointLights.value = It.point,
                    d.hemisphereLights.value = It.hemi,
                    d.directionalShadowMap.value = It.directionalShadowMap,
                    d.directionalShadowMatrix.value = It.directionalShadowMatrix,
                    d.spotShadowMap.value = It.spotShadowMap,
                    d.spotShadowMatrix.value = It.spotShadowMatrix,
                    d.pointShadowMap.value = It.pointShadowMap,
                    d.pointShadowMatrix.value = It.pointShadowMatrix);
            var f = n.program.getUniforms()
                , m = Y.seqWithValue(f.seq, d);
            n.uniformsList = m
        }
        function _(t, e, i, n) {
            pt = 0;
            var r = Qt.get(i);
            if (Tt && (Pt || t !== ht)) {
                var a = t === ht && i.id === rt;
                Mt.setState(i.clippingPlanes, i.clipIntersection, i.clipShadows, t, r, a)
            }
            !1 === i.needsUpdate && (void 0 === r.program ? i.needsUpdate = !0 : i.fog && r.fog !== e ? i.needsUpdate = !0 : i.lights && r.lightsHash !== It.hash ? i.needsUpdate = !0 : void 0 === r.numClippingPlanes || r.numClippingPlanes === Mt.numPlanes && r.numIntersection === Mt.numIntersection || (i.needsUpdate = !0)),
                i.needsUpdate && (y(i, e, n),
                    i.needsUpdate = !1);
            var o = !1
                , s = !1
                , h = !1
                , l = r.program
                , c = l.getUniforms()
                , u = r.__webglShader.uniforms;
            if (l.id !== et && (Ut.useProgram(l.program),
                et = l.id,
                o = !0,
                s = !0,
                h = !0),
                i.id !== rt && (rt = i.id,
                    s = !0),
                o || t !== ht) {
                if (c.setValue(Ut, "projectionMatrix", t.projectionMatrix),
                    Zt.logarithmicDepthBuffer && c.setValue(Ut, "logDepthBufFC", 2 / (Math.log(t.far + 1) / Math.LN2)),
                    t !== ht && (ht = t,
                        s = !0,
                        h = !0),
                    i.isShaderMaterial || i.isMeshPhongMaterial || i.isMeshStandardMaterial || i.envMap) {
                    var d = c.map.cameraPosition;
                    void 0 !== d && d.setValue(Ut, At.setFromMatrixPosition(t.matrixWorld))
                }
                (i.isMeshPhongMaterial || i.isMeshLambertMaterial || i.isMeshBasicMaterial || i.isMeshStandardMaterial || i.isShaderMaterial || i.skinning) && c.setValue(Ut, "viewMatrix", t.matrixWorldInverse),
                    c.setValue(Ut, "toneMappingExposure", tt.toneMappingExposure),
                    c.setValue(Ut, "toneMappingWhitePoint", tt.toneMappingWhitePoint)
            }
            if (i.skinning) {
                c.setOptional(Ut, n, "bindMatrix"),
                    c.setOptional(Ut, n, "bindMatrixInverse");
                var f = n.skeleton;
                if (f) {
                    var m = f.bones;
                    if (Zt.floatVertexTextures) {
                        if (void 0 === f.boneTexture) {
                            var g = Math.sqrt(4 * m.length);
                            g = bs.nextPowerOfTwo(Math.ceil(g)),
                                g = Math.max(g, 4);
                            var v = new Float32Array(g * g * 4);
                            v.set(f.boneMatrices);
                            var _ = new p(v, g, g, Bo, Oo);
                            f.boneMatrices = v,
                                f.boneTexture = _,
                                f.boneTextureSize = g
                        }
                        c.setValue(Ut, "boneTexture", f.boneTexture),
                            c.setValue(Ut, "boneTextureSize", f.boneTextureSize)
                    } else
                        c.setOptional(Ut, f, "boneMatrices")
                }
            }
            return s && (i.lights && O(u, h),
                e && i.fog && T(u, e),
                (i.isMeshBasicMaterial || i.isMeshLambertMaterial || i.isMeshPhongMaterial || i.isMeshStandardMaterial || i.isMeshNormalMaterial || i.isMeshDepthMaterial) && x(u, i),
                i.isLineBasicMaterial ? w(u, i) : i.isLineDashedMaterial ? (w(u, i),
                    b(u, i)) : i.isPointsMaterial ? M(u, i) : i.isMeshLambertMaterial ? P(u, i) : i.isMeshToonMaterial ? A(u, i) : i.isMeshPhongMaterial ? S(u, i) : i.isMeshPhysicalMaterial ? L(u, i) : i.isMeshStandardMaterial ? E(u, i) : i.isMeshDepthMaterial ? i.displacementMap && (u.displacementMap.value = i.displacementMap,
                        u.displacementScale.value = i.displacementScale,
                        u.displacementBias.value = i.displacementBias) : i.isMeshNormalMaterial && C(u, i),
                void 0 !== u.ltcMat && (u.ltcMat.value = Rs.LTC_MAT_TEXTURE),
                void 0 !== u.ltcMag && (u.ltcMag.value = Rs.LTC_MAG_TEXTURE),
                Y.upload(Ut, r.uniformsList, u, tt)),
                c.setValue(Ut, "modelViewMatrix", n.modelViewMatrix),
                c.setValue(Ut, "normalMatrix", n.normalMatrix),
                c.setValue(Ut, "modelMatrix", n.matrixWorld),
                l
        }
        function x(t, e) {
            t.opacity.value = e.opacity,
                t.diffuse.value = e.color,
                e.emissive && t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),
                t.map.value = e.map,
                t.specularMap.value = e.specularMap,
                t.alphaMap.value = e.alphaMap,
                e.lightMap && (t.lightMap.value = e.lightMap,
                    t.lightMapIntensity.value = e.lightMapIntensity),
                e.aoMap && (t.aoMap.value = e.aoMap,
                    t.aoMapIntensity.value = e.aoMapIntensity);
            var i;
            if (e.map ? i = e.map : e.specularMap ? i = e.specularMap : e.displacementMap ? i = e.displacementMap : e.normalMap ? i = e.normalMap : e.bumpMap ? i = e.bumpMap : e.roughnessMap ? i = e.roughnessMap : e.metalnessMap ? i = e.metalnessMap : e.alphaMap ? i = e.alphaMap : e.emissiveMap && (i = e.emissiveMap),
                void 0 !== i) {
                i.isWebGLRenderTarget && (i = i.texture);
                var n = i.offset
                    , r = i.repeat;
                t.offsetRepeat.value.set(n.x, n.y, r.x, r.y)
            }
            t.envMap.value = e.envMap,
                t.flipEnvMap.value = e.envMap && e.envMap.isCubeTexture ? -1 : 1,
                t.reflectivity.value = e.reflectivity,
                t.refractionRatio.value = e.refractionRatio
        }
        function w(t, e) {
            t.diffuse.value = e.color,
                t.opacity.value = e.opacity
        }
        function b(t, e) {
            t.dashSize.value = e.dashSize,
                t.totalSize.value = e.dashSize + e.gapSize,
                t.scale.value = e.scale
        }
        function M(t, e) {
            if (t.diffuse.value = e.color,
                t.opacity.value = e.opacity,
                t.size.value = e.size * yt,
                t.scale.value = .5 * vt,
                t.map.value = e.map,
                null !== e.map) {
                var i = e.map.offset
                    , n = e.map.repeat;
                t.offsetRepeat.value.set(i.x, i.y, n.x, n.y)
            }
        }
        function T(t, e) {
            t.fogColor.value = e.color,
                e.isFog ? (t.fogNear.value = e.near,
                    t.fogFar.value = e.far) : e.isFogExp2 && (t.fogDensity.value = e.density)
        }
        function P(t, e) {
            e.emissiveMap && (t.emissiveMap.value = e.emissiveMap)
        }
        function S(t, e) {
            t.specular.value = e.specular,
                t.shininess.value = Math.max(e.shininess, 1e-4),
                e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
                e.bumpMap && (t.bumpMap.value = e.bumpMap,
                    t.bumpScale.value = e.bumpScale),
                e.normalMap && (t.normalMap.value = e.normalMap,
                    t.normalScale.value.copy(e.normalScale)),
                e.displacementMap && (t.displacementMap.value = e.displacementMap,
                    t.displacementScale.value = e.displacementScale,
                    t.displacementBias.value = e.displacementBias)
        }
        function A(t, e) {
            S(t, e),
                e.gradientMap && (t.gradientMap.value = e.gradientMap)
        }
        function E(t, e) {
            t.roughness.value = e.roughness,
                t.metalness.value = e.metalness,
                e.roughnessMap && (t.roughnessMap.value = e.roughnessMap),
                e.metalnessMap && (t.metalnessMap.value = e.metalnessMap),
                e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
                e.bumpMap && (t.bumpMap.value = e.bumpMap,
                    t.bumpScale.value = e.bumpScale),
                e.normalMap && (t.normalMap.value = e.normalMap,
                    t.normalScale.value.copy(e.normalScale)),
                e.displacementMap && (t.displacementMap.value = e.displacementMap,
                    t.displacementScale.value = e.displacementScale,
                    t.displacementBias.value = e.displacementBias),
                e.envMap && (t.envMapIntensity.value = e.envMapIntensity)
        }
        function L(t, e) {
            t.clearCoat.value = e.clearCoat,
                t.clearCoatRoughness.value = e.clearCoatRoughness,
                E(t, e)
        }
        function C(t, e) {
            e.bumpMap && (t.bumpMap.value = e.bumpMap,
                t.bumpScale.value = e.bumpScale),
                e.normalMap && (t.normalMap.value = e.normalMap,
                    t.normalScale.value.copy(e.normalScale)),
                e.displacementMap && (t.displacementMap.value = e.displacementMap,
                    t.displacementScale.value = e.displacementScale,
                    t.displacementBias.value = e.displacementBias)
        }
        function O(t, e) {
            t.ambientLightColor.needsUpdate = e,
                t.directionalLights.needsUpdate = e,
                t.pointLights.needsUpdate = e,
                t.spotLights.needsUpdate = e,
                t.rectAreaLights.needsUpdate = e,
                t.hemisphereLights.needsUpdate = e
        }
        function R(t) {
            for (var e = 0, i = 0, n = t.length; i < n; i++) {
                var r = t[i];
                r.castShadow && (It.shadows[e] = r,
                    e++)
            }
            It.shadows.length = e
        }
        function I(t, e) {
            var i, n, r, a, o, s, h, l, c = 0, u = 0, p = 0, d = e.matrixWorldInverse, f = 0, m = 0, g = 0, v = 0, y = 0;
            for (i = 0,
                n = t.length; i < n; i++)
                if (r = t[i],
                    o = r.color,
                    s = r.intensity,
                    h = r.distance,
                    l = r.shadow && r.shadow.map ? r.shadow.map.texture : null,
                    r.isAmbientLight)
                    c += o.r * s,
                        u += o.g * s,
                        p += o.b * s;
                else if (r.isDirectionalLight) {
                    var _ = ne.get(r);
                    _.color.copy(r.color).multiplyScalar(r.intensity),
                        _.direction.setFromMatrixPosition(r.matrixWorld),
                        At.setFromMatrixPosition(r.target.matrixWorld),
                        _.direction.sub(At),
                        _.direction.transformDirection(d),
                        _.shadow = r.castShadow,
                        r.castShadow && (a = r.shadow,
                            _.shadowBias = a.bias,
                            _.shadowRadius = a.radius,
                            _.shadowMapSize = a.mapSize),
                        It.directionalShadowMap[f] = l,
                        It.directionalShadowMatrix[f] = r.shadow.matrix,
                        It.directional[f] = _,
                        f++
                } else if (r.isSpotLight) {
                    var _ = ne.get(r);
                    _.position.setFromMatrixPosition(r.matrixWorld),
                        _.position.applyMatrix4(d),
                        _.color.copy(o).multiplyScalar(s),
                        _.distance = h,
                        _.direction.setFromMatrixPosition(r.matrixWorld),
                        At.setFromMatrixPosition(r.target.matrixWorld),
                        _.direction.sub(At),
                        _.direction.transformDirection(d),
                        _.coneCos = Math.cos(r.angle),
                        _.penumbraCos = Math.cos(r.angle * (1 - r.penumbra)),
                        _.decay = 0 === r.distance ? 0 : r.decay,
                        _.shadow = r.castShadow,
                        r.castShadow && (a = r.shadow,
                            _.shadowBias = a.bias,
                            _.shadowRadius = a.radius,
                            _.shadowMapSize = a.mapSize),
                        It.spotShadowMap[g] = l,
                        It.spotShadowMatrix[g] = r.shadow.matrix,
                        It.spot[g] = _,
                        g++
                } else if (r.isRectAreaLight) {
                    var _ = ne.get(r);
                    _.color.copy(o).multiplyScalar(s / (r.width * r.height)),
                        _.position.setFromMatrixPosition(r.matrixWorld),
                        _.position.applyMatrix4(d),
                        Ot.identity(),
                        Et.copy(r.matrixWorld),
                        Et.premultiply(d),
                        Ot.extractRotation(Et),
                        _.halfWidth.set(.5 * r.width, 0, 0),
                        _.halfHeight.set(0, .5 * r.height, 0),
                        _.halfWidth.applyMatrix4(Ot),
                        _.halfHeight.applyMatrix4(Ot),
                        It.rectArea[v] = _,
                        v++
                } else if (r.isPointLight) {
                    var _ = ne.get(r);
                    _.position.setFromMatrixPosition(r.matrixWorld),
                        _.position.applyMatrix4(d),
                        _.color.copy(r.color).multiplyScalar(r.intensity),
                        _.distance = r.distance,
                        _.decay = 0 === r.distance ? 0 : r.decay,
                        _.shadow = r.castShadow,
                        r.castShadow && (a = r.shadow,
                            _.shadowBias = a.bias,
                            _.shadowRadius = a.radius,
                            _.shadowMapSize = a.mapSize),
                        It.pointShadowMap[m] = l,
                        It.pointShadowMatrix[m] = r.shadow.matrix,
                        It.point[m] = _,
                        m++
                } else if (r.isHemisphereLight) {
                    var _ = ne.get(r);
                    _.direction.setFromMatrixPosition(r.matrixWorld),
                        _.direction.transformDirection(d),
                        _.direction.normalize(),
                        _.skyColor.copy(r.color).multiplyScalar(s),
                        _.groundColor.copy(r.groundColor).multiplyScalar(s),
                        It.hemi[y] = _,
                        y++
                }
            It.ambient[0] = c,
                It.ambient[1] = u,
                It.ambient[2] = p,
                It.directional.length = f,
                It.spot.length = g,
                It.rectArea.length = v,
                It.point.length = m,
                It.hemi.length = y,
                It.hash = f + "," + m + "," + g + "," + v + "," + y + "," + It.shadows.length
        }
        function k() {
            var t = pt;
            return Zt.maxTextures,
                pt += 1,
                t
        }
        function z(t) {
            var e;
            if (t === go)
                return Ut.REPEAT;
            if (t === vo)
                return Ut.CLAMP_TO_EDGE;
            if (t === yo)
                return Ut.MIRRORED_REPEAT;
            if (t === _o)
                return Ut.NEAREST;
            if (t === xo)
                return Ut.NEAREST_MIPMAP_NEAREST;
            if (t === wo)
                return Ut.NEAREST_MIPMAP_LINEAR;
            if (t === bo)
                return Ut.LINEAR;
            if (t === Mo)
                return Ut.LINEAR_MIPMAP_NEAREST;
            if (t === To)
                return Ut.LINEAR_MIPMAP_LINEAR;
            if (t === Po)
                return Ut.UNSIGNED_BYTE;
            if (t === Io)
                return Ut.UNSIGNED_SHORT_4_4_4_4;
            if (t === ko)
                return Ut.UNSIGNED_SHORT_5_5_5_1;
            if (t === zo)
                return Ut.UNSIGNED_SHORT_5_6_5;
            if (t === So)
                return Ut.BYTE;
            if (t === Ao)
                return Ut.SHORT;
            if (t === Eo)
                return Ut.UNSIGNED_SHORT;
            if (t === Lo)
                return Ut.INT;
            if (t === Co)
                return Ut.UNSIGNED_INT;
            if (t === Oo)
                return Ut.FLOAT;
            if (t === Ro && null !== (e = qt.get("OES_texture_half_float")))
                return e.HALF_FLOAT_OES;
            if (t === Do)
                return Ut.ALPHA;
            if (t === No)
                return Ut.RGB;
            if (t === Bo)
                return Ut.RGBA;
            if (t === Uo)
                return Ut.LUMINANCE;
            if (t === jo)
                return Ut.LUMINANCE_ALPHA;
            if (t === Vo)
                return Ut.DEPTH_COMPONENT;
            if (t === Ho)
                return Ut.DEPTH_STENCIL;
            if (t === La)
                return Ut.FUNC_ADD;
            if (t === Ca)
                return Ut.FUNC_SUBTRACT;
            if (t === Oa)
                return Ut.FUNC_REVERSE_SUBTRACT;
            if (t === ka)
                return Ut.ZERO;
            if (t === za)
                return Ut.ONE;
            if (t === Fa)
                return Ut.SRC_COLOR;
            if (t === Da)
                return Ut.ONE_MINUS_SRC_COLOR;
            if (t === Na)
                return Ut.SRC_ALPHA;
            if (t === Ba)
                return Ut.ONE_MINUS_SRC_ALPHA;
            if (t === Ua)
                return Ut.DST_ALPHA;
            if (t === ja)
                return Ut.ONE_MINUS_DST_ALPHA;
            if (t === Ga)
                return Ut.DST_COLOR;
            if (t === Va)
                return Ut.ONE_MINUS_DST_COLOR;
            if (t === Ha)
                return Ut.SRC_ALPHA_SATURATE;
            if ((t === Wo || t === Xo || t === Yo || t === qo) && null !== (e = qt.get("WEBGL_compressed_texture_s3tc"))) {
                if (t === Wo)
                    return e.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (t === Xo)
                    return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (t === Yo)
                    return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (t === qo)
                    return e.COMPRESSED_RGBA_S3TC_DXT5_EXT
            }
            if ((t === Zo || t === Ko || t === Qo || t === Jo) && null !== (e = qt.get("WEBGL_compressed_texture_pvrtc"))) {
                if (t === Zo)
                    return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                if (t === Ko)
                    return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                if (t === Qo)
                    return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                if (t === Jo)
                    return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
            }
            if (t === $o && null !== (e = qt.get("WEBGL_compressed_texture_etc1")))
                return e.COMPRESSED_RGB_ETC1_WEBGL;
            if ((t === Ra || t === Ia) && null !== (e = qt.get("EXT_blend_minmax"))) {
                if (t === Ra)
                    return e.MIN_EXT;
                if (t === Ia)
                    return e.MAX_EXT
            }
            return t === Fo && null !== (e = qt.get("WEBGL_depth_texture")) ? e.UNSIGNED_INT_24_8_WEBGL : 0
        }
        t = t || {};
        var F = void 0 !== t.canvas ? t.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
            , D = void 0 !== t.context ? t.context : null
            , N = void 0 !== t.alpha && t.alpha
            , B = void 0 === t.depth || t.depth
            , U = void 0 === t.stencil || t.stencil
            , j = void 0 !== t.antialias && t.antialias
            , G = void 0 === t.premultipliedAlpha || t.premultipliedAlpha
            , V = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer
            , H = []
            , W = null
            , X = new Float32Array(8)
            , Z = []
            , J = [];
        this.domElement = F,
            this.context = null,
            this.autoClear = !0,
            this.autoClearColor = !0,
            this.autoClearDepth = !0,
            this.autoClearStencil = !0,
            this.sortObjects = !0,
            this.clippingPlanes = [],
            this.localClippingEnabled = !1,
            this.gammaFactor = 2,
            this.gammaInput = !1,
            this.gammaOutput = !1,
            this.physicallyCorrectLights = !1,
            this.toneMapping = no,
            this.toneMappingExposure = 1,
            this.toneMappingWhitePoint = 1,
            this.maxMorphTargets = 8,
            this.maxMorphNormals = 4;
        var tt = this
            , et = null
            , it = null
            , nt = null
            , rt = -1
            , st = ""
            , ht = null
            , lt = new o
            , ct = null
            , ut = new o
            , pt = 0
            , dt = new q(0)
            , mt = 0
            , gt = F.width
            , vt = F.height
            , yt = 1
            , _t = new o(0, 0, gt, vt)
            , xt = !1
            , wt = new o(0, 0, gt, vt)
            , bt = new at
            , Mt = new de
            , Tt = !1
            , Pt = !1
            , St = new u
            , At = new c
            , Et = new u
            , Ot = new u
            , It = {
                hash: "",
                ambient: [0, 0, 0],
                directional: [],
                directionalShadowMap: [],
                directionalShadowMatrix: [],
                spot: [],
                spotShadowMap: [],
                spotShadowMatrix: [],
                rectArea: [],
                point: [],
                pointShadowMap: [],
                pointShadowMatrix: [],
                hemi: [],
                shadows: []
            }
            , zt = {
                geometries: 0,
                textures: 0
            }
            , Bt = {
                frame: 0,
                calls: 0,
                vertices: 0,
                faces: 0,
                points: 0
            };
        this.info = {
            render: Bt,
            memory: zt,
            programs: null
        };
        var Ut;
        try {
            var jt = {
                alpha: N,
                depth: B,
                stencil: U,
                antialias: j,
                premultipliedAlpha: G,
                preserveDrawingBuffer: V
            };
            if (null === (Ut = D || F.getContext("webgl", jt) || F.getContext("experimental-webgl", jt)))
                throw null !== F.getContext("webgl") ? "Error creating WebGL context with your selected attributes." : "Error creating WebGL context.";
            void 0 === Ut.getShaderPrecisionFormat && (Ut.getShaderPrecisionFormat = function () {
                return {
                    rangeMin: 1,
                    rangeMax: 1,
                    precision: 1
                }
            }
            ),
                F.addEventListener("webglcontextlost", r, !1)
        } catch (t) { }
        var qt = new pe(Ut);
        qt.get("WEBGL_depth_texture"),
            qt.get("OES_texture_float"),
            qt.get("OES_texture_float_linear"),
            qt.get("OES_texture_half_float"),
            qt.get("OES_texture_half_float_linear"),
            qt.get("OES_standard_derivatives"),
            qt.get("ANGLE_instanced_arrays"),
            qt.get("OES_element_index_uint") && (Lt.MaxIndex = 4294967296);
        var Zt = new ue(Ut, qt, t)
            , Kt = new ce(Ut, qt, z)
            , Qt = new le
            , Jt = new he(Ut, qt, Kt, Qt, Zt, z, zt)
            , $t = new Nt(Ut)
            , te = new Wt(Ut, $t, zt)
            , ee = new Yt(Ut, te, Bt)
            , ie = new se(this, Zt)
            , ne = new Xt
            , re = new Gt;
        this.info.programs = ie.programs;
        var ae, oe, fe, me, ge = new Ht(Ut, qt, Bt), ve = new Vt(Ut, qt, Bt);
        i(),
            this.context = Ut,
            this.capabilities = Zt,
            this.extensions = qt,
            this.properties = Qt,
            this.state = Kt;
        var ye = new ot(this, It, ee, Zt);
        this.shadowMap = ye;
        var _e = new Q(this, Z)
            , xe = new K(this, J);
        this.getContext = function () {
            return Ut
        }
            ,
            this.getContextAttributes = function () {
                return Ut.getContextAttributes()
            }
            ,
            this.forceContextLoss = function () {
                var t = qt.get("WEBGL_lose_context");
                t && t.loseContext()
            }
            ,
            this.getMaxAnisotropy = function () {
                return Zt.getMaxAnisotropy()
            }
            ,
            this.getPrecision = function () {
                return Zt.precision
            }
            ,
            this.getPixelRatio = function () {
                return yt
            }
            ,
            this.setPixelRatio = function (t) {
                void 0 !== t && (yt = t,
                    this.setSize(wt.z, wt.w, !1))
            }
            ,
            this.getSize = function () {
                return {
                    width: gt,
                    height: vt
                }
            }
            ,
            this.setSize = function (t, e, i) {
                gt = t,
                    vt = e,
                    F.width = t * yt,
                    F.height = e * yt,
                    !1 !== i && (F.style.width = t + "px",
                        F.style.height = e + "px"),
                    this.setViewport(0, 0, t, e)
            }
            ,
            this.setViewport = function (t, e, i, n) {
                Kt.viewport(wt.set(t, e, i, n))
            }
            ,
            this.setScissor = function (t, e, i, n) {
                Kt.scissor(_t.set(t, e, i, n))
            }
            ,
            this.setScissorTest = function (t) {
                Kt.setScissorTest(xt = t)
            }
            ,
            this.getClearColor = function () {
                return dt
            }
            ,
            this.setClearColor = function (t, e) {
                dt.set(t),
                    mt = void 0 !== e ? e : 1,
                    Kt.buffers.color.setClear(dt.r, dt.g, dt.b, mt, G)
            }
            ,
            this.getClearAlpha = function () {
                return mt
            }
            ,
            this.setClearAlpha = function (t) {
                mt = t,
                    Kt.buffers.color.setClear(dt.r, dt.g, dt.b, mt, G)
            }
            ,
            this.clear = function (t, e, i) {
                var n = 0;
                (void 0 === t || t) && (n |= Ut.COLOR_BUFFER_BIT),
                    (void 0 === e || e) && (n |= Ut.DEPTH_BUFFER_BIT),
                    (void 0 === i || i) && (n |= Ut.STENCIL_BUFFER_BIT),
                    Ut.clear(n)
            }
            ,
            this.clearColor = function () {
                this.clear(!0, !1, !1)
            }
            ,
            this.clearDepth = function () {
                this.clear(!1, !0, !1)
            }
            ,
            this.clearStencil = function () {
                this.clear(!1, !1, !0)
            }
            ,
            this.clearTarget = function (t, e, i, n) {
                this.setRenderTarget(t),
                    this.clear(e, i, n)
            }
            ,
            this.resetGLState = n,
            this.dispose = function () {
                F.removeEventListener("webglcontextlost", r, !1),
                    re.dispose()
            }
            ,
            this.renderBufferImmediate = function (t, e, i) {
                Kt.initAttributes();
                var n = Qt.get(t);
                t.hasPositions && !n.position && (n.position = Ut.createBuffer()),
                    t.hasNormals && !n.normal && (n.normal = Ut.createBuffer()),
                    t.hasUvs && !n.uv && (n.uv = Ut.createBuffer()),
                    t.hasColors && !n.color && (n.color = Ut.createBuffer());
                var r = e.getAttributes();
                if (t.hasPositions && (Ut.bindBuffer(Ut.ARRAY_BUFFER, n.position),
                    Ut.bufferData(Ut.ARRAY_BUFFER, t.positionArray, Ut.DYNAMIC_DRAW),
                    Kt.enableAttribute(r.position),
                    Ut.vertexAttribPointer(r.position, 3, Ut.FLOAT, !1, 0, 0)),
                    t.hasNormals) {
                    if (Ut.bindBuffer(Ut.ARRAY_BUFFER, n.normal),
                        !i.isMeshPhongMaterial && !i.isMeshStandardMaterial && !i.isMeshNormalMaterial && i.shading === ya)
                        for (var a = 0, o = 3 * t.count; a < o; a += 9) {
                            var s = t.normalArray
                                , h = (s[a + 0] + s[a + 3] + s[a + 6]) / 3
                                , l = (s[a + 1] + s[a + 4] + s[a + 7]) / 3
                                , c = (s[a + 2] + s[a + 5] + s[a + 8]) / 3;
                            s[a + 0] = h,
                                s[a + 1] = l,
                                s[a + 2] = c,
                                s[a + 3] = h,
                                s[a + 4] = l,
                                s[a + 5] = c,
                                s[a + 6] = h,
                                s[a + 7] = l,
                                s[a + 8] = c
                        }
                    Ut.bufferData(Ut.ARRAY_BUFFER, t.normalArray, Ut.DYNAMIC_DRAW),
                        Kt.enableAttribute(r.normal),
                        Ut.vertexAttribPointer(r.normal, 3, Ut.FLOAT, !1, 0, 0)
                }
                t.hasUvs && i.map && (Ut.bindBuffer(Ut.ARRAY_BUFFER, n.uv),
                    Ut.bufferData(Ut.ARRAY_BUFFER, t.uvArray, Ut.DYNAMIC_DRAW),
                    Kt.enableAttribute(r.uv),
                    Ut.vertexAttribPointer($t.uv, 2, Ut.FLOAT, !1, 0, 0)),
                    t.hasColors && i.vertexColors !== xa && (Ut.bindBuffer(Ut.ARRAY_BUFFER, n.color),
                        Ut.bufferData(Ut.ARRAY_BUFFER, t.colorArray, Ut.DYNAMIC_DRAW),
                        Kt.enableAttribute(r.color),
                        Ut.vertexAttribPointer(r.color, 3, Ut.FLOAT, !1, 0, 0)),
                    Kt.disableUnusedAttributes(),
                    Ut.drawArrays(Ut.TRIANGLES, 0, t.count),
                    t.count = 0
            }
            ,
            this.renderBufferDirect = function (t, i, n, r, a, o) {
                Kt.setMaterial(r);
                var s = _(t, i, r, a)
                    , h = n.id + "_" + s.id + "_" + (!0 === r.wireframe)
                    , l = !1;
                h !== st && (st = h,
                    l = !0);
                var c = a.morphTargetInfluences;
                if (void 0 !== c) {
                    for (var u = [], p = 0, m = c.length; p < m; p++) {
                        var g = c[p];
                        u.push([g, p])
                    }
                    u.sort(d),
                        u.length > 8 && (u.length = 8);
                    for (var v = n.morphAttributes, p = 0, m = u.length; p < m; p++) {
                        var g = u[p];
                        if (X[p] = g[0],
                            0 !== g[0]) {
                            var y = g[1];
                            !0 === r.morphTargets && v.position && n.addAttribute("morphTarget" + p, v.position[y]),
                                !0 === r.morphNormals && v.normal && n.addAttribute("morphNormal" + p, v.normal[y])
                        } else
                            !0 === r.morphTargets && n.removeAttribute("morphTarget" + p),
                                !0 === r.morphNormals && n.removeAttribute("morphNormal" + p)
                    }
                    for (var p = u.length, x = X.length; p < x; p++)
                        X[p] = 0;
                    s.getUniforms().setValue(Ut, "morphTargetInfluences", X),
                        l = !0
                }
                var y = n.index
                    , w = n.attributes.position
                    , b = 1;
                !0 === r.wireframe && (y = te.getWireframeAttribute(n),
                    b = 2);
                var M = ge;
                null !== y && (M = ve,
                    M.setIndex(y)),
                    l && (f(r, s, n),
                        null !== y && Ut.bindBuffer(Ut.ELEMENT_ARRAY_BUFFER, $t.get(y).buffer));
                var T = 0;
                null !== y ? T = y.count : void 0 !== w && (T = w.count);
                var P = n.drawRange.start * b
                    , S = n.drawRange.count * b
                    , A = null !== o ? o.start * b : 0
                    , E = null !== o ? o.count * b : 1 / 0
                    , L = Math.max(P, A)
                    , C = Math.min(T, P + S, A + E) - 1
                    , O = Math.max(0, C - L + 1);
                if (0 !== O) {
                    if (a.isMesh)
                        if (!0 === r.wireframe)
                            Kt.setLineWidth(r.wireframeLinewidth * e()),
                                M.setMode(Ut.LINES);
                        else
                            switch (a.drawMode) {
                                case ls:
                                    M.setMode(Ut.TRIANGLES);
                                    break;
                                case cs:
                                    M.setMode(Ut.TRIANGLE_STRIP);
                                    break;
                                case us:
                                    M.setMode(Ut.TRIANGLE_FAN)
                            }
                    else if (a.isLine) {
                        var R = r.linewidth;
                        void 0 === R && (R = 1),
                            Kt.setLineWidth(R * e()),
                            a.isLineSegments ? M.setMode(Ut.LINES) : a.isLineLoop ? M.setMode(Ut.LINE_LOOP) : M.setMode(Ut.LINE_STRIP)
                    } else
                        a.isPoints && M.setMode(Ut.POINTS);
                    n && n.isInstancedBufferGeometry ? n.maxInstancedCount > 0 && M.renderInstances(n, L, O) : M.render(L, O)
                }
            }
            ,
            this.compile = function (t, e) {
                H = [],
                    t.traverse(function (t) {
                        t.isLight && H.push(t)
                    }),
                    I(H, e),
                    t.traverse(function (e) {
                        if (e.material)
                            if (Array.isArray(e.material))
                                for (var i = 0; i < e.material.length; i++)
                                    y(e.material[i], t.fog, e);
                            else
                                y(e.material, t.fog, e)
                    })
            }
            ,
            this.render = function (t, e, i, n) {
                if (void 0 === e || !0 === e.isCamera) {
                    st = "",
                        rt = -1,
                        ht = null,
                        !0 === t.autoUpdate && t.updateMatrixWorld(),
                        e.onBeforeRender(tt),
                        null === e.parent && e.updateMatrixWorld(),
                        e.matrixWorldInverse.getInverse(e.matrixWorld),
                        St.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
                        bt.setFromMatrix(St),
                        H.length = 0,
                        Z.length = 0,
                        J.length = 0,
                        Pt = this.localClippingEnabled,
                        Tt = Mt.init(this.clippingPlanes, Pt, e),
                        W = re.get(t, e),
                        W.init(),
                        m(t, e, tt.sortObjects),
                        W.finish(),
                        !0 === tt.sortObjects && W.sort(),
                        Tt && Mt.beginShadows(),
                        R(H),
                        ye.render(t, e),
                        I(H, e),
                        Tt && Mt.endShadows(),
                        Bt.frame++,
                        Bt.calls = 0,
                        Bt.vertices = 0,
                        Bt.faces = 0,
                        Bt.points = 0,
                        void 0 === i && (i = null),
                        this.setRenderTarget(i);
                    var r = t.background;
                    null === r ? Kt.buffers.color.setClear(dt.r, dt.g, dt.b, mt, G) : r && r.isColor && (Kt.buffers.color.setClear(r.r, r.g, r.b, 1, G),
                        n = !0),
                        (this.autoClear || n) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil),
                        r && r.isCubeTexture ? (void 0 === fe && (fe = new Ft,
                            me = new Ct(new Rt(5, 5, 5), new $({
                                uniforms: zs.cube.uniforms,
                                vertexShader: zs.cube.vertexShader,
                                fragmentShader: zs.cube.fragmentShader,
                                side: ga,
                                depthTest: !1,
                                depthWrite: !1,
                                fog: !1
                            }))),
                            fe.projectionMatrix.copy(e.projectionMatrix),
                            fe.matrixWorld.extractRotation(e.matrixWorld),
                            fe.matrixWorldInverse.getInverse(fe.matrixWorld),
                            me.material.uniforms.tCube.value = r,
                            me.modelViewMatrix.multiplyMatrices(fe.matrixWorldInverse, me.matrixWorld),
                            ee.update(me),
                            tt.renderBufferDirect(fe, null, me.geometry, me.material, me, null)) : r && r.isTexture && (void 0 === ae && (ae = new Dt(-1, 1, 1, -1, 0, 1),
                                oe = new Ct(new kt(2, 2), new ft({
                                    depthTest: !1,
                                    depthWrite: !1,
                                    fog: !1
                                }))),
                                oe.material.map = r,
                                ee.update(oe),
                                tt.renderBufferDirect(ae, null, oe.geometry, oe.material, oe, null));
                    var a = W.opaque
                        , o = W.transparent;
                    if (t.overrideMaterial) {
                        var s = t.overrideMaterial;
                        a.length && g(a, t, e, s),
                            o.length && g(o, t, e, s)
                    } else
                        a.length && g(a, t, e),
                            o.length && g(o, t, e);
                    _e.render(t, e),
                        xe.render(t, e, ut),
                        i && Jt.updateRenderTargetMipmap(i),
                        Kt.buffers.depth.setTest(!0),
                        Kt.buffers.depth.setMask(!0),
                        Kt.buffers.color.setMask(!0),
                        e.isArrayCamera && e.enabled && tt.setScissorTest(!1),
                        e.onAfterRender(tt)
                }
            }
            ,
            this.setFaceCulling = function (t, e) {
                Kt.setCullFace(t),
                    Kt.setFlipSided(e === ca)
            }
            ,
            this.allocTextureUnit = k,
            this.setTexture2D = function () {
                var t = !1;
                return function (e, i) {
                    e && e.isWebGLRenderTarget && (t || (t = !0),
                        e = e.texture),
                        Jt.setTexture2D(e, i)
                }
            }(),
            this.setTexture = function () {
                var t = !1;
                return function (e, i) {
                    t || (t = !0),
                        Jt.setTexture2D(e, i)
                }
            }(),
            this.setTextureCube = function () {
                var t = !1;
                return function (e, i) {
                    e && e.isWebGLRenderTargetCube && (t || (t = !0),
                        e = e.texture),
                        e && e.isCubeTexture || Array.isArray(e.image) && 6 === e.image.length ? Jt.setTextureCube(e, i) : Jt.setTextureCubeDynamic(e, i)
                }
            }(),
            this.getRenderTarget = function () {
                return it
            }
            ,
            this.setRenderTarget = function (t) {
                it = t,
                    t && void 0 === Qt.get(t).__webglFramebuffer && Jt.setupRenderTarget(t);
                var e, i = t && t.isWebGLRenderTargetCube;
                if (t) {
                    var n = Qt.get(t);
                    e = i ? n.__webglFramebuffer[t.activeCubeFace] : n.__webglFramebuffer,
                        lt.copy(t.scissor),
                        ct = t.scissorTest,
                        ut.copy(t.viewport)
                } else
                    e = null,
                        lt.copy(_t).multiplyScalar(yt),
                        ct = xt,
                        ut.copy(wt).multiplyScalar(yt);
                if (nt !== e && (Ut.bindFramebuffer(Ut.FRAMEBUFFER, e),
                    nt = e),
                    Kt.scissor(lt),
                    Kt.setScissorTest(ct),
                    Kt.viewport(ut),
                    i) {
                    var r = Qt.get(t.texture);
                    Ut.framebufferTexture2D(Ut.FRAMEBUFFER, Ut.COLOR_ATTACHMENT0, Ut.TEXTURE_CUBE_MAP_POSITIVE_X + t.activeCubeFace, r.__webglTexture, t.activeMipMapLevel)
                }
            }
            ,
            this.readRenderTargetPixels = function (t, e, i, n, r, a) {
                if (!1 !== (t && t.isWebGLRenderTarget)) {
                    var o = Qt.get(t).__webglFramebuffer;
                    if (o) {
                        var s = !1;
                        o !== nt && (Ut.bindFramebuffer(Ut.FRAMEBUFFER, o),
                            s = !0);
                        try {
                            var h = t.texture
                                , l = h.format
                                , c = h.type;
                            if (l !== Bo && z(l) !== Ut.getParameter(Ut.IMPLEMENTATION_COLOR_READ_FORMAT))
                                return;
                            if (!(c === Po || z(c) === Ut.getParameter(Ut.IMPLEMENTATION_COLOR_READ_TYPE) || c === Oo && (qt.get("OES_texture_float") || qt.get("WEBGL_color_buffer_float")) || c === Ro && qt.get("EXT_color_buffer_half_float")))
                                return;
                            Ut.checkFramebufferStatus(Ut.FRAMEBUFFER) === Ut.FRAMEBUFFER_COMPLETE && e >= 0 && e <= t.width - n && i >= 0 && i <= t.height - r && Ut.readPixels(e, i, n, r, z(l), z(c), a)
                        } finally {
                            s && Ut.bindFramebuffer(Ut.FRAMEBUFFER, nt)
                        }
                    }
                }
            }
    }
    function me(t, e) {
        this.name = "",
            this.color = new q(t),
            this.density = void 0 !== e ? e : 25e-5
    }
    function ge(t, e, i) {
        this.name = "",
            this.color = new q(t),
            this.near = void 0 !== e ? e : 1,
            this.far = void 0 !== i ? i : 1e3
    }
    function ve() {
        ct.call(this),
            this.type = "Scene",
            this.background = null,
            this.fog = null,
            this.overrideMaterial = null,
            this.autoUpdate = !0
    }
    function ye(t, e, i, n, r) {
        ct.call(this),
            this.lensFlares = [],
            this.positionScreen = new c,
            this.customUpdateCallback = void 0,
            void 0 !== t && this.add(t, e, i, n, r)
    }
    function _e(t) {
        J.call(this),
            this.type = "SpriteMaterial",
            this.color = new q(16777215),
            this.map = null,
            this.rotation = 0,
            this.fog = !1,
            this.lights = !1,
            this.setValues(t)
    }
    function xe(t) {
        ct.call(this),
            this.type = "Sprite",
            this.material = void 0 !== t ? t : new _e
    }
    function we() {
        ct.call(this),
            this.type = "LOD",
            Object.defineProperties(this, {
                levels: {
                    enumerable: !0,
                    value: []
                }
            })
    }
    function be(t, e) {
        if (t = t || [],
            this.bones = t.slice(0),
            this.boneMatrices = new Float32Array(16 * this.bones.length),
            void 0 === e)
            this.calculateInverses();
        else if (this.bones.length === e.length)
            this.boneInverses = e.slice(0);
        else {
            this.boneInverses = [];
            for (var i = 0, n = this.bones.length; i < n; i++)
                this.boneInverses.push(new u)
        }
    }
    function Me() {
        ct.call(this),
            this.type = "Bone"
    }
    function Te(t, e) {
        Ct.call(this, t, e),
            this.type = "SkinnedMesh",
            this.bindMode = "attached",
            this.bindMatrix = new u,
            this.bindMatrixInverse = new u;
        var i = this.initBones()
            , n = new be(i);
        this.bind(n, this.matrixWorld),
            this.normalizeSkinWeights()
    }
    function Pe(t) {
        J.call(this),
            this.type = "LineBasicMaterial",
            this.color = new q(16777215),
            this.linewidth = 1,
            this.linecap = "round",
            this.linejoin = "round",
            this.lights = !1,
            this.setValues(t)
    }
    function Se(t, e, i) {
        if (1 === i)
            return new Ae(t, e);
        ct.call(this),
            this.type = "Line",
            this.geometry = void 0 !== t ? t : new Lt,
            this.material = void 0 !== e ? e : new Pe({
                color: 16777215 * Math.random()
            })
    }
    function Ae(t, e) {
        Se.call(this, t, e),
            this.type = "LineSegments"
    }
    function Ee(t, e) {
        Se.call(this, t, e),
            this.type = "LineLoop"
    }
    function Le(t) {
        J.call(this),
            this.type = "PointsMaterial",
            this.color = new q(16777215),
            this.map = null,
            this.size = 1,
            this.sizeAttenuation = !0,
            this.lights = !1,
            this.setValues(t)
    }
    function Ce(t, e) {
        ct.call(this),
            this.type = "Points",
            this.geometry = void 0 !== t ? t : new Lt,
            this.material = void 0 !== e ? e : new Le({
                color: 16777215 * Math.random()
            })
    }
    function Oe() {
        ct.call(this),
            this.type = "Group"
    }
    function Re(t, e, i, n, r, o, s, h, l) {
        function c() {
            requestAnimationFrame(c),
                t.readyState >= t.HAVE_CURRENT_DATA && (u.needsUpdate = !0)
        }
        a.call(this, t, e, i, n, r, o, s, h, l),
            this.generateMipmaps = !1;
        var u = this;
        c()
    }
    function Ie(t, e, i, n, r, o, s, h, l, c, u, p) {
        a.call(this, null, o, s, h, l, c, n, r, u, p),
            this.image = {
                width: e,
                height: i
            },
            this.mipmaps = t,
            this.flipY = !1,
            this.generateMipmaps = !1
    }
    function ke(t, e, i, n, r, o, s, h, l) {
        a.call(this, t, e, i, n, r, o, s, h, l),
            this.needsUpdate = !0
    }
    function ze(t, e, i, n, r, o, s, h, l, c) {
        if ((c = void 0 !== c ? c : Vo) !== Vo && c !== Ho)
            throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        void 0 === i && c === Vo && (i = Eo),
            void 0 === i && c === Ho && (i = Fo),
            a.call(this, null, n, r, o, s, h, c, i, l),
            this.image = {
                width: t,
                height: e
            },
            this.magFilter = void 0 !== s ? s : _o,
            this.minFilter = void 0 !== h ? h : _o,
            this.flipY = !1,
            this.generateMipmaps = !1
    }
    function Fe(t) {
        Lt.call(this),
            this.type = "WireframeGeometry";
        var e, i, n, r, a, o, s, h, l, u, p = [], d = [0, 0], f = {}, m = ["a", "b", "c"];
        if (t && t.isGeometry) {
            var g = t.faces;
            for (e = 0,
                n = g.length; e < n; e++) {
                var v = g[e];
                for (i = 0; i < 3; i++)
                    s = v[m[i]],
                        h = v[m[(i + 1) % 3]],
                        d[0] = Math.min(s, h),
                        d[1] = Math.max(s, h),
                        l = d[0] + "," + d[1],
                        void 0 === f[l] && (f[l] = {
                            index1: d[0],
                            index2: d[1]
                        })
            }
            for (l in f)
                o = f[l],
                    u = t.vertices[o.index1],
                    p.push(u.x, u.y, u.z),
                    u = t.vertices[o.index2],
                    p.push(u.x, u.y, u.z)
        } else if (t && t.isBufferGeometry) {
            var y, _, x, w, b, M, T, P;
            if (u = new c,
                null !== t.index) {
                for (y = t.attributes.position,
                    _ = t.index,
                    x = t.groups,
                    0 === x.length && (x = [{
                        start: 0,
                        count: _.count,
                        materialIndex: 0
                    }]),
                    r = 0,
                    a = x.length; r < a; ++r)
                    for (w = x[r],
                        b = w.start,
                        M = w.count,
                        e = b,
                        n = b + M; e < n; e += 3)
                        for (i = 0; i < 3; i++)
                            s = _.getX(e + i),
                                h = _.getX(e + (i + 1) % 3),
                                d[0] = Math.min(s, h),
                                d[1] = Math.max(s, h),
                                l = d[0] + "," + d[1],
                                void 0 === f[l] && (f[l] = {
                                    index1: d[0],
                                    index2: d[1]
                                });
                for (l in f)
                    o = f[l],
                        u.fromBufferAttribute(y, o.index1),
                        p.push(u.x, u.y, u.z),
                        u.fromBufferAttribute(y, o.index2),
                        p.push(u.x, u.y, u.z)
            } else
                for (y = t.attributes.position,
                    e = 0,
                    n = y.count / 3; e < n; e++)
                    for (i = 0; i < 3; i++)
                        T = 3 * e + i,
                            u.fromBufferAttribute(y, T),
                            p.push(u.x, u.y, u.z),
                            P = 3 * e + (i + 1) % 3,
                            u.fromBufferAttribute(y, P),
                            p.push(u.x, u.y, u.z)
        }
        this.addAttribute("position", new Mt(p, 3))
    }
    function De(t, e, i) {
        Et.call(this),
            this.type = "ParametricGeometry",
            this.parameters = {
                func: t,
                slices: e,
                stacks: i
            },
            this.fromBufferGeometry(new Ne(t, e, i)),
            this.mergeVertices()
    }
    function Ne(t, e, i) {
        Lt.call(this),
            this.type = "ParametricBufferGeometry",
            this.parameters = {
                func: t,
                slices: e,
                stacks: i
            };
        var n, r, a = [], o = [], s = [], h = [], l = new c, u = new c, p = new c, d = new c, f = new c, m = e + 1;
        for (n = 0; n <= i; n++) {
            var g = n / i;
            for (r = 0; r <= e; r++) {
                var v = r / e;
                u = t(v, g, u),
                    o.push(u.x, u.y, u.z),
                    v - 1e-5 >= 0 ? (p = t(v - 1e-5, g, p),
                        d.subVectors(u, p)) : (p = t(v + 1e-5, g, p),
                            d.subVectors(p, u)),
                    g - 1e-5 >= 0 ? (p = t(v, g - 1e-5, p),
                        f.subVectors(u, p)) : (p = t(v, g + 1e-5, p),
                            f.subVectors(p, u)),
                    l.crossVectors(d, f).normalize(),
                    s.push(l.x, l.y, l.z),
                    h.push(v, g)
            }
        }
        for (n = 0; n < i; n++)
            for (r = 0; r < e; r++) {
                var y = n * m + r
                    , _ = n * m + r + 1
                    , x = (n + 1) * m + r + 1
                    , w = (n + 1) * m + r;
                a.push(y, _, w),
                    a.push(_, x, w)
            }
        this.setIndex(a),
            this.addAttribute("position", new Mt(o, 3)),
            this.addAttribute("normal", new Mt(s, 3)),
            this.addAttribute("uv", new Mt(h, 2))
    }
    function Be(t, e, i, n) {
        Et.call(this),
            this.type = "PolyhedronGeometry",
            this.parameters = {
                vertices: t,
                indices: e,
                radius: i,
                detail: n
            },
            this.fromBufferGeometry(new Ue(t, e, i, n)),
            this.mergeVertices()
    }
    function Ue(t, e, i, n) {
        function a(t, e, i, n) {
            var r, a, o = Math.pow(2, n), h = [];
            for (r = 0; r <= o; r++) {
                h[r] = [];
                var l = t.clone().lerp(i, r / o)
                    , c = e.clone().lerp(i, r / o)
                    , u = o - r;
                for (a = 0; a <= u; a++)
                    h[r][a] = 0 === a && r === o ? l : l.clone().lerp(c, a / u)
            }
            for (r = 0; r < o; r++)
                for (a = 0; a < 2 * (o - r) - 1; a++) {
                    var p = Math.floor(a / 2);
                    a % 2 == 0 ? (s(h[r][p + 1]),
                        s(h[r + 1][p]),
                        s(h[r][p])) : (s(h[r][p + 1]),
                            s(h[r + 1][p + 1]),
                            s(h[r + 1][p]))
                }
        }
        function o() {
            for (var t = 0; t < m.length; t += 6) {
                var e = m[t + 0]
                    , i = m[t + 2]
                    , n = m[t + 4]
                    , r = Math.max(e, i, n)
                    , a = Math.min(e, i, n);
                r > .9 && a < .1 && (e < .2 && (m[t + 0] += 1),
                    i < .2 && (m[t + 2] += 1),
                    n < .2 && (m[t + 4] += 1))
            }
        }
        function s(t) {
            f.push(t.x, t.y, t.z)
        }
        function h(e, i) {
            var n = 3 * e;
            i.x = t[n + 0],
                i.y = t[n + 1],
                i.z = t[n + 2]
        }
        function l() {
            for (var t = new c, e = new c, i = new c, n = new c, a = new r, o = new r, s = new r, h = 0, l = 0; h < f.length; h += 9,
                l += 6) {
                t.set(f[h + 0], f[h + 1], f[h + 2]),
                    e.set(f[h + 3], f[h + 4], f[h + 5]),
                    i.set(f[h + 6], f[h + 7], f[h + 8]),
                    a.set(m[l + 0], m[l + 1]),
                    o.set(m[l + 2], m[l + 3]),
                    s.set(m[l + 4], m[l + 5]),
                    n.copy(t).add(e).add(i).divideScalar(3);
                var d = p(n);
                u(a, l + 0, t, d),
                    u(o, l + 2, e, d),
                    u(s, l + 4, i, d)
            }
        }
        function u(t, e, i, n) {
            n < 0 && 1 === t.x && (m[e] = t.x - 1),
                0 === i.x && 0 === i.z && (m[e] = n / 2 / Math.PI + .5)
        }
        function p(t) {
            return Math.atan2(t.z, -t.x)
        }
        function d(t) {
            return Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z))
        }
        Lt.call(this),
            this.type = "PolyhedronBufferGeometry",
            this.parameters = {
                vertices: t,
                indices: e,
                radius: i,
                detail: n
            },
            i = i || 1,
            n = n || 0;
        var f = []
            , m = [];
        !function (t) {
            for (var i = new c, n = new c, r = new c, o = 0; o < e.length; o += 3)
                h(e[o + 0], i),
                    h(e[o + 1], n),
                    h(e[o + 2], r),
                    a(i, n, r, t)
        }(n),
            function (t) {
                for (var e = new c, i = 0; i < f.length; i += 3)
                    e.x = f[i + 0],
                        e.y = f[i + 1],
                        e.z = f[i + 2],
                        e.normalize().multiplyScalar(t),
                        f[i + 0] = e.x,
                        f[i + 1] = e.y,
                        f[i + 2] = e.z
            }(i),
            function () {
                for (var t = new c, e = 0; e < f.length; e += 3) {
                    t.x = f[e + 0],
                        t.y = f[e + 1],
                        t.z = f[e + 2];
                    var i = p(t) / 2 / Math.PI + .5
                        , n = d(t) / Math.PI + .5;
                    m.push(i, 1 - n)
                }
                l(),
                    o()
            }(),
            this.addAttribute("position", new Mt(f, 3)),
            this.addAttribute("normal", new Mt(f.slice(), 3)),
            this.addAttribute("uv", new Mt(m, 2)),
            this.normalizeNormals()
    }
    function je(t, e) {
        Et.call(this),
            this.type = "TetrahedronGeometry",
            this.parameters = {
                radius: t,
                detail: e
            },
            this.fromBufferGeometry(new Ge(t, e)),
            this.mergeVertices()
    }
    function Ge(t, e) {
        var i = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1]
            , n = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
        Ue.call(this, i, n, t, e),
            this.type = "TetrahedronBufferGeometry",
            this.parameters = {
                radius: t,
                detail: e
            }
    }
    function Ve(t, e) {
        Et.call(this),
            this.type = "OctahedronGeometry",
            this.parameters = {
                radius: t,
                detail: e
            },
            this.fromBufferGeometry(new He(t, e)),
            this.mergeVertices()
    }
    function He(t, e) {
        var i = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1]
            , n = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
        Ue.call(this, i, n, t, e),
            this.type = "OctahedronBufferGeometry",
            this.parameters = {
                radius: t,
                detail: e
            }
    }
    function We(t, e) {
        Et.call(this),
            this.type = "IcosahedronGeometry",
            this.parameters = {
                radius: t,
                detail: e
            },
            this.fromBufferGeometry(new Xe(t, e)),
            this.mergeVertices()
    }
    function Xe(t, e) {
        var i = (1 + Math.sqrt(5)) / 2
            , n = [-1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, 0, 0, -1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, i, 0, -1, i, 0, 1, -i, 0, -1, -i, 0, 1]
            , r = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
        Ue.call(this, n, r, t, e),
            this.type = "IcosahedronBufferGeometry",
            this.parameters = {
                radius: t,
                detail: e
            }
    }
    function Ye(t, e) {
        Et.call(this),
            this.type = "DodecahedronGeometry",
            this.parameters = {
                radius: t,
                detail: e
            },
            this.fromBufferGeometry(new qe(t, e)),
            this.mergeVertices()
    }
    function qe(t, e) {
        var i = (1 + Math.sqrt(5)) / 2
            , n = 1 / i
            , r = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -n, -i, 0, -n, i, 0, n, -i, 0, n, i, -n, -i, 0, -n, i, 0, n, -i, 0, n, i, 0, -i, 0, -n, i, 0, -n, -i, 0, n, i, 0, n]
            , a = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
        Ue.call(this, r, a, t, e),
            this.type = "DodecahedronBufferGeometry",
            this.parameters = {
                radius: t,
                detail: e
            }
    }
    function Ze(t, e, i, n, r, a) {
        Et.call(this),
            this.type = "TubeGeometry",
            this.parameters = {
                path: t,
                tubularSegments: e,
                radius: i,
                radialSegments: n,
                closed: r
            };
        var o = new Ke(t, e, i, n, r);
        this.tangents = o.tangents,
            this.normals = o.normals,
            this.binormals = o.binormals,
            this.fromBufferGeometry(o),
            this.mergeVertices()
    }
    function Ke(t, e, i, n, a) {
        function o(r) {
            var a = t.getPointAt(r / e)
                , o = l.normals[r]
                , s = l.binormals[r];
            for (p = 0; p <= n; p++) {
                var h = p / n * Math.PI * 2
                    , c = Math.sin(h)
                    , u = -Math.cos(h);
                f.x = u * o.x + c * s.x,
                    f.y = u * o.y + c * s.y,
                    f.z = u * o.z + c * s.z,
                    f.normalize(),
                    v.push(f.x, f.y, f.z),
                    d.x = a.x + i * f.x,
                    d.y = a.y + i * f.y,
                    d.z = a.z + i * f.z,
                    g.push(d.x, d.y, d.z)
            }
        }
        function s() {
            for (p = 1; p <= e; p++)
                for (u = 1; u <= n; u++) {
                    var t = (n + 1) * (p - 1) + (u - 1)
                        , i = (n + 1) * p + (u - 1)
                        , r = (n + 1) * p + u
                        , a = (n + 1) * (p - 1) + u;
                    _.push(t, i, a),
                        _.push(i, r, a)
                }
        }
        function h() {
            for (u = 0; u <= e; u++)
                for (p = 0; p <= n; p++)
                    m.x = u / e,
                        m.y = p / n,
                        y.push(m.x, m.y)
        }
        Lt.call(this),
            this.type = "TubeBufferGeometry",
            this.parameters = {
                path: t,
                tubularSegments: e,
                radius: i,
                radialSegments: n,
                closed: a
            },
            e = e || 64,
            i = i || 1,
            n = n || 8,
            a = a || !1;
        var l = t.computeFrenetFrames(e, a);
        this.tangents = l.tangents,
            this.normals = l.normals,
            this.binormals = l.binormals;
        var u, p, d = new c, f = new c, m = new r, g = [], v = [], y = [], _ = [];
        !function () {
            for (u = 0; u < e; u++)
                o(u);
            o(!1 === a ? e : 0),
                h(),
                s()
        }(),
            this.setIndex(_),
            this.addAttribute("position", new Mt(g, 3)),
            this.addAttribute("normal", new Mt(v, 3)),
            this.addAttribute("uv", new Mt(y, 2))
    }
    function Qe(t, e, i, n, r, a, o) {
        Et.call(this),
            this.type = "TorusKnotGeometry",
            this.parameters = {
                radius: t,
                tube: e,
                tubularSegments: i,
                radialSegments: n,
                p: r,
                q: a
            },
            this.fromBufferGeometry(new Je(t, e, i, n, r, a)),
            this.mergeVertices()
    }
    function Je(t, e, i, n, r, a) {
        function o(t, e, i, n, r) {
            var a = Math.cos(t)
                , o = Math.sin(t)
                , s = i / e * t
                , h = Math.cos(s);
            r.x = n * (2 + h) * .5 * a,
                r.y = n * (2 + h) * o * .5,
                r.z = n * Math.sin(s) * .5
        }
        Lt.call(this),
            this.type = "TorusKnotBufferGeometry",
            this.parameters = {
                radius: t,
                tube: e,
                tubularSegments: i,
                radialSegments: n,
                p: r,
                q: a
            },
            t = t || 100,
            e = e || 40,
            i = Math.floor(i) || 64,
            n = Math.floor(n) || 8,
            r = r || 2,
            a = a || 3;
        var s, h, l = [], u = [], p = [], d = [], f = new c, m = new c, g = new c, v = new c, y = new c, _ = new c, x = new c;
        for (s = 0; s <= i; ++s) {
            var w = s / i * r * Math.PI * 2;
            for (o(w, r, a, t, g),
                o(w + .01, r, a, t, v),
                _.subVectors(v, g),
                x.addVectors(v, g),
                y.crossVectors(_, x),
                x.crossVectors(y, _),
                y.normalize(),
                x.normalize(),
                h = 0; h <= n; ++h) {
                var b = h / n * Math.PI * 2
                    , M = -e * Math.cos(b)
                    , T = e * Math.sin(b);
                f.x = g.x + (M * x.x + T * y.x),
                    f.y = g.y + (M * x.y + T * y.y),
                    f.z = g.z + (M * x.z + T * y.z),
                    u.push(f.x, f.y, f.z),
                    m.subVectors(f, g).normalize(),
                    p.push(m.x, m.y, m.z),
                    d.push(s / i),
                    d.push(h / n)
            }
        }
        for (h = 1; h <= i; h++)
            for (s = 1; s <= n; s++) {
                var P = (n + 1) * (h - 1) + (s - 1)
                    , S = (n + 1) * h + (s - 1)
                    , A = (n + 1) * h + s
                    , E = (n + 1) * (h - 1) + s;
                l.push(P, S, E),
                    l.push(S, A, E)
            }
        this.setIndex(l),
            this.addAttribute("position", new Mt(u, 3)),
            this.addAttribute("normal", new Mt(p, 3)),
            this.addAttribute("uv", new Mt(d, 2))
    }
    function $e(t, e, i, n, r) {
        Et.call(this),
            this.type = "TorusGeometry",
            this.parameters = {
                radius: t,
                tube: e,
                radialSegments: i,
                tubularSegments: n,
                arc: r
            },
            this.fromBufferGeometry(new ti(t, e, i, n, r)),
            this.mergeVertices()
    }
    function ti(t, e, i, n, r) {
        Lt.call(this),
            this.type = "TorusBufferGeometry",
            this.parameters = {
                radius: t,
                tube: e,
                radialSegments: i,
                tubularSegments: n,
                arc: r
            },
            t = t || 100,
            e = e || 40,
            i = Math.floor(i) || 8,
            n = Math.floor(n) || 6,
            r = r || 2 * Math.PI;
        var a, o, s = [], h = [], l = [], u = [], p = new c, d = new c, f = new c;
        for (a = 0; a <= i; a++)
            for (o = 0; o <= n; o++) {
                var m = o / n * r
                    , g = a / i * Math.PI * 2;
                d.x = (t + e * Math.cos(g)) * Math.cos(m),
                    d.y = (t + e * Math.cos(g)) * Math.sin(m),
                    d.z = e * Math.sin(g),
                    h.push(d.x, d.y, d.z),
                    p.x = t * Math.cos(m),
                    p.y = t * Math.sin(m),
                    f.subVectors(d, p).normalize(),
                    l.push(f.x, f.y, f.z),
                    u.push(o / n),
                    u.push(a / i)
            }
        for (a = 1; a <= i; a++)
            for (o = 1; o <= n; o++) {
                var v = (n + 1) * a + o - 1
                    , y = (n + 1) * (a - 1) + o - 1
                    , _ = (n + 1) * (a - 1) + o
                    , x = (n + 1) * a + o;
                s.push(v, y, x),
                    s.push(y, _, x)
            }
        this.setIndex(s),
            this.addAttribute("position", new Mt(h, 3)),
            this.addAttribute("normal", new Mt(l, 3)),
            this.addAttribute("uv", new Mt(u, 2))
    }
    function ei(t, e) {
        Et.call(this),
            this.type = "ExtrudeGeometry",
            this.parameters = {
                shapes: t,
                options: e
            },
            this.fromBufferGeometry(new ii(t, e)),
            this.mergeVertices()
    }
    function ii(t, e) {
        if (void 0 === t)
            return void (t = []);
        Lt.call(this),
            this.type = "ExtrudeBufferGeometry",
            t = Array.isArray(t) ? t : [t],
            this.addShapeList(t, e),
            this.computeVertexNormals()
    }
    function ni(t, e) {
        Et.call(this),
            this.type = "TextGeometry",
            this.parameters = {
                text: t,
                parameters: e
            },
            this.fromBufferGeometry(new ri(t, e)),
            this.mergeVertices()
    }
    function ri(t, e) {
        e = e || {};
        var i = e.font;
        if (!1 === (i && i.isFont))
            return new Et;
        var n = i.generateShapes(t, e.size, e.curveSegments);
        e.amount = void 0 !== e.height ? e.height : 50,
            void 0 === e.bevelThickness && (e.bevelThickness = 10),
            void 0 === e.bevelSize && (e.bevelSize = 8),
            void 0 === e.bevelEnabled && (e.bevelEnabled = !1),
            ii.call(this, n, e),
            this.type = "TextBufferGeometry"
    }
    function ai(t, e, i, n, r, a, o) {
        Et.call(this),
            this.type = "SphereGeometry",
            this.parameters = {
                radius: t,
                widthSegments: e,
                heightSegments: i,
                phiStart: n,
                phiLength: r,
                thetaStart: a,
                thetaLength: o
            },
            this.fromBufferGeometry(new oi(t, e, i, n, r, a, o)),
            this.mergeVertices()
    }
    function oi(t, e, i, n, r, a, o) {
        Lt.call(this),
            this.type = "SphereBufferGeometry",
            this.parameters = {
                radius: t,
                widthSegments: e,
                heightSegments: i,
                phiStart: n,
                phiLength: r,
                thetaStart: a,
                thetaLength: o
            },
            t = t || 50,
            e = Math.max(3, Math.floor(e) || 8),
            i = Math.max(2, Math.floor(i) || 6),
            n = void 0 !== n ? n : 0,
            r = void 0 !== r ? r : 2 * Math.PI,
            a = void 0 !== a ? a : 0,
            o = void 0 !== o ? o : Math.PI;
        var s, h, l = a + o, u = 0, p = [], d = new c, f = new c, m = [], g = [], v = [], y = [];
        for (h = 0; h <= i; h++) {
            var _ = []
                , x = h / i;
            for (s = 0; s <= e; s++) {
                var w = s / e;
                d.x = -t * Math.cos(n + w * r) * Math.sin(a + x * o),
                    d.y = t * Math.cos(a + x * o),
                    d.z = t * Math.sin(n + w * r) * Math.sin(a + x * o),
                    g.push(d.x, d.y, d.z),
                    f.set(d.x, d.y, d.z).normalize(),
                    v.push(f.x, f.y, f.z),
                    y.push(w, 1 - x),
                    _.push(u++)
            }
            p.push(_)
        }
        for (h = 0; h < i; h++)
            for (s = 0; s < e; s++) {
                var b = p[h][s + 1]
                    , M = p[h][s]
                    , T = p[h + 1][s]
                    , P = p[h + 1][s + 1];
                (0 !== h || a > 0) && m.push(b, M, P),
                    (h !== i - 1 || l < Math.PI) && m.push(M, T, P)
            }
        this.setIndex(m),
            this.addAttribute("position", new Mt(g, 3)),
            this.addAttribute("normal", new Mt(v, 3)),
            this.addAttribute("uv", new Mt(y, 2))
    }
    function si(t, e, i, n, r, a) {
        Et.call(this),
            this.type = "RingGeometry",
            this.parameters = {
                innerRadius: t,
                outerRadius: e,
                thetaSegments: i,
                phiSegments: n,
                thetaStart: r,
                thetaLength: a
            },
            this.fromBufferGeometry(new hi(t, e, i, n, r, a)),
            this.mergeVertices()
    }
    function hi(t, e, i, n, a, o) {
        Lt.call(this),
            this.type = "RingBufferGeometry",
            this.parameters = {
                innerRadius: t,
                outerRadius: e,
                thetaSegments: i,
                phiSegments: n,
                thetaStart: a,
                thetaLength: o
            },
            t = t || 20,
            e = e || 50,
            a = void 0 !== a ? a : 0,
            o = void 0 !== o ? o : 2 * Math.PI,
            i = void 0 !== i ? Math.max(3, i) : 8,
            n = void 0 !== n ? Math.max(1, n) : 1;
        var s, h, l, u = [], p = [], d = [], f = [], m = t, g = (e - t) / n, v = new c, y = new r;
        for (h = 0; h <= n; h++) {
            for (l = 0; l <= i; l++)
                s = a + l / i * o,
                    v.x = m * Math.cos(s),
                    v.y = m * Math.sin(s),
                    p.push(v.x, v.y, v.z),
                    d.push(0, 0, 1),
                    y.x = (v.x / e + 1) / 2,
                    y.y = (v.y / e + 1) / 2,
                    f.push(y.x, y.y);
            m += g
        }
        for (h = 0; h < n; h++) {
            var _ = h * (i + 1);
            for (l = 0; l < i; l++) {
                s = l + _;
                var x = s
                    , w = s + i + 1
                    , b = s + i + 2
                    , M = s + 1;
                u.push(x, w, M),
                    u.push(w, b, M)
            }
        }
        this.setIndex(u),
            this.addAttribute("position", new Mt(p, 3)),
            this.addAttribute("normal", new Mt(d, 3)),
            this.addAttribute("uv", new Mt(f, 2))
    }
    function li(t, e, i, n) {
        Et.call(this),
            this.type = "LatheGeometry",
            this.parameters = {
                points: t,
                segments: e,
                phiStart: i,
                phiLength: n
            },
            this.fromBufferGeometry(new ci(t, e, i, n)),
            this.mergeVertices()
    }
    function ci(t, e, i, n) {
        Lt.call(this),
            this.type = "LatheBufferGeometry",
            this.parameters = {
                points: t,
                segments: e,
                phiStart: i,
                phiLength: n
            },
            e = Math.floor(e) || 12,
            i = i || 0,
            n = n || 2 * Math.PI,
            n = bs.clamp(n, 0, 2 * Math.PI);
        var a, o, s, h = [], l = [], u = [], p = 1 / e, d = new c, f = new r;
        for (o = 0; o <= e; o++) {
            var m = i + o * p * n
                , g = Math.sin(m)
                , v = Math.cos(m);
            for (s = 0; s <= t.length - 1; s++)
                d.x = t[s].x * g,
                    d.y = t[s].y,
                    d.z = t[s].x * v,
                    l.push(d.x, d.y, d.z),
                    f.x = o / e,
                    f.y = s / (t.length - 1),
                    u.push(f.x, f.y)
        }
        for (o = 0; o < e; o++)
            for (s = 0; s < t.length - 1; s++) {
                a = s + o * t.length;
                var y = a
                    , _ = a + t.length
                    , x = a + t.length + 1
                    , w = a + 1;
                h.push(y, _, w),
                    h.push(_, x, w)
            }
        if (this.setIndex(h),
            this.addAttribute("position", new Mt(l, 3)),
            this.addAttribute("uv", new Mt(u, 2)),
            this.computeVertexNormals(),
            n === 2 * Math.PI) {
            var b = this.attributes.normal.array
                , M = new c
                , T = new c
                , P = new c;
            for (a = e * t.length * 3,
                o = 0,
                s = 0; o < t.length; o++,
                s += 3)
                M.x = b[s + 0],
                    M.y = b[s + 1],
                    M.z = b[s + 2],
                    T.x = b[a + s + 0],
                    T.y = b[a + s + 1],
                    T.z = b[a + s + 2],
                    P.addVectors(M, T).normalize(),
                    b[s + 0] = b[a + s + 0] = P.x,
                    b[s + 1] = b[a + s + 1] = P.y,
                    b[s + 2] = b[a + s + 2] = P.z
        }
    }
    function ui(t, e) {
        Et.call(this),
            this.type = "ShapeGeometry",
            "object" == typeof e && (e = e.curveSegments),
            this.parameters = {
                shapes: t,
                curveSegments: e
            },
            this.fromBufferGeometry(new pi(t, e)),
            this.mergeVertices()
    }
    function pi(t, e) {
        function i(t) {
            var i, s, l, c = r.length / 3, u = t.extractPoints(e), p = u.shape, d = u.holes;
            if (!1 === Us.isClockWise(p))
                for (p = p.reverse(),
                    i = 0,
                    s = d.length; i < s; i++)
                    l = d[i],
                        !0 === Us.isClockWise(l) && (d[i] = l.reverse());
            var f = Us.triangulateShape(p, d);
            for (i = 0,
                s = d.length; i < s; i++)
                l = d[i],
                    p = p.concat(l);
            for (i = 0,
                s = p.length; i < s; i++) {
                var m = p[i];
                r.push(m.x, m.y, 0),
                    a.push(0, 0, 1),
                    o.push(m.x, m.y)
            }
            for (i = 0,
                s = f.length; i < s; i++) {
                var g = f[i]
                    , v = g[0] + c
                    , y = g[1] + c
                    , _ = g[2] + c;
                n.push(v, y, _),
                    h += 3
            }
        }
        Lt.call(this),
            this.type = "ShapeBufferGeometry",
            this.parameters = {
                shapes: t,
                curveSegments: e
            },
            e = e || 12;
        var n = []
            , r = []
            , a = []
            , o = []
            , s = 0
            , h = 0;
        if (!1 === Array.isArray(t))
            i(t);
        else
            for (var l = 0; l < t.length; l++)
                i(t[l]),
                    this.addGroup(s, h, l),
                    s += h,
                    h = 0;
        this.setIndex(n),
            this.addAttribute("position", new Mt(r, 3)),
            this.addAttribute("normal", new Mt(a, 3)),
            this.addAttribute("uv", new Mt(o, 2))
    }
    function di(t, e) {
        Lt.call(this),
            this.type = "EdgesGeometry",
            this.parameters = {
                thresholdAngle: e
            },
            e = void 0 !== e ? e : 1;
        var i, n, r, a, o = [], s = Math.cos(bs.DEG2RAD * e), h = [0, 0], l = {}, c = ["a", "b", "c"];
        t.isBufferGeometry ? (a = new Et,
            a.fromBufferGeometry(t)) : a = t.clone(),
            a.mergeVertices(),
            a.computeFaceNormals();
        for (var u = a.vertices, p = a.faces, d = 0, f = p.length; d < f; d++)
            for (var m = p[d], g = 0; g < 3; g++)
                i = m[c[g]],
                    n = m[c[(g + 1) % 3]],
                    h[0] = Math.min(i, n),
                    h[1] = Math.max(i, n),
                    r = h[0] + "," + h[1],
                    void 0 === l[r] ? l[r] = {
                        index1: h[0],
                        index2: h[1],
                        face1: d,
                        face2: void 0
                    } : l[r].face2 = d;
        for (r in l) {
            var v = l[r];
            if (void 0 === v.face2 || p[v.face1].normal.dot(p[v.face2].normal) <= s) {
                var y = u[v.index1];
                o.push(y.x, y.y, y.z),
                    y = u[v.index2],
                    o.push(y.x, y.y, y.z)
            }
        }
        this.addAttribute("position", new Mt(o, 3))
    }
    function fi(t, e, i, n, r, a, o, s) {
        Et.call(this),
            this.type = "CylinderGeometry",
            this.parameters = {
                radiusTop: t,
                radiusBottom: e,
                height: i,
                radialSegments: n,
                heightSegments: r,
                openEnded: a,
                thetaStart: o,
                thetaLength: s
            },
            this.fromBufferGeometry(new mi(t, e, i, n, r, a, o, s)),
            this.mergeVertices()
    }
    function mi(t, e, i, n, a, o, s, h) {
        function l(i) {
            var a, o, l, v = new r, x = new c, w = 0, b = !0 === i ? t : e, M = !0 === i ? 1 : -1;
            for (o = g,
                a = 1; a <= n; a++)
                d.push(0, y * M, 0),
                    f.push(0, M, 0),
                    m.push(.5, .5),
                    g++;
            for (l = g,
                a = 0; a <= n; a++) {
                var T = a / n
                    , P = T * h + s
                    , S = Math.cos(P)
                    , A = Math.sin(P);
                x.x = b * A,
                    x.y = y * M,
                    x.z = b * S,
                    d.push(x.x, x.y, x.z),
                    f.push(0, M, 0),
                    v.x = .5 * S + .5,
                    v.y = .5 * A * M + .5,
                    m.push(v.x, v.y),
                    g++
            }
            for (a = 0; a < n; a++) {
                var E = o + a
                    , L = l + a;
                !0 === i ? p.push(L, L + 1, E) : p.push(L + 1, L, E),
                    w += 3
            }
            u.addGroup(_, w, !0 === i ? 1 : 2),
                _ += w
        }
        Lt.call(this),
            this.type = "CylinderBufferGeometry",
            this.parameters = {
                radiusTop: t,
                radiusBottom: e,
                height: i,
                radialSegments: n,
                heightSegments: a,
                openEnded: o,
                thetaStart: s,
                thetaLength: h
            };
        var u = this;
        t = void 0 !== t ? t : 20,
            e = void 0 !== e ? e : 20,
            i = void 0 !== i ? i : 100,
            n = Math.floor(n) || 8,
            a = Math.floor(a) || 1,
            o = void 0 !== o && o,
            s = void 0 !== s ? s : 0,
            h = void 0 !== h ? h : 2 * Math.PI;
        var p = []
            , d = []
            , f = []
            , m = []
            , g = 0
            , v = []
            , y = i / 2
            , _ = 0;
        !function () {
            var r, o, l = new c, x = new c, w = 0, b = (e - t) / i;
            for (o = 0; o <= a; o++) {
                var M = []
                    , T = o / a
                    , P = T * (e - t) + t;
                for (r = 0; r <= n; r++) {
                    var S = r / n
                        , A = S * h + s
                        , E = Math.sin(A)
                        , L = Math.cos(A);
                    x.x = P * E,
                        x.y = -T * i + y,
                        x.z = P * L,
                        d.push(x.x, x.y, x.z),
                        l.set(E, b, L).normalize(),
                        f.push(l.x, l.y, l.z),
                        m.push(S, 1 - T),
                        M.push(g++)
                }
                v.push(M)
            }
            for (r = 0; r < n; r++)
                for (o = 0; o < a; o++) {
                    var C = v[o][r]
                        , O = v[o + 1][r]
                        , R = v[o + 1][r + 1]
                        , I = v[o][r + 1];
                    p.push(C, O, I),
                        p.push(O, R, I),
                        w += 6
                }
            u.addGroup(_, w, 0),
                _ += w
        }(),
            !1 === o && (t > 0 && l(!0),
                e > 0 && l(!1)),
            this.setIndex(p),
            this.addAttribute("position", new Mt(d, 3)),
            this.addAttribute("normal", new Mt(f, 3)),
            this.addAttribute("uv", new Mt(m, 2))
    }
    function gi(t, e, i, n, r, a, o) {
        fi.call(this, 0, t, e, i, n, r, a, o),
            this.type = "ConeGeometry",
            this.parameters = {
                radius: t,
                height: e,
                radialSegments: i,
                heightSegments: n,
                openEnded: r,
                thetaStart: a,
                thetaLength: o
            }
    }
    function vi(t, e, i, n, r, a, o) {
        mi.call(this, 0, t, e, i, n, r, a, o),
            this.type = "ConeBufferGeometry",
            this.parameters = {
                radius: t,
                height: e,
                radialSegments: i,
                heightSegments: n,
                openEnded: r,
                thetaStart: a,
                thetaLength: o
            }
    }
    function yi(t, e, i, n) {
        Et.call(this),
            this.type = "CircleGeometry",
            this.parameters = {
                radius: t,
                segments: e,
                thetaStart: i,
                thetaLength: n
            },
            this.fromBufferGeometry(new _i(t, e, i, n)),
            this.mergeVertices()
    }
    function _i(t, e, i, n) {
        Lt.call(this),
            this.type = "CircleBufferGeometry",
            this.parameters = {
                radius: t,
                segments: e,
                thetaStart: i,
                thetaLength: n
            },
            t = t || 50,
            e = void 0 !== e ? Math.max(3, e) : 8,
            i = void 0 !== i ? i : 0,
            n = void 0 !== n ? n : 2 * Math.PI;
        var a, o, s = [], h = [], l = [], u = [], p = new c, d = new r;
        for (h.push(0, 0, 0),
            l.push(0, 0, 1),
            u.push(.5, .5),
            o = 0,
            a = 3; o <= e; o++,
            a += 3) {
            var f = i + o / e * n;
            p.x = t * Math.cos(f),
                p.y = t * Math.sin(f),
                h.push(p.x, p.y, p.z),
                l.push(0, 0, 1),
                d.x = (h[a] / t + 1) / 2,
                d.y = (h[a + 1] / t + 1) / 2,
                u.push(d.x, d.y)
        }
        for (a = 1; a <= e; a++)
            s.push(a, a + 1, 0);
        this.setIndex(s),
            this.addAttribute("position", new Mt(h, 3)),
            this.addAttribute("normal", new Mt(l, 3)),
            this.addAttribute("uv", new Mt(u, 2))
    }
    function xi(t) {
        $.call(this, {
            uniforms: Is.merge([Rs.lights, {
                opacity: {
                    value: 1
                }
            }]),
            vertexShader: ks.shadow_vert,
            fragmentShader: ks.shadow_frag
        }),
            this.lights = !0,
            this.transparent = !0,
            Object.defineProperties(this, {
                opacity: {
                    enumerable: !0,
                    get: function () {
                        return this.uniforms.opacity.value
                    },
                    set: function (t) {
                        this.uniforms.opacity.value = t
                    }
                }
            }),
            this.setValues(t)
    }
    function wi(t) {
        $.call(this, t),
            this.type = "RawShaderMaterial"
    }
    function bi(t) {
        J.call(this),
            this.defines = {
                STANDARD: ""
            },
            this.type = "MeshStandardMaterial",
            this.color = new q(16777215),
            this.roughness = .5,
            this.metalness = .5,
            this.map = null,
            this.lightMap = null,
            this.lightMapIntensity = 1,
            this.aoMap = null,
            this.aoMapIntensity = 1,
            this.emissive = new q(0),
            this.emissiveIntensity = 1,
            this.emissiveMap = null,
            this.bumpMap = null,
            this.bumpScale = 1,
            this.normalMap = null,
            this.normalScale = new r(1, 1),
            this.displacementMap = null,
            this.displacementScale = 1,
            this.displacementBias = 0,
            this.roughnessMap = null,
            this.metalnessMap = null,
            this.alphaMap = null,
            this.envMap = null,
            this.envMapIntensity = 1,
            this.refractionRatio = .98,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.wireframeLinecap = "round",
            this.wireframeLinejoin = "round",
            this.skinning = !1,
            this.morphTargets = !1,
            this.morphNormals = !1,
            this.setValues(t)
    }
    function Mi(t) {
        bi.call(this),
            this.defines = {
                PHYSICAL: ""
            },
            this.type = "MeshPhysicalMaterial",
            this.reflectivity = .5,
            this.clearCoat = 0,
            this.clearCoatRoughness = 0,
            this.setValues(t)
    }
    function Ti(t) {
        J.call(this),
            this.type = "MeshPhongMaterial",
            this.color = new q(16777215),
            this.specular = new q(1118481),
            this.shininess = 30,
            this.map = null,
            this.lightMap = null,
            this.lightMapIntensity = 1,
            this.aoMap = null,
            this.aoMapIntensity = 1,
            this.emissive = new q(0),
            this.emissiveIntensity = 1,
            this.emissiveMap = null,
            this.bumpMap = null,
            this.bumpScale = 1,
            this.normalMap = null,
            this.normalScale = new r(1, 1),
            this.displacementMap = null,
            this.displacementScale = 1,
            this.displacementBias = 0,
            this.specularMap = null,
            this.alphaMap = null,
            this.envMap = null,
            this.combine = $a,
            this.reflectivity = 1,
            this.refractionRatio = .98,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.wireframeLinecap = "round",
            this.wireframeLinejoin = "round",
            this.skinning = !1,
            this.morphTargets = !1,
            this.morphNormals = !1,
            this.setValues(t)
    }
    function Pi(t) {
        Ti.call(this),
            this.defines = {
                TOON: ""
            },
            this.type = "MeshToonMaterial",
            this.gradientMap = null,
            this.setValues(t)
    }
    function Si(t) {
        J.call(this, t),
            this.type = "MeshNormalMaterial",
            this.bumpMap = null,
            this.bumpScale = 1,
            this.normalMap = null,
            this.normalScale = new r(1, 1),
            this.displacementMap = null,
            this.displacementScale = 1,
            this.displacementBias = 0,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.fog = !1,
            this.lights = !1,
            this.skinning = !1,
            this.morphTargets = !1,
            this.morphNormals = !1,
            this.setValues(t)
    }
    function Ai(t) {
        J.call(this),
            this.type = "MeshLambertMaterial",
            this.color = new q(16777215),
            this.map = null,
            this.lightMap = null,
            this.lightMapIntensity = 1,
            this.aoMap = null,
            this.aoMapIntensity = 1,
            this.emissive = new q(0),
            this.emissiveIntensity = 1,
            this.emissiveMap = null,
            this.specularMap = null,
            this.alphaMap = null,
            this.envMap = null,
            this.combine = $a,
            this.reflectivity = 1,
            this.refractionRatio = .98,
            this.wireframe = !1,
            this.wireframeLinewidth = 1,
            this.wireframeLinecap = "round",
            this.wireframeLinejoin = "round",
            this.skinning = !1,
            this.morphTargets = !1,
            this.morphNormals = !1,
            this.setValues(t)
    }
    function Ei(t) {
        J.call(this),
            this.type = "LineDashedMaterial",
            this.color = new q(16777215),
            this.linewidth = 1,
            this.scale = 1,
            this.dashSize = 3,
            this.gapSize = 1,
            this.lights = !1,
            this.setValues(t)
    }
    function Li(t, e, i) {
        var n = this
            , r = !1
            , a = 0
            , o = 0;
        this.onStart = void 0,
            this.onLoad = t,
            this.onProgress = e,
            this.onError = i,
            this.itemStart = function (t) {
                o++,
                    !1 === r && void 0 !== n.onStart && n.onStart(t, a, o),
                    r = !0
            }
            ,
            this.itemEnd = function (t) {
                a++,
                    void 0 !== n.onProgress && n.onProgress(t, a, o),
                    a === o && (r = !1,
                        void 0 !== n.onLoad && n.onLoad())
            }
            ,
            this.itemError = function (t) {
                void 0 !== n.onError && n.onError(t)
            }
    }
    function Ci(t) {
        this.manager = void 0 !== t ? t : Hs
    }
    function Oi(t) {
        this.manager = void 0 !== t ? t : Hs,
            this._parser = null
    }
    function Ri(t) {
        this.manager = void 0 !== t ? t : Hs,
            this._parser = null
    }
    function Ii(t) {
        this.manager = void 0 !== t ? t : Hs
    }
    function ki(t) {
        this.manager = void 0 !== t ? t : Hs
    }
    function zi(t) {
        this.manager = void 0 !== t ? t : Hs
    }
    function Fi(t, e) {
        ct.call(this),
            this.type = "Light",
            this.color = new q(t),
            this.intensity = void 0 !== e ? e : 1,
            this.receiveShadow = void 0
    }
    function Di(t, e, i) {
        Fi.call(this, t, i),
            this.type = "HemisphereLight",
            this.castShadow = void 0,
            this.position.copy(ct.DefaultUp),
            this.updateMatrix(),
            this.groundColor = new q(e)
    }
    function Ni(t) {
        this.camera = t,
            this.bias = 0,
            this.radius = 1,
            this.mapSize = new r(512, 512),
            this.map = null,
            this.matrix = new u
    }
    function Bi() {
        Ni.call(this, new Ft(50, 1, .5, 500))
    }
    function Ui(t, e, i, n, r, a) {
        Fi.call(this, t, e),
            this.type = "SpotLight",
            this.position.copy(ct.DefaultUp),
            this.updateMatrix(),
            this.target = new ct,
            Object.defineProperty(this, "power", {
                get: function () {
                    return this.intensity * Math.PI
                },
                set: function (t) {
                    this.intensity = t / Math.PI
                }
            }),
            this.distance = void 0 !== i ? i : 0,
            this.angle = void 0 !== n ? n : Math.PI / 3,
            this.penumbra = void 0 !== r ? r : 0,
            this.decay = void 0 !== a ? a : 1,
            this.shadow = new Bi
    }
    function ji(t, e, i, n) {
        Fi.call(this, t, e),
            this.type = "PointLight",
            Object.defineProperty(this, "power", {
                get: function () {
                    return 4 * this.intensity * Math.PI
                },
                set: function (t) {
                    this.intensity = t / (4 * Math.PI)
                }
            }),
            this.distance = void 0 !== i ? i : 0,
            this.decay = void 0 !== n ? n : 1,
            this.shadow = new Ni(new Ft(90, 1, .5, 500))
    }
    function Gi() {
        Ni.call(this, new Dt(-5, 5, 5, -5, .5, 500))
    }
    function Vi(t, e) {
        Fi.call(this, t, e),
            this.type = "DirectionalLight",
            this.position.copy(ct.DefaultUp),
            this.updateMatrix(),
            this.target = new ct,
            this.shadow = new Gi
    }
    function Hi(t, e) {
        Fi.call(this, t, e),
            this.type = "AmbientLight",
            this.castShadow = void 0
    }
    function Wi(t, e, i, n) {
        Fi.call(this, t, e),
            this.type = "RectAreaLight",
            this.position.set(0, 1, 0),
            this.updateMatrix(),
            this.width = void 0 !== i ? i : 10,
            this.height = void 0 !== n ? n : 10
    }
    function Xi(t, e, i, n) {
        this.parameterPositions = t,
            this._cachedIndex = 0,
            this.resultBuffer = void 0 !== n ? n : new e.constructor(i),
            this.sampleValues = e,
            this.valueSize = i
    }
    function Yi(t, e, i, n) {
        Xi.call(this, t, e, i, n),
            this._weightPrev = -0,
            this._offsetPrev = -0,
            this._weightNext = -0,
            this._offsetNext = -0
    }
    function qi(t, e, i, n) {
        Xi.call(this, t, e, i, n)
    }
    function Zi(t, e, i, n) {
        Xi.call(this, t, e, i, n)
    }
    function Ki(t, e, i, n) {
        if (void 0 === t)
            throw new Error("track name is undefined");
        if (void 0 === e || 0 === e.length)
            throw new Error("no keyframes in track named " + t);
        this.name = t,
            this.times = Ws.convertArray(e, this.TimeBufferType),
            this.values = Ws.convertArray(i, this.ValueBufferType),
            this.setInterpolation(n || this.DefaultInterpolation),
            this.validate(),
            this.optimize()
    }
    function Qi(t, e, i, n) {
        Ki.call(this, t, e, i, n)
    }
    function Ji(t, e, i, n) {
        Xi.call(this, t, e, i, n)
    }
    function $i(t, e, i, n) {
        Ki.call(this, t, e, i, n)
    }
    function tn(t, e, i, n) {
        Ki.call(this, t, e, i, n)
    }
    function en(t, e, i, n) {
        Ki.call(this, t, e, i, n)
    }
    function nn(t, e, i) {
        Ki.call(this, t, e, i)
    }
    function rn(t, e, i, n) {
        Ki.call(this, t, e, i, n)
    }
    function an(t, e, i, n) {
        Ki.apply(this, arguments)
    }
    function on(t, e, i) {
        this.name = t,
            this.tracks = i,
            this.duration = void 0 !== e ? e : -1,
            this.uuid = bs.generateUUID(),
            this.duration < 0 && this.resetDuration(),
            this.optimize()
    }
    function sn(t) {
        this.manager = void 0 !== t ? t : Hs,
            this.textures = {}
    }
    function hn(t) {
        this.manager = void 0 !== t ? t : Hs
    }
    function ln() {
        this.onLoadStart = function () { }
            ,
            this.onLoadProgress = function () { }
            ,
            this.onLoadComplete = function () { }
    }
    function cn(t) {
        "boolean" == typeof t && (t = void 0),
            this.manager = void 0 !== t ? t : Hs,
            this.withCredentials = !1
    }
    function un(t) {
        this.manager = void 0 !== t ? t : Hs,
            this.texturePath = ""
    }
    function pn(t, e, i, n, r) {
        var a = .5 * (n - e)
            , o = .5 * (r - i)
            , s = t * t;
        return (2 * i - 2 * n + a + o) * (t * s) + (-3 * i + 3 * n - 2 * a - o) * s + a * t + i
    }
    function dn(t, e) {
        var i = 1 - t;
        return i * i * e
    }
    function fn(t, e) {
        return 2 * (1 - t) * t * e
    }
    function mn(t, e) {
        return t * t * e
    }
    function gn(t, e, i, n) {
        return dn(t, e) + fn(t, i) + mn(t, n)
    }
    function vn(t, e) {
        var i = 1 - t;
        return i * i * i * e
    }
    function yn(t, e) {
        var i = 1 - t;
        return 3 * i * i * t * e
    }
    function _n(t, e) {
        return 3 * (1 - t) * t * t * e
    }
    function xn(t, e) {
        return t * t * t * e
    }
    function wn(t, e, i, n, r) {
        return vn(t, e) + yn(t, i) + _n(t, n) + xn(t, r)
    }
    function bn() {
        this.arcLengthDivisions = 200
    }
    function Mn(t, e) {
        bn.call(this),
            this.v1 = t,
            this.v2 = e
    }
    function Tn() {
        bn.call(this),
            this.curves = [],
            this.autoClose = !1
    }
    function Pn(t, e, i, n, r, a, o, s) {
        bn.call(this),
            this.aX = t,
            this.aY = e,
            this.xRadius = i,
            this.yRadius = n,
            this.aStartAngle = r,
            this.aEndAngle = a,
            this.aClockwise = o,
            this.aRotation = s || 0
    }
    function Sn(t) {
        bn.call(this),
            this.points = void 0 === t ? [] : t
    }
    function An(t, e, i, n) {
        bn.call(this),
            this.v0 = t,
            this.v1 = e,
            this.v2 = i,
            this.v3 = n
    }
    function En(t, e, i) {
        bn.call(this),
            this.v0 = t,
            this.v1 = e,
            this.v2 = i
    }
    function Ln(t) {
        Tn.call(this),
            this.currentPoint = new r,
            t && this.fromPoints(t)
    }
    function Cn() {
        Ln.apply(this, arguments),
            this.holes = []
    }
    function On() {
        this.subPaths = [],
            this.currentPath = null
    }
    function Rn(t) {
        this.data = t
    }
    function In(t) {
        this.manager = void 0 !== t ? t : Hs
    }
    function kn(t) {
        this.manager = void 0 !== t ? t : Hs
    }
    function zn() {
        this.type = "StereoCamera",
            this.aspect = 1,
            this.eyeSep = .064,
            this.cameraL = new Ft,
            this.cameraL.layers.enable(1),
            this.cameraL.matrixAutoUpdate = !1,
            this.cameraR = new Ft,
            this.cameraR.layers.enable(2),
            this.cameraR.matrixAutoUpdate = !1
    }
    function Fn(t, e, i) {
        ct.call(this),
            this.type = "CubeCamera";
        var n = new Ft(90, 1, t, e);
        n.up.set(0, -1, 0),
            n.lookAt(new c(1, 0, 0)),
            this.add(n);
        var r = new Ft(90, 1, t, e);
        r.up.set(0, -1, 0),
            r.lookAt(new c(-1, 0, 0)),
            this.add(r);
        var a = new Ft(90, 1, t, e);
        a.up.set(0, 0, 1),
            a.lookAt(new c(0, 1, 0)),
            this.add(a);
        var o = new Ft(90, 1, t, e);
        o.up.set(0, 0, -1),
            o.lookAt(new c(0, -1, 0)),
            this.add(o);
        var s = new Ft(90, 1, t, e);
        s.up.set(0, -1, 0),
            s.lookAt(new c(0, 0, 1)),
            this.add(s);
        var l = new Ft(90, 1, t, e);
        l.up.set(0, -1, 0),
            l.lookAt(new c(0, 0, -1)),
            this.add(l);
        var u = {
            format: No,
            magFilter: bo,
            minFilter: bo
        };
        this.renderTarget = new h(i, i, u),
            this.renderTarget.texture.name = "CubeCamera",
            this.updateCubeMap = function (t, e) {
                null === this.parent && this.updateMatrixWorld();
                var i = this.renderTarget
                    , h = i.texture.generateMipmaps;
                i.texture.generateMipmaps = !1,
                    i.activeCubeFace = 0,
                    t.render(e, n, i),
                    i.activeCubeFace = 1,
                    t.render(e, r, i),
                    i.activeCubeFace = 2,
                    t.render(e, a, i),
                    i.activeCubeFace = 3,
                    t.render(e, o, i),
                    i.activeCubeFace = 4,
                    t.render(e, s, i),
                    i.texture.generateMipmaps = h,
                    i.activeCubeFace = 5,
                    t.render(e, l, i),
                    t.setRenderTarget(null)
            }
    }
    function Dn(t) {
        Ft.call(this),
            this.enabled = !1,
            this.cameras = t || []
    }
    function Nn() {
        ct.call(this),
            this.type = "AudioListener",
            this.context = $s.getContext(),
            this.gain = this.context.createGain(),
            this.gain.connect(this.context.destination),
            this.filter = null
    }
    function Bn(t) {
        ct.call(this),
            this.type = "Audio",
            this.context = t.context,
            this.gain = this.context.createGain(),
            this.gain.connect(t.getInput()),
            this.autoplay = !1,
            this.buffer = null,
            this.loop = !1,
            this.startTime = 0,
            this.playbackRate = 1,
            this.isPlaying = !1,
            this.hasPlaybackControl = !0,
            this.sourceType = "empty",
            this.filters = []
    }
    function Un(t) {
        Bn.call(this, t),
            this.panner = this.context.createPanner(),
            this.panner.connect(this.gain)
    }
    function jn(t, e) {
        this.analyser = t.context.createAnalyser(),
            this.analyser.fftSize = void 0 !== e ? e : 2048,
            this.data = new Uint8Array(this.analyser.frequencyBinCount),
            t.getOutput().connect(this.analyser)
    }
    function Gn(t, e, i) {
        this.binding = t,
            this.valueSize = i;
        var n, r = Float64Array;
        switch (e) {
            case "quaternion":
                n = this._slerp;
                break;
            case "string":
            case "bool":
                r = Array,
                    n = this._select;
                break;
            default:
                n = this._lerp
        }
        this.buffer = new r(4 * i),
            this._mixBufferRegion = n,
            this.cumulativeWeight = 0,
            this.useCount = 0,
            this.referenceCount = 0
    }
    function Vn(t, e, i) {
        var n = i || Hn.parseTrackName(e);
        this._targetGroup = t,
            this._bindings = t.subscribe_(e, n)
    }
    function Hn(t, e, i) {
        this.path = e,
            this.parsedPath = i || Hn.parseTrackName(e),
            this.node = Hn.findNode(t, this.parsedPath.nodeName) || t,
            this.rootNode = t
    }
    function Wn(t) {
        this.uuid = bs.generateUUID(),
            this._objects = Array.prototype.slice.call(arguments),
            this.nCachedObjects_ = 0;
        var e = {};
        this._indicesByUUID = e;
        for (var i = 0, n = arguments.length; i !== n; ++i)
            e[arguments[i].uuid] = i;
        this._paths = [],
            this._parsedPaths = [],
            this._bindings = [],
            this._bindingsIndicesByPath = {};
        var r = this;
        this.stats = {
            objects: {
                get total() {
                    return r._objects.length
                },
                get inUse() {
                    return this.total - r.nCachedObjects_
                }
            },
            get bindingsPerObject() {
                return r._bindings.length
            }
        }
    }
    function Xn(t, e, i) {
        this._mixer = t,
            this._clip = e,
            this._localRoot = i || null;
        for (var n = e.tracks, r = n.length, a = new Array(r), o = {
            endingStart: os,
            endingEnd: os
        }, s = 0; s !== r; ++s) {
            var h = n[s].createInterpolant(null);
            a[s] = h,
                h.settings = o
        }
        this._interpolantSettings = o,
            this._interpolants = a,
            this._propertyBindings = new Array(r),
            this._cacheIndex = null,
            this._byClipCacheIndex = null,
            this._timeScaleInterpolant = null,
            this._weightInterpolant = null,
            this.loop = es,
            this._loopCount = -1,
            this._startTime = null,
            this.time = 0,
            this.timeScale = 1,
            this._effectiveTimeScale = 1,
            this.weight = 1,
            this._effectiveWeight = 1,
            this.repetitions = 1 / 0,
            this.paused = !1,
            this.enabled = !0,
            this.clampWhenFinished = !1,
            this.zeroSlopeAtStart = !0,
            this.zeroSlopeAtEnd = !0
    }
    function Yn(t) {
        this._root = t,
            this._initMemoryManager(),
            this._accuIndex = 0,
            this.time = 0,
            this.timeScale = 1
    }
    function qn(t) {
        "string" == typeof t && (t = arguments[1]),
            this.value = t
    }
    function Zn() {
        Lt.call(this),
            this.type = "InstancedBufferGeometry",
            this.maxInstancedCount = void 0
    }
    function Kn(t, e, i, n) {
        this.uuid = bs.generateUUID(),
            this.data = t,
            this.itemSize = e,
            this.offset = i,
            this.normalized = !0 === n
    }
    function Qn(t, e) {
        this.uuid = bs.generateUUID(),
            this.array = t,
            this.stride = e,
            this.count = void 0 !== t ? t.length / e : 0,
            this.dynamic = !1,
            this.updateRange = {
                offset: 0,
                count: -1
            },
            this.onUploadCallback = function () { }
            ,
            this.version = 0
    }
    function Jn(t, e, i) {
        Qn.call(this, t, e),
            this.meshPerAttribute = i || 1
    }
    function $n(t, e, i) {
        mt.call(this, t, e),
            this.meshPerAttribute = i || 1
    }
    function tr(t, e, i, n) {
        this.ray = new st(t, e),
            this.near = i || 0,
            this.far = n || 1 / 0,
            this.params = {
                Mesh: {},
                Line: {},
                LOD: {},
                Points: {
                    threshold: 1
                },
                Sprite: {}
            },
            Object.defineProperties(this.params, {
                PointCloud: {
                    get: function () {
                        return this.Points
                    }
                }
            })
    }
    function er(t, e) {
        return t.distance - e.distance
    }
    function ir(t, e, i, n) {
        if (!1 !== t.visible && (t.raycast(e, i),
            !0 === n))
            for (var r = t.children, a = 0, o = r.length; a < o; a++)
                ir(r[a], e, i, !0)
    }
    function nr(t) {
        this.autoStart = void 0 === t || t,
            this.startTime = 0,
            this.oldTime = 0,
            this.elapsedTime = 0,
            this.running = !1
    }
    function rr(t, e, i) {
        return this.radius = void 0 !== t ? t : 1,
            this.phi = void 0 !== e ? e : 0,
            this.theta = void 0 !== i ? i : 0,
            this
    }
    function ar(t, e, i) {
        return this.radius = void 0 !== t ? t : 1,
            this.theta = void 0 !== e ? e : 0,
            this.y = void 0 !== i ? i : 0,
            this
    }
    function or(t, e) {
        Ct.call(this, t, e),
            this.animationsMap = {},
            this.animationsList = [];
        var i = this.geometry.morphTargets.length
            , n = i - 1
            , r = i / 1;
        this.createAnimation("__default", 0, n, r),
            this.setAnimationWeight("__default", 1)
    }
    function sr(t) {
        ct.call(this),
            this.material = t,
            this.render = function (t) { }
    }
    function hr(t, e, i, n) {
        this.object = t,
            this.size = void 0 !== e ? e : 1;
        var r = void 0 !== i ? i : 16711680
            , a = void 0 !== n ? n : 1
            , o = 0
            , s = this.object.geometry;
        s && s.isGeometry ? o = 3 * s.faces.length : s && s.isBufferGeometry && (o = s.attributes.normal.count);
        var h = new Lt
            , l = new Mt(2 * o * 3, 3);
        h.addAttribute("position", l),
            Ae.call(this, h, new Pe({
                color: r,
                linewidth: a
            })),
            this.matrixAutoUpdate = !1,
            this.update()
    }
    function lr(t) {
        ct.call(this),
            this.light = t,
            this.light.updateMatrixWorld(),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1;
        for (var e = new Lt, i = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], n = 0, r = 1; n < 32; n++,
            r++) {
            var a = n / 32 * Math.PI * 2
                , o = r / 32 * Math.PI * 2;
            i.push(Math.cos(a), Math.sin(a), 1, Math.cos(o), Math.sin(o), 1)
        }
        e.addAttribute("position", new Mt(i, 3));
        var s = new Pe({
            fog: !1
        });
        this.cone = new Ae(e, s),
            this.add(this.cone),
            this.update()
    }
    function cr(t) {
        this.bones = this.getBoneList(t);
        for (var e = new Lt, i = [], n = [], r = new q(0, 0, 1), a = new q(0, 1, 0), o = 0; o < this.bones.length; o++) {
            var s = this.bones[o];
            s.parent && s.parent.isBone && (i.push(0, 0, 0),
                i.push(0, 0, 0),
                n.push(r.r, r.g, r.b),
                n.push(a.r, a.g, a.b))
        }
        e.addAttribute("position", new Mt(i, 3)),
            e.addAttribute("color", new Mt(n, 3));
        var h = new Pe({
            vertexColors: ba,
            depthTest: !1,
            depthWrite: !1,
            transparent: !0
        });
        Ae.call(this, e, h),
            this.root = t,
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1,
            this.update()
    }
    function ur(t, e) {
        this.light = t,
            this.light.updateMatrixWorld();
        var i = new oi(e, 4, 2)
            , n = new ft({
                wireframe: !0,
                fog: !1
            });
        n.color.copy(this.light.color),
            Ct.call(this, i, n),
            this.matrix = this.light.matrixWorld,
            this.matrixAutoUpdate = !1
    }
    function pr(t) {
        ct.call(this),
            this.light = t,
            this.light.updateMatrixWorld(),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1;
        var e = new Pe({
            color: t.color
        })
            , i = new Lt;
        i.addAttribute("position", new mt(new Float32Array(15), 3)),
            this.add(new Se(i, e)),
            this.update()
    }
    function dr(t, e) {
        ct.call(this),
            this.light = t,
            this.light.updateMatrixWorld(),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1;
        var i = new He(e);
        i.rotateY(.5 * Math.PI);
        var n = new ft({
            vertexColors: ba,
            wireframe: !0
        })
            , r = i.getAttribute("position")
            , a = new Float32Array(3 * r.count);
        i.addAttribute("color", new mt(a, 3)),
            this.add(new Ct(i, n)),
            this.update()
    }
    function fr(t, e, i, n) {
        t = t || 10,
            e = e || 10,
            i = new q(void 0 !== i ? i : 4473924),
            n = new q(void 0 !== n ? n : 8947848);
        for (var r = e / 2, a = t / e, o = t / 2, s = [], h = [], l = 0, c = 0, u = -o; l <= e; l++,
            u += a) {
            s.push(-o, 0, u, o, 0, u),
                s.push(u, 0, -o, u, 0, o);
            var p = l === r ? i : n;
            p.toArray(h, c),
                c += 3,
                p.toArray(h, c),
                c += 3,
                p.toArray(h, c),
                c += 3,
                p.toArray(h, c),
                c += 3
        }
        var d = new Lt;
        d.addAttribute("position", new Mt(s, 3)),
            d.addAttribute("color", new Mt(h, 3));
        var f = new Pe({
            vertexColors: ba
        });
        Ae.call(this, d, f)
    }
    function mr(t, e, i, n, r, a) {
        t = t || 10,
            e = e || 16,
            i = i || 8,
            n = n || 64,
            r = new q(void 0 !== r ? r : 4473924),
            a = new q(void 0 !== a ? a : 8947848);
        var o, s, h, l, c, u, p, d = [], f = [];
        for (l = 0; l <= e; l++)
            h = l / e * (2 * Math.PI),
                o = Math.sin(h) * t,
                s = Math.cos(h) * t,
                d.push(0, 0, 0),
                d.push(o, 0, s),
                p = 1 & l ? r : a,
                f.push(p.r, p.g, p.b),
                f.push(p.r, p.g, p.b);
        for (l = 0; l <= i; l++)
            for (p = 1 & l ? r : a,
                u = t - t / i * l,
                c = 0; c < n; c++)
                h = c / n * (2 * Math.PI),
                    o = Math.sin(h) * u,
                    s = Math.cos(h) * u,
                    d.push(o, 0, s),
                    f.push(p.r, p.g, p.b),
                    h = (c + 1) / n * (2 * Math.PI),
                    o = Math.sin(h) * u,
                    s = Math.cos(h) * u,
                    d.push(o, 0, s),
                    f.push(p.r, p.g, p.b);
        var m = new Lt;
        m.addAttribute("position", new Mt(d, 3)),
            m.addAttribute("color", new Mt(f, 3));
        var g = new Pe({
            vertexColors: ba
        });
        Ae.call(this, m, g)
    }
    function gr(t, e, i, n) {
        this.object = t,
            this.size = void 0 !== e ? e : 1;
        var r = void 0 !== i ? i : 16776960
            , a = void 0 !== n ? n : 1
            , o = 0
            , s = this.object.geometry;
        s && s.isGeometry && (o = s.faces.length);
        var h = new Lt
            , l = new Mt(2 * o * 3, 3);
        h.addAttribute("position", l),
            Ae.call(this, h, new Pe({
                color: r,
                linewidth: a
            })),
            this.matrixAutoUpdate = !1,
            this.update()
    }
    function vr(t, e) {
        ct.call(this),
            this.light = t,
            this.light.updateMatrixWorld(),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1,
            void 0 === e && (e = 1);
        var i = new Lt;
        i.addAttribute("position", new Mt([-e, e, 0, e, e, 0, e, -e, 0, -e, -e, 0, -e, e, 0], 3));
        var n = new Pe({
            fog: !1
        });
        this.add(new Se(i, n)),
            i = new Lt,
            i.addAttribute("position", new Mt([0, 0, 0, 0, 0, 1], 3)),
            this.add(new Se(i, n)),
            this.update()
    }
    function yr(t) {
        function e(t, e, n) {
            i(t, n),
                i(e, n)
        }
        function i(t, e) {
            a.push(0, 0, 0),
                o.push(e.r, e.g, e.b),
                void 0 === s[t] && (s[t] = []),
                s[t].push(a.length / 3 - 1)
        }
        var n = new Lt
            , r = new Pe({
                color: 16777215,
                vertexColors: wa
            })
            , a = []
            , o = []
            , s = {}
            , h = new q(16755200)
            , l = new q(16711680)
            , c = new q(43775)
            , u = new q(16777215)
            , p = new q(3355443);
        e("n1", "n2", h),
            e("n2", "n4", h),
            e("n4", "n3", h),
            e("n3", "n1", h),
            e("f1", "f2", h),
            e("f2", "f4", h),
            e("f4", "f3", h),
            e("f3", "f1", h),
            e("n1", "f1", h),
            e("n2", "f2", h),
            e("n3", "f3", h),
            e("n4", "f4", h),
            e("p", "n1", l),
            e("p", "n2", l),
            e("p", "n3", l),
            e("p", "n4", l),
            e("u1", "u2", c),
            e("u2", "u3", c),
            e("u3", "u1", c),
            e("c", "t", u),
            e("p", "c", p),
            e("cn1", "cn2", p),
            e("cn3", "cn4", p),
            e("cf1", "cf2", p),
            e("cf3", "cf4", p),
            n.addAttribute("position", new Mt(a, 3)),
            n.addAttribute("color", new Mt(o, 3)),
            Ae.call(this, n, r),
            this.camera = t,
            this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
            this.matrix = t.matrixWorld,
            this.matrixAutoUpdate = !1,
            this.pointMap = s,
            this.update()
    }
    function _r(t, e) {
        this.object = t,
            void 0 === e && (e = 16776960);
        var i = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
            , n = new Float32Array(24)
            , r = new Lt;
        r.setIndex(new mt(i, 1)),
            r.addAttribute("position", new mt(n, 3)),
            Ae.call(this, r, new Pe({
                color: e
            })),
            this.matrixAutoUpdate = !1,
            this.update()
    }
    function xr(t, e, i, n, r, a) {
        ct.call(this),
            void 0 === n && (n = 16776960),
            void 0 === i && (i = 1),
            void 0 === r && (r = .2 * i),
            void 0 === a && (a = .2 * r),
            void 0 === th && (th = new Lt,
                th.addAttribute("position", new Mt([0, 0, 0, 0, 1, 0], 3)),
                eh = new mi(0, .5, 1, 5, 1),
                eh.translate(0, -.5, 0)),
            this.position.copy(e),
            this.line = new Se(th, new Pe({
                color: n
            })),
            this.line.matrixAutoUpdate = !1,
            this.add(this.line),
            this.cone = new Ct(eh, new ft({
                color: n
            })),
            this.cone.matrixAutoUpdate = !1,
            this.add(this.cone),
            this.setDirection(t),
            this.setLength(i, r, a)
    }
    function wr(t) {
        t = t || 1;
        var e = [0, 0, 0, t, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t]
            , i = [1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1]
            , n = new Lt;
        n.addAttribute("position", new Mt(e, 3)),
            n.addAttribute("color", new Mt(i, 3));
        var r = new Pe({
            vertexColors: ba
        });
        Ae.call(this, n, r)
    }
    function br() {
        function t(t, a, o, s) {
            e = t,
                i = o,
                n = -3 * t + 3 * a - 2 * o - s,
                r = 2 * t - 2 * a + o + s
        }
        var e = 0
            , i = 0
            , n = 0
            , r = 0;
        return {
            initCatmullRom: function (e, i, n, r, a) {
                t(i, n, a * (n - e), a * (r - i))
            },
            initNonuniformCatmullRom: function (e, i, n, r, a, o, s) {
                var h = (i - e) / a - (n - e) / (a + o) + (n - i) / o
                    , l = (n - i) / o - (r - i) / (o + s) + (r - n) / s;
                h *= o,
                    l *= o,
                    t(i, n, h, l)
            },
            calc: function (t) {
                var a = t * t;
                return e + i * t + n * a + r * (a * t)
            }
        }
    }
    function Mr(t) {
        bn.call(this),
            this.points = t || [],
            this.closed = !1
    }
    function Tr(t, e, i, n) {
        bn.call(this),
            this.v0 = t,
            this.v1 = e,
            this.v2 = i,
            this.v3 = n
    }
    function Pr(t, e, i) {
        bn.call(this),
            this.v0 = t,
            this.v1 = e,
            this.v2 = i
    }
    function Sr(t, e) {
        bn.call(this),
            this.v1 = t,
            this.v2 = e
    }
    function Ar(t, e, i, n, r, a) {
        Pn.call(this, t, e, i, i, n, r, a)
    }
    function Er(t, e, i, n, r, a, o) {
        return new dt(t, e, i, r, a, o)
    }
    function Lr(t) {
        return t
    }
    function Cr(t) {
        return void 0 === t && (t = []),
            t.isMultiMaterial = !0,
            t.materials = t,
            t.clone = function () {
                return t.slice()
            }
            ,
            t
    }
    function Or(t, e) {
        return new Ce(t, e)
    }
    function Rr(t) {
        return new xe(t)
    }
    function Ir(t, e) {
        return new Ce(t, e)
    }
    function kr(t) {
        return new Le(t)
    }
    function zr(t) {
        return new Le(t)
    }
    function Fr(t) {
        return new Le(t)
    }
    function Dr(t, e, i) {
        return new c(t, e, i)
    }
    function Nr(t, e) {
        return new mt(t, e).setDynamic(!0)
    }
    function Br(t, e) {
        return new gt(t, e)
    }
    function Ur(t, e) {
        return new vt(t, e)
    }
    function jr(t, e) {
        return new yt(t, e)
    }
    function Gr(t, e) {
        return new _t(t, e)
    }
    function Vr(t, e) {
        return new xt(t, e)
    }
    function Hr(t, e) {
        return new wt(t, e)
    }
    function Wr(t, e) {
        return new bt(t, e)
    }
    function Xr(t, e) {
        return new Mt(t, e)
    }
    function Yr(t, e) {
        return new Tt(t, e)
    }
    function qr(t) {
        Mr.call(this, t),
            this.type = "catmullrom",
            this.closed = !0
    }
    function Zr(t) {
        Mr.call(this, t),
            this.type = "catmullrom"
    }
    function Kr(t) {
        Mr.call(this, t),
            this.type = "catmullrom"
    }
    function Qr(t, e) {
        return new _r(t, e)
    }
    function Jr(t, e) {
        return new Ae(new di(t.geometry), new Pe({
            color: void 0 !== e ? e : 16777215
        }))
    }
    function $r(t, e) {
        return new Ae(new Fe(t.geometry), new Pe({
            color: void 0 !== e ? e : 16777215
        }))
    }
    function ta(t) {
        return new Ci(t)
    }
    function ea(t) {
        return new Ri(t)
    }
    function ia() {
        this.projectVector = function (t, e) {
            t.project(e)
        }
            ,
            this.unprojectVector = function (t, e) {
                t.unproject(e)
            }
            ,
            this.pickingRay = function () { }
    }
    function na() {
        this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
            this.clear = function () { }
            ,
            this.render = function () { }
            ,
            this.setClearColor = function () { }
            ,
            this.setSize = function () { }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    }),
        i.d(e, "WebGLRenderTargetCube", function () {
            return h
        }),
        i.d(e, "WebGLRenderTarget", function () {
            return s
        }),
        i.d(e, "WebGLRenderer", function () {
            return fe
        }),
        i.d(e, "ShaderLib", function () {
            return zs
        }),
        i.d(e, "UniformsLib", function () {
            return Rs
        }),
        i.d(e, "UniformsUtils", function () {
            return Is
        }),
        i.d(e, "ShaderChunk", function () {
            return ks
        }),
        i.d(e, "FogExp2", function () {
            return me
        }),
        i.d(e, "Fog", function () {
            return ge
        }),
        i.d(e, "Scene", function () {
            return ve
        }),
        i.d(e, "LensFlare", function () {
            return ye
        }),
        i.d(e, "Sprite", function () {
            return xe
        }),
        i.d(e, "LOD", function () {
            return we
        }),
        i.d(e, "SkinnedMesh", function () {
            return Te
        }),
        i.d(e, "Skeleton", function () {
            return be
        }),
        i.d(e, "Bone", function () {
            return Me
        }),
        i.d(e, "Mesh", function () {
            return Ct
        }),
        i.d(e, "LineSegments", function () {
            return Ae
        }),
        i.d(e, "LineLoop", function () {
            return Ee
        }),
        i.d(e, "Line", function () {
            return Se
        }),
        i.d(e, "Points", function () {
            return Ce
        }),
        i.d(e, "Group", function () {
            return Oe
        }),
        i.d(e, "VideoTexture", function () {
            return Re
        }),
        i.d(e, "DataTexture", function () {
            return p
        }),
        i.d(e, "CompressedTexture", function () {
            return Ie
        }),
        i.d(e, "CubeTexture", function () {
            return d
        }),
        i.d(e, "CanvasTexture", function () {
            return ke
        }),
        i.d(e, "DepthTexture", function () {
            return ze
        }),
        i.d(e, "Texture", function () {
            return a
        }),
        i.d(e, "CompressedTextureLoader", function () {
            return Oi
        }),
        i.d(e, "DataTextureLoader", function () {
            return Ri
        }),
        i.d(e, "CubeTextureLoader", function () {
            return ki
        }),
        i.d(e, "TextureLoader", function () {
            return zi
        }),
        i.d(e, "ObjectLoader", function () {
            return un
        }),
        i.d(e, "MaterialLoader", function () {
            return sn
        }),
        i.d(e, "BufferGeometryLoader", function () {
            return hn
        }),
        i.d(e, "DefaultLoadingManager", function () {
            return Hs
        }),
        i.d(e, "LoadingManager", function () {
            return Li
        }),
        i.d(e, "JSONLoader", function () {
            return cn
        }),
        i.d(e, "ImageLoader", function () {
            return Ii
        }),
        i.d(e, "FontLoader", function () {
            return In
        }),
        i.d(e, "FileLoader", function () {
            return Ci
        }),
        i.d(e, "Loader", function () {
            return ln
        }),
        i.d(e, "Cache", function () {
            return Vs
        }),
        i.d(e, "AudioLoader", function () {
            return kn
        }),
        i.d(e, "SpotLightShadow", function () {
            return Bi
        }),
        i.d(e, "SpotLight", function () {
            return Ui
        }),
        i.d(e, "PointLight", function () {
            return ji
        }),
        i.d(e, "RectAreaLight", function () {
            return Wi
        }),
        i.d(e, "HemisphereLight", function () {
            return Di
        }),
        i.d(e, "DirectionalLightShadow", function () {
            return Gi
        }),
        i.d(e, "DirectionalLight", function () {
            return Vi
        }),
        i.d(e, "AmbientLight", function () {
            return Hi
        }),
        i.d(e, "LightShadow", function () {
            return Ni
        }),
        i.d(e, "Light", function () {
            return Fi
        }),
        i.d(e, "StereoCamera", function () {
            return zn
        }),
        i.d(e, "PerspectiveCamera", function () {
            return Ft
        }),
        i.d(e, "OrthographicCamera", function () {
            return Dt
        }),
        i.d(e, "CubeCamera", function () {
            return Fn
        }),
        i.d(e, "ArrayCamera", function () {
            return Dn
        }),
        i.d(e, "Camera", function () {
            return zt
        }),
        i.d(e, "AudioListener", function () {
            return Nn
        }),
        i.d(e, "PositionalAudio", function () {
            return Un
        }),
        i.d(e, "AudioContext", function () {
            return $s
        }),
        i.d(e, "AudioAnalyser", function () {
            return jn
        }),
        i.d(e, "Audio", function () {
            return Bn
        }),
        i.d(e, "VectorKeyframeTrack", function () {
            return Qi
        }),
        i.d(e, "StringKeyframeTrack", function () {
            return en
        }),
        i.d(e, "QuaternionKeyframeTrack", function () {
            return $i
        }),
        i.d(e, "NumberKeyframeTrack", function () {
            return tn
        }),
        i.d(e, "ColorKeyframeTrack", function () {
            return rn
        }),
        i.d(e, "BooleanKeyframeTrack", function () {
            return nn
        }),
        i.d(e, "PropertyMixer", function () {
            return Gn
        }),
        i.d(e, "PropertyBinding", function () {
            return Hn
        }),
        i.d(e, "KeyframeTrack", function () {
            return an
        }),
        i.d(e, "AnimationUtils", function () {
            return Ws
        }),
        i.d(e, "AnimationObjectGroup", function () {
            return Wn
        }),
        i.d(e, "AnimationMixer", function () {
            return Yn
        }),
        i.d(e, "AnimationClip", function () {
            return on
        }),
        i.d(e, "Uniform", function () {
            return qn
        }),
        i.d(e, "InstancedBufferGeometry", function () {
            return Zn
        }),
        i.d(e, "BufferGeometry", function () {
            return Lt
        }),
        i.d(e, "GeometryIdCount", function () {
            return At
        }),
        i.d(e, "Geometry", function () {
            return Et
        }),
        i.d(e, "InterleavedBufferAttribute", function () {
            return Kn
        }),
        i.d(e, "InstancedInterleavedBuffer", function () {
            return Jn
        }),
        i.d(e, "InterleavedBuffer", function () {
            return Qn
        }),
        i.d(e, "InstancedBufferAttribute", function () {
            return $n
        }),
        i.d(e, "Face3", function () {
            return dt
        }),
        i.d(e, "Object3D", function () {
            return ct
        }),
        i.d(e, "Raycaster", function () {
            return tr
        }),
        i.d(e, "Layers", function () {
            return lt
        }),
        i.d(e, "EventDispatcher", function () {
            return n
        }),
        i.d(e, "Clock", function () {
            return nr
        }),
        i.d(e, "QuaternionLinearInterpolant", function () {
            return Ji
        }),
        i.d(e, "LinearInterpolant", function () {
            return qi
        }),
        i.d(e, "DiscreteInterpolant", function () {
            return Zi
        }),
        i.d(e, "CubicInterpolant", function () {
            return Yi
        }),
        i.d(e, "Interpolant", function () {
            return Xi
        }),
        i.d(e, "Triangle", function () {
            return pt
        }),
        i.d(e, "Math", function () {
            return bs
        }),
        i.d(e, "Spherical", function () {
            return rr
        }),
        i.d(e, "Cylindrical", function () {
            return ar
        }),
        i.d(e, "Plane", function () {
            return rt
        }),
        i.d(e, "Frustum", function () {
            return at
        }),
        i.d(e, "Sphere", function () {
            return it
        }),
        i.d(e, "Ray", function () {
            return st
        }),
        i.d(e, "Matrix4", function () {
            return u
        }),
        i.d(e, "Matrix3", function () {
            return nt
        }),
        i.d(e, "Box3", function () {
            return et
        }),
        i.d(e, "Box2", function () {
            return Z
        }),
        i.d(e, "Line3", function () {
            return ut
        }),
        i.d(e, "Euler", function () {
            return ht
        }),
        i.d(e, "Vector4", function () {
            return o
        }),
        i.d(e, "Vector3", function () {
            return c
        }),
        i.d(e, "Vector2", function () {
            return r
        }),
        i.d(e, "Quaternion", function () {
            return l
        }),
        i.d(e, "Color", function () {
            return q
        }),
        i.d(e, "MorphBlendMesh", function () {
            return or
        }),
        i.d(e, "ImmediateRenderObject", function () {
            return sr
        }),
        i.d(e, "VertexNormalsHelper", function () {
            return hr
        }),
        i.d(e, "SpotLightHelper", function () {
            return lr
        }),
        i.d(e, "SkeletonHelper", function () {
            return cr
        }),
        i.d(e, "PointLightHelper", function () {
            return ur
        }),
        i.d(e, "RectAreaLightHelper", function () {
            return pr
        }),
        i.d(e, "HemisphereLightHelper", function () {
            return dr
        }),
        i.d(e, "GridHelper", function () {
            return fr
        }),
        i.d(e, "PolarGridHelper", function () {
            return mr
        }),
        i.d(e, "FaceNormalsHelper", function () {
            return gr
        }),
        i.d(e, "DirectionalLightHelper", function () {
            return vr
        }),
        i.d(e, "CameraHelper", function () {
            return yr
        }),
        i.d(e, "BoxHelper", function () {
            return _r
        }),
        i.d(e, "ArrowHelper", function () {
            return xr
        }),
        i.d(e, "AxisHelper", function () {
            return wr
        }),
        i.d(e, "CatmullRomCurve3", function () {
            return Mr
        }),
        i.d(e, "CubicBezierCurve3", function () {
            return Tr
        }),
        i.d(e, "QuadraticBezierCurve3", function () {
            return Pr
        }),
        i.d(e, "LineCurve3", function () {
            return Sr
        }),
        i.d(e, "ArcCurve", function () {
            return Ar
        }),
        i.d(e, "EllipseCurve", function () {
            return Pn
        }),
        i.d(e, "SplineCurve", function () {
            return Sn
        }),
        i.d(e, "CubicBezierCurve", function () {
            return An
        }),
        i.d(e, "QuadraticBezierCurve", function () {
            return En
        }),
        i.d(e, "LineCurve", function () {
            return Mn
        }),
        i.d(e, "Shape", function () {
            return Cn
        }),
        i.d(e, "Path", function () {
            return Ln
        }),
        i.d(e, "ShapePath", function () {
            return On
        }),
        i.d(e, "Font", function () {
            return Rn
        }),
        i.d(e, "CurvePath", function () {
            return Tn
        }),
        i.d(e, "Curve", function () {
            return bn
        }),
        i.d(e, "ShapeUtils", function () {
            return Us
        }),
        i.d(e, "SceneUtils", function () {
            return oh
        }),
        i.d(e, "WireframeGeometry", function () {
            return Fe
        }),
        i.d(e, "ParametricGeometry", function () {
            return De
        }),
        i.d(e, "ParametricBufferGeometry", function () {
            return Ne
        }),
        i.d(e, "TetrahedronGeometry", function () {
            return je
        }),
        i.d(e, "TetrahedronBufferGeometry", function () {
            return Ge
        }),
        i.d(e, "OctahedronGeometry", function () {
            return Ve
        }),
        i.d(e, "OctahedronBufferGeometry", function () {
            return He
        }),
        i.d(e, "IcosahedronGeometry", function () {
            return We
        }),
        i.d(e, "IcosahedronBufferGeometry", function () {
            return Xe
        }),
        i.d(e, "DodecahedronGeometry", function () {
            return Ye
        }),
        i.d(e, "DodecahedronBufferGeometry", function () {
            return qe
        }),
        i.d(e, "PolyhedronGeometry", function () {
            return Be
        }),
        i.d(e, "PolyhedronBufferGeometry", function () {
            return Ue
        }),
        i.d(e, "TubeGeometry", function () {
            return Ze
        }),
        i.d(e, "TubeBufferGeometry", function () {
            return Ke
        }),
        i.d(e, "TorusKnotGeometry", function () {
            return Qe
        }),
        i.d(e, "TorusKnotBufferGeometry", function () {
            return Je
        }),
        i.d(e, "TorusGeometry", function () {
            return $e
        }),
        i.d(e, "TorusBufferGeometry", function () {
            return ti
        }),
        i.d(e, "TextGeometry", function () {
            return ni
        }),
        i.d(e, "TextBufferGeometry", function () {
            return ri
        }),
        i.d(e, "SphereGeometry", function () {
            return ai
        }),
        i.d(e, "SphereBufferGeometry", function () {
            return oi
        }),
        i.d(e, "RingGeometry", function () {
            return si
        }),
        i.d(e, "RingBufferGeometry", function () {
            return hi
        }),
        i.d(e, "PlaneGeometry", function () {
            return It
        }),
        i.d(e, "PlaneBufferGeometry", function () {
            return kt
        }),
        i.d(e, "LatheGeometry", function () {
            return li
        }),
        i.d(e, "LatheBufferGeometry", function () {
            return ci
        }),
        i.d(e, "ShapeGeometry", function () {
            return ui
        }),
        i.d(e, "ShapeBufferGeometry", function () {
            return pi
        }),
        i.d(e, "ExtrudeGeometry", function () {
            return ei
        }),
        i.d(e, "ExtrudeBufferGeometry", function () {
            return ii
        }),
        i.d(e, "EdgesGeometry", function () {
            return di
        }),
        i.d(e, "ConeGeometry", function () {
            return gi
        }),
        i.d(e, "ConeBufferGeometry", function () {
            return vi
        }),
        i.d(e, "CylinderGeometry", function () {
            return fi
        }),
        i.d(e, "CylinderBufferGeometry", function () {
            return mi
        }),
        i.d(e, "CircleGeometry", function () {
            return yi
        }),
        i.d(e, "CircleBufferGeometry", function () {
            return _i
        }),
        i.d(e, "BoxGeometry", function () {
            return Ot
        }),
        i.d(e, "BoxBufferGeometry", function () {
            return Rt
        }),
        i.d(e, "ShadowMaterial", function () {
            return xi
        }),
        i.d(e, "SpriteMaterial", function () {
            return _e
        }),
        i.d(e, "RawShaderMaterial", function () {
            return wi
        }),
        i.d(e, "ShaderMaterial", function () {
            return $
        }),
        i.d(e, "PointsMaterial", function () {
            return Le
        });
    i.d(e, "MeshPhysicalMaterial", function () {
        return Mi
    }),
        i.d(e, "MeshStandardMaterial", function () {
            return bi
        }),
        i.d(e, "MeshPhongMaterial", function () {
            return Ti
        }),
        i.d(e, "MeshToonMaterial", function () {
            return Pi
        }),
        i.d(e, "MeshNormalMaterial", function () {
            return Si
        }),
        i.d(e, "MeshLambertMaterial", function () {
            return Ai
        }),
        i.d(e, "MeshDepthMaterial", function () {
            return tt
        }),
        i.d(e, "MeshBasicMaterial", function () {
            return ft
        }),
        i.d(e, "LineDashedMaterial", function () {
            return Ei
        }),
        i.d(e, "LineBasicMaterial", function () {
            return Pe
        }),
        i.d(e, "Material", function () {
            return J
        }),
        i.d(e, "Float64BufferAttribute", function () {
            return Tt
        }),
        i.d(e, "Float32BufferAttribute", function () {
            return Mt
        }),
        i.d(e, "Uint32BufferAttribute", function () {
            return bt
        }),
        i.d(e, "Int32BufferAttribute", function () {
            return wt
        }),
        i.d(e, "Uint16BufferAttribute", function () {
            return xt
        }),
        i.d(e, "Int16BufferAttribute", function () {
            return _t
        }),
        i.d(e, "Uint8ClampedBufferAttribute", function () {
            return yt
        }),
        i.d(e, "Uint8BufferAttribute", function () {
            return vt
        }),
        i.d(e, "Int8BufferAttribute", function () {
            return gt
        }),
        i.d(e, "BufferAttribute", function () {
            return mt
        }),
        i.d(e, "REVISION", function () {
            return ra
        }),
        i.d(e, "MOUSE", function () {
            return aa
        }),
        i.d(e, "CullFaceNone", function () {
            return oa
        }),
        i.d(e, "CullFaceBack", function () {
            return sa
        }),
        i.d(e, "CullFaceFront", function () {
            return ha
        }),
        i.d(e, "CullFaceFrontBack", function () {
            return la
        }),
        i.d(e, "FrontFaceDirectionCW", function () {
            return ca
        }),
        i.d(e, "FrontFaceDirectionCCW", function () {
            return ua
        }),
        i.d(e, "BasicShadowMap", function () {
            return pa
        }),
        i.d(e, "PCFShadowMap", function () {
            return da
        }),
        i.d(e, "PCFSoftShadowMap", function () {
            return fa
        }),
        i.d(e, "FrontSide", function () {
            return ma
        }),
        i.d(e, "BackSide", function () {
            return ga
        }),
        i.d(e, "DoubleSide", function () {
            return va
        }),
        i.d(e, "FlatShading", function () {
            return ya
        }),
        i.d(e, "SmoothShading", function () {
            return _a
        }),
        i.d(e, "NoColors", function () {
            return xa
        }),
        i.d(e, "FaceColors", function () {
            return wa
        }),
        i.d(e, "VertexColors", function () {
            return ba
        }),
        i.d(e, "NoBlending", function () {
            return Ma
        }),
        i.d(e, "NormalBlending", function () {
            return Ta
        }),
        i.d(e, "AdditiveBlending", function () {
            return Pa
        }),
        i.d(e, "SubtractiveBlending", function () {
            return Sa
        }),
        i.d(e, "MultiplyBlending", function () {
            return Aa
        }),
        i.d(e, "CustomBlending", function () {
            return Ea
        }),
        i.d(e, "AddEquation", function () {
            return La
        }),
        i.d(e, "SubtractEquation", function () {
            return Ca
        }),
        i.d(e, "ReverseSubtractEquation", function () {
            return Oa
        }),
        i.d(e, "MinEquation", function () {
            return Ra
        }),
        i.d(e, "MaxEquation", function () {
            return Ia
        }),
        i.d(e, "ZeroFactor", function () {
            return ka
        }),
        i.d(e, "OneFactor", function () {
            return za
        }),
        i.d(e, "SrcColorFactor", function () {
            return Fa
        }),
        i.d(e, "OneMinusSrcColorFactor", function () {
            return Da
        }),
        i.d(e, "SrcAlphaFactor", function () {
            return Na
        }),
        i.d(e, "OneMinusSrcAlphaFactor", function () {
            return Ba
        }),
        i.d(e, "DstAlphaFactor", function () {
            return Ua
        }),
        i.d(e, "OneMinusDstAlphaFactor", function () {
            return ja
        }),
        i.d(e, "DstColorFactor", function () {
            return Ga
        }),
        i.d(e, "OneMinusDstColorFactor", function () {
            return Va
        }),
        i.d(e, "SrcAlphaSaturateFactor", function () {
            return Ha
        }),
        i.d(e, "NeverDepth", function () {
            return Wa
        }),
        i.d(e, "AlwaysDepth", function () {
            return Xa
        }),
        i.d(e, "LessDepth", function () {
            return Ya
        }),
        i.d(e, "LessEqualDepth", function () {
            return qa
        }),
        i.d(e, "EqualDepth", function () {
            return Za
        }),
        i.d(e, "GreaterEqualDepth", function () {
            return Ka
        }),
        i.d(e, "GreaterDepth", function () {
            return Qa
        }),
        i.d(e, "NotEqualDepth", function () {
            return Ja
        }),
        i.d(e, "MultiplyOperation", function () {
            return $a
        }),
        i.d(e, "MixOperation", function () {
            return to
        }),
        i.d(e, "AddOperation", function () {
            return eo
        }),
        i.d(e, "NoToneMapping", function () {
            return io
        }),
        i.d(e, "LinearToneMapping", function () {
            return no
        }),
        i.d(e, "ReinhardToneMapping", function () {
            return ro
        }),
        i.d(e, "Uncharted2ToneMapping", function () {
            return ao
        }),
        i.d(e, "CineonToneMapping", function () {
            return oo
        }),
        i.d(e, "UVMapping", function () {
            return so
        }),
        i.d(e, "CubeReflectionMapping", function () {
            return ho
        }),
        i.d(e, "CubeRefractionMapping", function () {
            return lo
        }),
        i.d(e, "EquirectangularReflectionMapping", function () {
            return co
        }),
        i.d(e, "EquirectangularRefractionMapping", function () {
            return uo
        }),
        i.d(e, "SphericalReflectionMapping", function () {
            return po
        }),
        i.d(e, "CubeUVReflectionMapping", function () {
            return fo
        }),
        i.d(e, "CubeUVRefractionMapping", function () {
            return mo
        }),
        i.d(e, "RepeatWrapping", function () {
            return go
        }),
        i.d(e, "ClampToEdgeWrapping", function () {
            return vo
        }),
        i.d(e, "MirroredRepeatWrapping", function () {
            return yo
        }),
        i.d(e, "NearestFilter", function () {
            return _o
        }),
        i.d(e, "NearestMipMapNearestFilter", function () {
            return xo
        }),
        i.d(e, "NearestMipMapLinearFilter", function () {
            return wo
        }),
        i.d(e, "LinearFilter", function () {
            return bo
        }),
        i.d(e, "LinearMipMapNearestFilter", function () {
            return Mo
        }),
        i.d(e, "LinearMipMapLinearFilter", function () {
            return To
        }),
        i.d(e, "UnsignedByteType", function () {
            return Po
        }),
        i.d(e, "ByteType", function () {
            return So
        }),
        i.d(e, "ShortType", function () {
            return Ao
        }),
        i.d(e, "UnsignedShortType", function () {
            return Eo
        }),
        i.d(e, "IntType", function () {
            return Lo
        }),
        i.d(e, "UnsignedIntType", function () {
            return Co
        }),
        i.d(e, "FloatType", function () {
            return Oo
        }),
        i.d(e, "HalfFloatType", function () {
            return Ro
        }),
        i.d(e, "UnsignedShort4444Type", function () {
            return Io
        }),
        i.d(e, "UnsignedShort5551Type", function () {
            return ko
        }),
        i.d(e, "UnsignedShort565Type", function () {
            return zo
        }),
        i.d(e, "UnsignedInt248Type", function () {
            return Fo
        }),
        i.d(e, "AlphaFormat", function () {
            return Do
        }),
        i.d(e, "RGBFormat", function () {
            return No
        }),
        i.d(e, "RGBAFormat", function () {
            return Bo
        }),
        i.d(e, "LuminanceFormat", function () {
            return Uo
        }),
        i.d(e, "LuminanceAlphaFormat", function () {
            return jo
        }),
        i.d(e, "RGBEFormat", function () {
            return Go
        }),
        i.d(e, "DepthFormat", function () {
            return Vo
        }),
        i.d(e, "DepthStencilFormat", function () {
            return Ho
        }),
        i.d(e, "RGB_S3TC_DXT1_Format", function () {
            return Wo
        }),
        i.d(e, "RGBA_S3TC_DXT1_Format", function () {
            return Xo
        }),
        i.d(e, "RGBA_S3TC_DXT3_Format", function () {
            return Yo
        }),
        i.d(e, "RGBA_S3TC_DXT5_Format", function () {
            return qo
        }),
        i.d(e, "RGB_PVRTC_4BPPV1_Format", function () {
            return Zo
        }),
        i.d(e, "RGB_PVRTC_2BPPV1_Format", function () {
            return Ko
        }),
        i.d(e, "RGBA_PVRTC_4BPPV1_Format", function () {
            return Qo
        }),
        i.d(e, "RGBA_PVRTC_2BPPV1_Format", function () {
            return Jo
        }),
        i.d(e, "RGB_ETC1_Format", function () {
            return $o
        }),
        i.d(e, "LoopOnce", function () {
            return ts
        }),
        i.d(e, "LoopRepeat", function () {
            return es
        }),
        i.d(e, "LoopPingPong", function () {
            return is
        }),
        i.d(e, "InterpolateDiscrete", function () {
            return ns
        }),
        i.d(e, "InterpolateLinear", function () {
            return rs
        }),
        i.d(e, "InterpolateSmooth", function () {
            return as
        }),
        i.d(e, "ZeroCurvatureEnding", function () {
            return os
        }),
        i.d(e, "ZeroSlopeEnding", function () {
            return ss
        }),
        i.d(e, "WrapAroundEnding", function () {
            return hs
        }),
        i.d(e, "TrianglesDrawMode", function () {
            return ls
        }),
        i.d(e, "TriangleStripDrawMode", function () {
            return cs
        }),
        i.d(e, "TriangleFanDrawMode", function () {
            return us
        }),
        i.d(e, "LinearEncoding", function () {
            return ps
        }),
        i.d(e, "sRGBEncoding", function () {
            return ds
        }),
        i.d(e, "GammaEncoding", function () {
            return fs
        }),
        i.d(e, "RGBEEncoding", function () {
            return ms
        }),
        i.d(e, "LogLuvEncoding", function () {
            return gs
        }),
        i.d(e, "RGBM7Encoding", function () {
            return vs
        }),
        i.d(e, "RGBM16Encoding", function () {
            return ys
        }),
        i.d(e, "RGBDEncoding", function () {
            return _s
        }),
        i.d(e, "BasicDepthPacking", function () {
            return xs
        }),
        i.d(e, "RGBADepthPacking", function () {
            return ws
        }),
        i.d(e, "CubeGeometry", function () {
            return Ot
        }),
        i.d(e, "Face4", function () {
            return Er
        }),
        i.d(e, "LineStrip", function () {
            return sh
        }),
        i.d(e, "LinePieces", function () {
            return hh
        }),
        i.d(e, "MeshFaceMaterial", function () {
            return Lr
        }),
        i.d(e, "MultiMaterial", function () {
            return Cr
        }),
        i.d(e, "PointCloud", function () {
            return Or
        }),
        i.d(e, "Particle", function () {
            return Rr
        }),
        i.d(e, "ParticleSystem", function () {
            return Ir
        }),
        i.d(e, "PointCloudMaterial", function () {
            return kr
        }),
        i.d(e, "ParticleBasicMaterial", function () {
            return zr
        }),
        i.d(e, "ParticleSystemMaterial", function () {
            return Fr
        }),
        i.d(e, "Vertex", function () {
            return Dr
        }),
        i.d(e, "DynamicBufferAttribute", function () {
            return Nr
        }),
        i.d(e, "Int8Attribute", function () {
            return Br
        }),
        i.d(e, "Uint8Attribute", function () {
            return Ur
        }),
        i.d(e, "Uint8ClampedAttribute", function () {
            return jr
        }),
        i.d(e, "Int16Attribute", function () {
            return Gr
        }),
        i.d(e, "Uint16Attribute", function () {
            return Vr
        }),
        i.d(e, "Int32Attribute", function () {
            return Hr
        }),
        i.d(e, "Uint32Attribute", function () {
            return Wr
        }),
        i.d(e, "Float32Attribute", function () {
            return Xr
        }),
        i.d(e, "Float64Attribute", function () {
            return Yr
        }),
        i.d(e, "ClosedSplineCurve3", function () {
            return qr
        }),
        i.d(e, "SplineCurve3", function () {
            return Zr
        }),
        i.d(e, "Spline", function () {
            return Kr
        }),
        i.d(e, "BoundingBoxHelper", function () {
            return Qr
        }),
        i.d(e, "EdgesHelper", function () {
            return Jr
        }),
        i.d(e, "WireframeHelper", function () {
            return $r
        }),
        i.d(e, "XHRLoader", function () {
            return ta
        }),
        i.d(e, "BinaryTextureLoader", function () {
            return ea
        }),
        i.d(e, "GeometryUtils", function () {
            return lh
        }),
        i.d(e, "ImageUtils", function () {
            return ch
        }),
        i.d(e, "Projector", function () {
            return ia
        }),
        i.d(e, "CanvasRenderer", function () {
            return na
        }),
        void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
        void 0 === Number.isInteger && (Number.isInteger = function (t) {
            return "number" == typeof t && isFinite(t) && Math.floor(t) === t
        }
        ),
        void 0 === Math.sign && (Math.sign = function (t) {
            return t < 0 ? -1 : t > 0 ? 1 : +t
        }
        ),
        void 0 === Function.prototype.name && Object.defineProperty(Function.prototype, "name", {
            get: function () {
                return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
            }
        }),
        void 0 === Object.assign && function () {
            Object.assign = function (t) {
                if (void 0 === t || null === t)
                    throw new TypeError("Cannot convert undefined or null to object");
                for (var e = Object(t), i = 1; i < arguments.length; i++) {
                    var n = arguments[i];
                    if (void 0 !== n && null !== n)
                        for (var r in n)
                            Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }
        }(),
        Object.assign(n.prototype, {
            addEventListener: function (t, e) {
                void 0 === this._listeners && (this._listeners = {});
                var i = this._listeners;
                void 0 === i[t] && (i[t] = []),
                    -1 === i[t].indexOf(e) && i[t].push(e)
            },
            hasEventListener: function (t, e) {
                if (void 0 === this._listeners)
                    return !1;
                var i = this._listeners;
                return void 0 !== i[t] && -1 !== i[t].indexOf(e)
            },
            removeEventListener: function (t, e) {
                if (void 0 !== this._listeners) {
                    var i = this._listeners
                        , n = i[t];
                    if (void 0 !== n) {
                        var r = n.indexOf(e);
                        -1 !== r && n.splice(r, 1)
                    }
                }
            },
            dispatchEvent: function (t) {
                if (void 0 !== this._listeners) {
                    var e = this._listeners
                        , i = e[t.type];
                    if (void 0 !== i) {
                        t.target = this;
                        var n = []
                            , r = 0
                            , a = i.length;
                        for (r = 0; r < a; r++)
                            n[r] = i[r];
                        for (r = 0; r < a; r++)
                            n[r].call(this, t)
                    }
                }
            }
        });
    var ra = "85"
        , aa = {
            LEFT: 0,
            MIDDLE: 1,
            RIGHT: 2
        }
        , oa = 0
        , sa = 1
        , ha = 2
        , la = 3
        , ca = 0
        , ua = 1
        , pa = 0
        , da = 1
        , fa = 2
        , ma = 0
        , ga = 1
        , va = 2
        , ya = 1
        , _a = 2
        , xa = 0
        , wa = 1
        , ba = 2
        , Ma = 0
        , Ta = 1
        , Pa = 2
        , Sa = 3
        , Aa = 4
        , Ea = 5
        , La = 100
        , Ca = 101
        , Oa = 102
        , Ra = 103
        , Ia = 104
        , ka = 200
        , za = 201
        , Fa = 202
        , Da = 203
        , Na = 204
        , Ba = 205
        , Ua = 206
        , ja = 207
        , Ga = 208
        , Va = 209
        , Ha = 210
        , Wa = 0
        , Xa = 1
        , Ya = 2
        , qa = 3
        , Za = 4
        , Ka = 5
        , Qa = 6
        , Ja = 7
        , $a = 0
        , to = 1
        , eo = 2
        , io = 0
        , no = 1
        , ro = 2
        , ao = 3
        , oo = 4
        , so = 300
        , ho = 301
        , lo = 302
        , co = 303
        , uo = 304
        , po = 305
        , fo = 306
        , mo = 307
        , go = 1e3
        , vo = 1001
        , yo = 1002
        , _o = 1003
        , xo = 1004
        , wo = 1005
        , bo = 1006
        , Mo = 1007
        , To = 1008
        , Po = 1009
        , So = 1010
        , Ao = 1011
        , Eo = 1012
        , Lo = 1013
        , Co = 1014
        , Oo = 1015
        , Ro = 1016
        , Io = 1017
        , ko = 1018
        , zo = 1019
        , Fo = 1020
        , Do = 1021
        , No = 1022
        , Bo = 1023
        , Uo = 1024
        , jo = 1025
        , Go = Bo
        , Vo = 1026
        , Ho = 1027
        , Wo = 2001
        , Xo = 2002
        , Yo = 2003
        , qo = 2004
        , Zo = 2100
        , Ko = 2101
        , Qo = 2102
        , Jo = 2103
        , $o = 2151
        , ts = 2200
        , es = 2201
        , is = 2202
        , ns = 2300
        , rs = 2301
        , as = 2302
        , os = 2400
        , ss = 2401
        , hs = 2402
        , ls = 0
        , cs = 1
        , us = 2
        , ps = 3e3
        , ds = 3001
        , fs = 3007
        , ms = 3002
        , gs = 3003
        , vs = 3004
        , ys = 3005
        , _s = 3006
        , xs = 3200
        , ws = 3201
        , bs = {
            DEG2RAD: Math.PI / 180,
            RAD2DEG: 180 / Math.PI,
            generateUUID: function () {
                var t, e = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""), i = new Array(36), n = 0;
                return function () {
                    for (var r = 0; r < 36; r++)
                        8 === r || 13 === r || 18 === r || 23 === r ? i[r] = "-" : 14 === r ? i[r] = "4" : (n <= 2 && (n = 33554432 + 16777216 * Math.random() | 0),
                            t = 15 & n,
                            n >>= 4,
                            i[r] = e[19 === r ? 3 & t | 8 : t]);
                    return i.join("")
                }
            }(),
            clamp: function (t, e, i) {
                return Math.max(e, Math.min(i, t))
            },
            euclideanModulo: function (t, e) {
                return (t % e + e) % e
            },
            mapLinear: function (t, e, i, n, r) {
                return n + (t - e) * (r - n) / (i - e)
            },
            lerp: function (t, e, i) {
                return (1 - i) * t + i * e
            },
            smoothstep: function (t, e, i) {
                return t <= e ? 0 : t >= i ? 1 : (t = (t - e) / (i - e)) * t * (3 - 2 * t)
            },
            smootherstep: function (t, e, i) {
                return t <= e ? 0 : t >= i ? 1 : (t = (t - e) / (i - e)) * t * t * (t * (6 * t - 15) + 10)
            },
            randInt: function (t, e) {
                return t + Math.floor(Math.random() * (e - t + 1))
            },
            randFloat: function (t, e) {
                return t + Math.random() * (e - t)
            },
            randFloatSpread: function (t) {
                return t * (.5 - Math.random())
            },
            degToRad: function (t) {
                return t * bs.DEG2RAD
            },
            radToDeg: function (t) {
                return t * bs.RAD2DEG
            },
            isPowerOfTwo: function (t) {
                return 0 == (t & t - 1) && 0 !== t
            },
            nearestPowerOfTwo: function (t) {
                return Math.pow(2, Math.round(Math.log(t) / Math.LN2))
            },
            nextPowerOfTwo: function (t) {
                return t--,
                    t |= t >> 1,
                    t |= t >> 2,
                    t |= t >> 4,
                    t |= t >> 8,
                    t |= t >> 16,
                    ++t
            }
        };
    Object.defineProperties(r.prototype, {
        width: {
            get: function () {
                return this.x
            },
            set: function (t) {
                this.x = t
            }
        },
        height: {
            get: function () {
                return this.y
            },
            set: function (t) {
                this.y = t
            }
        }
    }),
        Object.assign(r.prototype, {
            isVector2: !0,
            set: function (t, e) {
                return this.x = t,
                    this.y = e,
                    this
            },
            setScalar: function (t) {
                return this.x = t,
                    this.y = t,
                    this
            },
            setX: function (t) {
                return this.x = t,
                    this
            },
            setY: function (t) {
                return this.y = t,
                    this
            },
            setComponent: function (t, e) {
                switch (t) {
                    case 0:
                        this.x = e;
                        break;
                    case 1:
                        this.y = e;
                        break;
                    default:
                        throw new Error("index is out of range: " + t)
                }
                return this
            },
            getComponent: function (t) {
                switch (t) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    default:
                        throw new Error("index is out of range: " + t)
                }
            },
            clone: function () {
                return new this.constructor(this.x, this.y)
            },
            copy: function (t) {
                return this.x = t.x,
                    this.y = t.y,
                    this
            },
            add: function (t, e) {
                return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x,
                    this.y += t.y,
                    this)
            },
            addScalar: function (t) {
                return this.x += t,
                    this.y += t,
                    this
            },
            addVectors: function (t, e) {
                return this.x = t.x + e.x,
                    this.y = t.y + e.y,
                    this
            },
            addScaledVector: function (t, e) {
                return this.x += t.x * e,
                    this.y += t.y * e,
                    this
            },
            sub: function (t, e) {
                return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x,
                    this.y -= t.y,
                    this)
            },
            subScalar: function (t) {
                return this.x -= t,
                    this.y -= t,
                    this
            },
            subVectors: function (t, e) {
                return this.x = t.x - e.x,
                    this.y = t.y - e.y,
                    this
            },
            multiply: function (t) {
                return this.x *= t.x,
                    this.y *= t.y,
                    this
            },
            multiplyScalar: function (t) {
                return this.x *= t,
                    this.y *= t,
                    this
            },
            divide: function (t) {
                return this.x /= t.x,
                    this.y /= t.y,
                    this
            },
            divideScalar: function (t) {
                return this.multiplyScalar(1 / t)
            },
            min: function (t) {
                return this.x = Math.min(this.x, t.x),
                    this.y = Math.min(this.y, t.y),
                    this
            },
            max: function (t) {
                return this.x = Math.max(this.x, t.x),
                    this.y = Math.max(this.y, t.y),
                    this
            },
            clamp: function (t, e) {
                return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                    this.y = Math.max(t.y, Math.min(e.y, this.y)),
                    this
            },
            clampScalar: function () {
                var t = new r
                    , e = new r;
                return function (i, n) {
                    return t.set(i, i),
                        e.set(n, n),
                        this.clamp(t, e)
                }
            }(),
            clampLength: function (t, e) {
                var i = this.length();
                return this.multiplyScalar(Math.max(t, Math.min(e, i)) / i)
            },
            floor: function () {
                return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this
            },
            ceil: function () {
                return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this
            },
            round: function () {
                return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this
            },
            roundToZero: function () {
                return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this
            },
            negate: function () {
                return this.x = -this.x,
                    this.y = -this.y,
                    this
            },
            dot: function (t) {
                return this.x * t.x + this.y * t.y
            },
            lengthSq: function () {
                return this.x * this.x + this.y * this.y
            },
            length: function () {
                return Math.sqrt(this.x * this.x + this.y * this.y)
            },
            lengthManhattan: function () {
                return Math.abs(this.x) + Math.abs(this.y)
            },
            normalize: function () {
                return this.divideScalar(this.length())
            },
            angle: function () {
                var t = Math.atan2(this.y, this.x);
                return t < 0 && (t += 2 * Math.PI),
                    t
            },
            distanceTo: function (t) {
                return Math.sqrt(this.distanceToSquared(t))
            },
            distanceToSquared: function (t) {
                var e = this.x - t.x
                    , i = this.y - t.y;
                return e * e + i * i
            },
            distanceToManhattan: function (t) {
                return Math.abs(this.x - t.x) + Math.abs(this.y - t.y)
            },
            setLength: function (t) {
                return this.multiplyScalar(t / this.length())
            },
            lerp: function (t, e) {
                return this.x += (t.x - this.x) * e,
                    this.y += (t.y - this.y) * e,
                    this
            },
            lerpVectors: function (t, e, i) {
                return this.subVectors(e, t).multiplyScalar(i).add(t)
            },
            equals: function (t) {
                return t.x === this.x && t.y === this.y
            },
            fromArray: function (t, e) {
                return void 0 === e && (e = 0),
                    this.x = t[e],
                    this.y = t[e + 1],
                    this
            },
            toArray: function (t, e) {
                return void 0 === t && (t = []),
                    void 0 === e && (e = 0),
                    t[e] = this.x,
                    t[e + 1] = this.y,
                    t
            },
            fromBufferAttribute: function (t, e, i) {
                return this.x = t.getX(e),
                    this.y = t.getY(e),
                    this
            },
            rotateAround: function (t, e) {
                var i = Math.cos(e)
                    , n = Math.sin(e)
                    , r = this.x - t.x
                    , a = this.y - t.y;
                return this.x = r * i - a * n + t.x,
                    this.y = r * n + a * i + t.y,
                    this
            }
        });
    var Ms = 0;
    a.DEFAULT_IMAGE = void 0,
        a.DEFAULT_MAPPING = so,
        Object.defineProperty(a.prototype, "needsUpdate", {
            set: function (t) {
                !0 === t && this.version++
            }
        }),
        Object.assign(a.prototype, n.prototype, {
            constructor: a,
            isTexture: !0,
            clone: function () {
                return (new this.constructor).copy(this)
            },
            copy: function (t) {
                return this.name = t.name,
                    this.image = t.image,
                    this.mipmaps = t.mipmaps.slice(0),
                    this.mapping = t.mapping,
                    this.wrapS = t.wrapS,
                    this.wrapT = t.wrapT,
                    this.magFilter = t.magFilter,
                    this.minFilter = t.minFilter,
                    this.anisotropy = t.anisotropy,
                    this.format = t.format,
                    this.type = t.type,
                    this.offset.copy(t.offset),
                    this.repeat.copy(t.repeat),
                    this.generateMipmaps = t.generateMipmaps,
                    this.premultiplyAlpha = t.premultiplyAlpha,
                    this.flipY = t.flipY,
                    this.unpackAlignment = t.unpackAlignment,
                    this.encoding = t.encoding,
                    this
            },
            toJSON: function (t) {
                if (void 0 !== t.textures[this.uuid])
                    return t.textures[this.uuid];
                var e = {
                    metadata: {
                        version: 4.5,
                        type: "Texture",
                        generator: "Texture.toJSON"
                    },
                    uuid: this.uuid,
                    name: this.name,
                    mapping: this.mapping,
                    repeat: [this.repeat.x, this.repeat.y],
                    offset: [this.offset.x, this.offset.y],
                    wrap: [this.wrapS, this.wrapT],
                    minFilter: this.minFilter,
                    magFilter: this.magFilter,
                    anisotropy: this.anisotropy,
                    flipY: this.flipY
                };
                if (void 0 !== this.image) {
                    var i = this.image;
                    void 0 === i.uuid && (i.uuid = bs.generateUUID()),
                        void 0 === t.images[i.uuid] && (t.images[i.uuid] = {
                            uuid: i.uuid,
                            url: function (t) {
                                var e;
                                return void 0 !== t.toDataURL ? e = t : (e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
                                    e.width = t.width,
                                    e.height = t.height,
                                    e.getContext("2d").drawImage(t, 0, 0, t.width, t.height)),
                                    e.width > 2048 || e.height > 2048 ? e.toDataURL("image/jpeg", .6) : e.toDataURL("image/png")
                            }(i)
                        }),
                        e.image = i.uuid
                }
                return t.textures[this.uuid] = e,
                    e
            },
            dispose: function () {
                this.dispatchEvent({
                    type: "dispose"
                })
            },
            transformUv: function (t) {
                if (this.mapping === so) {
                    if (t.multiply(this.repeat),
                        t.add(this.offset),
                        t.x < 0 || t.x > 1)
                        switch (this.wrapS) {
                            case go:
                                t.x = t.x - Math.floor(t.x);
                                break;
                            case vo:
                                t.x = t.x < 0 ? 0 : 1;
                                break;
                            case yo:
                                1 === Math.abs(Math.floor(t.x) % 2) ? t.x = Math.ceil(t.x) - t.x : t.x = t.x - Math.floor(t.x)
                        }
                    if (t.y < 0 || t.y > 1)
                        switch (this.wrapT) {
                            case go:
                                t.y = t.y - Math.floor(t.y);
                                break;
                            case vo:
                                t.y = t.y < 0 ? 0 : 1;
                                break;
                            case yo:
                                1 === Math.abs(Math.floor(t.y) % 2) ? t.y = Math.ceil(t.y) - t.y : t.y = t.y - Math.floor(t.y)
                        }
                    this.flipY && (t.y = 1 - t.y)
                }
            }
        }),
        Object.assign(o.prototype, {
            isVector4: !0,
            set: function (t, e, i, n) {
                return this.x = t,
                    this.y = e,
                    this.z = i,
                    this.w = n,
                    this
            },
            setScalar: function (t) {
                return this.x = t,
                    this.y = t,
                    this.z = t,
                    this.w = t,
                    this
            },
            setX: function (t) {
                return this.x = t,
                    this
            },
            setY: function (t) {
                return this.y = t,
                    this
            },
            setZ: function (t) {
                return this.z = t,
                    this
            },
            setW: function (t) {
                return this.w = t,
                    this
            },
            setComponent: function (t, e) {
                switch (t) {
                    case 0:
                        this.x = e;
                        break;
                    case 1:
                        this.y = e;
                        break;
                    case 2:
                        this.z = e;
                        break;
                    case 3:
                        this.w = e;
                        break;
                    default:
                        throw new Error("index is out of range: " + t)
                }
                return this
            },
            getComponent: function (t) {
                switch (t) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    case 3:
                        return this.w;
                    default:
                        throw new Error("index is out of range: " + t)
                }
            },
            clone: function () {
                return new this.constructor(this.x, this.y, this.z, this.w)
            },
            copy: function (t) {
                return this.x = t.x,
                    this.y = t.y,
                    this.z = t.z,
                    this.w = void 0 !== t.w ? t.w : 1,
                    this
            },
            add: function (t, e) {
                return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x,
                    this.y += t.y,
                    this.z += t.z,
                    this.w += t.w,
                    this)
            },
            addScalar: function (t) {
                return this.x += t,
                    this.y += t,
                    this.z += t,
                    this.w += t,
                    this
            },
            addVectors: function (t, e) {
                return this.x = t.x + e.x,
                    this.y = t.y + e.y,
                    this.z = t.z + e.z,
                    this.w = t.w + e.w,
                    this
            },
            addScaledVector: function (t, e) {
                return this.x += t.x * e,
                    this.y += t.y * e,
                    this.z += t.z * e,
                    this.w += t.w * e,
                    this
            },
            sub: function (t, e) {
                return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x,
                    this.y -= t.y,
                    this.z -= t.z,
                    this.w -= t.w,
                    this)
            },
            subScalar: function (t) {
                return this.x -= t,
                    this.y -= t,
                    this.z -= t,
                    this.w -= t,
                    this
            },
            subVectors: function (t, e) {
                return this.x = t.x - e.x,
                    this.y = t.y - e.y,
                    this.z = t.z - e.z,
                    this.w = t.w - e.w,
                    this
            },
            multiplyScalar: function (t) {
                return this.x *= t,
                    this.y *= t,
                    this.z *= t,
                    this.w *= t,
                    this
            },
            applyMatrix4: function (t) {
                var e = this.x
                    , i = this.y
                    , n = this.z
                    , r = this.w
                    , a = t.elements;
                return this.x = a[0] * e + a[4] * i + a[8] * n + a[12] * r,
                    this.y = a[1] * e + a[5] * i + a[9] * n + a[13] * r,
                    this.z = a[2] * e + a[6] * i + a[10] * n + a[14] * r,
                    this.w = a[3] * e + a[7] * i + a[11] * n + a[15] * r,
                    this
            },
            divideScalar: function (t) {
                return this.multiplyScalar(1 / t)
            },
            setAxisAngleFromQuaternion: function (t) {
                this.w = 2 * Math.acos(t.w);
                var e = Math.sqrt(1 - t.w * t.w);
                return e < 1e-4 ? (this.x = 1,
                    this.y = 0,
                    this.z = 0) : (this.x = t.x / e,
                        this.y = t.y / e,
                        this.z = t.z / e),
                    this
            },
            setAxisAngleFromRotationMatrix: function (t) {
                var e, i, n, r, a = t.elements, o = a[0], s = a[4], h = a[8], l = a[1], c = a[5], u = a[9], p = a[2], d = a[6], f = a[10];
                if (Math.abs(s - l) < .01 && Math.abs(h - p) < .01 && Math.abs(u - d) < .01) {
                    if (Math.abs(s + l) < .1 && Math.abs(h + p) < .1 && Math.abs(u + d) < .1 && Math.abs(o + c + f - 3) < .1)
                        return this.set(1, 0, 0, 0),
                            this;
                    e = Math.PI;
                    var m = (o + 1) / 2
                        , g = (c + 1) / 2
                        , v = (f + 1) / 2
                        , y = (s + l) / 4
                        , _ = (h + p) / 4
                        , x = (u + d) / 4;
                    return m > g && m > v ? m < .01 ? (i = 0,
                        n = .707106781,
                        r = .707106781) : (i = Math.sqrt(m),
                            n = y / i,
                            r = _ / i) : g > v ? g < .01 ? (i = .707106781,
                                n = 0,
                                r = .707106781) : (n = Math.sqrt(g),
                                    i = y / n,
                                    r = x / n) : v < .01 ? (i = .707106781,
                                        n = .707106781,
                                        r = 0) : (r = Math.sqrt(v),
                                            i = _ / r,
                                            n = x / r),
                        this.set(i, n, r, e),
                        this
                }
                var w = Math.sqrt((d - u) * (d - u) + (h - p) * (h - p) + (l - s) * (l - s));
                return Math.abs(w) < .001 && (w = 1),
                    this.x = (d - u) / w,
                    this.y = (h - p) / w,
                    this.z = (l - s) / w,
                    this.w = Math.acos((o + c + f - 1) / 2),
                    this
            },
            min: function (t) {
                return this.x = Math.min(this.x, t.x),
                    this.y = Math.min(this.y, t.y),
                    this.z = Math.min(this.z, t.z),
                    this.w = Math.min(this.w, t.w),
                    this
            },
            max: function (t) {
                return this.x = Math.max(this.x, t.x),
                    this.y = Math.max(this.y, t.y),
                    this.z = Math.max(this.z, t.z),
                    this.w = Math.max(this.w, t.w),
                    this
            },
            clamp: function (t, e) {
                return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                    this.y = Math.max(t.y, Math.min(e.y, this.y)),
                    this.z = Math.max(t.z, Math.min(e.z, this.z)),
                    this.w = Math.max(t.w, Math.min(e.w, this.w)),
                    this
            },
            clampScalar: function () {
                var t = new o
                    , e = new o;
                return function (i, n) {
                    return t.set(i, i, i, i),
                        e.set(n, n, n, n),
                        this.clamp(t, e)
                }
            }(),
            floor: function () {
                return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this.z = Math.floor(this.z),
                    this.w = Math.floor(this.w),
                    this
            },
            ceil: function () {
                return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this.z = Math.ceil(this.z),
                    this.w = Math.ceil(this.w),
                    this
            },
            round: function () {
                return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this.z = Math.round(this.z),
                    this.w = Math.round(this.w),
                    this
            },
            roundToZero: function () {
                return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
                    this
            },
            negate: function () {
                return this.x = -this.x,
                    this.y = -this.y,
                    this.z = -this.z,
                    this.w = -this.w,
                    this
            },
            dot: function (t) {
                return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w
            },
            lengthSq: function () {
                return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
            },
            length: function () {
                return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
            },
            lengthManhattan: function () {
                return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
            },
            normalize: function () {
                return this.divideScalar(this.length())
            },
            setLength: function (t) {
                return this.multiplyScalar(t / this.length())
            },
            lerp: function (t, e) {
                return this.x += (t.x - this.x) * e,
                    this.y += (t.y - this.y) * e,
                    this.z += (t.z - this.z) * e,
                    this.w += (t.w - this.w) * e,
                    this
            },
            lerpVectors: function (t, e, i) {
                return this.subVectors(e, t).multiplyScalar(i).add(t)
            },
            equals: function (t) {
                return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w
            },
            fromArray: function (t, e) {
                return void 0 === e && (e = 0),
                    this.x = t[e],
                    this.y = t[e + 1],
                    this.z = t[e + 2],
                    this.w = t[e + 3],
                    this
            },
            toArray: function (t, e) {
                return void 0 === t && (t = []),
                    void 0 === e && (e = 0),
                    t[e] = this.x,
                    t[e + 1] = this.y,
                    t[e + 2] = this.z,
                    t[e + 3] = this.w,
                    t
            },
            fromBufferAttribute: function (t, e, i) {
                return this.x = t.getX(e),
                    this.y = t.getY(e),
                    this.z = t.getZ(e),
                    this.w = t.getW(e),
                    this
            }
        }),
        Object.assign(s.prototype, n.prototype, {
            isWebGLRenderTarget: !0,
            setSize: function (t, e) {
                this.width === t && this.height === e || (this.width = t,
                    this.height = e,
                    this.dispose()),
                    this.viewport.set(0, 0, t, e),
                    this.scissor.set(0, 0, t, e)
            },
            clone: function () {
                return (new this.constructor).copy(this)
            },
            copy: function (t) {
                return this.width = t.width,
                    this.height = t.height,
                    this.viewport.copy(t.viewport),
                    this.texture = t.texture.clone(),
                    this.depthBuffer = t.depthBuffer,
                    this.stencilBuffer = t.stencilBuffer,
                    this.depthTexture = t.depthTexture,
                    this
            },
            dispose: function () {
                this.dispatchEvent({
                    type: "dispose"
                })
            }
        }),
        h.prototype = Object.create(s.prototype),
        h.prototype.constructor = h,
        h.prototype.isWebGLRenderTargetCube = !0,
        Object.assign(l, {
            slerp: function (t, e, i, n) {
                return i.copy(t).slerp(e, n)
            },
            slerpFlat: function (t, e, i, n, r, a, o) {
                var s = i[n + 0]
                    , h = i[n + 1]
                    , l = i[n + 2]
                    , c = i[n + 3]
                    , u = r[a + 0]
                    , p = r[a + 1]
                    , d = r[a + 2]
                    , f = r[a + 3];
                if (c !== f || s !== u || h !== p || l !== d) {
                    var m = 1 - o
                        , g = s * u + h * p + l * d + c * f
                        , v = g >= 0 ? 1 : -1
                        , y = 1 - g * g;
                    if (y > Number.EPSILON) {
                        var _ = Math.sqrt(y)
                            , x = Math.atan2(_, g * v);
                        m = Math.sin(m * x) / _,
                            o = Math.sin(o * x) / _
                    }
                    var w = o * v;
                    if (s = s * m + u * w,
                        h = h * m + p * w,
                        l = l * m + d * w,
                        c = c * m + f * w,
                        m === 1 - o) {
                        var b = 1 / Math.sqrt(s * s + h * h + l * l + c * c);
                        s *= b,
                            h *= b,
                            l *= b,
                            c *= b
                    }
                }
                t[e] = s,
                    t[e + 1] = h,
                    t[e + 2] = l,
                    t[e + 3] = c
            }
        }),
        Object.defineProperties(l.prototype, {
            x: {
                get: function () {
                    return this._x
                },
                set: function (t) {
                    this._x = t,
                        this.onChangeCallback()
                }
            },
            y: {
                get: function () {
                    return this._y
                },
                set: function (t) {
                    this._y = t,
                        this.onChangeCallback()
                }
            },
            z: {
                get: function () {
                    return this._z
                },
                set: function (t) {
                    this._z = t,
                        this.onChangeCallback()
                }
            },
            w: {
                get: function () {
                    return this._w
                },
                set: function (t) {
                    this._w = t,
                        this.onChangeCallback()
                }
            }
        }),
        Object.assign(l.prototype, {
            set: function (t, e, i, n) {
                return this._x = t,
                    this._y = e,
                    this._z = i,
                    this._w = n,
                    this.onChangeCallback(),
                    this
            },
            clone: function () {
                return new this.constructor(this._x, this._y, this._z, this._w)
            },
            copy: function (t) {
                return this._x = t.x,
                    this._y = t.y,
                    this._z = t.z,
                    this._w = t.w,
                    this.onChangeCallback(),
                    this
            },
            setFromEuler: function (t, e) {
                if (!1 === (t && t.isEuler))
                    throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
                var i = t._x
                    , n = t._y
                    , r = t._z
                    , a = t.order
                    , o = Math.cos
                    , s = Math.sin
                    , h = o(i / 2)
                    , l = o(n / 2)
                    , c = o(r / 2)
                    , u = s(i / 2)
                    , p = s(n / 2)
                    , d = s(r / 2);
                return "XYZ" === a ? (this._x = u * l * c + h * p * d,
                    this._y = h * p * c - u * l * d,
                    this._z = h * l * d + u * p * c,
                    this._w = h * l * c - u * p * d) : "YXZ" === a ? (this._x = u * l * c + h * p * d,
                        this._y = h * p * c - u * l * d,
                        this._z = h * l * d - u * p * c,
                        this._w = h * l * c + u * p * d) : "ZXY" === a ? (this._x = u * l * c - h * p * d,
                            this._y = h * p * c + u * l * d,
                            this._z = h * l * d + u * p * c,
                            this._w = h * l * c - u * p * d) : "ZYX" === a ? (this._x = u * l * c - h * p * d,
                                this._y = h * p * c + u * l * d,
                                this._z = h * l * d - u * p * c,
                                this._w = h * l * c + u * p * d) : "YZX" === a ? (this._x = u * l * c + h * p * d,
                                    this._y = h * p * c + u * l * d,
                                    this._z = h * l * d - u * p * c,
                                    this._w = h * l * c - u * p * d) : "XZY" === a && (this._x = u * l * c - h * p * d,
                                        this._y = h * p * c - u * l * d,
                                        this._z = h * l * d + u * p * c,
                                        this._w = h * l * c + u * p * d),
                    !1 !== e && this.onChangeCallback(),
                    this
            },
            setFromAxisAngle: function (t, e) {
                var i = e / 2
                    , n = Math.sin(i);
                return this._x = t.x * n,
                    this._y = t.y * n,
                    this._z = t.z * n,
                    this._w = Math.cos(i),
                    this.onChangeCallback(),
                    this
            },
            setFromRotationMatrix: function (t) {
                var e, i = t.elements, n = i[0], r = i[4], a = i[8], o = i[1], s = i[5], h = i[9], l = i[2], c = i[6], u = i[10], p = n + s + u;
                return p > 0 ? (e = .5 / Math.sqrt(p + 1),
                    this._w = .25 / e,
                    this._x = (c - h) * e,
                    this._y = (a - l) * e,
                    this._z = (o - r) * e) : n > s && n > u ? (e = 2 * Math.sqrt(1 + n - s - u),
                        this._w = (c - h) / e,
                        this._x = .25 * e,
                        this._y = (r + o) / e,
                        this._z = (a + l) / e) : s > u ? (e = 2 * Math.sqrt(1 + s - n - u),
                            this._w = (a - l) / e,
                            this._x = (r + o) / e,
                            this._y = .25 * e,
                            this._z = (h + c) / e) : (e = 2 * Math.sqrt(1 + u - n - s),
                                this._w = (o - r) / e,
                                this._x = (a + l) / e,
                                this._y = (h + c) / e,
                                this._z = .25 * e),
                    this.onChangeCallback(),
                    this
            },
            setFromUnitVectors: function () {
                var t, e = new c;
                return function (i, n) {
                    return void 0 === e && (e = new c),
                        t = i.dot(n) + 1,
                        t < 1e-6 ? (t = 0,
                            Math.abs(i.x) > Math.abs(i.z) ? e.set(-i.y, i.x, 0) : e.set(0, -i.z, i.y)) : e.crossVectors(i, n),
                        this._x = e.x,
                        this._y = e.y,
                        this._z = e.z,
                        this._w = t,
                        this.normalize()
                }
            }(),
            inverse: function () {
                return this.conjugate().normalize()
            },
            conjugate: function () {
                return this._x *= -1,
                    this._y *= -1,
                    this._z *= -1,
                    this.onChangeCallback(),
                    this
            },
            dot: function (t) {
                return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w
            },
            lengthSq: function () {
                return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
            },
            length: function () {
                return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
            },
            normalize: function () {
                var t = this.length();
                return 0 === t ? (this._x = 0,
                    this._y = 0,
                    this._z = 0,
                    this._w = 1) : (t = 1 / t,
                        this._x = this._x * t,
                        this._y = this._y * t,
                        this._z = this._z * t,
                        this._w = this._w * t),
                    this.onChangeCallback(),
                    this
            },
            multiply: function (t, e) {
                return void 0 !== e ? this.multiplyQuaternions(t, e) : this.multiplyQuaternions(this, t)
            },
            premultiply: function (t) {
                return this.multiplyQuaternions(t, this)
            },
            multiplyQuaternions: function (t, e) {
                var i = t._x
                    , n = t._y
                    , r = t._z
                    , a = t._w
                    , o = e._x
                    , s = e._y
                    , h = e._z
                    , l = e._w;
                return this._x = i * l + a * o + n * h - r * s,
                    this._y = n * l + a * s + r * o - i * h,
                    this._z = r * l + a * h + i * s - n * o,
                    this._w = a * l - i * o - n * s - r * h,
                    this.onChangeCallback(),
                    this
            },
            slerp: function (t, e) {
                if (0 === e)
                    return this;
                if (1 === e)
                    return this.copy(t);
                var i = this._x
                    , n = this._y
                    , r = this._z
                    , a = this._w
                    , o = a * t._w + i * t._x + n * t._y + r * t._z;
                if (o < 0 ? (this._w = -t._w,
                    this._x = -t._x,
                    this._y = -t._y,
                    this._z = -t._z,
                    o = -o) : this.copy(t),
                    o >= 1)
                    return this._w = a,
                        this._x = i,
                        this._y = n,
                        this._z = r,
                        this;
                var s = Math.sqrt(1 - o * o);
                if (Math.abs(s) < .001)
                    return this._w = .5 * (a + this._w),
                        this._x = .5 * (i + this._x),
                        this._y = .5 * (n + this._y),
                        this._z = .5 * (r + this._z),
                        this;
                var h = Math.atan2(s, o)
                    , l = Math.sin((1 - e) * h) / s
                    , c = Math.sin(e * h) / s;
                return this._w = a * l + this._w * c,
                    this._x = i * l + this._x * c,
                    this._y = n * l + this._y * c,
                    this._z = r * l + this._z * c,
                    this.onChangeCallback(),
                    this
            },
            equals: function (t) {
                return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w
            },
            fromArray: function (t, e) {
                return void 0 === e && (e = 0),
                    this._x = t[e],
                    this._y = t[e + 1],
                    this._z = t[e + 2],
                    this._w = t[e + 3],
                    this.onChangeCallback(),
                    this
            },
            toArray: function (t, e) {
                return void 0 === t && (t = []),
                    void 0 === e && (e = 0),
                    t[e] = this._x,
                    t[e + 1] = this._y,
                    t[e + 2] = this._z,
                    t[e + 3] = this._w,
                    t
            },
            onChange: function (t) {
                return this.onChangeCallback = t,
                    this
            },
            onChangeCallback: function () { }
        }),
        Object.assign(c.prototype, {
            isVector3: !0,
            set: function (t, e, i) {
                return this.x = t,
                    this.y = e,
                    this.z = i,
                    this
            },
            setScalar: function (t) {
                return this.x = t,
                    this.y = t,
                    this.z = t,
                    this
            },
            setX: function (t) {
                return this.x = t,
                    this
            },
            setY: function (t) {
                return this.y = t,
                    this
            },
            setZ: function (t) {
                return this.z = t,
                    this
            },
            setComponent: function (t, e) {
                switch (t) {
                    case 0:
                        this.x = e;
                        break;
                    case 1:
                        this.y = e;
                        break;
                    case 2:
                        this.z = e;
                        break;
                    default:
                        throw new Error("index is out of range: " + t)
                }
                return this
            },
            getComponent: function (t) {
                switch (t) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    default:
                        throw new Error("index is out of range: " + t)
                }
            },
            clone: function () {
                return new this.constructor(this.x, this.y, this.z)
            },
            copy: function (t) {
                return this.x = t.x,
                    this.y = t.y,
                    this.z = t.z,
                    this
            },
            add: function (t, e) {
                return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x,
                    this.y += t.y,
                    this.z += t.z,
                    this)
            },
            addScalar: function (t) {
                return this.x += t,
                    this.y += t,
                    this.z += t,
                    this
            },
            addVectors: function (t, e) {
                return this.x = t.x + e.x,
                    this.y = t.y + e.y,
                    this.z = t.z + e.z,
                    this
            },
            addScaledVector: function (t, e) {
                return this.x += t.x * e,
                    this.y += t.y * e,
                    this.z += t.z * e,
                    this
            },
            sub: function (t, e) {
                return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x,
                    this.y -= t.y,
                    this.z -= t.z,
                    this)
            },
            subScalar: function (t) {
                return this.x -= t,
                    this.y -= t,
                    this.z -= t,
                    this
            },
            subVectors: function (t, e) {
                return this.x = t.x - e.x,
                    this.y = t.y - e.y,
                    this.z = t.z - e.z,
                    this
            },
            multiply: function (t, e) {
                return void 0 !== e ? this.multiplyVectors(t, e) : (this.x *= t.x,
                    this.y *= t.y,
                    this.z *= t.z,
                    this)
            },
            multiplyScalar: function (t) {
                return this.x *= t,
                    this.y *= t,
                    this.z *= t,
                    this
            },
            multiplyVectors: function (t, e) {
                return this.x = t.x * e.x,
                    this.y = t.y * e.y,
                    this.z = t.z * e.z,
                    this
            },
            applyEuler: function () {
                var t = new l;
                return function (e) {
                    return e && e.isEuler,
                        this.applyQuaternion(t.setFromEuler(e))
                }
            }(),
            applyAxisAngle: function () {
                var t = new l;
                return function (e, i) {
                    return this.applyQuaternion(t.setFromAxisAngle(e, i))
                }
            }(),
            applyMatrix3: function (t) {
                var e = this.x
                    , i = this.y
                    , n = this.z
                    , r = t.elements;
                return this.x = r[0] * e + r[3] * i + r[6] * n,
                    this.y = r[1] * e + r[4] * i + r[7] * n,
                    this.z = r[2] * e + r[5] * i + r[8] * n,
                    this
            },
            applyMatrix4: function (t) {
                var e = this.x
                    , i = this.y
                    , n = this.z
                    , r = t.elements;
                this.x = r[0] * e + r[4] * i + r[8] * n + r[12],
                    this.y = r[1] * e + r[5] * i + r[9] * n + r[13],
                    this.z = r[2] * e + r[6] * i + r[10] * n + r[14];
                var a = r[3] * e + r[7] * i + r[11] * n + r[15];
                return this.divideScalar(a)
            },
            applyQuaternion: function (t) {
                var e = this.x
                    , i = this.y
                    , n = this.z
                    , r = t.x
                    , a = t.y
                    , o = t.z
                    , s = t.w
                    , h = s * e + a * n - o * i
                    , l = s * i + o * e - r * n
                    , c = s * n + r * i - a * e
                    , u = -r * e - a * i - o * n;
                return this.x = h * s + u * -r + l * -o - c * -a,
                    this.y = l * s + u * -a + c * -r - h * -o,
                    this.z = c * s + u * -o + h * -a - l * -r,
                    this
            },
            project: function () {
                var t = new u;
                return function (e) {
                    return t.multiplyMatrices(e.projectionMatrix, t.getInverse(e.matrixWorld)),
                        this.applyMatrix4(t)
                }
            }(),
            unproject: function () {
                var t = new u;
                return function (e) {
                    return t.multiplyMatrices(e.matrixWorld, t.getInverse(e.projectionMatrix)),
                        this.applyMatrix4(t)
                }
            }(),
            transformDirection: function (t) {
                var e = this.x
                    , i = this.y
                    , n = this.z
                    , r = t.elements;
                return this.x = r[0] * e + r[4] * i + r[8] * n,
                    this.y = r[1] * e + r[5] * i + r[9] * n,
                    this.z = r[2] * e + r[6] * i + r[10] * n,
                    this.normalize()
            },
            divide: function (t) {
                return this.x /= t.x,
                    this.y /= t.y,
                    this.z /= t.z,
                    this
            },
            divideScalar: function (t) {
                return this.multiplyScalar(1 / t)
            },
            min: function (t) {
                return this.x = Math.min(this.x, t.x),
                    this.y = Math.min(this.y, t.y),
                    this.z = Math.min(this.z, t.z),
                    this
            },
            max: function (t) {
                return this.x = Math.max(this.x, t.x),
                    this.y = Math.max(this.y, t.y),
                    this.z = Math.max(this.z, t.z),
                    this
            },
            clamp: function (t, e) {
                return this.x = Math.max(t.x, Math.min(e.x, this.x)),
                    this.y = Math.max(t.y, Math.min(e.y, this.y)),
                    this.z = Math.max(t.z, Math.min(e.z, this.z)),
                    this
            },
            clampScalar: function () {
                var t = new c
                    , e = new c;
                return function (i, n) {
                    return t.set(i, i, i),
                        e.set(n, n, n),
                        this.clamp(t, e)
                }
            }(),
            clampLength: function (t, e) {
                var i = this.length();
                return this.multiplyScalar(Math.max(t, Math.min(e, i)) / i)
            },
            floor: function () {
                return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this.z = Math.floor(this.z),
                    this
            },
            ceil: function () {
                return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this.z = Math.ceil(this.z),
                    this
            },
            round: function () {
                return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this.z = Math.round(this.z),
                    this
            },
            roundToZero: function () {
                return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                    this
            },
            negate: function () {
                return this.x = -this.x,
                    this.y = -this.y,
                    this.z = -this.z,
                    this
            },
            dot: function (t) {
                return this.x * t.x + this.y * t.y + this.z * t.z
            },
            lengthSq: function () {
                return this.x * this.x + this.y * this.y + this.z * this.z
            },
            length: function () {
                return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
            },
            lengthManhattan: function () {
                return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
            },
            normalize: function () {
                return this.divideScalar(this.length())
            },
            setLength: function (t) {
                return this.multiplyScalar(t / this.length())
            },
            lerp: function (t, e) {
                return this.x += (t.x - this.x) * e,
                    this.y += (t.y - this.y) * e,
                    this.z += (t.z - this.z) * e,
                    this
            },
            lerpVectors: function (t, e, i) {
                return this.subVectors(e, t).multiplyScalar(i).add(t)
            },
            cross: function (t, e) {
                if (void 0 !== e)
                    return this.crossVectors(t, e);
                var i = this.x
                    , n = this.y
                    , r = this.z;
                return this.x = n * t.z - r * t.y,
                    this.y = r * t.x - i * t.z,
                    this.z = i * t.y - n * t.x,
                    this
            },
            crossVectors: function (t, e) {
                var i = t.x
                    , n = t.y
                    , r = t.z
                    , a = e.x
                    , o = e.y
                    , s = e.z;
                return this.x = n * s - r * o,
                    this.y = r * a - i * s,
                    this.z = i * o - n * a,
                    this
            },
            projectOnVector: function (t) {
                var e = t.dot(this) / t.lengthSq();
                return this.copy(t).multiplyScalar(e)
            },
            projectOnPlane: function () {
                var t = new c;
                return function (e) {
                    return t.copy(this).projectOnVector(e),
                        this.sub(t)
                }
            }(),
            reflect: function () {
                var t = new c;
                return function (e) {
                    return this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)))
                }
            }(),
            angleTo: function (t) {
                var e = this.dot(t) / Math.sqrt(this.lengthSq() * t.lengthSq());
                return Math.acos(bs.clamp(e, -1, 1))
            },
            distanceTo: function (t) {
                return Math.sqrt(this.distanceToSquared(t))
            },
            distanceToSquared: function (t) {
                var e = this.x - t.x
                    , i = this.y - t.y
                    , n = this.z - t.z;
                return e * e + i * i + n * n
            },
            distanceToManhattan: function (t) {
                return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z)
            },
            setFromSpherical: function (t) {
                var e = Math.sin(t.phi) * t.radius;
                return this.x = e * Math.sin(t.theta),
                    this.y = Math.cos(t.phi) * t.radius,
                    this.z = e * Math.cos(t.theta),
                    this
            },
            setFromCylindrical: function (t) {
                return this.x = t.radius * Math.sin(t.theta),
                    this.y = t.y,
                    this.z = t.radius * Math.cos(t.theta),
                    this
            },
            setFromMatrixPosition: function (t) {
                return this.setFromMatrixColumn(t, 3)
            },
            setFromMatrixScale: function (t) {
                var e = this.setFromMatrixColumn(t, 0).length()
                    , i = this.setFromMatrixColumn(t, 1).length()
                    , n = this.setFromMatrixColumn(t, 2).length();
                return this.x = e,
                    this.y = i,
                    this.z = n,
                    this
            },
            setFromMatrixColumn: function (t, e) {
                return this.fromArray(t.elements, 4 * e)
            },
            equals: function (t) {
                return t.x === this.x && t.y === this.y && t.z === this.z
            },
            fromArray: function (t, e) {
                return void 0 === e && (e = 0),
                    this.x = t[e],
                    this.y = t[e + 1],
                    this.z = t[e + 2],
                    this
            },
            toArray: function (t, e) {
                return void 0 === t && (t = []),
                    void 0 === e && (e = 0),
                    t[e] = this.x,
                    t[e + 1] = this.y,
                    t[e + 2] = this.z,
                    t
            },
            fromBufferAttribute: function (t, e, i) {
                return this.x = t.getX(e),
                    this.y = t.getY(e),
                    this.z = t.getZ(e),
                    this
            }
        }),
        Object.assign(u.prototype, {
            isMatrix4: !0,
            set: function (t, e, i, n, r, a, o, s, h, l, c, u, p, d, f, m) {
                var g = this.elements;
                return g[0] = t,
                    g[4] = e,
                    g[8] = i,
                    g[12] = n,
                    g[1] = r,
                    g[5] = a,
                    g[9] = o,
                    g[13] = s,
                    g[2] = h,
                    g[6] = l,
                    g[10] = c,
                    g[14] = u,
                    g[3] = p,
                    g[7] = d,
                    g[11] = f,
                    g[15] = m,
                    this
            },
            identity: function () {
                return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
            },
            clone: function () {
                return (new u).fromArray(this.elements)
            },
            copy: function (t) {
                var e = this.elements
                    , i = t.elements;
                return e[0] = i[0],
                    e[1] = i[1],
                    e[2] = i[2],
                    e[3] = i[3],
                    e[4] = i[4],
                    e[5] = i[5],
                    e[6] = i[6],
                    e[7] = i[7],
                    e[8] = i[8],
                    e[9] = i[9],
                    e[10] = i[10],
                    e[11] = i[11],
                    e[12] = i[12],
                    e[13] = i[13],
                    e[14] = i[14],
                    e[15] = i[15],
                    this
            },
            copyPosition: function (t) {
                var e = this.elements
                    , i = t.elements;
                return e[12] = i[12],
                    e[13] = i[13],
                    e[14] = i[14],
                    this
            },
            extractBasis: function (t, e, i) {
                return t.setFromMatrixColumn(this, 0),
                    e.setFromMatrixColumn(this, 1),
                    i.setFromMatrixColumn(this, 2),
                    this
            },
            makeBasis: function (t, e, i) {
                return this.set(t.x, e.x, i.x, 0, t.y, e.y, i.y, 0, t.z, e.z, i.z, 0, 0, 0, 0, 1),
                    this
            },
            extractRotation: function () {
                var t = new c;
                return function (e) {
                    var i = this.elements
                        , n = e.elements
                        , r = 1 / t.setFromMatrixColumn(e, 0).length()
                        , a = 1 / t.setFromMatrixColumn(e, 1).length()
                        , o = 1 / t.setFromMatrixColumn(e, 2).length();
                    return i[0] = n[0] * r,
                        i[1] = n[1] * r,
                        i[2] = n[2] * r,
                        i[4] = n[4] * a,
                        i[5] = n[5] * a,
                        i[6] = n[6] * a,
                        i[8] = n[8] * o,
                        i[9] = n[9] * o,
                        i[10] = n[10] * o,
                        this
                }
            }(),
            makeRotationFromEuler: function (t) {
                t && t.isEuler;
                var e = this.elements
                    , i = t.x
                    , n = t.y
                    , r = t.z
                    , a = Math.cos(i)
                    , o = Math.sin(i)
                    , s = Math.cos(n)
                    , h = Math.sin(n)
                    , l = Math.cos(r)
                    , c = Math.sin(r);
                if ("XYZ" === t.order) {
                    var u = a * l
                        , p = a * c
                        , d = o * l
                        , f = o * c;
                    e[0] = s * l,
                        e[4] = -s * c,
                        e[8] = h,
                        e[1] = p + d * h,
                        e[5] = u - f * h,
                        e[9] = -o * s,
                        e[2] = f - u * h,
                        e[6] = d + p * h,
                        e[10] = a * s
                } else if ("YXZ" === t.order) {
                    var m = s * l
                        , g = s * c
                        , v = h * l
                        , y = h * c;
                    e[0] = m + y * o,
                        e[4] = v * o - g,
                        e[8] = a * h,
                        e[1] = a * c,
                        e[5] = a * l,
                        e[9] = -o,
                        e[2] = g * o - v,
                        e[6] = y + m * o,
                        e[10] = a * s
                } else if ("ZXY" === t.order) {
                    var m = s * l
                        , g = s * c
                        , v = h * l
                        , y = h * c;
                    e[0] = m - y * o,
                        e[4] = -a * c,
                        e[8] = v + g * o,
                        e[1] = g + v * o,
                        e[5] = a * l,
                        e[9] = y - m * o,
                        e[2] = -a * h,
                        e[6] = o,
                        e[10] = a * s
                } else if ("ZYX" === t.order) {
                    var u = a * l
                        , p = a * c
                        , d = o * l
                        , f = o * c;
                    e[0] = s * l,
                        e[4] = d * h - p,
                        e[8] = u * h + f,
                        e[1] = s * c,
                        e[5] = f * h + u,
                        e[9] = p * h - d,
                        e[2] = -h,
                        e[6] = o * s,
                        e[10] = a * s
                } else if ("YZX" === t.order) {
                    var _ = a * s
                        , x = a * h
                        , w = o * s
                        , b = o * h;
                    e[0] = s * l,
                        e[4] = b - _ * c,
                        e[8] = w * c + x,
                        e[1] = c,
                        e[5] = a * l,
                        e[9] = -o * l,
                        e[2] = -h * l,
                        e[6] = x * c + w,
                        e[10] = _ - b * c
                } else if ("XZY" === t.order) {
                    var _ = a * s
                        , x = a * h
                        , w = o * s
                        , b = o * h;
                    e[0] = s * l,
                        e[4] = -c,
                        e[8] = h * l,
                        e[1] = _ * c + b,
                        e[5] = a * l,
                        e[9] = x * c - w,
                        e[2] = w * c - x,
                        e[6] = o * l,
                        e[10] = b * c + _
                }
                return e[3] = 0,
                    e[7] = 0,
                    e[11] = 0,
                    e[12] = 0,
                    e[13] = 0,
                    e[14] = 0,
                    e[15] = 1,
                    this
            },
            makeRotationFromQuaternion: function (t) {
                var e = this.elements
                    , i = t._x
                    , n = t._y
                    , r = t._z
                    , a = t._w
                    , o = i + i
                    , s = n + n
                    , h = r + r
                    , l = i * o
                    , c = i * s
                    , u = i * h
                    , p = n * s
                    , d = n * h
                    , f = r * h
                    , m = a * o
                    , g = a * s
                    , v = a * h;
                return e[0] = 1 - (p + f),
                    e[4] = c - v,
                    e[8] = u + g,
                    e[1] = c + v,
                    e[5] = 1 - (l + f),
                    e[9] = d - m,
                    e[2] = u - g,
                    e[6] = d + m,
                    e[10] = 1 - (l + p),
                    e[3] = 0,
                    e[7] = 0,
                    e[11] = 0,
                    e[12] = 0,
                    e[13] = 0,
                    e[14] = 0,
                    e[15] = 1,
                    this
            },
            lookAt: function () {
                var t = new c
                    , e = new c
                    , i = new c;
                return function (n, r, a) {
                    var o = this.elements;
                    return i.subVectors(n, r),
                        0 === i.lengthSq() && (i.z = 1),
                        i.normalize(),
                        t.crossVectors(a, i),
                        0 === t.lengthSq() && (i.z += 1e-4,
                            t.crossVectors(a, i)),
                        t.normalize(),
                        e.crossVectors(i, t),
                        o[0] = t.x,
                        o[4] = e.x,
                        o[8] = i.x,
                        o[1] = t.y,
                        o[5] = e.y,
                        o[9] = i.y,
                        o[2] = t.z,
                        o[6] = e.z,
                        o[10] = i.z,
                        this
                }
            }(),
            multiply: function (t, e) {
                return void 0 !== e ? this.multiplyMatrices(t, e) : this.multiplyMatrices(this, t)
            },
            premultiply: function (t) {
                return this.multiplyMatrices(t, this)
            },
            multiplyMatrices: function (t, e) {
                var i = t.elements
                    , n = e.elements
                    , r = this.elements
                    , a = i[0]
                    , o = i[4]
                    , s = i[8]
                    , h = i[12]
                    , l = i[1]
                    , c = i[5]
                    , u = i[9]
                    , p = i[13]
                    , d = i[2]
                    , f = i[6]
                    , m = i[10]
                    , g = i[14]
                    , v = i[3]
                    , y = i[7]
                    , _ = i[11]
                    , x = i[15]
                    , w = n[0]
                    , b = n[4]
                    , M = n[8]
                    , T = n[12]
                    , P = n[1]
                    , S = n[5]
                    , A = n[9]
                    , E = n[13]
                    , L = n[2]
                    , C = n[6]
                    , O = n[10]
                    , R = n[14]
                    , I = n[3]
                    , k = n[7]
                    , z = n[11]
                    , F = n[15];
                return r[0] = a * w + o * P + s * L + h * I,
                    r[4] = a * b + o * S + s * C + h * k,
                    r[8] = a * M + o * A + s * O + h * z,
                    r[12] = a * T + o * E + s * R + h * F,
                    r[1] = l * w + c * P + u * L + p * I,
                    r[5] = l * b + c * S + u * C + p * k,
                    r[9] = l * M + c * A + u * O + p * z,
                    r[13] = l * T + c * E + u * R + p * F,
                    r[2] = d * w + f * P + m * L + g * I,
                    r[6] = d * b + f * S + m * C + g * k,
                    r[10] = d * M + f * A + m * O + g * z,
                    r[14] = d * T + f * E + m * R + g * F,
                    r[3] = v * w + y * P + _ * L + x * I,
                    r[7] = v * b + y * S + _ * C + x * k,
                    r[11] = v * M + y * A + _ * O + x * z,
                    r[15] = v * T + y * E + _ * R + x * F,
                    this
            },
            multiplyScalar: function (t) {
                var e = this.elements;
                return e[0] *= t,
                    e[4] *= t,
                    e[8] *= t,
                    e[12] *= t,
                    e[1] *= t,
                    e[5] *= t,
                    e[9] *= t,
                    e[13] *= t,
                    e[2] *= t,
                    e[6] *= t,
                    e[10] *= t,
                    e[14] *= t,
                    e[3] *= t,
                    e[7] *= t,
                    e[11] *= t,
                    e[15] *= t,
                    this
            },
            applyToBufferAttribute: function () {
                var t = new c;
                return function (e) {
                    for (var i = 0, n = e.count; i < n; i++)
                        t.x = e.getX(i),
                            t.y = e.getY(i),
                            t.z = e.getZ(i),
                            t.applyMatrix4(this),
                            e.setXYZ(i, t.x, t.y, t.z);
                    return e
                }
            }(),
            determinant: function () {
                var t = this.elements
                    , e = t[0]
                    , i = t[4]
                    , n = t[8]
                    , r = t[12]
                    , a = t[1]
                    , o = t[5]
                    , s = t[9]
                    , h = t[13]
                    , l = t[2]
                    , c = t[6]
                    , u = t[10]
                    , p = t[14];
                return t[3] * (+r * s * c - n * h * c - r * o * u + i * h * u + n * o * p - i * s * p) + t[7] * (+e * s * p - e * h * u + r * a * u - n * a * p + n * h * l - r * s * l) + t[11] * (+e * h * c - e * o * p - r * a * c + i * a * p + r * o * l - i * h * l) + t[15] * (-n * o * l - e * s * c + e * o * u + n * a * c - i * a * u + i * s * l)
            },
            transpose: function () {
                var t, e = this.elements;
                return t = e[1],
                    e[1] = e[4],
                    e[4] = t,
                    t = e[2],
                    e[2] = e[8],
                    e[8] = t,
                    t = e[6],
                    e[6] = e[9],
                    e[9] = t,
                    t = e[3],
                    e[3] = e[12],
                    e[12] = t,
                    t = e[7],
                    e[7] = e[13],
                    e[13] = t,
                    t = e[11],
                    e[11] = e[14],
                    e[14] = t,
                    this
            },
            setPosition: function (t) {
                var e = this.elements;
                return e[12] = t.x,
                    e[13] = t.y,
                    e[14] = t.z,
                    this
            },
            getInverse: function (t, e) {
                var i = this.elements
                    , n = t.elements
                    , r = n[0]
                    , a = n[1]
                    , o = n[2]
                    , s = n[3]
                    , h = n[4]
                    , l = n[5]
                    , c = n[6]
                    , u = n[7]
                    , p = n[8]
                    , d = n[9]
                    , f = n[10]
                    , m = n[11]
                    , g = n[12]
                    , v = n[13]
                    , y = n[14]
                    , _ = n[15]
                    , x = d * y * u - v * f * u + v * c * m - l * y * m - d * c * _ + l * f * _
                    , w = g * f * u - p * y * u - g * c * m + h * y * m + p * c * _ - h * f * _
                    , b = p * v * u - g * d * u + g * l * m - h * v * m - p * l * _ + h * d * _
                    , M = g * d * c - p * v * c - g * l * f + h * v * f + p * l * y - h * d * y
                    , T = r * x + a * w + o * b + s * M;
                if (0 === T) {
                    var P = "THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";
                    if (!0 === e)
                        throw new Error(P);
                    return this.identity()
                }
                var S = 1 / T;
                return i[0] = x * S,
                    i[1] = (v * f * s - d * y * s - v * o * m + a * y * m + d * o * _ - a * f * _) * S,
                    i[2] = (l * y * s - v * c * s + v * o * u - a * y * u - l * o * _ + a * c * _) * S,
                    i[3] = (d * c * s - l * f * s - d * o * u + a * f * u + l * o * m - a * c * m) * S,
                    i[4] = w * S,
                    i[5] = (p * y * s - g * f * s + g * o * m - r * y * m - p * o * _ + r * f * _) * S,
                    i[6] = (g * c * s - h * y * s - g * o * u + r * y * u + h * o * _ - r * c * _) * S,
                    i[7] = (h * f * s - p * c * s + p * o * u - r * f * u - h * o * m + r * c * m) * S,
                    i[8] = b * S,
                    i[9] = (g * d * s - p * v * s - g * a * m + r * v * m + p * a * _ - r * d * _) * S,
                    i[10] = (h * v * s - g * l * s + g * a * u - r * v * u - h * a * _ + r * l * _) * S,
                    i[11] = (p * l * s - h * d * s - p * a * u + r * d * u + h * a * m - r * l * m) * S,
                    i[12] = M * S,
                    i[13] = (p * v * o - g * d * o + g * a * f - r * v * f - p * a * y + r * d * y) * S,
                    i[14] = (g * l * o - h * v * o - g * a * c + r * v * c + h * a * y - r * l * y) * S,
                    i[15] = (h * d * o - p * l * o + p * a * c - r * d * c - h * a * f + r * l * f) * S,
                    this
            },
            scale: function (t) {
                var e = this.elements
                    , i = t.x
                    , n = t.y
                    , r = t.z;
                return e[0] *= i,
                    e[4] *= n,
                    e[8] *= r,
                    e[1] *= i,
                    e[5] *= n,
                    e[9] *= r,
                    e[2] *= i,
                    e[6] *= n,
                    e[10] *= r,
                    e[3] *= i,
                    e[7] *= n,
                    e[11] *= r,
                    this
            },
            getMaxScaleOnAxis: function () {
                var t = this.elements
                    , e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2]
                    , i = t[4] * t[4] + t[5] * t[5] + t[6] * t[6]
                    , n = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
                return Math.sqrt(Math.max(e, i, n))
            },
            makeTranslation: function (t, e, i) {
                return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, i, 0, 0, 0, 1),
                    this
            },
            makeRotationX: function (t) {
                var e = Math.cos(t)
                    , i = Math.sin(t);
                return this.set(1, 0, 0, 0, 0, e, -i, 0, 0, i, e, 0, 0, 0, 0, 1),
                    this
            },
            makeRotationY: function (t) {
                var e = Math.cos(t)
                    , i = Math.sin(t);
                return this.set(e, 0, i, 0, 0, 1, 0, 0, -i, 0, e, 0, 0, 0, 0, 1),
                    this
            },
            makeRotationZ: function (t) {
                var e = Math.cos(t)
                    , i = Math.sin(t);
                return this.set(e, -i, 0, 0, i, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
            },
            makeRotationAxis: function (t, e) {
                var i = Math.cos(e)
                    , n = Math.sin(e)
                    , r = 1 - i
                    , a = t.x
                    , o = t.y
                    , s = t.z
                    , h = r * a
                    , l = r * o;
                return this.set(h * a + i, h * o - n * s, h * s + n * o, 0, h * o + n * s, l * o + i, l * s - n * a, 0, h * s - n * o, l * s + n * a, r * s * s + i, 0, 0, 0, 0, 1),
                    this
            },
            makeScale: function (t, e, i) {
                return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, i, 0, 0, 0, 0, 1),
                    this
            },
            makeShear: function (t, e, i) {
                return this.set(1, e, i, 0, t, 1, i, 0, t, e, 1, 0, 0, 0, 0, 1),
                    this
            },
            compose: function (t, e, i) {
                return this.makeRotationFromQuaternion(e),
                    this.scale(i),
                    this.setPosition(t),
                    this
            },
            decompose: function () {
                var t = new c
                    , e = new u;
                return function (i, n, r) {
                    var a = this.elements
                        , o = t.set(a[0], a[1], a[2]).length()
                        , s = t.set(a[4], a[5], a[6]).length()
                        , h = t.set(a[8], a[9], a[10]).length();
                    this.determinant() < 0 && (o = -o),
                        i.x = a[12],
                        i.y = a[13],
                        i.z = a[14],
                        e.copy(this);
                    var l = 1 / o
                        , c = 1 / s
                        , u = 1 / h;
                    return e.elements[0] *= l,
                        e.elements[1] *= l,
                        e.elements[2] *= l,
                        e.elements[4] *= c,
                        e.elements[5] *= c,
                        e.elements[6] *= c,
                        e.elements[8] *= u,
                        e.elements[9] *= u,
                        e.elements[10] *= u,
                        n.setFromRotationMatrix(e),
                        r.x = o,
                        r.y = s,
                        r.z = h,
                        this
                }
            }(),
            makePerspective: function (t, e, i, n, r, a) {
                var o = this.elements
                    , s = 2 * r / (e - t)
                    , h = 2 * r / (i - n)
                    , l = (e + t) / (e - t)
                    , c = (i + n) / (i - n)
                    , u = -(a + r) / (a - r)
                    , p = -2 * a * r / (a - r);
                return o[0] = s,
                    o[4] = 0,
                    o[8] = l,
                    o[12] = 0,
                    o[1] = 0,
                    o[5] = h,
                    o[9] = c,
                    o[13] = 0,
                    o[2] = 0,
                    o[6] = 0,
                    o[10] = u,
                    o[14] = p,
                    o[3] = 0,
                    o[7] = 0,
                    o[11] = -1,
                    o[15] = 0,
                    this
            },
            makeOrthographic: function (t, e, i, n, r, a) {
                var o = this.elements
                    , s = 1 / (e - t)
                    , h = 1 / (i - n)
                    , l = 1 / (a - r)
                    , c = (e + t) * s
                    , u = (i + n) * h
                    , p = (a + r) * l;
                return o[0] = 2 * s,
                    o[4] = 0,
                    o[8] = 0,
                    o[12] = -c,
                    o[1] = 0,
                    o[5] = 2 * h,
                    o[9] = 0,
                    o[13] = -u,
                    o[2] = 0,
                    o[6] = 0,
                    o[10] = -2 * l,
                    o[14] = -p,
                    o[3] = 0,
                    o[7] = 0,
                    o[11] = 0,
                    o[15] = 1,
                    this
            },
            equals: function (t) {
                for (var e = this.elements, i = t.elements, n = 0; n < 16; n++)
                    if (e[n] !== i[n])
                        return !1;
                return !0
            },
            fromArray: function (t, e) {
                void 0 === e && (e = 0);
                for (var i = 0; i < 16; i++)
                    this.elements[i] = t[i + e];
                return this
            },
            toArray: function (t, e) {
                void 0 === t && (t = []),
                    void 0 === e && (e = 0);
                var i = this.elements;
                return t[e] = i[0],
                    t[e + 1] = i[1],
                    t[e + 2] = i[2],
                    t[e + 3] = i[3],
                    t[e + 4] = i[4],
                    t[e + 5] = i[5],
                    t[e + 6] = i[6],
                    t[e + 7] = i[7],
                    t[e + 8] = i[8],
                    t[e + 9] = i[9],
                    t[e + 10] = i[10],
                    t[e + 11] = i[11],
                    t[e + 12] = i[12],
                    t[e + 13] = i[13],
                    t[e + 14] = i[14],
                    t[e + 15] = i[15],
                    t
            }
        }),
        p.prototype = Object.create(a.prototype),
        p.prototype.constructor = p,
        p.prototype.isDataTexture = !0,
        d.prototype = Object.create(a.prototype),
        d.prototype.constructor = d,
        d.prototype.isCubeTexture = !0,
        Object.defineProperty(d.prototype, "images", {
            get: function () {
                return this.image
            },
            set: function (t) {
                this.image = t
            }
        });
    var Ts = new a
        , Ps = new d
        , Ss = []
        , As = []
        , Es = new Float32Array(16)
        , Ls = new Float32Array(9);
    H.prototype.setValue = function (t, e) {
        for (var i = this.seq, n = 0, r = i.length; n !== r; ++n) {
            var a = i[n];
            a.setValue(t, e[a.id])
        }
    }
        ;
    var Cs = /([\w\d_]+)(\])?(\[|\.)?/g;
    Y.prototype.setValue = function (t, e, i) {
        var n = this.map[e];
        void 0 !== n && n.setValue(t, i, this.renderer)
    }
        ,
        Y.prototype.setOptional = function (t, e, i) {
            var n = e[i];
            void 0 !== n && this.setValue(t, i, n)
        }
        ,
        Y.upload = function (t, e, i, n) {
            for (var r = 0, a = e.length; r !== a; ++r) {
                var o = e[r]
                    , s = i[o.id];
                !1 !== s.needsUpdate && o.setValue(t, s.value, n)
            }
        }
        ,
        Y.seqWithValue = function (t, e) {
            for (var i = [], n = 0, r = t.length; n !== r; ++n) {
                var a = t[n];
                a.id in e && i.push(a)
            }
            return i
        }
        ;
    var Os = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    };
    Object.assign(q.prototype, {
        isColor: !0,
        r: 1,
        g: 1,
        b: 1,
        set: function (t) {
            return t && t.isColor ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t),
                this
        },
        setScalar: function (t) {
            return this.r = t,
                this.g = t,
                this.b = t,
                this
        },
        setHex: function (t) {
            return t = Math.floor(t),
                this.r = (t >> 16 & 255) / 255,
                this.g = (t >> 8 & 255) / 255,
                this.b = (255 & t) / 255,
                this
        },
        setRGB: function (t, e, i) {
            return this.r = t,
                this.g = e,
                this.b = i,
                this
        },
        setHSL: function () {
            function t(t, e, i) {
                return i < 0 && (i += 1),
                    i > 1 && (i -= 1),
                    i < 1 / 6 ? t + 6 * (e - t) * i : i < .5 ? e : i < 2 / 3 ? t + 6 * (e - t) * (2 / 3 - i) : t
            }
            return function (e, i, n) {
                if (e = bs.euclideanModulo(e, 1),
                    i = bs.clamp(i, 0, 1),
                    n = bs.clamp(n, 0, 1),
                    0 === i)
                    this.r = this.g = this.b = n;
                else {
                    var r = n <= .5 ? n * (1 + i) : n + i - n * i
                        , a = 2 * n - r;
                    this.r = t(a, r, e + 1 / 3),
                        this.g = t(a, r, e),
                        this.b = t(a, r, e - 1 / 3)
                }
                return this
            }
        }(),
        setStyle: function (t) {
            function e(t) {
                void 0 !== t && parseFloat(t)
            }
            var i;
            if (i = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)) {
                var n, r = i[1], a = i[2];
                switch (r) {
                    case "rgb":
                    case "rgba":
                        if (n = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                            return this.r = Math.min(255, parseInt(n[1], 10)) / 255,
                                this.g = Math.min(255, parseInt(n[2], 10)) / 255,
                                this.b = Math.min(255, parseInt(n[3], 10)) / 255,
                                e(n[5]),
                                this;
                        if (n = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                            return this.r = Math.min(100, parseInt(n[1], 10)) / 100,
                                this.g = Math.min(100, parseInt(n[2], 10)) / 100,
                                this.b = Math.min(100, parseInt(n[3], 10)) / 100,
                                e(n[5]),
                                this;
                        break;
                    case "hsl":
                    case "hsla":
                        if (n = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)) {
                            var o = parseFloat(n[1]) / 360
                                , s = parseInt(n[2], 10) / 100
                                , h = parseInt(n[3], 10) / 100;
                            return e(n[5]),
                                this.setHSL(o, s, h)
                        }
                }
            } else if (i = /^\#([A-Fa-f0-9]+)$/.exec(t)) {
                var l = i[1]
                    , c = l.length;
                if (3 === c)
                    return this.r = parseInt(l.charAt(0) + l.charAt(0), 16) / 255,
                        this.g = parseInt(l.charAt(1) + l.charAt(1), 16) / 255,
                        this.b = parseInt(l.charAt(2) + l.charAt(2), 16) / 255,
                        this;
                if (6 === c)
                    return this.r = parseInt(l.charAt(0) + l.charAt(1), 16) / 255,
                        this.g = parseInt(l.charAt(2) + l.charAt(3), 16) / 255,
                        this.b = parseInt(l.charAt(4) + l.charAt(5), 16) / 255,
                        this
            }
            if (t && t.length > 0) {
                var l = Os[t];
                void 0 !== l && this.setHex(l)
            }
            return this
        },
        clone: function () {
            return new this.constructor(this.r, this.g, this.b)
        },
        copy: function (t) {
            return this.r = t.r,
                this.g = t.g,
                this.b = t.b,
                this
        },
        copyGammaToLinear: function (t, e) {
            return void 0 === e && (e = 2),
                this.r = Math.pow(t.r, e),
                this.g = Math.pow(t.g, e),
                this.b = Math.pow(t.b, e),
                this
        },
        copyLinearToGamma: function (t, e) {
            void 0 === e && (e = 2);
            var i = e > 0 ? 1 / e : 1;
            return this.r = Math.pow(t.r, i),
                this.g = Math.pow(t.g, i),
                this.b = Math.pow(t.b, i),
                this
        },
        convertGammaToLinear: function () {
            var t = this.r
                , e = this.g
                , i = this.b;
            return this.r = t * t,
                this.g = e * e,
                this.b = i * i,
                this
        },
        convertLinearToGamma: function () {
            return this.r = Math.sqrt(this.r),
                this.g = Math.sqrt(this.g),
                this.b = Math.sqrt(this.b),
                this
        },
        getHex: function () {
            return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
        },
        getHexString: function () {
            return ("000000" + this.getHex().toString(16)).slice(-6)
        },
        getHSL: function (t) {
            var e, i, n = t || {
                h: 0,
                s: 0,
                l: 0
            }, r = this.r, a = this.g, o = this.b, s = Math.max(r, a, o), h = Math.min(r, a, o), l = (h + s) / 2;
            if (h === s)
                e = 0,
                    i = 0;
            else {
                var c = s - h;
                switch (i = l <= .5 ? c / (s + h) : c / (2 - s - h),
                s) {
                    case r:
                        e = (a - o) / c + (a < o ? 6 : 0);
                        break;
                    case a:
                        e = (o - r) / c + 2;
                        break;
                    case o:
                        e = (r - a) / c + 4
                }
                e /= 6
            }
            return n.h = e,
                n.s = i,
                n.l = l,
                n
        },
        getStyle: function () {
            return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
        },
        offsetHSL: function (t, e, i) {
            var n = this.getHSL();
            return n.h += t,
                n.s += e,
                n.l += i,
                this.setHSL(n.h, n.s, n.l),
                this
        },
        add: function (t) {
            return this.r += t.r,
                this.g += t.g,
                this.b += t.b,
                this
        },
        addColors: function (t, e) {
            return this.r = t.r + e.r,
                this.g = t.g + e.g,
                this.b = t.b + e.b,
                this
        },
        addScalar: function (t) {
            return this.r += t,
                this.g += t,
                this.b += t,
                this
        },
        sub: function (t) {
            return this.r = Math.max(0, this.r - t.r),
                this.g = Math.max(0, this.g - t.g),
                this.b = Math.max(0, this.b - t.b),
                this
        },
        multiply: function (t) {
            return this.r *= t.r,
                this.g *= t.g,
                this.b *= t.b,
                this
        },
        multiplyScalar: function (t) {
            return this.r *= t,
                this.g *= t,
                this.b *= t,
                this
        },
        lerp: function (t, e) {
            return this.r += (t.r - this.r) * e,
                this.g += (t.g - this.g) * e,
                this.b += (t.b - this.b) * e,
                this
        },
        equals: function (t) {
            return t.r === this.r && t.g === this.g && t.b === this.b
        },
        fromArray: function (t, e) {
            return void 0 === e && (e = 0),
                this.r = t[e],
                this.g = t[e + 1],
                this.b = t[e + 2],
                this
        },
        toArray: function (t, e) {
            return void 0 === t && (t = []),
                void 0 === e && (e = 0),
                t[e] = this.r,
                t[e + 1] = this.g,
                t[e + 2] = this.b,
                t
        },
        toJSON: function () {
            return this.getHex()
        }
    });
    var Rs = {
        common: {
            diffuse: {
                value: new q(15658734)
            },
            opacity: {
                value: 1
            },
            map: {
                value: null
            },
            offsetRepeat: {
                value: new o(0, 0, 1, 1)
            },
            specularMap: {
                value: null
            },
            alphaMap: {
                value: null
            },
            envMap: {
                value: null
            },
            flipEnvMap: {
                value: -1
            },
            reflectivity: {
                value: 1
            },
            refractionRatio: {
                value: .98
            }
        },
        aomap: {
            aoMap: {
                value: null
            },
            aoMapIntensity: {
                value: 1
            }
        },
        lightmap: {
            lightMap: {
                value: null
            },
            lightMapIntensity: {
                value: 1
            }
        },
        emissivemap: {
            emissiveMap: {
                value: null
            }
        },
        bumpmap: {
            bumpMap: {
                value: null
            },
            bumpScale: {
                value: 1
            }
        },
        normalmap: {
            normalMap: {
                value: null
            },
            normalScale: {
                value: new r(1, 1)
            }
        },
        displacementmap: {
            displacementMap: {
                value: null
            },
            displacementScale: {
                value: 1
            },
            displacementBias: {
                value: 0
            }
        },
        roughnessmap: {
            roughnessMap: {
                value: null
            }
        },
        metalnessmap: {
            metalnessMap: {
                value: null
            }
        },
        gradientmap: {
            gradientMap: {
                value: null
            }
        },
        fog: {
            fogDensity: {
                value: 25e-5
            },
            fogNear: {
                value: 1
            },
            fogFar: {
                value: 2e3
            },
            fogColor: {
                value: new q(16777215)
            }
        },
        lights: {
            ambientLightColor: {
                value: []
            },
            directionalLights: {
                value: [],
                properties: {
                    direction: {},
                    color: {},
                    shadow: {},
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            directionalShadowMap: {
                value: []
            },
            directionalShadowMatrix: {
                value: []
            },
            spotLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    direction: {},
                    distance: {},
                    coneCos: {},
                    penumbraCos: {},
                    decay: {},
                    shadow: {},
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            spotShadowMap: {
                value: []
            },
            spotShadowMatrix: {
                value: []
            },
            pointLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    decay: {},
                    distance: {},
                    shadow: {},
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            pointShadowMap: {
                value: []
            },
            pointShadowMatrix: {
                value: []
            },
            hemisphereLights: {
                value: [],
                properties: {
                    direction: {},
                    skyColor: {},
                    groundColor: {}
                }
            },
            rectAreaLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    width: {},
                    height: {}
                }
            }
        },
        points: {
            diffuse: {
                value: new q(15658734)
            },
            opacity: {
                value: 1
            },
            size: {
                value: 1
            },
            scale: {
                value: 1
            },
            map: {
                value: null
            },
            offsetRepeat: {
                value: new o(0, 0, 1, 1)
            }
        }
    }
        , Is = {
            merge: function (t) {
                for (var e = {}, i = 0; i < t.length; i++) {
                    var n = this.clone(t[i]);
                    for (var r in n)
                        e[r] = n[r]
                }
                return e
            },
            clone: function (t) {
                var e = {};
                for (var i in t) {
                    e[i] = {};
                    for (var n in t[i]) {
                        var r = t[i][n];
                        r && (r.isColor || r.isMatrix3 || r.isMatrix4 || r.isVector2 || r.isVector3 || r.isVector4 || r.isTexture) ? e[i][n] = r.clone() : Array.isArray(r) ? e[i][n] = r.slice() : e[i][n] = r
                    }
                }
                return e
            }
        }
        , ks = {
            alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",
            alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",
            alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",
            aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",
            aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
            begin_vertex: "\nvec3 transformed = vec3( position );\n",
            beginnormal_vertex: "\nvec3 objectNormal = vec3( normal );\n",
            bsdfs: "float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",
            bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",
            clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",
            clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",
            clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",
            clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",
            color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
            color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",
            color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
            color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
            common: "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transpose( const in mat3 v ) {\n\tmat3 tmp;\n\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\n\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\n\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\n\treturn tmp;\n}\n",
            cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",
            defaultnormal_vertex: "#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n",
            displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",
            displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",
            emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",
            emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",
            encodings_fragment: "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",
            encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",
            envmap_fragment: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",
            envmap_pars_fragment: "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",
            envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",
            envmap_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",
            fog_vertex: "\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",
            fog_pars_vertex: "#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",
            fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",
            fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",
            gradientmap_pars_fragment: "#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",
            lightmap_fragment: "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",
            lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
            lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",
            lights_pars: "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",
            lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",
            lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_BlinnPhong( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = BlinnExponentToGGXRoughness( material.specularShininess );\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",
            lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",
            lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",
            lights_template: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",
            logdepthbuf_fragment: "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",
            logdepthbuf_pars_fragment: "#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",
            logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",
            logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n",
            map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",
            map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",
            map_particle_fragment: "#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",
            map_particle_pars_fragment: "#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n",
            metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",
            metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
            morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",
            morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
            morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",
            normal_flip: "#ifdef DOUBLE_SIDED\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n\tfloat flipNormal = 1.0;\n#endif\n",
            normal_fragment: "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",
            normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",
            packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",
            premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",
            project_vertex: "#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n",
            dithering_fragment: "#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",
            dithering_pars_fragment: "#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",
            roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",
            roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
            shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",
            shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",
            shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",
            shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",
            skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
            skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",
            skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n",
            skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",
            specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
            specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
            tonemapping_fragment: "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",
            tonemapping_pars_fragment: "#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",
            uv_pars_fragment: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",
            uv_pars_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n",
            uv_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",
            uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
            uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",
            uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",
            worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n",
            cube_frag: "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",
            cube_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
            depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",
            depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
            distanceRGBA_frag: "uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n",
            distanceRGBA_vert: "varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition;\n}\n",
            equirect_frag: "uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",
            equirect_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
            linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
            linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",
            meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
            meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",
            meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
            meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
            meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
            meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
            meshphysical_frag: "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
            meshphysical_vert: "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
            normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",
            normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",
            points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
            points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
            shadow_frag: "uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\n}\n",
            shadow_vert: "#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n"
        }
        , zs = {
            basic: {
                uniforms: Is.merge([Rs.common, Rs.aomap, Rs.lightmap, Rs.fog]),
                vertexShader: ks.meshbasic_vert,
                fragmentShader: ks.meshbasic_frag
            },
            lambert: {
                uniforms: Is.merge([Rs.common, Rs.aomap, Rs.lightmap, Rs.emissivemap, Rs.fog, Rs.lights, {
                    emissive: {
                        value: new q(0)
                    }
                }]),
                vertexShader: ks.meshlambert_vert,
                fragmentShader: ks.meshlambert_frag
            },
            phong: {
                uniforms: Is.merge([Rs.common, Rs.aomap, Rs.lightmap, Rs.emissivemap, Rs.bumpmap, Rs.normalmap, Rs.displacementmap, Rs.gradientmap, Rs.fog, Rs.lights, {
                    emissive: {
                        value: new q(0)
                    },
                    specular: {
                        value: new q(1118481)
                    },
                    shininess: {
                        value: 30
                    }
                }]),
                vertexShader: ks.meshphong_vert,
                fragmentShader: ks.meshphong_frag
            },
            standard: {
                uniforms: Is.merge([Rs.common, Rs.aomap, Rs.lightmap, Rs.emissivemap, Rs.bumpmap, Rs.normalmap, Rs.displacementmap, Rs.roughnessmap, Rs.metalnessmap, Rs.fog, Rs.lights, {
                    emissive: {
                        value: new q(0)
                    },
                    roughness: {
                        value: .5
                    },
                    metalness: {
                        value: .5
                    },
                    envMapIntensity: {
                        value: 1
                    }
                }]),
                vertexShader: ks.meshphysical_vert,
                fragmentShader: ks.meshphysical_frag
            },
            points: {
                uniforms: Is.merge([Rs.points, Rs.fog]),
                vertexShader: ks.points_vert,
                fragmentShader: ks.points_frag
            },
            dashed: {
                uniforms: Is.merge([Rs.common, Rs.fog, {
                    scale: {
                        value: 1
                    },
                    dashSize: {
                        value: 1
                    },
                    totalSize: {
                        value: 2
                    }
                }]),
                vertexShader: ks.linedashed_vert,
                fragmentShader: ks.linedashed_frag
            },
            depth: {
                uniforms: Is.merge([Rs.common, Rs.displacementmap]),
                vertexShader: ks.depth_vert,
                fragmentShader: ks.depth_frag
            },
            normal: {
                uniforms: Is.merge([Rs.common, Rs.bumpmap, Rs.normalmap, Rs.displacementmap, {
                    opacity: {
                        value: 1
                    }
                }]),
                vertexShader: ks.normal_vert,
                fragmentShader: ks.normal_frag
            },
            cube: {
                uniforms: {
                    tCube: {
                        value: null
                    },
                    tFlip: {
                        value: -1
                    },
                    opacity: {
                        value: 1
                    }
                },
                vertexShader: ks.cube_vert,
                fragmentShader: ks.cube_frag
            },
            equirect: {
                uniforms: {
                    tEquirect: {
                        value: null
                    },
                    tFlip: {
                        value: -1
                    }
                },
                vertexShader: ks.equirect_vert,
                fragmentShader: ks.equirect_frag
            },
            distanceRGBA: {
                uniforms: {
                    lightPos: {
                        value: new c
                    }
                },
                vertexShader: ks.distanceRGBA_vert,
                fragmentShader: ks.distanceRGBA_frag
            }
        };
    zs.physical = {
        uniforms: Is.merge([zs.standard.uniforms, {
            clearCoat: {
                value: 0
            },
            clearCoatRoughness: {
                value: 0
            }
        }]),
        vertexShader: ks.meshphysical_vert,
        fragmentShader: ks.meshphysical_frag
    },
        Object.assign(Z.prototype, {
            set: function (t, e) {
                return this.min.copy(t),
                    this.max.copy(e),
                    this
            },
            setFromPoints: function (t) {
                this.makeEmpty();
                for (var e = 0, i = t.length; e < i; e++)
                    this.expandByPoint(t[e]);
                return this
            },
            setFromCenterAndSize: function () {
                var t = new r;
                return function (e, i) {
                    var n = t.copy(i).multiplyScalar(.5);
                    return this.min.copy(e).sub(n),
                        this.max.copy(e).add(n),
                        this
                }
            }(),
            clone: function () {
                return (new this.constructor).copy(this)
            },
            copy: function (t) {
                return this.min.copy(t.min),
                    this.max.copy(t.max),
                    this
            },
            makeEmpty: function () {
                return this.min.x = this.min.y = 1 / 0,
                    this.max.x = this.max.y = -1 / 0,
                    this
            },
            isEmpty: function () {
                return this.max.x < this.min.x || this.max.y < this.min.y
            },
            getCenter: function (t) {
                var e = t || new r;
                return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
            },
            getSize: function (t) {
                var e = t || new r;
                return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min)
            },
            expandByPoint: function (t) {
                return this.min.min(t),
                    this.max.max(t),
                    this
            },
            expandByVector: function (t) {
                return this.min.sub(t),
                    this.max.add(t),
                    this
            },
            expandByScalar: function (t) {
                return this.min.addScalar(-t),
                    this.max.addScalar(t),
                    this
            },
            containsPoint: function (t) {
                return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y)
            },
            containsBox: function (t) {
                return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y
            },
            getParameter: function (t, e) {
                return (e || new r).set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y))
            },
            intersectsBox: function (t) {
                return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y)
            },
            clampPoint: function (t, e) {
                return (e || new r).copy(t).clamp(this.min, this.max)
            },
            distanceToPoint: function () {
                var t = new r;
                return function (e) {
                    return t.copy(e).clamp(this.min, this.max).sub(e).length()
                }
            }(),
            intersect: function (t) {
                return this.min.max(t.min),
                    this.max.min(t.max),
                    this
            },
            union: function (t) {
                return this.min.min(t.min),
                    this.max.max(t.max),
                    this
            },
            translate: function (t) {
                return this.min.add(t),
                    this.max.add(t),
                    this
            },
            equals: function (t) {
                return t.min.equals(this.min) && t.max.equals(this.max)
            }
        });
    var Fs = 0;
    Object.assign(J.prototype, n.prototype, {
        isMaterial: !0,
        setValues: function (t) {
            if (void 0 !== t)
                for (var e in t) {
                    var i = t[e];
                    if (void 0 !== i) {
                        var n = this[e];
                        void 0 !== n && (n && n.isColor ? n.set(i) : n && n.isVector3 && i && i.isVector3 ? n.copy(i) : this[e] = "overdraw" === e ? Number(i) : i)
                    }
                }
        },
        toJSON: function (t) {
            function e(t) {
                var e = [];
                for (var i in t) {
                    var n = t[i];
                    delete n.metadata,
                        e.push(n)
                }
                return e
            }
            var i = void 0 === t;
            i && (t = {
                textures: {},
                images: {}
            });
            var n = {
                metadata: {
                    version: 4.5,
                    type: "Material",
                    generator: "Material.toJSON"
                }
            };
            if (n.uuid = this.uuid,
                n.type = this.type,
                "" !== this.name && (n.name = this.name),
                this.color && this.color.isColor && (n.color = this.color.getHex()),
                void 0 !== this.roughness && (n.roughness = this.roughness),
                void 0 !== this.metalness && (n.metalness = this.metalness),
                this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()),
                this.specular && this.specular.isColor && (n.specular = this.specular.getHex()),
                void 0 !== this.shininess && (n.shininess = this.shininess),
                void 0 !== this.clearCoat && (n.clearCoat = this.clearCoat),
                void 0 !== this.clearCoatRoughness && (n.clearCoatRoughness = this.clearCoatRoughness),
                this.map && this.map.isTexture && (n.map = this.map.toJSON(t).uuid),
                this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(t).uuid),
                this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(t).uuid),
                this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(t).uuid,
                    n.bumpScale = this.bumpScale),
                this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(t).uuid,
                    n.normalScale = this.normalScale.toArray()),
                this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(t).uuid,
                    n.displacementScale = this.displacementScale,
                    n.displacementBias = this.displacementBias),
                this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(t).uuid),
                this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(t).uuid),
                this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(t).uuid),
                this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(t).uuid),
                this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(t).uuid,
                    n.reflectivity = this.reflectivity),
                this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(t).uuid),
                void 0 !== this.size && (n.size = this.size),
                void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation),
                this.blending !== Ta && (n.blending = this.blending),
                this.shading !== _a && (n.shading = this.shading),
                this.side !== ma && (n.side = this.side),
                this.vertexColors !== xa && (n.vertexColors = this.vertexColors),
                this.opacity < 1 && (n.opacity = this.opacity),
                !0 === this.transparent && (n.transparent = this.transparent),
                n.depthFunc = this.depthFunc,
                n.depthTest = this.depthTest,
                n.depthWrite = this.depthWrite,
                this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
                !0 === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha),
                !0 === this.wireframe && (n.wireframe = this.wireframe),
                this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth),
                "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap),
                "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin),
                n.skinning = this.skinning,
                n.morphTargets = this.morphTargets,
                n.dithering = this.dithering,
                i) {
                var r = e(t.textures)
                    , a = e(t.images);
                r.length > 0 && (n.textures = r),
                    a.length > 0 && (n.images = a)
            }
            return n
        },
        clone: function () {
            return (new this.constructor).copy(this)
        },
        copy: function (t) {
            this.name = t.name,
                this.fog = t.fog,
                this.lights = t.lights,
                this.blending = t.blending,
                this.side = t.side,
                this.shading = t.shading,
                this.vertexColors = t.vertexColors,
                this.opacity = t.opacity,
                this.transparent = t.transparent,
                this.blendSrc = t.blendSrc,
                this.blendDst = t.blendDst,
                this.blendEquation = t.blendEquation,
                this.blendSrcAlpha = t.blendSrcAlpha,
                this.blendDstAlpha = t.blendDstAlpha,
                this.blendEquationAlpha = t.blendEquationAlpha,
                this.depthFunc = t.depthFunc,
                this.depthTest = t.depthTest,
                this.depthWrite = t.depthWrite,
                this.colorWrite = t.colorWrite,
                this.precision = t.precision,
                this.polygonOffset = t.polygonOffset,
                this.polygonOffsetFactor = t.polygonOffsetFactor,
                this.polygonOffsetUnits = t.polygonOffsetUnits,
                this.dithering = t.dithering,
                this.alphaTest = t.alphaTest,
                this.premultipliedAlpha = t.premultipliedAlpha,
                this.overdraw = t.overdraw,
                this.visible = t.visible,
                this.clipShadows = t.clipShadows,
                this.clipIntersection = t.clipIntersection;
            var e = t.clippingPlanes
                , i = null;
            if (null !== e) {
                var n = e.length;
                i = new Array(n);
                for (var r = 0; r !== n; ++r)
                    i[r] = e[r].clone()
            }
            return this.clippingPlanes = i,
                this
        },
        dispose: function () {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
        $.prototype = Object.create(J.prototype),
        $.prototype.constructor = $,
        $.prototype.isShaderMaterial = !0,
        $.prototype.copy = function (t) {
            return J.prototype.copy.call(this, t),
                this.fragmentShader = t.fragmentShader,
                this.vertexShader = t.vertexShader,
                this.uniforms = Is.clone(t.uniforms),
                this.defines = t.defines,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this.lights = t.lights,
                this.clipping = t.clipping,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this.morphNormals = t.morphNormals,
                this.extensions = t.extensions,
                this
        }
        ,
        $.prototype.toJSON = function (t) {
            var e = J.prototype.toJSON.call(this, t);
            return e.uniforms = this.uniforms,
                e.vertexShader = this.vertexShader,
                e.fragmentShader = this.fragmentShader,
                e
        }
        ,
        tt.prototype = Object.create(J.prototype),
        tt.prototype.constructor = tt,
        tt.prototype.isMeshDepthMaterial = !0,
        tt.prototype.copy = function (t) {
            return J.prototype.copy.call(this, t),
                this.depthPacking = t.depthPacking,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this.map = t.map,
                this.alphaMap = t.alphaMap,
                this.displacementMap = t.displacementMap,
                this.displacementScale = t.displacementScale,
                this.displacementBias = t.displacementBias,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this
        }
        ,
        Object.assign(et.prototype, {
            isBox3: !0,
            set: function (t, e) {
                return this.min.copy(t),
                    this.max.copy(e),
                    this
            },
            setFromArray: function (t) {
                for (var e = 1 / 0, i = 1 / 0, n = 1 / 0, r = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, h = t.length; s < h; s += 3) {
                    var l = t[s]
                        , c = t[s + 1]
                        , u = t[s + 2];
                    l < e && (e = l),
                        c < i && (i = c),
                        u < n && (n = u),
                        l > r && (r = l),
                        c > a && (a = c),
                        u > o && (o = u)
                }
                return this.min.set(e, i, n),
                    this.max.set(r, a, o),
                    this
            },
            setFromBufferAttribute: function (t) {
                for (var e = 1 / 0, i = 1 / 0, n = 1 / 0, r = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, h = t.count; s < h; s++) {
                    var l = t.getX(s)
                        , c = t.getY(s)
                        , u = t.getZ(s);
                    l < e && (e = l),
                        c < i && (i = c),
                        u < n && (n = u),
                        l > r && (r = l),
                        c > a && (a = c),
                        u > o && (o = u)
                }
                return this.min.set(e, i, n),
                    this.max.set(r, a, o),
                    this
            },
            setFromPoints: function (t) {
                this.makeEmpty();
                for (var e = 0, i = t.length; e < i; e++)
                    this.expandByPoint(t[e]);
                return this
            },
            setFromCenterAndSize: function () {
                var t = new c;
                return function (e, i) {
                    var n = t.copy(i).multiplyScalar(.5);
                    return this.min.copy(e).sub(n),
                        this.max.copy(e).add(n),
                        this
                }
            }(),
            setFromObject: function (t) {
                return this.makeEmpty(),
                    this.expandByObject(t)
            },
            clone: function () {
                return (new this.constructor).copy(this)
            },
            copy: function (t) {
                return this.min.copy(t.min),
                    this.max.copy(t.max),
                    this
            },
            makeEmpty: function () {
                return this.min.x = this.min.y = this.min.z = 1 / 0,
                    this.max.x = this.max.y = this.max.z = -1 / 0,
                    this
            },
            isEmpty: function () {
                return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
            },
            getCenter: function (t) {
                var e = t || new c;
                return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
            },
            getSize: function (t) {
                var e = t || new c;
                return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min)
            },
            expandByPoint: function (t) {
                return this.min.min(t),
                    this.max.max(t),
                    this
            },
            expandByVector: function (t) {
                return this.min.sub(t),
                    this.max.add(t),
                    this
            },
            expandByScalar: function (t) {
                return this.min.addScalar(-t),
                    this.max.addScalar(t),
                    this
            },
            expandByObject: function () {
                var t = new c;
                return function (e) {
                    var i = this;
                    return e.updateMatrixWorld(!0),
                        e.traverse(function (e) {
                            var n, r, a = e.geometry;
                            if (void 0 !== a)
                                if (a.isGeometry) {
                                    var o = a.vertices;
                                    for (n = 0,
                                        r = o.length; n < r; n++)
                                        t.copy(o[n]),
                                            t.applyMatrix4(e.matrixWorld),
                                            i.expandByPoint(t)
                                } else if (a.isBufferGeometry) {
                                    var s = a.attributes.position;
                                    if (void 0 !== s)
                                        for (n = 0,
                                            r = s.count; n < r; n++)
                                            t.fromBufferAttribute(s, n).applyMatrix4(e.matrixWorld),
                                                i.expandByPoint(t)
                                }
                        }),
                        this
                }
            }(),
            containsPoint: function (t) {
                return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z)
            },
            containsBox: function (t) {
                return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z
            },
            getParameter: function (t, e) {
                return (e || new c).set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z))
            },
            intersectsBox: function (t) {
                return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z)
            },
            intersectsSphere: function () {
                var t = new c;
                return function (e) {
                    return this.clampPoint(e.center, t),
                        t.distanceToSquared(e.center) <= e.radius * e.radius
                }
            }(),
            intersectsPlane: function (t) {
                var e, i;
                return t.normal.x > 0 ? (e = t.normal.x * this.min.x,
                    i = t.normal.x * this.max.x) : (e = t.normal.x * this.max.x,
                        i = t.normal.x * this.min.x),
                    t.normal.y > 0 ? (e += t.normal.y * this.min.y,
                        i += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y,
                            i += t.normal.y * this.min.y),
                    t.normal.z > 0 ? (e += t.normal.z * this.min.z,
                        i += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z,
                            i += t.normal.z * this.min.z),
                    e <= t.constant && i >= t.constant
            },
            clampPoint: function (t, e) {
                return (e || new c).copy(t).clamp(this.min, this.max)
            },
            distanceToPoint: function () {
                var t = new c;
                return function (e) {
                    return t.copy(e).clamp(this.min, this.max).sub(e).length()
                }
            }(),
            getBoundingSphere: function () {
                var t = new c;
                return function (e) {
                    var i = e || new it;
                    return this.getCenter(i.center),
                        i.radius = .5 * this.getSize(t).length(),
                        i
                }
            }(),
            intersect: function (t) {
                return this.min.max(t.min),
                    this.max.min(t.max),
                    this.isEmpty() && this.makeEmpty(),
                    this
            },
            union: function (t) {
                return this.min.min(t.min),
                    this.max.max(t.max),
                    this
            },
            applyMatrix4: function () {
                var t = [new c, new c, new c, new c, new c, new c, new c, new c];
                return function (e) {
                    return this.isEmpty() ? this : (t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
                        t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
                        t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
                        t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
                        t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
                        t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
                        t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
                        t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
                        this.setFromPoints(t),
                        this)
                }
            }(),
            translate: function (t) {
                return this.min.add(t),
                    this.max.add(t),
                    this
            },
            equals: function (t) {
                return t.min.equals(this.min) && t.max.equals(this.max)
            }
        }),
        Object.assign(it.prototype, {
            set: function (t, e) {
                return this.center.copy(t),
                    this.radius = e,
                    this
            },
            setFromPoints: function () {
                var t = new et;
                return function (e, i) {
                    var n = this.center;
                    void 0 !== i ? n.copy(i) : t.setFromPoints(e).getCenter(n);
                    for (var r = 0, a = 0, o = e.length; a < o; a++)
                        r = Math.max(r, n.distanceToSquared(e[a]));
                    return this.radius = Math.sqrt(r),
                        this
                }
            }(),
            clone: function () {
                return (new this.constructor).copy(this)
            },
            copy: function (t) {
                return this.center.copy(t.center),
                    this.radius = t.radius,
                    this
            },
            empty: function () {
                return this.radius <= 0
            },
            containsPoint: function (t) {
                return t.distanceToSquared(this.center) <= this.radius * this.radius
            },
            distanceToPoint: function (t) {
                return t.distanceTo(this.center) - this.radius
            },
            intersectsSphere: function (t) {
                var e = this.radius + t.radius;
                return t.center.distanceToSquared(this.center) <= e * e
            },
            intersectsBox: function (t) {
                return t.intersectsSphere(this)
            },
            intersectsPlane: function (t) {
                return Math.abs(this.center.dot(t.normal) - t.constant) <= this.radius
            },
            clampPoint: function (t, e) {
                var i = this.center.distanceToSquared(t)
                    , n = e || new c;
                return n.copy(t),
                    i > this.radius * this.radius && (n.sub(this.center).normalize(),
                        n.multiplyScalar(this.radius).add(this.center)),
                    n
            },
            getBoundingBox: function (t) {
                var e = t || new et;
                return e.set(this.center, this.center),
                    e.expandByScalar(this.radius),
                    e
            },
            applyMatrix4: function (t) {
                return this.center.applyMatrix4(t),
                    this.radius = this.radius * t.getMaxScaleOnAxis(),
                    this
            },
            translate: function (t) {
                return this.center.add(t),
                    this
            },
            equals: function (t) {
                return t.center.equals(this.center) && t.radius === this.radius
            }
        }),
        Object.assign(nt.prototype, {
            isMatrix3: !0,
            set: function (t, e, i, n, r, a, o, s, h) {
                var l = this.elements;
                return l[0] = t,
                    l[1] = n,
                    l[2] = o,
                    l[3] = e,
                    l[4] = r,
                    l[5] = s,
                    l[6] = i,
                    l[7] = a,
                    l[8] = h,
                    this
            },
            identity: function () {
                return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
                    this
            },
            clone: function () {
                return (new this.constructor).fromArray(this.elements)
            },
            copy: function (t) {
                var e = this.elements
                    , i = t.elements;
                return e[0] = i[0],
                    e[1] = i[1],
                    e[2] = i[2],
                    e[3] = i[3],
                    e[4] = i[4],
                    e[5] = i[5],
                    e[6] = i[6],
                    e[7] = i[7],
                    e[8] = i[8],
                    this
            },
            setFromMatrix4: function (t) {
                var e = t.elements;
                return this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]),
                    this
            },
            applyToBufferAttribute: function () {
                var t = new c;
                return function (e) {
                    for (var i = 0, n = e.count; i < n; i++)
                        t.x = e.getX(i),
                            t.y = e.getY(i),
                            t.z = e.getZ(i),
                            t.applyMatrix3(this),
                            e.setXYZ(i, t.x, t.y, t.z);
                    return e
                }
            }(),
            multiply: function (t) {
                return this.multiplyMatrices(this, t)
            },
            premultiply: function (t) {
                return this.multiplyMatrices(t, this)
            },
            multiplyMatrices: function (t, e) {
                var i = t.elements
                    , n = e.elements
                    , r = this.elements
                    , a = i[0]
                    , o = i[3]
                    , s = i[6]
                    , h = i[1]
                    , l = i[4]
                    , c = i[7]
                    , u = i[2]
                    , p = i[5]
                    , d = i[8]
                    , f = n[0]
                    , m = n[3]
                    , g = n[6]
                    , v = n[1]
                    , y = n[4]
                    , _ = n[7]
                    , x = n[2]
                    , w = n[5]
                    , b = n[8];
                return r[0] = a * f + o * v + s * x,
                    r[3] = a * m + o * y + s * w,
                    r[6] = a * g + o * _ + s * b,
                    r[1] = h * f + l * v + c * x,
                    r[4] = h * m + l * y + c * w,
                    r[7] = h * g + l * _ + c * b,
                    r[2] = u * f + p * v + d * x,
                    r[5] = u * m + p * y + d * w,
                    r[8] = u * g + p * _ + d * b,
                    this
            },
            multiplyScalar: function (t) {
                var e = this.elements;
                return e[0] *= t,
                    e[3] *= t,
                    e[6] *= t,
                    e[1] *= t,
                    e[4] *= t,
                    e[7] *= t,
                    e[2] *= t,
                    e[5] *= t,
                    e[8] *= t,
                    this
            },
            determinant: function () {
                var t = this.elements
                    , e = t[0]
                    , i = t[1]
                    , n = t[2]
                    , r = t[3]
                    , a = t[4]
                    , o = t[5]
                    , s = t[6]
                    , h = t[7]
                    , l = t[8];
                return e * a * l - e * o * h - i * r * l + i * o * s + n * r * h - n * a * s
            },
            getInverse: function (t, e) {
                t && t.isMatrix4;
                var i = t.elements
                    , n = this.elements
                    , r = i[0]
                    , a = i[1]
                    , o = i[2]
                    , s = i[3]
                    , h = i[4]
                    , l = i[5]
                    , c = i[6]
                    , u = i[7]
                    , p = i[8]
                    , d = p * h - l * u
                    , f = l * c - p * s
                    , m = u * s - h * c
                    , g = r * d + a * f + o * m;
                if (0 === g) {
                    var v = "THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";
                    if (!0 === e)
                        throw new Error(v);
                    return this.identity()
                }
                var y = 1 / g;
                return n[0] = d * y,
                    n[1] = (o * u - p * a) * y,
                    n[2] = (l * a - o * h) * y,
                    n[3] = f * y,
                    n[4] = (p * r - o * c) * y,
                    n[5] = (o * s - l * r) * y,
                    n[6] = m * y,
                    n[7] = (a * c - u * r) * y,
                    n[8] = (h * r - a * s) * y,
                    this
            },
            transpose: function () {
                var t, e = this.elements;
                return t = e[1],
                    e[1] = e[3],
                    e[3] = t,
                    t = e[2],
                    e[2] = e[6],
                    e[6] = t,
                    t = e[5],
                    e[5] = e[7],
                    e[7] = t,
                    this
            },
            getNormalMatrix: function (t) {
                return this.setFromMatrix4(t).getInverse(this).transpose()
            },
            transposeIntoArray: function (t) {
                var e = this.elements;
                return t[0] = e[0],
                    t[1] = e[3],
                    t[2] = e[6],
                    t[3] = e[1],
                    t[4] = e[4],
                    t[5] = e[7],
                    t[6] = e[2],
                    t[7] = e[5],
                    t[8] = e[8],
                    this
            },
            equals: function (t) {
                for (var e = this.elements, i = t.elements, n = 0; n < 9; n++)
                    if (e[n] !== i[n])
                        return !1;
                return !0
            },
            fromArray: function (t, e) {
                void 0 === e && (e = 0);
                for (var i = 0; i < 9; i++)
                    this.elements[i] = t[i + e];
                return this
            },
            toArray: function (t, e) {
                void 0 === t && (t = []),
                    void 0 === e && (e = 0);
                var i = this.elements;
                return t[e] = i[0],
                    t[e + 1] = i[1],
                    t[e + 2] = i[2],
                    t[e + 3] = i[3],
                    t[e + 4] = i[4],
                    t[e + 5] = i[5],
                    t[e + 6] = i[6],
                    t[e + 7] = i[7],
                    t[e + 8] = i[8],
                    t
            }
        }),
        Object.assign(rt.prototype, {
            set: function (t, e) {
                return this.normal.copy(t),
                    this.constant = e,
                    this
            },
            setComponents: function (t, e, i, n) {
                return this.normal.set(t, e, i),
                    this.constant = n,
                    this
            },
            setFromNormalAndCoplanarPoint: function (t, e) {
                return this.normal.copy(t),
                    this.constant = -e.dot(this.normal),
                    this
            },
            setFromCoplanarPoints: function () {
                var t = new c
                    , e = new c;
                return function (i, n, r) {
                    var a = t.subVectors(r, n).cross(e.subVectors(i, n)).normalize();
                    return this.setFromNormalAndCoplanarPoint(a, i),
                        this
                }
            }(),
            clone: function () {
                return (new this.constructor).copy(this)
            },
            copy: function (t) {
                return this.normal.copy(t.normal),
                    this.constant = t.constant,
                    this
            },
            normalize: function () {
                var t = 1 / this.normal.length();
                return this.normal.multiplyScalar(t),
                    this.constant *= t,
                    this
            },
            negate: function () {
                return this.constant *= -1,
                    this.normal.negate(),
                    this
            },
            distanceToPoint: function (t) {
                return this.normal.dot(t) + this.constant
            },
            distanceToSphere: function (t) {
                return this.distanceToPoint(t.center) - t.radius
            },
            projectPoint: function (t, e) {
                return this.orthoPoint(t, e).sub(t).negate()
            },
            orthoPoint: function (t, e) {
                var i = this.distanceToPoint(t);
                return (e || new c).copy(this.normal).multiplyScalar(i)
            },
            intersectLine: function () {
                var t = new c;
                return function (e, i) {
                    var n = i || new c
                        , r = e.delta(t)
                        , a = this.normal.dot(r);
                    if (0 !== a) {
                        var o = -(e.start.dot(this.normal) + this.constant) / a;
                        if (!(o < 0 || o > 1))
                            return n.copy(r).multiplyScalar(o).add(e.start)
                    } else if (0 === this.distanceToPoint(e.start))
                        return n.copy(e.start)
                }
            }(),
            intersectsLine: function (t) {
                var e = this.distanceToPoint(t.start)
                    , i = this.distanceToPoint(t.end);
                return e < 0 && i > 0 || i < 0 && e > 0
            },
            intersectsBox: function (t) {
                return t.intersectsPlane(this)
            },
            intersectsSphere: function (t) {
                return t.intersectsPlane(this)
            },
            coplanarPoint: function (t) {
                return (t || new c).copy(this.normal).multiplyScalar(-this.constant)
            },
            applyMatrix4: function () {
                var t = new c
                    , e = new nt;
                return function (i, n) {
                    var r = this.coplanarPoint(t).applyMatrix4(i)
                        , a = n || e.getNormalMatrix(i)
                        , o = this.normal.applyMatrix3(a).normalize();
                    return this.constant = -r.dot(o),
                        this
                }
            }(),
            translate: function (t) {
                return this.constant = this.constant - t.dot(this.normal),
                    this
            },
            equals: function (t) {
                return t.normal.equals(this.normal) && t.constant === this.constant
            }
        }),
        Object.assign(at.prototype, {
            set: function (t, e, i, n, r, a) {
                var o = this.planes;
                return o[0].copy(t),
                    o[1].copy(e),
                    o[2].copy(i),
                    o[3].copy(n),
                    o[4].copy(r),
                    o[5].copy(a),
                    this
            },
            clone: function () {
                return (new this.constructor).copy(this)
            },
            copy: function (t) {
                for (var e = this.planes, i = 0; i < 6; i++)
                    e[i].copy(t.planes[i]);
                return this
            },
            setFromMatrix: function (t) {
                var e = this.planes
                    , i = t.elements
                    , n = i[0]
                    , r = i[1]
                    , a = i[2]
                    , o = i[3]
                    , s = i[4]
                    , h = i[5]
                    , l = i[6]
                    , c = i[7]
                    , u = i[8]
                    , p = i[9]
                    , d = i[10]
                    , f = i[11]
                    , m = i[12]
                    , g = i[13]
                    , v = i[14]
                    , y = i[15];
                return e[0].setComponents(o - n, c - s, f - u, y - m).normalize(),
                    e[1].setComponents(o + n, c + s, f + u, y + m).normalize(),
                    e[2].setComponents(o + r, c + h, f + p, y + g).normalize(),
                    e[3].setComponents(o - r, c - h, f - p, y - g).normalize(),
                    e[4].setComponents(o - a, c - l, f - d, y - v).normalize(),
                    e[5].setComponents(o + a, c + l, f + d, y + v).normalize(),
                    this
            },
            intersectsObject: function () {
                var t = new it;
                return function (e) {
                    var i = e.geometry;
                    return null === i.boundingSphere && i.computeBoundingSphere(),
                        t.copy(i.boundingSphere).applyMatrix4(e.matrixWorld),
                        this.intersectsSphere(t)
                }
            }(),
            intersectsSprite: function () {
                var t = new it;
                return function (e) {
                    return t.center.set(0, 0, 0),
                        t.radius = .7071067811865476,
                        t.applyMatrix4(e.matrixWorld),
                        this.intersectsSphere(t)
                }
            }(),
            intersectsSphere: function (t) {
                for (var e = this.planes, i = t.center, n = -t.radius, r = 0; r < 6; r++) {
                    if (e[r].distanceToPoint(i) < n)
                        return !1
                }
                return !0
            },
            intersectsBox: function () {
                var t = new c
                    , e = new c;
                return function (i) {
                    for (var n = this.planes, r = 0; r < 6; r++) {
                        var a = n[r];
                        t.x = a.normal.x > 0 ? i.min.x : i.max.x,
                            e.x = a.normal.x > 0 ? i.max.x : i.min.x,
                            t.y = a.normal.y > 0 ? i.min.y : i.max.y,
                            e.y = a.normal.y > 0 ? i.max.y : i.min.y,
                            t.z = a.normal.z > 0 ? i.min.z : i.max.z,
                            e.z = a.normal.z > 0 ? i.max.z : i.min.z;
                        var o = a.distanceToPoint(t)
                            , s = a.distanceToPoint(e);
                        if (o < 0 && s < 0)
                            return !1
                    }
                    return !0
                }
            }(),
            containsPoint: function (t) {
                for (var e = this.planes, i = 0; i < 6; i++)
                    if (e[i].distanceToPoint(t) < 0)
                        return !1;
                return !0
            }
        }),
        Object.assign(st.prototype, {
            set: function (t, e) {
                return this.origin.copy(t),
                    this.direction.copy(e),
                    this
            },
            clone: function () {
                return (new this.constructor).copy(this)
            },
            copy: function (t) {
                return this.origin.copy(t.origin),
                    this.direction.copy(t.direction),
                    this
            },
            at: function (t, e) {
                return (e || new c).copy(this.direction).multiplyScalar(t).add(this.origin)
            },
            lookAt: function (t) {
                return this.direction.copy(t).sub(this.origin).normalize(),
                    this
            },
            recast: function () {
                var t = new c;
                return function (e) {
                    return this.origin.copy(this.at(e, t)),
                        this
                }
            }(),
            closestPointToPoint: function (t, e) {
                var i = e || new c;
                i.subVectors(t, this.origin);
                var n = i.dot(this.direction);
                return n < 0 ? i.copy(this.origin) : i.copy(this.direction).multiplyScalar(n).add(this.origin)
            },
            distanceToPoint: function (t) {
                return Math.sqrt(this.distanceSqToPoint(t))
            },
            distanceSqToPoint: function () {
                var t = new c;
                return function (e) {
                    var i = t.subVectors(e, this.origin).dot(this.direction);
                    return i < 0 ? this.origin.distanceToSquared(e) : (t.copy(this.direction).multiplyScalar(i).add(this.origin),
                        t.distanceToSquared(e))
                }
            }(),
            distanceSqToSegment: function () {
                var t = new c
                    , e = new c
                    , i = new c;
                return function (n, r, a, o) {
                    t.copy(n).add(r).multiplyScalar(.5),
                        e.copy(r).sub(n).normalize(),
                        i.copy(this.origin).sub(t);
                    var s, h, l, c, u = .5 * n.distanceTo(r), p = -this.direction.dot(e), d = i.dot(this.direction), f = -i.dot(e), m = i.lengthSq(), g = Math.abs(1 - p * p);
                    if (g > 0)
                        if (s = p * f - d,
                            h = p * d - f,
                            c = u * g,
                            s >= 0)
                            if (h >= -c)
                                if (h <= c) {
                                    var v = 1 / g;
                                    s *= v,
                                        h *= v,
                                        l = s * (s + p * h + 2 * d) + h * (p * s + h + 2 * f) + m
                                } else
                                    h = u,
                                        s = Math.max(0, -(p * h + d)),
                                        l = -s * s + h * (h + 2 * f) + m;
                            else
                                h = -u,
                                    s = Math.max(0, -(p * h + d)),
                                    l = -s * s + h * (h + 2 * f) + m;
                        else
                            h <= -c ? (s = Math.max(0, -(-p * u + d)),
                                h = s > 0 ? -u : Math.min(Math.max(-u, -f), u),
                                l = -s * s + h * (h + 2 * f) + m) : h <= c ? (s = 0,
                                    h = Math.min(Math.max(-u, -f), u),
                                    l = h * (h + 2 * f) + m) : (s = Math.max(0, -(p * u + d)),
                                        h = s > 0 ? u : Math.min(Math.max(-u, -f), u),
                                        l = -s * s + h * (h + 2 * f) + m);
                    else
                        h = p > 0 ? -u : u,
                            s = Math.max(0, -(p * h + d)),
                            l = -s * s + h * (h + 2 * f) + m;
                    return a && a.copy(this.direction).multiplyScalar(s).add(this.origin),
                        o && o.copy(e).multiplyScalar(h).add(t),
                        l
                }
            }(),
            intersectSphere: function () {
                var t = new c;
                return function (e, i) {
                    t.subVectors(e.center, this.origin);
                    var n = t.dot(this.direction)
                        , r = t.dot(t) - n * n
                        , a = e.radius * e.radius;
                    if (r > a)
                        return null;
                    var o = Math.sqrt(a - r)
                        , s = n - o
                        , h = n + o;
                    return s < 0 && h < 0 ? null : s < 0 ? this.at(h, i) : this.at(s, i)
                }
            }(),
            intersectsSphere: function (t) {
                return this.distanceToPoint(t.center) <= t.radius
            },
            distanceToPlane: function (t) {
                var e = t.normal.dot(this.direction);
                if (0 === e)
                    return 0 === t.distanceToPoint(this.origin) ? 0 : null;
                var i = -(this.origin.dot(t.normal) + t.constant) / e;
                return i >= 0 ? i : null
            },
            intersectPlane: function (t, e) {
                var i = this.distanceToPlane(t);
                return null === i ? null : this.at(i, e)
            },
            intersectsPlane: function (t) {
                var e = t.distanceToPoint(this.origin);
                return 0 === e || t.normal.dot(this.direction) * e < 0
            },
            intersectBox: function (t, e) {
                var i, n, r, a, o, s, h = 1 / this.direction.x, l = 1 / this.direction.y, c = 1 / this.direction.z, u = this.origin;
                return h >= 0 ? (i = (t.min.x - u.x) * h,
                    n = (t.max.x - u.x) * h) : (i = (t.max.x - u.x) * h,
                        n = (t.min.x - u.x) * h),
                    l >= 0 ? (r = (t.min.y - u.y) * l,
                        a = (t.max.y - u.y) * l) : (r = (t.max.y - u.y) * l,
                            a = (t.min.y - u.y) * l),
                    i > a || r > n ? null : ((r > i || i !== i) && (i = r),
                        (a < n || n !== n) && (n = a),
                        c >= 0 ? (o = (t.min.z - u.z) * c,
                            s = (t.max.z - u.z) * c) : (o = (t.max.z - u.z) * c,
                                s = (t.min.z - u.z) * c),
                        i > s || o > n ? null : ((o > i || i !== i) && (i = o),
                            (s < n || n !== n) && (n = s),
                            n < 0 ? null : this.at(i >= 0 ? i : n, e)))
            },
            intersectsBox: function () {
                var t = new c;
                return function (e) {
                    return null !== this.intersectBox(e, t)
                }
            }(),
            intersectTriangle: function () {
                var t = new c
                    , e = new c
                    , i = new c
                    , n = new c;
                return function (r, a, o, s, h) {
                    e.subVectors(a, r),
                        i.subVectors(o, r),
                        n.crossVectors(e, i);
                    var l, c = this.direction.dot(n);
                    if (c > 0) {
                        if (s)
                            return null;
                        l = 1
                    } else {
                        if (!(c < 0))
                            return null;
                        l = -1,
                            c = -c
                    }
                    t.subVectors(this.origin, r);
                    var u = l * this.direction.dot(i.crossVectors(t, i));
                    if (u < 0)
                        return null;
                    var p = l * this.direction.dot(e.cross(t));
                    if (p < 0)
                        return null;
                    if (u + p > c)
                        return null;
                    var d = -l * t.dot(n);
                    return d < 0 ? null : this.at(d / c, h)
                }
            }(),
            applyMatrix4: function (t) {
                return this.direction.add(this.origin).applyMatrix4(t),
                    this.origin.applyMatrix4(t),
                    this.direction.sub(this.origin),
                    this.direction.normalize(),
                    this
            },
            equals: function (t) {
                return t.origin.equals(this.origin) && t.direction.equals(this.direction)
            }
        }),
        ht.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"],
        ht.DefaultOrder = "XYZ",
        Object.defineProperties(ht.prototype, {
            x: {
                get: function () {
                    return this._x
                },
                set: function (t) {
                    this._x = t,
                        this.onChangeCallback()
                }
            },
            y: {
                get: function () {
                    return this._y
                },
                set: function (t) {
                    this._y = t,
                        this.onChangeCallback()
                }
            },
            z: {
                get: function () {
                    return this._z
                },
                set: function (t) {
                    this._z = t,
                        this.onChangeCallback()
                }
            },
            order: {
                get: function () {
                    return this._order
                },
                set: function (t) {
                    this._order = t,
                        this.onChangeCallback()
                }
            }
        }),
        Object.assign(ht.prototype, {
            isEuler: !0,
            set: function (t, e, i, n) {
                return this._x = t,
                    this._y = e,
                    this._z = i,
                    this._order = n || this._order,
                    this.onChangeCallback(),
                    this
            },
            clone: function () {
                return new this.constructor(this._x, this._y, this._z, this._order)
            },
            copy: function (t) {
                return this._x = t._x,
                    this._y = t._y,
                    this._z = t._z,
                    this._order = t._order,
                    this.onChangeCallback(),
                    this
            },
            setFromRotationMatrix: function (t, e, i) {
                var n = bs.clamp
                    , r = t.elements
                    , a = r[0]
                    , o = r[4]
                    , s = r[8]
                    , h = r[1]
                    , l = r[5]
                    , c = r[9]
                    , u = r[2]
                    , p = r[6]
                    , d = r[10];
                return e = e || this._order,
                    "XYZ" === e ? (this._y = Math.asin(n(s, -1, 1)),
                        Math.abs(s) < .99999 ? (this._x = Math.atan2(-c, d),
                            this._z = Math.atan2(-o, a)) : (this._x = Math.atan2(p, l),
                                this._z = 0)) : "YXZ" === e ? (this._x = Math.asin(-n(c, -1, 1)),
                                    Math.abs(c) < .99999 ? (this._y = Math.atan2(s, d),
                                        this._z = Math.atan2(h, l)) : (this._y = Math.atan2(-u, a),
                                            this._z = 0)) : "ZXY" === e ? (this._x = Math.asin(n(p, -1, 1)),
                                                Math.abs(p) < .99999 ? (this._y = Math.atan2(-u, d),
                                                    this._z = Math.atan2(-o, l)) : (this._y = 0,
                                                        this._z = Math.atan2(h, a))) : "ZYX" === e ? (this._y = Math.asin(-n(u, -1, 1)),
                                                            Math.abs(u) < .99999 ? (this._x = Math.atan2(p, d),
                                                                this._z = Math.atan2(h, a)) : (this._x = 0,
                                                                    this._z = Math.atan2(-o, l))) : "YZX" === e ? (this._z = Math.asin(n(h, -1, 1)),
                                                                        Math.abs(h) < .99999 ? (this._x = Math.atan2(-c, l),
                                                                            this._y = Math.atan2(-u, a)) : (this._x = 0,
                                                                                this._y = Math.atan2(s, d))) : "XZY" === e && (this._z = Math.asin(-n(o, -1, 1)),
                                                                                    Math.abs(o) < .99999 ? (this._x = Math.atan2(p, l),
                                                                                        this._y = Math.atan2(s, a)) : (this._x = Math.atan2(-c, d),
                                                                                            this._y = 0)),
                    this._order = e,
                    !1 !== i && this.onChangeCallback(),
                    this
            },
            setFromQuaternion: function () {
                var t = new u;
                return function (e, i, n) {
                    return t.makeRotationFromQuaternion(e),
                        this.setFromRotationMatrix(t, i, n)
                }
            }(),
            setFromVector3: function (t, e) {
                return this.set(t.x, t.y, t.z, e || this._order)
            },
            reorder: function () {
                var t = new l;
                return function (e) {
                    return t.setFromEuler(this),
                        this.setFromQuaternion(t, e)
                }
            }(),
            equals: function (t) {
                return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
            },
            fromArray: function (t) {
                return this._x = t[0],
                    this._y = t[1],
                    this._z = t[2],
                    void 0 !== t[3] && (this._order = t[3]),
                    this.onChangeCallback(),
                    this
            },
            toArray: function (t, e) {
                return void 0 === t && (t = []),
                    void 0 === e && (e = 0),
                    t[e] = this._x,
                    t[e + 1] = this._y,
                    t[e + 2] = this._z,
                    t[e + 3] = this._order,
                    t
            },
            toVector3: function (t) {
                return t ? t.set(this._x, this._y, this._z) : new c(this._x, this._y, this._z)
            },
            onChange: function (t) {
                return this.onChangeCallback = t,
                    this
            },
            onChangeCallback: function () { }
        }),
        Object.assign(lt.prototype, {
            set: function (t) {
                this.mask = 1 << t | 0
            },
            enable: function (t) {
                this.mask |= 1 << t | 0
            },
            toggle: function (t) {
                this.mask ^= 1 << t | 0
            },
            disable: function (t) {
                this.mask &= ~(1 << t | 0)
            },
            test: function (t) {
                return 0 != (this.mask & t.mask)
            }
        });
    var Ds = 0;
    ct.DefaultUp = new c(0, 1, 0),
        ct.DefaultMatrixAutoUpdate = !0,
        Object.assign(ct.prototype, n.prototype, {
            isObject3D: !0,
            applyMatrix: function (t) {
                this.matrix.multiplyMatrices(t, this.matrix),
                    this.matrix.decompose(this.position, this.quaternion, this.scale)
            },
            setRotationFromAxisAngle: function (t, e) {
                this.quaternion.setFromAxisAngle(t, e)
            },
            setRotationFromEuler: function (t) {
                this.quaternion.setFromEuler(t, !0)
            },
            setRotationFromMatrix: function (t) {
                this.quaternion.setFromRotationMatrix(t)
            },
            setRotationFromQuaternion: function (t) {
                this.quaternion.copy(t)
            },
            rotateOnAxis: function () {
                var t = new l;
                return function (e, i) {
                    return t.setFromAxisAngle(e, i),
                        this.quaternion.multiply(t),
                        this
                }
            }(),
            rotateX: function () {
                var t = new c(1, 0, 0);
                return function (e) {
                    return this.rotateOnAxis(t, e)
                }
            }(),
            rotateY: function () {
                var t = new c(0, 1, 0);
                return function (e) {
                    return this.rotateOnAxis(t, e)
                }
            }(),
            rotateZ: function () {
                var t = new c(0, 0, 1);
                return function (e) {
                    return this.rotateOnAxis(t, e)
                }
            }(),
            translateOnAxis: function () {
                var t = new c;
                return function (e, i) {
                    return t.copy(e).applyQuaternion(this.quaternion),
                        this.position.add(t.multiplyScalar(i)),
                        this
                }
            }(),
            translateX: function () {
                var t = new c(1, 0, 0);
                return function (e) {
                    return this.translateOnAxis(t, e)
                }
            }(),
            translateY: function () {
                var t = new c(0, 1, 0);
                return function (e) {
                    return this.translateOnAxis(t, e)
                }
            }(),
            translateZ: function () {
                var t = new c(0, 0, 1);
                return function (e) {
                    return this.translateOnAxis(t, e)
                }
            }(),
            localToWorld: function (t) {
                return t.applyMatrix4(this.matrixWorld)
            },
            worldToLocal: function () {
                var t = new u;
                return function (e) {
                    return e.applyMatrix4(t.getInverse(this.matrixWorld))
                }
            }(),
            lookAt: function () {
                var t = new u;
                return function (e) {
                    this.isCamera ? t.lookAt(this.position, e, this.up) : t.lookAt(e, this.position, this.up),
                        this.quaternion.setFromRotationMatrix(t)
                }
            }(),
            add: function (t) {
                if (arguments.length > 1) {
                    for (var e = 0; e < arguments.length; e++)
                        this.add(arguments[e]);
                    return this
                }
                return t === this ? this : (t && t.isObject3D && (null !== t.parent && t.parent.remove(t),
                    t.parent = this,
                    t.dispatchEvent({
                        type: "added"
                    }),
                    this.children.push(t)),
                    this)
            },
            remove: function (t) {
                if (arguments.length > 1)
                    for (var e = 0; e < arguments.length; e++)
                        this.remove(arguments[e]);
                var i = this.children.indexOf(t);
                -1 !== i && (t.parent = null,
                    t.dispatchEvent({
                        type: "removed"
                    }),
                    this.children.splice(i, 1))
            },
            getObjectById: function (t) {
                return this.getObjectByProperty("id", t)
            },
            getObjectByName: function (t) {
                return this.getObjectByProperty("name", t)
            },
            getObjectByProperty: function (t, e) {
                if (this[t] === e)
                    return this;
                for (var i = 0, n = this.children.length; i < n; i++) {
                    var r = this.children[i]
                        , a = r.getObjectByProperty(t, e);
                    if (void 0 !== a)
                        return a
                }
            },
            getWorldPosition: function (t) {
                var e = t || new c;
                return this.updateMatrixWorld(!0),
                    e.setFromMatrixPosition(this.matrixWorld)
            },
            getWorldQuaternion: function () {
                var t = new c
                    , e = new c;
                return function (i) {
                    var n = i || new l;
                    return this.updateMatrixWorld(!0),
                        this.matrixWorld.decompose(t, n, e),
                        n
                }
            }(),
            getWorldRotation: function () {
                var t = new l;
                return function (e) {
                    var i = e || new ht;
                    return this.getWorldQuaternion(t),
                        i.setFromQuaternion(t, this.rotation.order, !1)
                }
            }(),
            getWorldScale: function () {
                var t = new c
                    , e = new l;
                return function (i) {
                    var n = i || new c;
                    return this.updateMatrixWorld(!0),
                        this.matrixWorld.decompose(t, e, n),
                        n
                }
            }(),
            getWorldDirection: function () {
                var t = new l;
                return function (e) {
                    var i = e || new c;
                    return this.getWorldQuaternion(t),
                        i.set(0, 0, 1).applyQuaternion(t)
                }
            }(),
            raycast: function () { },
            traverse: function (t) {
                t(this);
                for (var e = this.children, i = 0, n = e.length; i < n; i++)
                    e[i].traverse(t)
            },
            traverseVisible: function (t) {
                if (!1 !== this.visible) {
                    t(this);
                    for (var e = this.children, i = 0, n = e.length; i < n; i++)
                        e[i].traverseVisible(t)
                }
            },
            traverseAncestors: function (t) {
                var e = this.parent;
                null !== e && (t(e),
                    e.traverseAncestors(t))
            },
            updateMatrix: function () {
                this.matrix.compose(this.position, this.quaternion, this.scale),
                    this.matrixWorldNeedsUpdate = !0
            },
            updateMatrixWorld: function (t) {
                this.matrixAutoUpdate && this.updateMatrix(),
                    (this.matrixWorldNeedsUpdate || t) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
                        this.matrixWorldNeedsUpdate = !1,
                        t = !0);
                for (var e = this.children, i = 0, n = e.length; i < n; i++)
                    e[i].updateMatrixWorld(t)
            },
            toJSON: function (t) {
                function e(e, i) {
                    return void 0 === e[i.uuid] && (e[i.uuid] = i.toJSON(t)),
                        i.uuid
                }
                function i(t) {
                    var e = [];
                    for (var i in t) {
                        var n = t[i];
                        delete n.metadata,
                            e.push(n)
                    }
                    return e
                }
                var n = void 0 === t || "" === t
                    , r = {};
                n && (t = {
                    geometries: {},
                    materials: {},
                    textures: {},
                    images: {}
                },
                    r.metadata = {
                        version: 4.5,
                        type: "Object",
                        generator: "Object3D.toJSON"
                    });
                var a = {};
                if (a.uuid = this.uuid,
                    a.type = this.type,
                    "" !== this.name && (a.name = this.name),
                    "{}" !== JSON.stringify(this.userData) && (a.userData = this.userData),
                    !0 === this.castShadow && (a.castShadow = !0),
                    !0 === this.receiveShadow && (a.receiveShadow = !0),
                    !1 === this.visible && (a.visible = !1),
                    a.matrix = this.matrix.toArray(),
                    void 0 !== this.geometry && (a.geometry = e(t.geometries, this.geometry)),
                    void 0 !== this.material)
                    if (Array.isArray(this.material)) {
                        for (var o = [], s = 0, h = this.material.length; s < h; s++)
                            o.push(e(t.materials, this.material[s]));
                        a.material = o
                    } else
                        a.material = e(t.materials, this.material);
                if (this.children.length > 0) {
                    a.children = [];
                    for (var s = 0; s < this.children.length; s++)
                        a.children.push(this.children[s].toJSON(t).object)
                }
                if (n) {
                    var l = i(t.geometries)
                        , c = i(t.materials)
                        , u = i(t.textures)
                        , p = i(t.images);
                    l.length > 0 && (r.geometries = l),
                        c.length > 0 && (r.materials = c),
                        u.length > 0 && (r.textures = u),
                        p.length > 0 && (r.images = p)
                }
                return r.object = a,
                    r
            },
            clone: function (t) {
                return (new this.constructor).copy(this, t)
            },
            copy: function (t, e) {
                if (void 0 === e && (e = !0),
                    this.name = t.name,
                    this.up.copy(t.up),
                    this.position.copy(t.position),
                    this.quaternion.copy(t.quaternion),
                    this.scale.copy(t.scale),
                    this.matrix.copy(t.matrix),
                    this.matrixWorld.copy(t.matrixWorld),
                    this.matrixAutoUpdate = t.matrixAutoUpdate,
                    this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate,
                    this.layers.mask = t.layers.mask,
                    this.visible = t.visible,
                    this.castShadow = t.castShadow,
                    this.receiveShadow = t.receiveShadow,
                    this.frustumCulled = t.frustumCulled,
                    this.renderOrder = t.renderOrder,
                    this.userData = JSON.parse(JSON.stringify(t.userData)),
                    !0 === e)
                    for (var i = 0; i < t.children.length; i++) {
                        var n = t.children[i];
                        this.add(n.clone())
                    }
                return this
            }
        }),
        Object.assign(ut.prototype, {
            set: function (t, e) {
                return this.start.copy(t),
                    this.end.copy(e),
                    this
            },
            clone: function () {
                return (new this.constructor).copy(this)
            },
            copy: function (t) {
                return this.start.copy(t.start),
                    this.end.copy(t.end),
                    this
            },
            getCenter: function (t) {
                return (t || new c).addVectors(this.start, this.end).multiplyScalar(.5)
            },
            delta: function (t) {
                return (t || new c).subVectors(this.end, this.start)
            },
            distanceSq: function () {
                return this.start.distanceToSquared(this.end)
            },
            distance: function () {
                return this.start.distanceTo(this.end)
            },
            at: function (t, e) {
                var i = e || new c;
                return this.delta(i).multiplyScalar(t).add(this.start)
            },
            closestPointToPointParameter: function () {
                var t = new c
                    , e = new c;
                return function (i, n) {
                    t.subVectors(i, this.start),
                        e.subVectors(this.end, this.start);
                    var r = e.dot(e)
                        , a = e.dot(t)
                        , o = a / r;
                    return n && (o = bs.clamp(o, 0, 1)),
                        o
                }
            }(),
            closestPointToPoint: function (t, e, i) {
                var n = this.closestPointToPointParameter(t, e)
                    , r = i || new c;
                return this.delta(r).multiplyScalar(n).add(this.start)
            },
            applyMatrix4: function (t) {
                return this.start.applyMatrix4(t),
                    this.end.applyMatrix4(t),
                    this
            },
            equals: function (t) {
                return t.start.equals(this.start) && t.end.equals(this.end)
            }
        }),
        Object.assign(pt, {
            normal: function () {
                var t = new c;
                return function (e, i, n, r) {
                    var a = r || new c;
                    a.subVectors(n, i),
                        t.subVectors(e, i),
                        a.cross(t);
                    var o = a.lengthSq();
                    return o > 0 ? a.multiplyScalar(1 / Math.sqrt(o)) : a.set(0, 0, 0)
                }
            }(),
            barycoordFromPoint: function () {
                var t = new c
                    , e = new c
                    , i = new c;
                return function (n, r, a, o, s) {
                    t.subVectors(o, r),
                        e.subVectors(a, r),
                        i.subVectors(n, r);
                    var h = t.dot(t)
                        , l = t.dot(e)
                        , u = t.dot(i)
                        , p = e.dot(e)
                        , d = e.dot(i)
                        , f = h * p - l * l
                        , m = s || new c;
                    if (0 === f)
                        return m.set(-2, -1, -1);
                    var g = 1 / f
                        , v = (p * u - l * d) * g
                        , y = (h * d - l * u) * g;
                    return m.set(1 - v - y, y, v)
                }
            }(),
            containsPoint: function () {
                var t = new c;
                return function (e, i, n, r) {
                    var a = pt.barycoordFromPoint(e, i, n, r, t);
                    return a.x >= 0 && a.y >= 0 && a.x + a.y <= 1
                }
            }()
        }),
        Object.assign(pt.prototype, {
            set: function (t, e, i) {
                return this.a.copy(t),
                    this.b.copy(e),
                    this.c.copy(i),
                    this
            },
            setFromPointsAndIndices: function (t, e, i, n) {
                return this.a.copy(t[e]),
                    this.b.copy(t[i]),
                    this.c.copy(t[n]),
                    this
            },
            clone: function () {
                return (new this.constructor).copy(this)
            },
            copy: function (t) {
                return this.a.copy(t.a),
                    this.b.copy(t.b),
                    this.c.copy(t.c),
                    this
            },
            area: function () {
                var t = new c
                    , e = new c;
                return function () {
                    return t.subVectors(this.c, this.b),
                        e.subVectors(this.a, this.b),
                        .5 * t.cross(e).length()
                }
            }(),
            midpoint: function (t) {
                return (t || new c).addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
            },
            normal: function (t) {
                return pt.normal(this.a, this.b, this.c, t)
            },
            plane: function (t) {
                return (t || new rt).setFromCoplanarPoints(this.a, this.b, this.c)
            },
            barycoordFromPoint: function (t, e) {
                return pt.barycoordFromPoint(t, this.a, this.b, this.c, e)
            },
            containsPoint: function (t) {
                return pt.containsPoint(t, this.a, this.b, this.c)
            },
            closestPointToPoint: function () {
                var t = new rt
                    , e = [new ut, new ut, new ut]
                    , i = new c
                    , n = new c;
                return function (r, a) {
                    var o = a || new c
                        , s = 1 / 0;
                    if (t.setFromCoplanarPoints(this.a, this.b, this.c),
                        t.projectPoint(r, i),
                        !0 === this.containsPoint(i))
                        o.copy(i);
                    else {
                        e[0].set(this.a, this.b),
                            e[1].set(this.b, this.c),
                            e[2].set(this.c, this.a);
                        for (var h = 0; h < e.length; h++) {
                            e[h].closestPointToPoint(i, !0, n);
                            var l = i.distanceToSquared(n);
                            l < s && (s = l,
                                o.copy(n))
                        }
                    }
                    return o
                }
            }(),
            equals: function (t) {
                return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c)
            }
        }),
        Object.assign(dt.prototype, {
            clone: function () {
                return (new this.constructor).copy(this)
            },
            copy: function (t) {
                this.a = t.a,
                    this.b = t.b,
                    this.c = t.c,
                    this.normal.copy(t.normal),
                    this.color.copy(t.color),
                    this.materialIndex = t.materialIndex;
                for (var e = 0, i = t.vertexNormals.length; e < i; e++)
                    this.vertexNormals[e] = t.vertexNormals[e].clone();
                for (var e = 0, i = t.vertexColors.length; e < i; e++)
                    this.vertexColors[e] = t.vertexColors[e].clone();
                return this
            }
        }),
        ft.prototype = Object.create(J.prototype),
        ft.prototype.constructor = ft,
        ft.prototype.isMeshBasicMaterial = !0,
        ft.prototype.copy = function (t) {
            return J.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.map = t.map,
                this.lightMap = t.lightMap,
                this.lightMapIntensity = t.lightMapIntensity,
                this.aoMap = t.aoMap,
                this.aoMapIntensity = t.aoMapIntensity,
                this.specularMap = t.specularMap,
                this.alphaMap = t.alphaMap,
                this.envMap = t.envMap,
                this.combine = t.combine,
                this.reflectivity = t.reflectivity,
                this.refractionRatio = t.refractionRatio,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this.wireframeLinecap = t.wireframeLinecap,
                this.wireframeLinejoin = t.wireframeLinejoin,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this
        }
        ,
        Object.defineProperty(mt.prototype, "needsUpdate", {
            set: function (t) {
                !0 === t && this.version++
            }
        }),
        Object.assign(mt.prototype, {
            isBufferAttribute: !0,
            setArray: function (t) {
                if (Array.isArray(t))
                    throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                this.count = void 0 !== t ? t.length / this.itemSize : 0,
                    this.array = t
            },
            setDynamic: function (t) {
                return this.dynamic = t,
                    this
            },
            copy: function (t) {
                return this.array = new t.array.constructor(t.array),
                    this.itemSize = t.itemSize,
                    this.count = t.count,
                    this.normalized = t.normalized,
                    this.dynamic = t.dynamic,
                    this
            },
            copyAt: function (t, e, i) {
                t *= this.itemSize,
                    i *= e.itemSize;
                for (var n = 0, r = this.itemSize; n < r; n++)
                    this.array[t + n] = e.array[i + n];
                return this
            },
            copyArray: function (t) {
                return this.array.set(t),
                    this
            },
            copyColorsArray: function (t) {
                for (var e = this.array, i = 0, n = 0, r = t.length; n < r; n++) {
                    var a = t[n];
                    void 0 === a && (a = new q),
                        e[i++] = a.r,
                        e[i++] = a.g,
                        e[i++] = a.b
                }
                return this
            },
            copyIndicesArray: function (t) {
                for (var e = this.array, i = 0, n = 0, r = t.length; n < r; n++) {
                    var a = t[n];
                    e[i++] = a.a,
                        e[i++] = a.b,
                        e[i++] = a.c
                }
                return this
            },
            copyVector2sArray: function (t) {
                for (var e = this.array, i = 0, n = 0, a = t.length; n < a; n++) {
                    var o = t[n];
                    void 0 === o && (o = new r),
                        e[i++] = o.x,
                        e[i++] = o.y
                }
                return this
            },
            copyVector3sArray: function (t) {
                for (var e = this.array, i = 0, n = 0, r = t.length; n < r; n++) {
                    var a = t[n];
                    void 0 === a && (a = new c),
                        e[i++] = a.x,
                        e[i++] = a.y,
                        e[i++] = a.z
                }
                return this
            },
            copyVector4sArray: function (t) {
                for (var e = this.array, i = 0, n = 0, r = t.length; n < r; n++) {
                    var a = t[n];
                    void 0 === a && (a = new o),
                        e[i++] = a.x,
                        e[i++] = a.y,
                        e[i++] = a.z,
                        e[i++] = a.w
                }
                return this
            },
            set: function (t, e) {
                return void 0 === e && (e = 0),
                    this.array.set(t, e),
                    this
            },
            getX: function (t) {
                return this.array[t * this.itemSize]
            },
            setX: function (t, e) {
                return this.array[t * this.itemSize] = e,
                    this
            },
            getY: function (t) {
                return this.array[t * this.itemSize + 1]
            },
            setY: function (t, e) {
                return this.array[t * this.itemSize + 1] = e,
                    this
            },
            getZ: function (t) {
                return this.array[t * this.itemSize + 2]
            },
            setZ: function (t, e) {
                return this.array[t * this.itemSize + 2] = e,
                    this
            },
            getW: function (t) {
                return this.array[t * this.itemSize + 3]
            },
            setW: function (t, e) {
                return this.array[t * this.itemSize + 3] = e,
                    this
            },
            setXY: function (t, e, i) {
                return t *= this.itemSize,
                    this.array[t + 0] = e,
                    this.array[t + 1] = i,
                    this
            },
            setXYZ: function (t, e, i, n) {
                return t *= this.itemSize,
                    this.array[t + 0] = e,
                    this.array[t + 1] = i,
                    this.array[t + 2] = n,
                    this
            },
            setXYZW: function (t, e, i, n, r) {
                return t *= this.itemSize,
                    this.array[t + 0] = e,
                    this.array[t + 1] = i,
                    this.array[t + 2] = n,
                    this.array[t + 3] = r,
                    this
            },
            onUpload: function (t) {
                return this.onUploadCallback = t,
                    this
            },
            clone: function () {
                return new this.constructor(this.array, this.itemSize).copy(this)
            }
        }),
        gt.prototype = Object.create(mt.prototype),
        gt.prototype.constructor = gt,
        vt.prototype = Object.create(mt.prototype),
        vt.prototype.constructor = vt,
        yt.prototype = Object.create(mt.prototype),
        yt.prototype.constructor = yt,
        _t.prototype = Object.create(mt.prototype),
        _t.prototype.constructor = _t,
        xt.prototype = Object.create(mt.prototype),
        xt.prototype.constructor = xt,
        wt.prototype = Object.create(mt.prototype),
        wt.prototype.constructor = wt,
        bt.prototype = Object.create(mt.prototype),
        bt.prototype.constructor = bt,
        Mt.prototype = Object.create(mt.prototype),
        Mt.prototype.constructor = Mt,
        Tt.prototype = Object.create(mt.prototype),
        Tt.prototype.constructor = Tt,
        Object.assign(Pt.prototype, {
            computeGroups: function (t) {
                for (var e, i = [], n = void 0, r = t.faces, a = 0; a < r.length; a++) {
                    var o = r[a];
                    o.materialIndex !== n && (n = o.materialIndex,
                        void 0 !== e && (e.count = 3 * a - e.start,
                            i.push(e)),
                        e = {
                            start: 3 * a,
                            materialIndex: n
                        })
                }
                void 0 !== e && (e.count = 3 * a - e.start,
                    i.push(e)),
                    this.groups = i
            },
            fromGeometry: function (t) {
                var e, i = t.faces, n = t.vertices, a = t.faceVertexUvs, o = a[0] && a[0].length > 0, s = a[1] && a[1].length > 0, h = t.morphTargets, l = h.length;
                if (l > 0) {
                    e = [];
                    for (var c = 0; c < l; c++)
                        e[c] = [];
                    this.morphTargets.position = e
                }
                var u, p = t.morphNormals, d = p.length;
                if (d > 0) {
                    u = [];
                    for (var c = 0; c < d; c++)
                        u[c] = [];
                    this.morphTargets.normal = u
                }
                for (var f = t.skinIndices, m = t.skinWeights, g = f.length === n.length, v = m.length === n.length, c = 0; c < i.length; c++) {
                    var y = i[c];
                    this.vertices.push(n[y.a], n[y.b], n[y.c]);
                    var _ = y.vertexNormals;
                    if (3 === _.length)
                        this.normals.push(_[0], _[1], _[2]);
                    else {
                        var x = y.normal;
                        this.normals.push(x, x, x)
                    }
                    var w = y.vertexColors;
                    if (3 === w.length)
                        this.colors.push(w[0], w[1], w[2]);
                    else {
                        var b = y.color;
                        this.colors.push(b, b, b)
                    }
                    if (!0 === o) {
                        var M = a[0][c];
                        void 0 !== M ? this.uvs.push(M[0], M[1], M[2]) : this.uvs.push(new r, new r, new r)
                    }
                    if (!0 === s) {
                        var M = a[1][c];
                        void 0 !== M ? this.uvs2.push(M[0], M[1], M[2]) : this.uvs2.push(new r, new r, new r)
                    }
                    for (var T = 0; T < l; T++) {
                        var P = h[T].vertices;
                        e[T].push(P[y.a], P[y.b], P[y.c])
                    }
                    for (var T = 0; T < d; T++) {
                        var S = p[T].vertexNormals[c];
                        u[T].push(S.a, S.b, S.c)
                    }
                    g && this.skinIndices.push(f[y.a], f[y.b], f[y.c]),
                        v && this.skinWeights.push(m[y.a], m[y.b], m[y.c])
                }
                return this.computeGroups(t),
                    this.verticesNeedUpdate = t.verticesNeedUpdate,
                    this.normalsNeedUpdate = t.normalsNeedUpdate,
                    this.colorsNeedUpdate = t.colorsNeedUpdate,
                    this.uvsNeedUpdate = t.uvsNeedUpdate,
                    this.groupsNeedUpdate = t.groupsNeedUpdate,
                    this
            }
        });
    var Ns = 0;
    Object.assign(Et.prototype, n.prototype, {
        isGeometry: !0,
        applyMatrix: function (t) {
            for (var e = (new nt).getNormalMatrix(t), i = 0, n = this.vertices.length; i < n; i++) {
                this.vertices[i].applyMatrix4(t)
            }
            for (var i = 0, n = this.faces.length; i < n; i++) {
                var r = this.faces[i];
                r.normal.applyMatrix3(e).normalize();
                for (var a = 0, o = r.vertexNormals.length; a < o; a++)
                    r.vertexNormals[a].applyMatrix3(e).normalize()
            }
            return null !== this.boundingBox && this.computeBoundingBox(),
                null !== this.boundingSphere && this.computeBoundingSphere(),
                this.verticesNeedUpdate = !0,
                this.normalsNeedUpdate = !0,
                this
        },
        rotateX: function () {
            var t = new u;
            return function (e) {
                return t.makeRotationX(e),
                    this.applyMatrix(t),
                    this
            }
        }(),
        rotateY: function () {
            var t = new u;
            return function (e) {
                return t.makeRotationY(e),
                    this.applyMatrix(t),
                    this
            }
        }(),
        rotateZ: function () {
            var t = new u;
            return function (e) {
                return t.makeRotationZ(e),
                    this.applyMatrix(t),
                    this
            }
        }(),
        translate: function () {
            var t = new u;
            return function (e, i, n) {
                return t.makeTranslation(e, i, n),
                    this.applyMatrix(t),
                    this
            }
        }(),
        scale: function () {
            var t = new u;
            return function (e, i, n) {
                return t.makeScale(e, i, n),
                    this.applyMatrix(t),
                    this
            }
        }(),
        lookAt: function () {
            var t = new ct;
            return function (e) {
                t.lookAt(e),
                    t.updateMatrix(),
                    this.applyMatrix(t.matrix)
            }
        }(),
        fromBufferGeometry: function (t) {
            function e(t, e, n, r) {
                var a = void 0 !== s ? [p[t].clone(), p[e].clone(), p[n].clone()] : []
                    , o = void 0 !== h ? [i.colors[t].clone(), i.colors[e].clone(), i.colors[n].clone()] : []
                    , c = new dt(t, e, n, a, o, r);
                i.faces.push(c),
                    void 0 !== l && i.faceVertexUvs[0].push([d[t].clone(), d[e].clone(), d[n].clone()]),
                    void 0 !== u && i.faceVertexUvs[1].push([f[t].clone(), f[e].clone(), f[n].clone()])
            }
            var i = this
                , n = null !== t.index ? t.index.array : void 0
                , a = t.attributes
                , o = a.position.array
                , s = void 0 !== a.normal ? a.normal.array : void 0
                , h = void 0 !== a.color ? a.color.array : void 0
                , l = void 0 !== a.uv ? a.uv.array : void 0
                , u = void 0 !== a.uv2 ? a.uv2.array : void 0;
            void 0 !== u && (this.faceVertexUvs[1] = []);
            for (var p = [], d = [], f = [], m = 0, g = 0; m < o.length; m += 3,
                g += 2)
                i.vertices.push(new c(o[m], o[m + 1], o[m + 2])),
                    void 0 !== s && p.push(new c(s[m], s[m + 1], s[m + 2])),
                    void 0 !== h && i.colors.push(new q(h[m], h[m + 1], h[m + 2])),
                    void 0 !== l && d.push(new r(l[g], l[g + 1])),
                    void 0 !== u && f.push(new r(u[g], u[g + 1]));
            var v = t.groups;
            if (v.length > 0)
                for (var m = 0; m < v.length; m++)
                    for (var y = v[m], _ = y.start, x = y.count, g = _, w = _ + x; g < w; g += 3)
                        void 0 !== n ? e(n[g], n[g + 1], n[g + 2], y.materialIndex) : e(g, g + 1, g + 2, y.materialIndex);
            else if (void 0 !== n)
                for (var m = 0; m < n.length; m += 3)
                    e(n[m], n[m + 1], n[m + 2]);
            else
                for (var m = 0; m < o.length / 3; m += 3)
                    e(m, m + 1, m + 2);
            return this.computeFaceNormals(),
                null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
                null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                this
        },
        center: function () {
            this.computeBoundingBox();
            var t = this.boundingBox.getCenter().negate();
            return this.translate(t.x, t.y, t.z),
                t
        },
        normalize: function () {
            this.computeBoundingSphere();
            var t = this.boundingSphere.center
                , e = this.boundingSphere.radius
                , i = 0 === e ? 1 : 1 / e
                , n = new u;
            return n.set(i, 0, 0, -i * t.x, 0, i, 0, -i * t.y, 0, 0, i, -i * t.z, 0, 0, 0, 1),
                this.applyMatrix(n),
                this
        },
        computeFaceNormals: function () {
            for (var t = new c, e = new c, i = 0, n = this.faces.length; i < n; i++) {
                var r = this.faces[i]
                    , a = this.vertices[r.a]
                    , o = this.vertices[r.b]
                    , s = this.vertices[r.c];
                t.subVectors(s, o),
                    e.subVectors(a, o),
                    t.cross(e),
                    t.normalize(),
                    r.normal.copy(t)
            }
        },
        computeVertexNormals: function (t) {
            void 0 === t && (t = !0);
            var e, i, n, r, a, o;
            for (o = new Array(this.vertices.length),
                e = 0,
                i = this.vertices.length; e < i; e++)
                o[e] = new c;
            if (t) {
                var s, h, l, u = new c, p = new c;
                for (n = 0,
                    r = this.faces.length; n < r; n++)
                    a = this.faces[n],
                        s = this.vertices[a.a],
                        h = this.vertices[a.b],
                        l = this.vertices[a.c],
                        u.subVectors(l, h),
                        p.subVectors(s, h),
                        u.cross(p),
                        o[a.a].add(u),
                        o[a.b].add(u),
                        o[a.c].add(u)
            } else
                for (this.computeFaceNormals(),
                    n = 0,
                    r = this.faces.length; n < r; n++)
                    a = this.faces[n],
                        o[a.a].add(a.normal),
                        o[a.b].add(a.normal),
                        o[a.c].add(a.normal);
            for (e = 0,
                i = this.vertices.length; e < i; e++)
                o[e].normalize();
            for (n = 0,
                r = this.faces.length; n < r; n++) {
                a = this.faces[n];
                var d = a.vertexNormals;
                3 === d.length ? (d[0].copy(o[a.a]),
                    d[1].copy(o[a.b]),
                    d[2].copy(o[a.c])) : (d[0] = o[a.a].clone(),
                        d[1] = o[a.b].clone(),
                        d[2] = o[a.c].clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeFlatVertexNormals: function () {
            var t, e, i;
            for (this.computeFaceNormals(),
                t = 0,
                e = this.faces.length; t < e; t++) {
                i = this.faces[t];
                var n = i.vertexNormals;
                3 === n.length ? (n[0].copy(i.normal),
                    n[1].copy(i.normal),
                    n[2].copy(i.normal)) : (n[0] = i.normal.clone(),
                        n[1] = i.normal.clone(),
                        n[2] = i.normal.clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeMorphNormals: function () {
            var t, e, i, n, r;
            for (i = 0,
                n = this.faces.length; i < n; i++)
                for (r = this.faces[i],
                    r.__originalFaceNormal ? r.__originalFaceNormal.copy(r.normal) : r.__originalFaceNormal = r.normal.clone(),
                    r.__originalVertexNormals || (r.__originalVertexNormals = []),
                    t = 0,
                    e = r.vertexNormals.length; t < e; t++)
                    r.__originalVertexNormals[t] ? r.__originalVertexNormals[t].copy(r.vertexNormals[t]) : r.__originalVertexNormals[t] = r.vertexNormals[t].clone();
            var a = new Et;
            for (a.faces = this.faces,
                t = 0,
                e = this.morphTargets.length; t < e; t++) {
                if (!this.morphNormals[t]) {
                    this.morphNormals[t] = {},
                        this.morphNormals[t].faceNormals = [],
                        this.morphNormals[t].vertexNormals = [];
                    var o, s, h = this.morphNormals[t].faceNormals, l = this.morphNormals[t].vertexNormals;
                    for (i = 0,
                        n = this.faces.length; i < n; i++)
                        o = new c,
                            s = {
                                a: new c,
                                b: new c,
                                c: new c
                            },
                            h.push(o),
                            l.push(s)
                }
                var u = this.morphNormals[t];
                a.vertices = this.morphTargets[t].vertices,
                    a.computeFaceNormals(),
                    a.computeVertexNormals();
                var o, s;
                for (i = 0,
                    n = this.faces.length; i < n; i++)
                    r = this.faces[i],
                        o = u.faceNormals[i],
                        s = u.vertexNormals[i],
                        o.copy(r.normal),
                        s.a.copy(r.vertexNormals[0]),
                        s.b.copy(r.vertexNormals[1]),
                        s.c.copy(r.vertexNormals[2])
            }
            for (i = 0,
                n = this.faces.length; i < n; i++)
                r = this.faces[i],
                    r.normal = r.__originalFaceNormal,
                    r.vertexNormals = r.__originalVertexNormals
        },
        computeLineDistances: function () {
            for (var t = 0, e = this.vertices, i = 0, n = e.length; i < n; i++)
                i > 0 && (t += e[i].distanceTo(e[i - 1])),
                    this.lineDistances[i] = t
        },
        computeBoundingBox: function () {
            null === this.boundingBox && (this.boundingBox = new et),
                this.boundingBox.setFromPoints(this.vertices)
        },
        computeBoundingSphere: function () {
            null === this.boundingSphere && (this.boundingSphere = new it),
                this.boundingSphere.setFromPoints(this.vertices)
        },
        merge: function (t, e, i) {
            if (!1 !== (t && t.isGeometry)) {
                var n, r = this.vertices.length, a = this.vertices, o = t.vertices, s = this.faces, h = t.faces, l = this.faceVertexUvs[0], c = t.faceVertexUvs[0], u = this.colors, p = t.colors;
                void 0 === i && (i = 0),
                    void 0 !== e && (n = (new nt).getNormalMatrix(e));
                for (var d = 0, f = o.length; d < f; d++) {
                    var m = o[d]
                        , g = m.clone();
                    void 0 !== e && g.applyMatrix4(e),
                        a.push(g)
                }
                for (var d = 0, f = p.length; d < f; d++)
                    u.push(p[d].clone());
                for (d = 0,
                    f = h.length; d < f; d++) {
                    var v, y, _, x = h[d], w = x.vertexNormals, b = x.vertexColors;
                    v = new dt(x.a + r, x.b + r, x.c + r),
                        v.normal.copy(x.normal),
                        void 0 !== n && v.normal.applyMatrix3(n).normalize();
                    for (var M = 0, T = w.length; M < T; M++)
                        y = w[M].clone(),
                            void 0 !== n && y.applyMatrix3(n).normalize(),
                            v.vertexNormals.push(y);
                    v.color.copy(x.color);
                    for (var M = 0, T = b.length; M < T; M++)
                        _ = b[M],
                            v.vertexColors.push(_.clone());
                    v.materialIndex = x.materialIndex + i,
                        s.push(v)
                }
                for (d = 0,
                    f = c.length; d < f; d++) {
                    var P = c[d]
                        , S = [];
                    if (void 0 !== P) {
                        for (var M = 0, T = P.length; M < T; M++)
                            S.push(P[M].clone());
                        l.push(S)
                    }
                }
            }
        },
        mergeMesh: function (t) {
            !1 !== (t && t.isMesh) && (t.matrixAutoUpdate && t.updateMatrix(),
                this.merge(t.geometry, t.matrix))
        },
        mergeVertices: function () {
            var t, e, i, n, r, a, o, s, h = {}, l = [], c = [], u = Math.pow(10, 4);
            for (i = 0,
                n = this.vertices.length; i < n; i++)
                t = this.vertices[i],
                    e = Math.round(t.x * u) + "_" + Math.round(t.y * u) + "_" + Math.round(t.z * u),
                    void 0 === h[e] ? (h[e] = i,
                        l.push(this.vertices[i]),
                        c[i] = l.length - 1) : c[i] = c[h[e]];
            var p = [];
            for (i = 0,
                n = this.faces.length; i < n; i++) {
                r = this.faces[i],
                    r.a = c[r.a],
                    r.b = c[r.b],
                    r.c = c[r.c],
                    a = [r.a, r.b, r.c];
                for (var d = 0; d < 3; d++)
                    if (a[d] === a[(d + 1) % 3]) {
                        p.push(i);
                        break
                    }
            }
            for (i = p.length - 1; i >= 0; i--) {
                var f = p[i];
                for (this.faces.splice(f, 1),
                    o = 0,
                    s = this.faceVertexUvs.length; o < s; o++)
                    this.faceVertexUvs[o].splice(f, 1)
            }
            var m = this.vertices.length - l.length;
            return this.vertices = l,
                m
        },
        sortFacesByMaterialIndex: function () {
            function t(t, e) {
                return t.materialIndex - e.materialIndex
            }
            for (var e = this.faces, i = e.length, n = 0; n < i; n++)
                e[n]._id = n;
            e.sort(t);
            var r, a, o = this.faceVertexUvs[0], s = this.faceVertexUvs[1];
            o && o.length === i && (r = []),
                s && s.length === i && (a = []);
            for (var n = 0; n < i; n++) {
                var h = e[n]._id;
                r && r.push(o[h]),
                    a && a.push(s[h])
            }
            r && (this.faceVertexUvs[0] = r),
                a && (this.faceVertexUvs[1] = a)
        },
        toJSON: function () {
            function t(t, e, i) {
                return i ? t | 1 << e : t & ~(1 << e)
            }
            function e(t) {
                var e = t.x.toString() + t.y.toString() + t.z.toString();
                return void 0 !== p[e] ? p[e] : (p[e] = u.length / 3,
                    u.push(t.x, t.y, t.z),
                    p[e])
            }
            function i(t) {
                var e = t.r.toString() + t.g.toString() + t.b.toString();
                return void 0 !== f[e] ? f[e] : (f[e] = d.length,
                    d.push(t.getHex()),
                    f[e])
            }
            function n(t) {
                var e = t.x.toString() + t.y.toString();
                return void 0 !== g[e] ? g[e] : (g[e] = m.length / 2,
                    m.push(t.x, t.y),
                    g[e])
            }
            var r = {
                metadata: {
                    version: 4.5,
                    type: "Geometry",
                    generator: "Geometry.toJSON"
                }
            };
            if (r.uuid = this.uuid,
                r.type = this.type,
                "" !== this.name && (r.name = this.name),
                void 0 !== this.parameters) {
                var a = this.parameters;
                for (var o in a)
                    void 0 !== a[o] && (r[o] = a[o]);
                return r
            }
            for (var s = [], h = 0; h < this.vertices.length; h++) {
                var l = this.vertices[h];
                s.push(l.x, l.y, l.z)
            }
            for (var c = [], u = [], p = {}, d = [], f = {}, m = [], g = {}, h = 0; h < this.faces.length; h++) {
                var v = this.faces[h]
                    , y = void 0 !== this.faceVertexUvs[0][h]
                    , _ = v.normal.length() > 0
                    , x = v.vertexNormals.length > 0
                    , w = 1 !== v.color.r || 1 !== v.color.g || 1 !== v.color.b
                    , b = v.vertexColors.length > 0
                    , M = 0;
                if (M = t(M, 0, 0),
                    M = t(M, 1, !0),
                    M = t(M, 2, !1),
                    M = t(M, 3, y),
                    M = t(M, 4, _),
                    M = t(M, 5, x),
                    M = t(M, 6, w),
                    M = t(M, 7, b),
                    c.push(M),
                    c.push(v.a, v.b, v.c),
                    c.push(v.materialIndex),
                    y) {
                    var T = this.faceVertexUvs[0][h];
                    c.push(n(T[0]), n(T[1]), n(T[2]))
                }
                if (_ && c.push(e(v.normal)),
                    x) {
                    var P = v.vertexNormals;
                    c.push(e(P[0]), e(P[1]), e(P[2]))
                }
                if (w && c.push(i(v.color)),
                    b) {
                    var S = v.vertexColors;
                    c.push(i(S[0]), i(S[1]), i(S[2]))
                }
            }
            return r.data = {},
                r.data.vertices = s,
                r.data.normals = u,
                d.length > 0 && (r.data.colors = d),
                m.length > 0 && (r.data.uvs = [m]),
                r.data.faces = c,
                r
        },
        clone: function () {
            return (new Et).copy(this)
        },
        copy: function (t) {
            var e, i, n, r, a, o;
            this.vertices = [],
                this.colors = [],
                this.faces = [],
                this.faceVertexUvs = [[]],
                this.morphTargets = [],
                this.morphNormals = [],
                this.skinWeights = [],
                this.skinIndices = [],
                this.lineDistances = [],
                this.boundingBox = null,
                this.boundingSphere = null,
                this.name = t.name;
            var s = t.vertices;
            for (e = 0,
                i = s.length; e < i; e++)
                this.vertices.push(s[e].clone());
            var h = t.colors;
            for (e = 0,
                i = h.length; e < i; e++)
                this.colors.push(h[e].clone());
            var l = t.faces;
            for (e = 0,
                i = l.length; e < i; e++)
                this.faces.push(l[e].clone());
            for (e = 0,
                i = t.faceVertexUvs.length; e < i; e++) {
                var c = t.faceVertexUvs[e];
                for (void 0 === this.faceVertexUvs[e] && (this.faceVertexUvs[e] = []),
                    n = 0,
                    r = c.length; n < r; n++) {
                    var u = c[n]
                        , p = [];
                    for (a = 0,
                        o = u.length; a < o; a++) {
                        var d = u[a];
                        p.push(d.clone())
                    }
                    this.faceVertexUvs[e].push(p)
                }
            }
            var f = t.morphTargets;
            for (e = 0,
                i = f.length; e < i; e++) {
                var m = {};
                if (m.name = f[e].name,
                    void 0 !== f[e].vertices)
                    for (m.vertices = [],
                        n = 0,
                        r = f[e].vertices.length; n < r; n++)
                        m.vertices.push(f[e].vertices[n].clone());
                if (void 0 !== f[e].normals)
                    for (m.normals = [],
                        n = 0,
                        r = f[e].normals.length; n < r; n++)
                        m.normals.push(f[e].normals[n].clone());
                this.morphTargets.push(m)
            }
            var g = t.morphNormals;
            for (e = 0,
                i = g.length; e < i; e++) {
                var v = {};
                if (void 0 !== g[e].vertexNormals)
                    for (v.vertexNormals = [],
                        n = 0,
                        r = g[e].vertexNormals.length; n < r; n++) {
                        var y = g[e].vertexNormals[n]
                            , _ = {};
                        _.a = y.a.clone(),
                            _.b = y.b.clone(),
                            _.c = y.c.clone(),
                            v.vertexNormals.push(_)
                    }
                if (void 0 !== g[e].faceNormals)
                    for (v.faceNormals = [],
                        n = 0,
                        r = g[e].faceNormals.length; n < r; n++)
                        v.faceNormals.push(g[e].faceNormals[n].clone());
                this.morphNormals.push(v)
            }
            var x = t.skinWeights;
            for (e = 0,
                i = x.length; e < i; e++)
                this.skinWeights.push(x[e].clone());
            var w = t.skinIndices;
            for (e = 0,
                i = w.length; e < i; e++)
                this.skinIndices.push(w[e].clone());
            var b = t.lineDistances;
            for (e = 0,
                i = b.length; e < i; e++)
                this.lineDistances.push(b[e]);
            var M = t.boundingBox;
            null !== M && (this.boundingBox = M.clone());
            var T = t.boundingSphere;
            return null !== T && (this.boundingSphere = T.clone()),
                this.elementsNeedUpdate = t.elementsNeedUpdate,
                this.verticesNeedUpdate = t.verticesNeedUpdate,
                this.uvsNeedUpdate = t.uvsNeedUpdate,
                this.normalsNeedUpdate = t.normalsNeedUpdate,
                this.colorsNeedUpdate = t.colorsNeedUpdate,
                this.lineDistancesNeedUpdate = t.lineDistancesNeedUpdate,
                this.groupsNeedUpdate = t.groupsNeedUpdate,
                this
        },
        dispose: function () {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
        Lt.MaxIndex = 65535,
        Object.assign(Lt.prototype, n.prototype, {
            isBufferGeometry: !0,
            getIndex: function () {
                return this.index
            },
            setIndex: function (t) {
                Array.isArray(t) ? this.index = new (St(t) > 65535 ? bt : xt)(t, 1) : this.index = t
            },
            addAttribute: function (t, e) {
                return !1 === (e && e.isBufferAttribute) && !1 === (e && e.isInterleavedBufferAttribute) ? void this.addAttribute(t, new mt(arguments[1], arguments[2])) : "index" === t ? void this.setIndex(e) : (this.attributes[t] = e,
                    this)
            },
            getAttribute: function (t) {
                return this.attributes[t]
            },
            removeAttribute: function (t) {
                return delete this.attributes[t],
                    this
            },
            addGroup: function (t, e, i) {
                this.groups.push({
                    start: t,
                    count: e,
                    materialIndex: void 0 !== i ? i : 0
                })
            },
            clearGroups: function () {
                this.groups = []
            },
            setDrawRange: function (t, e) {
                this.drawRange.start = t,
                    this.drawRange.count = e
            },
            applyMatrix: function (t) {
                var e = this.attributes.position;
                void 0 !== e && (t.applyToBufferAttribute(e),
                    e.needsUpdate = !0);
                var i = this.attributes.normal;
                if (void 0 !== i) {
                    (new nt).getNormalMatrix(t).applyToBufferAttribute(i),
                        i.needsUpdate = !0
                }
                return null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere && this.computeBoundingSphere(),
                    this
            },
            rotateX: function () {
                var t = new u;
                return function (e) {
                    return t.makeRotationX(e),
                        this.applyMatrix(t),
                        this
                }
            }(),
            rotateY: function () {
                var t = new u;
                return function (e) {
                    return t.makeRotationY(e),
                        this.applyMatrix(t),
                        this
                }
            }(),
            rotateZ: function () {
                var t = new u;
                return function (e) {
                    return t.makeRotationZ(e),
                        this.applyMatrix(t),
                        this
                }
            }(),
            translate: function () {
                var t = new u;
                return function (e, i, n) {
                    return t.makeTranslation(e, i, n),
                        this.applyMatrix(t),
                        this
                }
            }(),
            scale: function () {
                var t = new u;
                return function (e, i, n) {
                    return t.makeScale(e, i, n),
                        this.applyMatrix(t),
                        this
                }
            }(),
            lookAt: function () {
                var t = new ct;
                return function (e) {
                    t.lookAt(e),
                        t.updateMatrix(),
                        this.applyMatrix(t.matrix)
                }
            }(),
            center: function () {
                this.computeBoundingBox();
                var t = this.boundingBox.getCenter().negate();
                return this.translate(t.x, t.y, t.z),
                    t
            },
            setFromObject: function (t) {
                var e = t.geometry;
                if (t.isPoints || t.isLine) {
                    var i = new Mt(3 * e.vertices.length, 3)
                        , n = new Mt(3 * e.colors.length, 3);
                    if (this.addAttribute("position", i.copyVector3sArray(e.vertices)),
                        this.addAttribute("color", n.copyColorsArray(e.colors)),
                        e.lineDistances && e.lineDistances.length === e.vertices.length) {
                        var r = new Mt(e.lineDistances.length, 1);
                        this.addAttribute("lineDistance", r.copyArray(e.lineDistances))
                    }
                    null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
                        null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone())
                } else
                    t.isMesh && e && e.isGeometry && this.fromGeometry(e);
                return this
            },
            updateFromObject: function (t) {
                var e = t.geometry;
                if (t.isMesh) {
                    var i = e.__directGeometry;
                    if (!0 === e.elementsNeedUpdate && (i = void 0,
                        e.elementsNeedUpdate = !1),
                        void 0 === i)
                        return this.fromGeometry(e);
                    i.verticesNeedUpdate = e.verticesNeedUpdate,
                        i.normalsNeedUpdate = e.normalsNeedUpdate,
                        i.colorsNeedUpdate = e.colorsNeedUpdate,
                        i.uvsNeedUpdate = e.uvsNeedUpdate,
                        i.groupsNeedUpdate = e.groupsNeedUpdate,
                        e.verticesNeedUpdate = !1,
                        e.normalsNeedUpdate = !1,
                        e.colorsNeedUpdate = !1,
                        e.uvsNeedUpdate = !1,
                        e.groupsNeedUpdate = !1,
                        e = i
                }
                var n;
                return !0 === e.verticesNeedUpdate && (n = this.attributes.position,
                    void 0 !== n && (n.copyVector3sArray(e.vertices),
                        n.needsUpdate = !0),
                    e.verticesNeedUpdate = !1),
                    !0 === e.normalsNeedUpdate && (n = this.attributes.normal,
                        void 0 !== n && (n.copyVector3sArray(e.normals),
                            n.needsUpdate = !0),
                        e.normalsNeedUpdate = !1),
                    !0 === e.colorsNeedUpdate && (n = this.attributes.color,
                        void 0 !== n && (n.copyColorsArray(e.colors),
                            n.needsUpdate = !0),
                        e.colorsNeedUpdate = !1),
                    e.uvsNeedUpdate && (n = this.attributes.uv,
                        void 0 !== n && (n.copyVector2sArray(e.uvs),
                            n.needsUpdate = !0),
                        e.uvsNeedUpdate = !1),
                    e.lineDistancesNeedUpdate && (n = this.attributes.lineDistance,
                        void 0 !== n && (n.copyArray(e.lineDistances),
                            n.needsUpdate = !0),
                        e.lineDistancesNeedUpdate = !1),
                    e.groupsNeedUpdate && (e.computeGroups(t.geometry),
                        this.groups = e.groups,
                        e.groupsNeedUpdate = !1),
                    this
            },
            fromGeometry: function (t) {
                return t.__directGeometry = (new Pt).fromGeometry(t),
                    this.fromDirectGeometry(t.__directGeometry)
            },
            fromDirectGeometry: function (t) {
                var e = new Float32Array(3 * t.vertices.length);
                if (this.addAttribute("position", new mt(e, 3).copyVector3sArray(t.vertices)),
                    t.normals.length > 0) {
                    var i = new Float32Array(3 * t.normals.length);
                    this.addAttribute("normal", new mt(i, 3).copyVector3sArray(t.normals))
                }
                if (t.colors.length > 0) {
                    var n = new Float32Array(3 * t.colors.length);
                    this.addAttribute("color", new mt(n, 3).copyColorsArray(t.colors))
                }
                if (t.uvs.length > 0) {
                    var r = new Float32Array(2 * t.uvs.length);
                    this.addAttribute("uv", new mt(r, 2).copyVector2sArray(t.uvs))
                }
                if (t.uvs2.length > 0) {
                    var a = new Float32Array(2 * t.uvs2.length);
                    this.addAttribute("uv2", new mt(a, 2).copyVector2sArray(t.uvs2))
                }
                if (t.indices.length > 0) {
                    var o = St(t.indices) > 65535 ? Uint32Array : Uint16Array
                        , s = new o(3 * t.indices.length);
                    this.setIndex(new mt(s, 1).copyIndicesArray(t.indices))
                }
                this.groups = t.groups;
                for (var h in t.morphTargets) {
                    for (var l = [], c = t.morphTargets[h], u = 0, p = c.length; u < p; u++) {
                        var d = c[u]
                            , f = new Mt(3 * d.length, 3);
                        l.push(f.copyVector3sArray(d))
                    }
                    this.morphAttributes[h] = l
                }
                if (t.skinIndices.length > 0) {
                    var m = new Mt(4 * t.skinIndices.length, 4);
                    this.addAttribute("skinIndex", m.copyVector4sArray(t.skinIndices))
                }
                if (t.skinWeights.length > 0) {
                    var g = new Mt(4 * t.skinWeights.length, 4);
                    this.addAttribute("skinWeight", g.copyVector4sArray(t.skinWeights))
                }
                return null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                    null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
                    this
            },
            computeBoundingBox: function () {
                null === this.boundingBox && (this.boundingBox = new et);
                var t = this.attributes.position;
                void 0 !== t ? this.boundingBox.setFromBufferAttribute(t) : this.boundingBox.makeEmpty(),
                    isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)
            },
            computeBoundingSphere: function () {
                var t = new et
                    , e = new c;
                return function () {
                    null === this.boundingSphere && (this.boundingSphere = new it);
                    var i = this.attributes.position;
                    if (i) {
                        var n = this.boundingSphere.center;
                        t.setFromBufferAttribute(i),
                            t.getCenter(n);
                        for (var r = 0, a = 0, o = i.count; a < o; a++)
                            e.x = i.getX(a),
                                e.y = i.getY(a),
                                e.z = i.getZ(a),
                                r = Math.max(r, n.distanceToSquared(e));
                        this.boundingSphere.radius = Math.sqrt(r),
                            isNaN(this.boundingSphere.radius)
                    }
                }
            }(),
            computeFaceNormals: function () { },
            computeVertexNormals: function () {
                var t = this.index
                    , e = this.attributes
                    , i = this.groups;
                if (e.position) {
                    var n = e.position.array;
                    if (void 0 === e.normal)
                        this.addAttribute("normal", new mt(new Float32Array(n.length), 3));
                    else
                        for (var r = e.normal.array, a = 0, o = r.length; a < o; a++)
                            r[a] = 0;
                    var s, h, l, u = e.normal.array, p = new c, d = new c, f = new c, m = new c, g = new c;
                    if (t) {
                        var v = t.array;
                        0 === i.length && this.addGroup(0, v.length);
                        for (var y = 0, _ = i.length; y < _; ++y)
                            for (var x = i[y], w = x.start, b = x.count, a = w, o = w + b; a < o; a += 3)
                                s = 3 * v[a + 0],
                                    h = 3 * v[a + 1],
                                    l = 3 * v[a + 2],
                                    p.fromArray(n, s),
                                    d.fromArray(n, h),
                                    f.fromArray(n, l),
                                    m.subVectors(f, d),
                                    g.subVectors(p, d),
                                    m.cross(g),
                                    u[s] += m.x,
                                    u[s + 1] += m.y,
                                    u[s + 2] += m.z,
                                    u[h] += m.x,
                                    u[h + 1] += m.y,
                                    u[h + 2] += m.z,
                                    u[l] += m.x,
                                    u[l + 1] += m.y,
                                    u[l + 2] += m.z
                    } else
                        for (var a = 0, o = n.length; a < o; a += 9)
                            p.fromArray(n, a),
                                d.fromArray(n, a + 3),
                                f.fromArray(n, a + 6),
                                m.subVectors(f, d),
                                g.subVectors(p, d),
                                m.cross(g),
                                u[a] = m.x,
                                u[a + 1] = m.y,
                                u[a + 2] = m.z,
                                u[a + 3] = m.x,
                                u[a + 4] = m.y,
                                u[a + 5] = m.z,
                                u[a + 6] = m.x,
                                u[a + 7] = m.y,
                                u[a + 8] = m.z;
                    this.normalizeNormals(),
                        e.normal.needsUpdate = !0
                }
            },
            merge: function (t, e) {
                if (!1 !== (t && t.isBufferGeometry)) {
                    void 0 === e && (e = 0);
                    var i = this.attributes;
                    for (var n in i)
                        if (void 0 !== t.attributes[n])
                            for (var r = i[n], a = r.array, o = t.attributes[n], s = o.array, h = o.itemSize, l = 0, c = h * e; l < s.length; l++,
                                c++)
                                a[c] = s[l];
                    return this
                }
            },
            normalizeNormals: function () {
                for (var t, e, i, n, r = this.attributes.normal, a = 0, o = r.count; a < o; a++)
                    t = r.getX(a),
                        e = r.getY(a),
                        i = r.getZ(a),
                        n = 1 / Math.sqrt(t * t + e * e + i * i),
                        r.setXYZ(a, t * n, e * n, i * n)
            },
            toNonIndexed: function () {
                if (null === this.index)
                    return this;
                var t = new Lt
                    , e = this.index.array
                    , i = this.attributes;
                for (var n in i) {
                    for (var r = i[n], a = r.array, o = r.itemSize, s = new a.constructor(e.length * o), h = 0, l = 0, c = 0, u = e.length; c < u; c++) {
                        h = e[c] * o;
                        for (var p = 0; p < o; p++)
                            s[l++] = a[h++]
                    }
                    t.addAttribute(n, new mt(s, o))
                }
                return t
            },
            toJSON: function () {
                var t = {
                    metadata: {
                        version: 4.5,
                        type: "BufferGeometry",
                        generator: "BufferGeometry.toJSON"
                    }
                };
                if (t.uuid = this.uuid,
                    t.type = this.type,
                    "" !== this.name && (t.name = this.name),
                    void 0 !== this.parameters) {
                    var e = this.parameters;
                    for (var i in e)
                        void 0 !== e[i] && (t[i] = e[i]);
                    return t
                }
                t.data = {
                    attributes: {}
                };
                var n = this.index;
                if (null !== n) {
                    var r = Array.prototype.slice.call(n.array);
                    t.data.index = {
                        type: n.array.constructor.name,
                        array: r
                    }
                }
                var a = this.attributes;
                for (var i in a) {
                    var o = a[i]
                        , r = Array.prototype.slice.call(o.array);
                    t.data.attributes[i] = {
                        itemSize: o.itemSize,
                        type: o.array.constructor.name,
                        array: r,
                        normalized: o.normalized
                    }
                }
                var s = this.groups;
                s.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(s)));
                var h = this.boundingSphere;
                return null !== h && (t.data.boundingSphere = {
                    center: h.center.toArray(),
                    radius: h.radius
                }),
                    t
            },
            clone: function () {
                return (new Lt).copy(this)
            },
            copy: function (t) {
                var e, i, n;
                this.index = null,
                    this.attributes = {},
                    this.morphAttributes = {},
                    this.groups = [],
                    this.boundingBox = null,
                    this.boundingSphere = null,
                    this.name = t.name;
                var r = t.index;
                null !== r && this.setIndex(r.clone());
                var a = t.attributes;
                for (e in a) {
                    var o = a[e];
                    this.addAttribute(e, o.clone())
                }
                var s = t.morphAttributes;
                for (e in s) {
                    var h = []
                        , l = s[e];
                    for (i = 0,
                        n = l.length; i < n; i++)
                        h.push(l[i].clone());
                    this.morphAttributes[e] = h
                }
                var c = t.groups;
                for (i = 0,
                    n = c.length; i < n; i++) {
                    var u = c[i];
                    this.addGroup(u.start, u.count, u.materialIndex)
                }
                var p = t.boundingBox;
                null !== p && (this.boundingBox = p.clone());
                var d = t.boundingSphere;
                return null !== d && (this.boundingSphere = d.clone()),
                    this.drawRange.start = t.drawRange.start,
                    this.drawRange.count = t.drawRange.count,
                    this
            },
            dispose: function () {
                this.dispatchEvent({
                    type: "dispose"
                })
            }
        }),
        Ct.prototype = Object.assign(Object.create(ct.prototype), {
            constructor: Ct,
            isMesh: !0,
            setDrawMode: function (t) {
                this.drawMode = t
            },
            copy: function (t) {
                return ct.prototype.copy.call(this, t),
                    this.drawMode = t.drawMode,
                    this
            },
            updateMorphTargets: function () {
                var t = this.geometry.morphTargets;
                if (void 0 !== t && t.length > 0) {
                    this.morphTargetInfluences = [],
                        this.morphTargetDictionary = {};
                    for (var e = 0, i = t.length; e < i; e++)
                        this.morphTargetInfluences.push(0),
                            this.morphTargetDictionary[t[e].name] = e
                }
            },
            raycast: function () {
                function t(t, e, i, n, r, a, o) {
                    return pt.barycoordFromPoint(t, e, i, n, y),
                        r.multiplyScalar(y.x),
                        a.multiplyScalar(y.y),
                        o.multiplyScalar(y.z),
                        r.add(a).add(o),
                        r.clone()
                }
                function e(t, e, i, n, r, a, o) {
                    var s = t.material;
                    if (null === (s.side === ga ? i.intersectTriangle(a, r, n, !0, o) : i.intersectTriangle(n, r, a, s.side !== va, o)))
                        return null;
                    x.copy(o),
                        x.applyMatrix4(t.matrixWorld);
                    var h = e.ray.origin.distanceTo(x);
                    return h < e.near || h > e.far ? null : {
                        distance: h,
                        point: x.clone(),
                        object: t
                    }
                }
                function i(i, n, r, a, o, c, u, p) {
                    s.fromBufferAttribute(a, c),
                        h.fromBufferAttribute(a, u),
                        l.fromBufferAttribute(a, p);
                    var d = e(i, n, r, s, h, l, _);
                    return d && (o && (m.fromBufferAttribute(o, c),
                        g.fromBufferAttribute(o, u),
                        v.fromBufferAttribute(o, p),
                        d.uv = t(_, s, h, l, m, g, v)),
                        d.face = new dt(c, u, p, pt.normal(s, h, l)),
                        d.faceIndex = c),
                        d
                }
                var n = new u
                    , a = new st
                    , o = new it
                    , s = new c
                    , h = new c
                    , l = new c
                    , p = new c
                    , d = new c
                    , f = new c
                    , m = new r
                    , g = new r
                    , v = new r
                    , y = new c
                    , _ = new c
                    , x = new c;
                return function (r, c) {
                    var u = this.geometry
                        , y = this.material
                        , x = this.matrixWorld;
                    if (void 0 !== y && (null === u.boundingSphere && u.computeBoundingSphere(),
                        o.copy(u.boundingSphere),
                        o.applyMatrix4(x),
                        !1 !== r.ray.intersectsSphere(o) && (n.getInverse(x),
                            a.copy(r.ray).applyMatrix4(n),
                            null === u.boundingBox || !1 !== a.intersectsBox(u.boundingBox)))) {
                        var w;
                        if (u.isBufferGeometry) {
                            var b, M, T, P, S, A = u.index, E = u.attributes.position, L = u.attributes.uv;
                            if (null !== A)
                                for (P = 0,
                                    S = A.count; P < S; P += 3)
                                    b = A.getX(P),
                                        M = A.getX(P + 1),
                                        T = A.getX(P + 2),
                                        (w = i(this, r, a, E, L, b, M, T)) && (w.faceIndex = Math.floor(P / 3),
                                            c.push(w));
                            else
                                for (P = 0,
                                    S = E.count; P < S; P += 3)
                                    b = P,
                                        M = P + 1,
                                        T = P + 2,
                                        (w = i(this, r, a, E, L, b, M, T)) && (w.index = b,
                                            c.push(w))
                        } else if (u.isGeometry) {
                            var C, O, R, I, k = Array.isArray(y), z = u.vertices, F = u.faces, D = u.faceVertexUvs[0];
                            D.length > 0 && (I = D);
                            for (var N = 0, B = F.length; N < B; N++) {
                                var U = F[N]
                                    , j = k ? y[U.materialIndex] : y;
                                if (void 0 !== j) {
                                    if (C = z[U.a],
                                        O = z[U.b],
                                        R = z[U.c],
                                        !0 === j.morphTargets) {
                                        var G = u.morphTargets
                                            , V = this.morphTargetInfluences;
                                        s.set(0, 0, 0),
                                            h.set(0, 0, 0),
                                            l.set(0, 0, 0);
                                        for (var H = 0, W = G.length; H < W; H++) {
                                            var X = V[H];
                                            if (0 !== X) {
                                                var Y = G[H].vertices;
                                                s.addScaledVector(p.subVectors(Y[U.a], C), X),
                                                    h.addScaledVector(d.subVectors(Y[U.b], O), X),
                                                    l.addScaledVector(f.subVectors(Y[U.c], R), X)
                                            }
                                        }
                                        s.add(C),
                                            h.add(O),
                                            l.add(R),
                                            C = s,
                                            O = h,
                                            R = l
                                    }
                                    if (w = e(this, r, a, C, O, R, _)) {
                                        if (I && I[N]) {
                                            var q = I[N];
                                            m.copy(q[0]),
                                                g.copy(q[1]),
                                                v.copy(q[2]),
                                                w.uv = t(_, C, O, R, m, g, v)
                                        }
                                        w.face = U,
                                            w.faceIndex = N,
                                            c.push(w)
                                    }
                                }
                            }
                        }
                    }
                }
            }(),
            clone: function () {
                return new this.constructor(this.geometry, this.material).copy(this)
            }
        }),
        Ot.prototype = Object.create(Et.prototype),
        Ot.prototype.constructor = Ot,
        Rt.prototype = Object.create(Lt.prototype),
        Rt.prototype.constructor = Rt,
        It.prototype = Object.create(Et.prototype),
        It.prototype.constructor = It,
        kt.prototype = Object.create(Lt.prototype),
        kt.prototype.constructor = kt,
        zt.prototype = Object.assign(Object.create(ct.prototype), {
            constructor: zt,
            isCamera: !0,
            copy: function (t) {
                return ct.prototype.copy.call(this, t),
                    this.matrixWorldInverse.copy(t.matrixWorldInverse),
                    this.projectionMatrix.copy(t.projectionMatrix),
                    this
            },
            getWorldDirection: function () {
                var t = new l;
                return function (e) {
                    var i = e || new c;
                    return this.getWorldQuaternion(t),
                        i.set(0, 0, -1).applyQuaternion(t)
                }
            }(),
            clone: function () {
                return (new this.constructor).copy(this)
            }
        }),
        Ft.prototype = Object.assign(Object.create(zt.prototype), {
            constructor: Ft,
            isPerspectiveCamera: !0,
            copy: function (t) {
                return zt.prototype.copy.call(this, t),
                    this.fov = t.fov,
                    this.zoom = t.zoom,
                    this.near = t.near,
                    this.far = t.far,
                    this.focus = t.focus,
                    this.aspect = t.aspect,
                    this.view = null === t.view ? null : Object.assign({}, t.view),
                    this.filmGauge = t.filmGauge,
                    this.filmOffset = t.filmOffset,
                    this
            },
            setFocalLength: function (t) {
                var e = .5 * this.getFilmHeight() / t;
                this.fov = 2 * bs.RAD2DEG * Math.atan(e),
                    this.updateProjectionMatrix()
            },
            getFocalLength: function () {
                var t = Math.tan(.5 * bs.DEG2RAD * this.fov);
                return .5 * this.getFilmHeight() / t
            },
            getEffectiveFOV: function () {
                return 2 * bs.RAD2DEG * Math.atan(Math.tan(.5 * bs.DEG2RAD * this.fov) / this.zoom)
            },
            getFilmWidth: function () {
                return this.filmGauge * Math.min(this.aspect, 1)
            },
            getFilmHeight: function () {
                return this.filmGauge / Math.max(this.aspect, 1)
            },
            setViewOffset: function (t, e, i, n, r, a) {
                this.aspect = t / e,
                    this.view = {
                        fullWidth: t,
                        fullHeight: e,
                        offsetX: i,
                        offsetY: n,
                        width: r,
                        height: a
                    },
                    this.updateProjectionMatrix()
            },
            clearViewOffset: function () {
                this.view = null,
                    this.updateProjectionMatrix()
            },
            updateProjectionMatrix: function () {
                var t = this.near
                    , e = t * Math.tan(.5 * bs.DEG2RAD * this.fov) / this.zoom
                    , i = 2 * e
                    , n = this.aspect * i
                    , r = -.5 * n
                    , a = this.view;
                if (null !== a) {
                    var o = a.fullWidth
                        , s = a.fullHeight;
                    r += a.offsetX * n / o,
                        e -= a.offsetY * i / s,
                        n *= a.width / o,
                        i *= a.height / s
                }
                var h = this.filmOffset;
                0 !== h && (r += t * h / this.getFilmWidth()),
                    this.projectionMatrix.makePerspective(r, r + n, e, e - i, t, this.far)
            },
            toJSON: function (t) {
                var e = ct.prototype.toJSON.call(this, t);
                return e.object.fov = this.fov,
                    e.object.zoom = this.zoom,
                    e.object.near = this.near,
                    e.object.far = this.far,
                    e.object.focus = this.focus,
                    e.object.aspect = this.aspect,
                    null !== this.view && (e.object.view = Object.assign({}, this.view)),
                    e.object.filmGauge = this.filmGauge,
                    e.object.filmOffset = this.filmOffset,
                    e
            }
        }),
        Dt.prototype = Object.assign(Object.create(zt.prototype), {
            constructor: Dt,
            isOrthographicCamera: !0,
            copy: function (t) {
                return zt.prototype.copy.call(this, t),
                    this.left = t.left,
                    this.right = t.right,
                    this.top = t.top,
                    this.bottom = t.bottom,
                    this.near = t.near,
                    this.far = t.far,
                    this.zoom = t.zoom,
                    this.view = null === t.view ? null : Object.assign({}, t.view),
                    this
            },
            setViewOffset: function (t, e, i, n, r, a) {
                this.view = {
                    fullWidth: t,
                    fullHeight: e,
                    offsetX: i,
                    offsetY: n,
                    width: r,
                    height: a
                },
                    this.updateProjectionMatrix()
            },
            clearViewOffset: function () {
                this.view = null,
                    this.updateProjectionMatrix()
            },
            updateProjectionMatrix: function () {
                var t = (this.right - this.left) / (2 * this.zoom)
                    , e = (this.top - this.bottom) / (2 * this.zoom)
                    , i = (this.right + this.left) / 2
                    , n = (this.top + this.bottom) / 2
                    , r = i - t
                    , a = i + t
                    , o = n + e
                    , s = n - e;
                if (null !== this.view) {
                    var h = this.zoom / (this.view.width / this.view.fullWidth)
                        , l = this.zoom / (this.view.height / this.view.fullHeight)
                        , c = (this.right - this.left) / this.view.width
                        , u = (this.top - this.bottom) / this.view.height;
                    r += c * (this.view.offsetX / h),
                        a = r + c * (this.view.width / h),
                        o -= u * (this.view.offsetY / l),
                        s = o - u * (this.view.height / l)
                }
                this.projectionMatrix.makeOrthographic(r, a, o, s, this.near, this.far)
            },
            toJSON: function (t) {
                var e = ct.prototype.toJSON.call(this, t);
                return e.object.zoom = this.zoom,
                    e.object.left = this.left,
                    e.object.right = this.right,
                    e.object.top = this.top,
                    e.object.bottom = this.bottom,
                    e.object.near = this.near,
                    e.object.far = this.far,
                    null !== this.view && (e.object.view = Object.assign({}, this.view)),
                    e
            }
        });
    var Bs = 0;
    me.prototype.isFogExp2 = !0,
        me.prototype.clone = function () {
            return new me(this.color.getHex(), this.density)
        }
        ,
        me.prototype.toJSON = function (t) {
            return {
                type: "FogExp2",
                color: this.color.getHex(),
                density: this.density
            }
        }
        ,
        ge.prototype.isFog = !0,
        ge.prototype.clone = function () {
            return new ge(this.color.getHex(), this.near, this.far)
        }
        ,
        ge.prototype.toJSON = function (t) {
            return {
                type: "Fog",
                color: this.color.getHex(),
                near: this.near,
                far: this.far
            }
        }
        ,
        ve.prototype = Object.assign(Object.create(ct.prototype), {
            constructor: ve,
            copy: function (t, e) {
                return ct.prototype.copy.call(this, t, e),
                    null !== t.background && (this.background = t.background.clone()),
                    null !== t.fog && (this.fog = t.fog.clone()),
                    null !== t.overrideMaterial && (this.overrideMaterial = t.overrideMaterial.clone()),
                    this.autoUpdate = t.autoUpdate,
                    this.matrixAutoUpdate = t.matrixAutoUpdate,
                    this
            },
            toJSON: function (t) {
                var e = ct.prototype.toJSON.call(this, t);
                return null !== this.background && (e.object.background = this.background.toJSON(t)),
                    null !== this.fog && (e.object.fog = this.fog.toJSON()),
                    e
            }
        }),
        ye.prototype = Object.assign(Object.create(ct.prototype), {
            constructor: ye,
            isLensFlare: !0,
            copy: function (t) {
                ct.prototype.copy.call(this, t),
                    this.positionScreen.copy(t.positionScreen),
                    this.customUpdateCallback = t.customUpdateCallback;
                for (var e = 0, i = t.lensFlares.length; e < i; e++)
                    this.lensFlares.push(t.lensFlares[e]);
                return this
            },
            add: function (t, e, i, n, r, a) {
                void 0 === e && (e = -1),
                    void 0 === i && (i = 0),
                    void 0 === a && (a = 1),
                    void 0 === r && (r = new q(16777215)),
                    void 0 === n && (n = Ta),
                    i = Math.min(i, Math.max(0, i)),
                    this.lensFlares.push({
                        texture: t,
                        size: e,
                        distance: i,
                        x: 0,
                        y: 0,
                        z: 0,
                        scale: 1,
                        rotation: 0,
                        opacity: a,
                        color: r,
                        blending: n
                    })
            },
            updateLensFlares: function () {
                var t, e, i = this.lensFlares.length, n = 2 * -this.positionScreen.x, r = 2 * -this.positionScreen.y;
                for (t = 0; t < i; t++)
                    e = this.lensFlares[t],
                        e.x = this.positionScreen.x + n * e.distance,
                        e.y = this.positionScreen.y + r * e.distance,
                        e.wantedRotation = e.x * Math.PI * .25,
                        e.rotation += .25 * (e.wantedRotation - e.rotation)
            }
        }),
        _e.prototype = Object.create(J.prototype),
        _e.prototype.constructor = _e,
        _e.prototype.isSpriteMaterial = !0,
        _e.prototype.copy = function (t) {
            return J.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.map = t.map,
                this.rotation = t.rotation,
                this
        }
        ,
        xe.prototype = Object.assign(Object.create(ct.prototype), {
            constructor: xe,
            isSprite: !0,
            raycast: function () {
                var t = new c
                    , e = new c
                    , i = new c;
                return function (n, r) {
                    e.setFromMatrixPosition(this.matrixWorld),
                        n.ray.closestPointToPoint(e, t),
                        i.setFromMatrixScale(this.matrixWorld);
                    var a = i.x * i.y / 4;
                    if (!(e.distanceToSquared(t) > a)) {
                        var o = n.ray.origin.distanceTo(t);
                        o < n.near || o > n.far || r.push({
                            distance: o,
                            point: t.clone(),
                            face: null,
                            object: this
                        })
                    }
                }
            }(),
            clone: function () {
                return new this.constructor(this.material).copy(this)
            }
        }),
        we.prototype = Object.assign(Object.create(ct.prototype), {
            constructor: we,
            copy: function (t) {
                ct.prototype.copy.call(this, t, !1);
                for (var e = t.levels, i = 0, n = e.length; i < n; i++) {
                    var r = e[i];
                    this.addLevel(r.object.clone(), r.distance)
                }
                return this
            },
            addLevel: function (t, e) {
                void 0 === e && (e = 0),
                    e = Math.abs(e);
                for (var i = this.levels, n = 0; n < i.length && !(e < i[n].distance); n++)
                    ;
                i.splice(n, 0, {
                    distance: e,
                    object: t
                }),
                    this.add(t)
            },
            getObjectForDistance: function (t) {
                for (var e = this.levels, i = 1, n = e.length; i < n && !(t < e[i].distance); i++)
                    ;
                return e[i - 1].object
            },
            raycast: function () {
                var t = new c;
                return function (e, i) {
                    t.setFromMatrixPosition(this.matrixWorld);
                    var n = e.ray.origin.distanceTo(t);
                    this.getObjectForDistance(n).raycast(e, i)
                }
            }(),
            update: function () {
                var t = new c
                    , e = new c;
                return function (i) {
                    var n = this.levels;
                    if (n.length > 1) {
                        t.setFromMatrixPosition(i.matrixWorld),
                            e.setFromMatrixPosition(this.matrixWorld);
                        var r = t.distanceTo(e);
                        n[0].object.visible = !0;
                        for (var a = 1, o = n.length; a < o && r >= n[a].distance; a++)
                            n[a - 1].object.visible = !1,
                                n[a].object.visible = !0;
                        for (; a < o; a++)
                            n[a].object.visible = !1
                    }
                }
            }(),
            toJSON: function (t) {
                var e = ct.prototype.toJSON.call(this, t);
                e.object.levels = [];
                for (var i = this.levels, n = 0, r = i.length; n < r; n++) {
                    var a = i[n];
                    e.object.levels.push({
                        object: a.object.uuid,
                        distance: a.distance
                    })
                }
                return e
            }
        }),
        Object.assign(be.prototype, {
            calculateInverses: function () {
                this.boneInverses = [];
                for (var t = 0, e = this.bones.length; t < e; t++) {
                    var i = new u;
                    this.bones[t] && i.getInverse(this.bones[t].matrixWorld),
                        this.boneInverses.push(i)
                }
            },
            pose: function () {
                var t, e, i;
                for (e = 0,
                    i = this.bones.length; e < i; e++)
                    (t = this.bones[e]) && t.matrixWorld.getInverse(this.boneInverses[e]);
                for (e = 0,
                    i = this.bones.length; e < i; e++)
                    (t = this.bones[e]) && (t.parent && t.parent.isBone ? (t.matrix.getInverse(t.parent.matrixWorld),
                        t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld),
                        t.matrix.decompose(t.position, t.quaternion, t.scale))
            },
            update: function () {
                var t = new u
                    , e = new u;
                return function () {
                    for (var i = this.bones, n = this.boneInverses, r = this.boneMatrices, a = this.boneTexture, o = 0, s = i.length; o < s; o++) {
                        var h = i[o] ? i[o].matrixWorld : e;
                        t.multiplyMatrices(h, n[o]),
                            t.toArray(r, 16 * o)
                    }
                    void 0 !== a && (a.needsUpdate = !0)
                }
            }(),
            clone: function () {
                return new be(this.bones, this.boneInverses)
            }
        }),
        Me.prototype = Object.assign(Object.create(ct.prototype), {
            constructor: Me,
            isBone: !0
        }),
        Te.prototype = Object.assign(Object.create(Ct.prototype), {
            constructor: Te,
            isSkinnedMesh: !0,
            initBones: function () {
                var t, e, i, n, r = [];
                if (this.geometry && void 0 !== this.geometry.bones) {
                    for (i = 0,
                        n = this.geometry.bones.length; i < n; i++)
                        e = this.geometry.bones[i],
                            t = new Me,
                            r.push(t),
                            t.name = e.name,
                            t.position.fromArray(e.pos),
                            t.quaternion.fromArray(e.rotq),
                            void 0 !== e.scl && t.scale.fromArray(e.scl);
                    for (i = 0,
                        n = this.geometry.bones.length; i < n; i++)
                        e = this.geometry.bones[i],
                            -1 !== e.parent && null !== e.parent && void 0 !== r[e.parent] ? r[e.parent].add(r[i]) : this.add(r[i])
                }
                return this.updateMatrixWorld(!0),
                    r
            },
            bind: function (t, e) {
                this.skeleton = t,
                    void 0 === e && (this.updateMatrixWorld(!0),
                        this.skeleton.calculateInverses(),
                        e = this.matrixWorld),
                    this.bindMatrix.copy(e),
                    this.bindMatrixInverse.getInverse(e)
            },
            pose: function () {
                this.skeleton.pose()
            },
            normalizeSkinWeights: function () {
                var t, e;
                if (this.geometry && this.geometry.isGeometry)
                    for (e = 0; e < this.geometry.skinWeights.length; e++) {
                        var i = this.geometry.skinWeights[e];
                        t = 1 / i.lengthManhattan(),
                            t !== 1 / 0 ? i.multiplyScalar(t) : i.set(1, 0, 0, 0)
                    }
                else if (this.geometry && this.geometry.isBufferGeometry) {
                    var n = new o
                        , r = this.geometry.attributes.skinWeight;
                    for (e = 0; e < r.count; e++)
                        n.x = r.getX(e),
                            n.y = r.getY(e),
                            n.z = r.getZ(e),
                            n.w = r.getW(e),
                            t = 1 / n.lengthManhattan(),
                            t !== 1 / 0 ? n.multiplyScalar(t) : n.set(1, 0, 0, 0),
                            r.setXYZW(e, n.x, n.y, n.z, n.w)
                }
            },
            updateMatrixWorld: function (t) {
                Ct.prototype.updateMatrixWorld.call(this, t),
                    "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode && this.bindMatrixInverse.getInverse(this.bindMatrix)
            },
            clone: function () {
                return new this.constructor(this.geometry, this.material).copy(this)
            }
        }),
        Pe.prototype = Object.create(J.prototype),
        Pe.prototype.constructor = Pe,
        Pe.prototype.isLineBasicMaterial = !0,
        Pe.prototype.copy = function (t) {
            return J.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.linewidth = t.linewidth,
                this.linecap = t.linecap,
                this.linejoin = t.linejoin,
                this
        }
        ,
        Se.prototype = Object.assign(Object.create(ct.prototype), {
            constructor: Se,
            isLine: !0,
            raycast: function () {
                var t = new u
                    , e = new st
                    , i = new it;
                return function (n, r) {
                    var a = n.linePrecision
                        , o = a * a
                        , s = this.geometry
                        , h = this.matrixWorld;
                    if (null === s.boundingSphere && s.computeBoundingSphere(),
                        i.copy(s.boundingSphere),
                        i.applyMatrix4(h),
                        !1 !== n.ray.intersectsSphere(i)) {
                        t.getInverse(h),
                            e.copy(n.ray).applyMatrix4(t);
                        var l = new c
                            , u = new c
                            , p = new c
                            , d = new c
                            , f = this && this.isLineSegments ? 2 : 1;
                        if (s.isBufferGeometry) {
                            var m = s.index
                                , g = s.attributes
                                , v = g.position.array;
                            if (null !== m)
                                for (var y = m.array, _ = 0, x = y.length - 1; _ < x; _ += f) {
                                    var w = y[_]
                                        , b = y[_ + 1];
                                    l.fromArray(v, 3 * w),
                                        u.fromArray(v, 3 * b);
                                    var M = e.distanceSqToSegment(l, u, d, p);
                                    if (!(M > o)) {
                                        d.applyMatrix4(this.matrixWorld);
                                        var T = n.ray.origin.distanceTo(d);
                                        T < n.near || T > n.far || r.push({
                                            distance: T,
                                            point: p.clone().applyMatrix4(this.matrixWorld),
                                            index: _,
                                            face: null,
                                            faceIndex: null,
                                            object: this
                                        })
                                    }
                                }
                            else
                                for (var _ = 0, x = v.length / 3 - 1; _ < x; _ += f) {
                                    l.fromArray(v, 3 * _),
                                        u.fromArray(v, 3 * _ + 3);
                                    var M = e.distanceSqToSegment(l, u, d, p);
                                    if (!(M > o)) {
                                        d.applyMatrix4(this.matrixWorld);
                                        var T = n.ray.origin.distanceTo(d);
                                        T < n.near || T > n.far || r.push({
                                            distance: T,
                                            point: p.clone().applyMatrix4(this.matrixWorld),
                                            index: _,
                                            face: null,
                                            faceIndex: null,
                                            object: this
                                        })
                                    }
                                }
                        } else if (s.isGeometry)
                            for (var P = s.vertices, S = P.length, _ = 0; _ < S - 1; _ += f) {
                                var M = e.distanceSqToSegment(P[_], P[_ + 1], d, p);
                                if (!(M > o)) {
                                    d.applyMatrix4(this.matrixWorld);
                                    var T = n.ray.origin.distanceTo(d);
                                    T < n.near || T > n.far || r.push({
                                        distance: T,
                                        point: p.clone().applyMatrix4(this.matrixWorld),
                                        index: _,
                                        face: null,
                                        faceIndex: null,
                                        object: this
                                    })
                                }
                            }
                    }
                }
            }(),
            clone: function () {
                return new this.constructor(this.geometry, this.material).copy(this)
            }
        }),
        Ae.prototype = Object.assign(Object.create(Se.prototype), {
            constructor: Ae,
            isLineSegments: !0
        }),
        Ee.prototype = Object.assign(Object.create(Se.prototype), {
            constructor: Ee,
            isLineLoop: !0
        }),
        Le.prototype = Object.create(J.prototype),
        Le.prototype.constructor = Le,
        Le.prototype.isPointsMaterial = !0,
        Le.prototype.copy = function (t) {
            return J.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.map = t.map,
                this.size = t.size,
                this.sizeAttenuation = t.sizeAttenuation,
                this
        }
        ,
        Ce.prototype = Object.assign(Object.create(ct.prototype), {
            constructor: Ce,
            isPoints: !0,
            raycast: function () {
                var t = new u
                    , e = new st
                    , i = new it;
                return function (n, r) {
                    function a(t, i) {
                        var a = e.distanceSqToPoint(t);
                        if (a < p) {
                            var s = e.closestPointToPoint(t);
                            s.applyMatrix4(h);
                            var l = n.ray.origin.distanceTo(s);
                            if (l < n.near || l > n.far)
                                return;
                            r.push({
                                distance: l,
                                distanceToRay: Math.sqrt(a),
                                point: s.clone(),
                                index: i,
                                face: null,
                                object: o
                            })
                        }
                    }
                    var o = this
                        , s = this.geometry
                        , h = this.matrixWorld
                        , l = n.params.Points.threshold;
                    if (null === s.boundingSphere && s.computeBoundingSphere(),
                        i.copy(s.boundingSphere),
                        i.applyMatrix4(h),
                        i.radius += l,
                        !1 !== n.ray.intersectsSphere(i)) {
                        t.getInverse(h),
                            e.copy(n.ray).applyMatrix4(t);
                        var u = l / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                            , p = u * u
                            , d = new c;
                        if (s.isBufferGeometry) {
                            var f = s.index
                                , m = s.attributes
                                , g = m.position.array;
                            if (null !== f)
                                for (var v = f.array, y = 0, _ = v.length; y < _; y++) {
                                    var x = v[y];
                                    d.fromArray(g, 3 * x),
                                        a(d, x)
                                }
                            else
                                for (var y = 0, w = g.length / 3; y < w; y++)
                                    d.fromArray(g, 3 * y),
                                        a(d, y)
                        } else
                            for (var b = s.vertices, y = 0, w = b.length; y < w; y++)
                                a(b[y], y)
                    }
                }
            }(),
            clone: function () {
                return new this.constructor(this.geometry, this.material).copy(this)
            }
        }),
        Oe.prototype = Object.assign(Object.create(ct.prototype), {
            constructor: Oe
        }),
        Re.prototype = Object.create(a.prototype),
        Re.prototype.constructor = Re,
        Ie.prototype = Object.create(a.prototype),
        Ie.prototype.constructor = Ie,
        Ie.prototype.isCompressedTexture = !0,
        ke.prototype = Object.create(a.prototype),
        ke.prototype.constructor = ke,
        ze.prototype = Object.create(a.prototype),
        ze.prototype.constructor = ze,
        ze.prototype.isDepthTexture = !0,
        Fe.prototype = Object.create(Lt.prototype),
        Fe.prototype.constructor = Fe,
        De.prototype = Object.create(Et.prototype),
        De.prototype.constructor = De,
        Ne.prototype = Object.create(Lt.prototype),
        Ne.prototype.constructor = Ne,
        Be.prototype = Object.create(Et.prototype),
        Be.prototype.constructor = Be,
        Ue.prototype = Object.create(Lt.prototype),
        Ue.prototype.constructor = Ue,
        je.prototype = Object.create(Et.prototype),
        je.prototype.constructor = je,
        Ge.prototype = Object.create(Ue.prototype),
        Ge.prototype.constructor = Ge,
        Ve.prototype = Object.create(Et.prototype),
        Ve.prototype.constructor = Ve,
        He.prototype = Object.create(Ue.prototype),
        He.prototype.constructor = He,
        We.prototype = Object.create(Et.prototype),
        We.prototype.constructor = We,
        Xe.prototype = Object.create(Ue.prototype),
        Xe.prototype.constructor = Xe,
        Ye.prototype = Object.create(Et.prototype),
        Ye.prototype.constructor = Ye,
        qe.prototype = Object.create(Ue.prototype),
        qe.prototype.constructor = qe,
        Ze.prototype = Object.create(Et.prototype),
        Ze.prototype.constructor = Ze,
        Ke.prototype = Object.create(Lt.prototype),
        Ke.prototype.constructor = Ke,
        Qe.prototype = Object.create(Et.prototype),
        Qe.prototype.constructor = Qe,
        Je.prototype = Object.create(Lt.prototype),
        Je.prototype.constructor = Je,
        $e.prototype = Object.create(Et.prototype),
        $e.prototype.constructor = $e,
        ti.prototype = Object.create(Lt.prototype),
        ti.prototype.constructor = ti;
    var Us = {
        area: function (t) {
            for (var e = t.length, i = 0, n = e - 1, r = 0; r < e; n = r++)
                i += t[n].x * t[r].y - t[r].x * t[n].y;
            return .5 * i
        },
        triangulate: function () {
            function t(t, e, i, n, r, a) {
                var o, s, h, l, c, u, p, d, f;
                if (s = t[a[e]].x,
                    h = t[a[e]].y,
                    l = t[a[i]].x,
                    c = t[a[i]].y,
                    u = t[a[n]].x,
                    p = t[a[n]].y,
                    (l - s) * (p - h) - (c - h) * (u - s) <= 0)
                    return !1;
                var m, g, v, y, _, x, w, b, M, T, P, S, A, E, L;
                for (m = u - l,
                    g = p - c,
                    v = s - u,
                    y = h - p,
                    _ = l - s,
                    x = c - h,
                    o = 0; o < r; o++)
                    if (d = t[a[o]].x,
                        f = t[a[o]].y,
                        !(d === s && f === h || d === l && f === c || d === u && f === p) && (w = d - s,
                            b = f - h,
                            M = d - l,
                            T = f - c,
                            P = d - u,
                            S = f - p,
                            L = m * T - g * M,
                            A = _ * b - x * w,
                            E = v * S - y * P,
                            L >= -Number.EPSILON && E >= -Number.EPSILON && A >= -Number.EPSILON))
                        return !1;
                return !0
            }
            return function (e, i) {
                var n = e.length;
                if (n < 3)
                    return null;
                var r, a, o, s = [], h = [], l = [];
                if (Us.area(e) > 0)
                    for (a = 0; a < n; a++)
                        h[a] = a;
                else
                    for (a = 0; a < n; a++)
                        h[a] = n - 1 - a;
                var c = n
                    , u = 2 * c;
                for (a = c - 1; c > 2;) {
                    if (u-- <= 0)
                        return i ? l : s;
                    if (r = a,
                        c <= r && (r = 0),
                        a = r + 1,
                        c <= a && (a = 0),
                        o = a + 1,
                        c <= o && (o = 0),
                        t(e, r, a, o, c, h)) {
                        var p, d, f, m, g;
                        for (p = h[r],
                            d = h[a],
                            f = h[o],
                            s.push([e[p], e[d], e[f]]),
                            l.push([h[r], h[a], h[o]]),
                            m = a,
                            g = a + 1; g < c; m++,
                            g++)
                            h[m] = h[g];
                        c--,
                            u = 2 * c
                    }
                }
                return i ? l : s
            }
        }(),
        triangulateShape: function (t, e) {
            function i(t) {
                var e = t.length;
                e > 2 && t[e - 1].equals(t[0]) && t.pop()
            }
            function n(t, e, i) {
                return t.x !== e.x ? t.x < e.x ? t.x <= i.x && i.x <= e.x : e.x <= i.x && i.x <= t.x : t.y < e.y ? t.y <= i.y && i.y <= e.y : e.y <= i.y && i.y <= t.y
            }
            function r(t, e, i, r, a) {
                var o = e.x - t.x
                    , s = e.y - t.y
                    , h = r.x - i.x
                    , l = r.y - i.y
                    , c = t.x - i.x
                    , u = t.y - i.y
                    , p = s * h - o * l
                    , d = s * c - o * u;
                if (Math.abs(p) > Number.EPSILON) {
                    var f;
                    if (p > 0) {
                        if (d < 0 || d > p)
                            return [];
                        if ((f = l * c - h * u) < 0 || f > p)
                            return []
                    } else {
                        if (d > 0 || d < p)
                            return [];
                        if ((f = l * c - h * u) > 0 || f < p)
                            return []
                    }
                    if (0 === f)
                        return !a || 0 !== d && d !== p ? [t] : [];
                    if (f === p)
                        return !a || 0 !== d && d !== p ? [e] : [];
                    if (0 === d)
                        return [i];
                    if (d === p)
                        return [r];
                    var m = f / p;
                    return [{
                        x: t.x + m * o,
                        y: t.y + m * s
                    }]
                }
                if (0 !== d || l * c != h * u)
                    return [];
                var g = 0 === o && 0 === s
                    , v = 0 === h && 0 === l;
                if (g && v)
                    return t.x !== i.x || t.y !== i.y ? [] : [t];
                if (g)
                    return n(i, r, t) ? [t] : [];
                if (v)
                    return n(t, e, i) ? [i] : [];
                var y, _, x, w, b, M, T, P;
                return 0 !== o ? (t.x < e.x ? (y = t,
                    x = t.x,
                    _ = e,
                    w = e.x) : (y = e,
                        x = e.x,
                        _ = t,
                        w = t.x),
                    i.x < r.x ? (b = i,
                        T = i.x,
                        M = r,
                        P = r.x) : (b = r,
                            T = r.x,
                            M = i,
                            P = i.x)) : (t.y < e.y ? (y = t,
                                x = t.y,
                                _ = e,
                                w = e.y) : (y = e,
                                    x = e.y,
                                    _ = t,
                                    w = t.y),
                                i.y < r.y ? (b = i,
                                    T = i.y,
                                    M = r,
                                    P = r.y) : (b = r,
                                        T = r.y,
                                        M = i,
                                        P = i.y)),
                    x <= T ? w < T ? [] : w === T ? a ? [] : [b] : w <= P ? [b, _] : [b, M] : x > P ? [] : x === P ? a ? [] : [y] : w <= P ? [y, _] : [y, M]
            }
            function a(t, e, i, n) {
                var r = e.x - t.x
                    , a = e.y - t.y
                    , o = i.x - t.x
                    , s = i.y - t.y
                    , h = n.x - t.x
                    , l = n.y - t.y
                    , c = r * s - a * o
                    , u = r * l - a * h;
                if (Math.abs(c) > Number.EPSILON) {
                    var p = h * s - l * o;
                    return c > 0 ? u >= 0 && p >= 0 : u >= 0 || p >= 0
                }
                return u > 0
            }
            i(t),
                e.forEach(i);
            for (var o, s, h, l, c, u, p = {}, d = t.concat(), f = 0, m = e.length; f < m; f++)
                Array.prototype.push.apply(d, e[f]);
            for (o = 0,
                s = d.length; o < s; o++)
                c = d[o].x + ":" + d[o].y,
                    p[c],
                    p[c] = o;
            var g = function (t, e) {
                for (var i, n, o, s, h, l, c, u, p, d, f, m = t.concat(), g = [], v = [], y = 0, _ = e.length; y < _; y++)
                    g.push(y);
                for (var x = 0, w = 2 * g.length; g.length > 0 && !(--w < 0);)
                    for (o = x; o < m.length; o++) {
                        s = m[o],
                            n = -1;
                        for (var y = 0; y < g.length; y++)
                            if (l = g[y],
                                c = s.x + ":" + s.y + ":" + l,
                                void 0 === v[c]) {
                                i = e[l];
                                for (var b = 0; b < i.length; b++)
                                    if (h = i[b],
                                        function (t, e) {
                                            var n = m.length - 1
                                                , r = t - 1;
                                            r < 0 && (r = n);
                                            var o = t + 1;
                                            o > n && (o = 0);
                                            var s = a(m[t], m[r], m[o], i[e]);
                                            if (!s)
                                                return !1;
                                            var h = i.length - 1
                                                , l = e - 1;
                                            l < 0 && (l = h);
                                            var c = e + 1;
                                            return c > h && (c = 0),
                                                !!(s = a(i[e], i[l], i[c], m[t]))
                                        }(o, b) && !function (t, e) {
                                            var i, n, a;
                                            for (i = 0; i < m.length; i++)
                                                if (n = i + 1,
                                                    n %= m.length,
                                                    a = r(t, e, m[i], m[n], !0),
                                                    a.length > 0)
                                                    return !0;
                                            return !1
                                        }(s, h) && !function (t, i) {
                                            var n, a, o, s, h;
                                            for (n = 0; n < g.length; n++)
                                                for (a = e[g[n]],
                                                    o = 0; o < a.length; o++)
                                                    if (s = o + 1,
                                                        s %= a.length,
                                                        h = r(t, i, a[o], a[s], !0),
                                                        h.length > 0)
                                                        return !0;
                                            return !1
                                        }(s, h)) {
                                        n = b,
                                            g.splice(y, 1),
                                            u = m.slice(0, o + 1),
                                            p = m.slice(o),
                                            d = i.slice(n),
                                            f = i.slice(0, n + 1),
                                            m = u.concat(d).concat(f).concat(p),
                                            x = o;
                                        break
                                    }
                                if (n >= 0)
                                    break;
                                v[c] = !0
                            }
                        if (n >= 0)
                            break
                    }
                return m
            }(t, e)
                , v = Us.triangulate(g, !1);
            for (o = 0,
                s = v.length; o < s; o++)
                for (l = v[o],
                    h = 0; h < 3; h++)
                    c = l[h].x + ":" + l[h].y,
                        void 0 !== (u = p[c]) && (l[h] = u);
            return v.concat()
        },
        isClockWise: function (t) {
            return Us.area(t) < 0
        }
    };
    ei.prototype = Object.create(Et.prototype),
        ei.prototype.constructor = ei,
        ii.prototype = Object.create(Lt.prototype),
        ii.prototype.constructor = ii,
        ii.prototype.getArrays = function () {
            var t = this.getAttribute("position")
                , e = t ? Array.prototype.slice.call(t.array) : []
                , i = this.getAttribute("uv")
                , n = i ? Array.prototype.slice.call(i.array) : []
                , r = this.index;
            return {
                position: e,
                uv: n,
                index: r ? Array.prototype.slice.call(r.array) : []
            }
        }
        ,
        ii.prototype.addShapeList = function (t, e) {
            var i = t.length;
            e.arrays = this.getArrays();
            for (var n = 0; n < i; n++) {
                var r = t[n];
                this.addShape(r, e)
            }
            this.setIndex(e.arrays.index),
                this.addAttribute("position", new Mt(e.arrays.position, 3)),
                this.addAttribute("uv", new Mt(e.arrays.uv, 2))
        }
        ,
        ii.prototype.addShape = function (t, e) {
            function i(t, e, i) {
                return e.clone().multiplyScalar(i).add(t)
            }
            function n(t, e, i) {
                var n, a, o = 1, s = t.x - e.x, h = t.y - e.y, l = i.x - t.x, c = i.y - t.y, u = s * s + h * h, p = s * c - h * l;
                if (Math.abs(p) > Number.EPSILON) {
                    var d = Math.sqrt(u)
                        , f = Math.sqrt(l * l + c * c)
                        , m = e.x - h / d
                        , g = e.y + s / d
                        , v = i.x - c / f
                        , y = i.y + l / f
                        , _ = ((v - m) * c - (y - g) * l) / (s * c - h * l);
                    n = m + s * _ - t.x,
                        a = g + h * _ - t.y;
                    var x = n * n + a * a;
                    if (x <= 2)
                        return new r(n, a);
                    o = Math.sqrt(x / 2)
                } else {
                    var w = !1;
                    s > Number.EPSILON ? l > Number.EPSILON && (w = !0) : s < -Number.EPSILON ? l < -Number.EPSILON && (w = !0) : Math.sign(h) === Math.sign(c) && (w = !0),
                        w ? (n = -h,
                            a = s,
                            o = Math.sqrt(u)) : (n = s,
                                a = h,
                                o = Math.sqrt(u / 2))
                }
                return new r(n / o, a / o)
            }
            function a(t, e) {
                var i, n;
                for (Q = t.length; --Q >= 0;) {
                    i = Q,
                        n = Q - 1,
                        n < 0 && (n = t.length - 1);
                    var r = 0
                        , a = E + 2 * P;
                    for (r = 0; r < a; r++) {
                        var o = q * r
                            , s = q * (r + 1);
                        h(e + i + o, e + n + o, e + n + s, e + i + s, t, r, a, i, n)
                    }
                }
            }
            function o(t, e, i) {
                w.push(t),
                    w.push(e),
                    w.push(i)
            }
            function s(t, e, i) {
                l(t),
                    l(e),
                    l(i);
                var n = y.length / 3
                    , r = O.generateTopUV(z, y, n - 3, n - 2, n - 1);
                u(r[0]),
                    u(r[1]),
                    u(r[2])
            }
            function h(t, e, i, n, r, a, o, s, h) {
                l(t),
                    l(e),
                    l(n),
                    l(e),
                    l(i),
                    l(n);
                var c = y.length / 3
                    , p = O.generateSideWallUV(z, y, c - 6, c - 3, c - 2, c - 1);
                u(p[0]),
                    u(p[1]),
                    u(p[3]),
                    u(p[1]),
                    u(p[2]),
                    u(p[3])
            }
            function l(t) {
                _.push(y.length / 3),
                    y.push(w[3 * t + 0]),
                    y.push(w[3 * t + 1]),
                    y.push(w[3 * t + 2])
            }
            function u(t) {
                x.push(t.x),
                    x.push(t.y)
            }
            var p, d, f, m, g, v = e.arrays ? e.arrays : this.getArrays(), y = v.position, _ = v.index, x = v.uv, w = [], b = void 0 !== e.amount ? e.amount : 100, M = void 0 !== e.bevelThickness ? e.bevelThickness : 6, T = void 0 !== e.bevelSize ? e.bevelSize : M - 2, P = void 0 !== e.bevelSegments ? e.bevelSegments : 3, S = void 0 === e.bevelEnabled || e.bevelEnabled, A = void 0 !== e.curveSegments ? e.curveSegments : 12, E = void 0 !== e.steps ? e.steps : 1, L = e.extrudePath, C = !1, O = void 0 !== e.UVGenerator ? e.UVGenerator : ei.WorldUVGenerator;
            L && (p = L.getSpacedPoints(E),
                C = !0,
                S = !1,
                d = void 0 !== e.frames ? e.frames : L.computeFrenetFrames(E, !1),
                f = new c,
                m = new c,
                g = new c),
                S || (P = 0,
                    M = 0,
                    T = 0);
            var R, I, k, z = this, F = t.extractPoints(A), D = F.shape, N = F.holes, B = !Us.isClockWise(D);
            if (B) {
                for (D = D.reverse(),
                    I = 0,
                    k = N.length; I < k; I++)
                    R = N[I],
                        Us.isClockWise(R) && (N[I] = R.reverse());
                B = !1
            }
            var U = Us.triangulateShape(D, N)
                , j = D;
            for (I = 0,
                k = N.length; I < k; I++)
                R = N[I],
                    D = D.concat(R);
            for (var G, V, H, W, X, Y, q = D.length, Z = U.length, K = [], Q = 0, J = j.length, $ = J - 1, tt = Q + 1; Q < J; Q++,
                $++,
                tt++)
                $ === J && ($ = 0),
                    tt === J && (tt = 0),
                    K[Q] = n(j[Q], j[$], j[tt]);
            var et, it = [], nt = K.concat();
            for (I = 0,
                k = N.length; I < k; I++) {
                for (R = N[I],
                    et = [],
                    Q = 0,
                    J = R.length,
                    $ = J - 1,
                    tt = Q + 1; Q < J; Q++,
                    $++,
                    tt++)
                    $ === J && ($ = 0),
                        tt === J && (tt = 0),
                        et[Q] = n(R[Q], R[$], R[tt]);
                it.push(et),
                    nt = nt.concat(et)
            }
            for (G = 0; G < P; G++) {
                for (H = G / P,
                    W = M * Math.cos(H * Math.PI / 2),
                    V = T * Math.sin(H * Math.PI / 2),
                    Q = 0,
                    J = j.length; Q < J; Q++)
                    X = i(j[Q], K[Q], V),
                        o(X.x, X.y, -W);
                for (I = 0,
                    k = N.length; I < k; I++)
                    for (R = N[I],
                        et = it[I],
                        Q = 0,
                        J = R.length; Q < J; Q++)
                        X = i(R[Q], et[Q], V),
                            o(X.x, X.y, -W)
            }
            for (V = T,
                Q = 0; Q < q; Q++)
                X = S ? i(D[Q], nt[Q], V) : D[Q],
                    C ? (m.copy(d.normals[0]).multiplyScalar(X.x),
                        f.copy(d.binormals[0]).multiplyScalar(X.y),
                        g.copy(p[0]).add(m).add(f),
                        o(g.x, g.y, g.z)) : o(X.x, X.y, 0);
            var rt;
            for (rt = 1; rt <= E; rt++)
                for (Q = 0; Q < q; Q++)
                    X = S ? i(D[Q], nt[Q], V) : D[Q],
                        C ? (m.copy(d.normals[rt]).multiplyScalar(X.x),
                            f.copy(d.binormals[rt]).multiplyScalar(X.y),
                            g.copy(p[rt]).add(m).add(f),
                            o(g.x, g.y, g.z)) : o(X.x, X.y, b / E * rt);
            for (G = P - 1; G >= 0; G--) {
                for (H = G / P,
                    W = M * Math.cos(H * Math.PI / 2),
                    V = T * Math.sin(H * Math.PI / 2),
                    Q = 0,
                    J = j.length; Q < J; Q++)
                    X = i(j[Q], K[Q], V),
                        o(X.x, X.y, b + W);
                for (I = 0,
                    k = N.length; I < k; I++)
                    for (R = N[I],
                        et = it[I],
                        Q = 0,
                        J = R.length; Q < J; Q++)
                        X = i(R[Q], et[Q], V),
                            C ? o(X.x, X.y + p[E - 1].y, p[E - 1].x + W) : o(X.x, X.y, b + W)
            }
            !function () {
                var t = y.length / 3;
                if (S) {
                    var i = 0
                        , n = q * i;
                    for (Q = 0; Q < Z; Q++)
                        Y = U[Q],
                            s(Y[2] + n, Y[1] + n, Y[0] + n);
                    for (i = E + 2 * P,
                        n = q * i,
                        Q = 0; Q < Z; Q++)
                        Y = U[Q],
                            s(Y[0] + n, Y[1] + n, Y[2] + n)
                } else {
                    for (Q = 0; Q < Z; Q++)
                        Y = U[Q],
                            s(Y[2], Y[1], Y[0]);
                    for (Q = 0; Q < Z; Q++)
                        Y = U[Q],
                            s(Y[0] + q * E, Y[1] + q * E, Y[2] + q * E)
                }
                z.addGroup(t, y.length / 3 - t, void 0 !== e.material ? e.material : 0)
            }(),
                function () {
                    var t = y.length / 3
                        , i = 0;
                    for (a(j, i),
                        i += j.length,
                        I = 0,
                        k = N.length; I < k; I++)
                        R = N[I],
                            a(R, i),
                            i += R.length;
                    z.addGroup(t, y.length / 3 - t, void 0 !== e.extrudeMaterial ? e.extrudeMaterial : 1)
                }(),
                e.arrays || (this.setIndex(_),
                    this.addAttribute("position", new Mt(y, 3)),
                    this.addAttribute("uv", new Mt(e.arrays.uv, 2)))
        }
        ,
        ei.WorldUVGenerator = {
            generateTopUV: function (t, e, i, n, a) {
                var o = e[3 * i]
                    , s = e[3 * i + 1]
                    , h = e[3 * n]
                    , l = e[3 * n + 1]
                    , c = e[3 * a]
                    , u = e[3 * a + 1];
                return [new r(o, s), new r(h, l), new r(c, u)]
            },
            generateSideWallUV: function (t, e, i, n, a, o) {
                var s = e[3 * i]
                    , h = e[3 * i + 1]
                    , l = e[3 * i + 2]
                    , c = e[3 * n]
                    , u = e[3 * n + 1]
                    , p = e[3 * n + 2]
                    , d = e[3 * a]
                    , f = e[3 * a + 1]
                    , m = e[3 * a + 2]
                    , g = e[3 * o]
                    , v = e[3 * o + 1]
                    , y = e[3 * o + 2];
                return Math.abs(h - u) < .01 ? [new r(s, 1 - l), new r(c, 1 - p), new r(d, 1 - m), new r(g, 1 - y)] : [new r(h, 1 - l), new r(u, 1 - p), new r(f, 1 - m), new r(v, 1 - y)]
            }
        },
        ni.prototype = Object.create(Et.prototype),
        ni.prototype.constructor = ni,
        ri.prototype = Object.create(ii.prototype),
        ri.prototype.constructor = ri,
        ai.prototype = Object.create(Et.prototype),
        ai.prototype.constructor = ai,
        oi.prototype = Object.create(Lt.prototype),
        oi.prototype.constructor = oi,
        si.prototype = Object.create(Et.prototype),
        si.prototype.constructor = si,
        hi.prototype = Object.create(Lt.prototype),
        hi.prototype.constructor = hi,
        li.prototype = Object.create(Et.prototype),
        li.prototype.constructor = li,
        ci.prototype = Object.create(Lt.prototype),
        ci.prototype.constructor = ci,
        ui.prototype = Object.create(Et.prototype),
        ui.prototype.constructor = ui,
        pi.prototype = Object.create(Lt.prototype),
        pi.prototype.constructor = pi,
        di.prototype = Object.create(Lt.prototype),
        di.prototype.constructor = di,
        fi.prototype = Object.create(Et.prototype),
        fi.prototype.constructor = fi,
        mi.prototype = Object.create(Lt.prototype),
        mi.prototype.constructor = mi,
        gi.prototype = Object.create(fi.prototype),
        gi.prototype.constructor = gi,
        vi.prototype = Object.create(mi.prototype),
        vi.prototype.constructor = vi,
        yi.prototype = Object.create(Et.prototype),
        yi.prototype.constructor = yi,
        _i.prototype = Object.create(Lt.prototype),
        _i.prototype.constructor = _i;
    var js = Object.freeze({
        WireframeGeometry: Fe,
        ParametricGeometry: De,
        ParametricBufferGeometry: Ne,
        TetrahedronGeometry: je,
        TetrahedronBufferGeometry: Ge,
        OctahedronGeometry: Ve,
        OctahedronBufferGeometry: He,
        IcosahedronGeometry: We,
        IcosahedronBufferGeometry: Xe,
        DodecahedronGeometry: Ye,
        DodecahedronBufferGeometry: qe,
        PolyhedronGeometry: Be,
        PolyhedronBufferGeometry: Ue,
        TubeGeometry: Ze,
        TubeBufferGeometry: Ke,
        TorusKnotGeometry: Qe,
        TorusKnotBufferGeometry: Je,
        TorusGeometry: $e,
        TorusBufferGeometry: ti,
        TextGeometry: ni,
        TextBufferGeometry: ri,
        SphereGeometry: ai,
        SphereBufferGeometry: oi,
        RingGeometry: si,
        RingBufferGeometry: hi,
        PlaneGeometry: It,
        PlaneBufferGeometry: kt,
        LatheGeometry: li,
        LatheBufferGeometry: ci,
        ShapeGeometry: ui,
        ShapeBufferGeometry: pi,
        ExtrudeGeometry: ei,
        ExtrudeBufferGeometry: ii,
        EdgesGeometry: di,
        ConeGeometry: gi,
        ConeBufferGeometry: vi,
        CylinderGeometry: fi,
        CylinderBufferGeometry: mi,
        CircleGeometry: yi,
        CircleBufferGeometry: _i,
        BoxGeometry: Ot,
        BoxBufferGeometry: Rt
    });
    xi.prototype = Object.create($.prototype),
        xi.prototype.constructor = xi,
        xi.prototype.isShadowMaterial = !0,
        wi.prototype = Object.create($.prototype),
        wi.prototype.constructor = wi,
        wi.prototype.isRawShaderMaterial = !0,
        bi.prototype = Object.create(J.prototype),
        bi.prototype.constructor = bi,
        bi.prototype.isMeshStandardMaterial = !0,
        bi.prototype.copy = function (t) {
            return J.prototype.copy.call(this, t),
                this.defines = {
                    STANDARD: ""
                },
                this.color.copy(t.color),
                this.roughness = t.roughness,
                this.metalness = t.metalness,
                this.map = t.map,
                this.lightMap = t.lightMap,
                this.lightMapIntensity = t.lightMapIntensity,
                this.aoMap = t.aoMap,
                this.aoMapIntensity = t.aoMapIntensity,
                this.emissive.copy(t.emissive),
                this.emissiveMap = t.emissiveMap,
                this.emissiveIntensity = t.emissiveIntensity,
                this.bumpMap = t.bumpMap,
                this.bumpScale = t.bumpScale,
                this.normalMap = t.normalMap,
                this.normalScale.copy(t.normalScale),
                this.displacementMap = t.displacementMap,
                this.displacementScale = t.displacementScale,
                this.displacementBias = t.displacementBias,
                this.roughnessMap = t.roughnessMap,
                this.metalnessMap = t.metalnessMap,
                this.alphaMap = t.alphaMap,
                this.envMap = t.envMap,
                this.envMapIntensity = t.envMapIntensity,
                this.refractionRatio = t.refractionRatio,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this.wireframeLinecap = t.wireframeLinecap,
                this.wireframeLinejoin = t.wireframeLinejoin,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this.morphNormals = t.morphNormals,
                this
        }
        ,
        Mi.prototype = Object.create(bi.prototype),
        Mi.prototype.constructor = Mi,
        Mi.prototype.isMeshPhysicalMaterial = !0,
        Mi.prototype.copy = function (t) {
            return bi.prototype.copy.call(this, t),
                this.defines = {
                    PHYSICAL: ""
                },
                this.reflectivity = t.reflectivity,
                this.clearCoat = t.clearCoat,
                this.clearCoatRoughness = t.clearCoatRoughness,
                this
        }
        ,
        Ti.prototype = Object.create(J.prototype),
        Ti.prototype.constructor = Ti,
        Ti.prototype.isMeshPhongMaterial = !0,
        Ti.prototype.copy = function (t) {
            return J.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.specular.copy(t.specular),
                this.shininess = t.shininess,
                this.map = t.map,
                this.lightMap = t.lightMap,
                this.lightMapIntensity = t.lightMapIntensity,
                this.aoMap = t.aoMap,
                this.aoMapIntensity = t.aoMapIntensity,
                this.emissive.copy(t.emissive),
                this.emissiveMap = t.emissiveMap,
                this.emissiveIntensity = t.emissiveIntensity,
                this.bumpMap = t.bumpMap,
                this.bumpScale = t.bumpScale,
                this.normalMap = t.normalMap,
                this.normalScale.copy(t.normalScale),
                this.displacementMap = t.displacementMap,
                this.displacementScale = t.displacementScale,
                this.displacementBias = t.displacementBias,
                this.specularMap = t.specularMap,
                this.alphaMap = t.alphaMap,
                this.envMap = t.envMap,
                this.combine = t.combine,
                this.reflectivity = t.reflectivity,
                this.refractionRatio = t.refractionRatio,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this.wireframeLinecap = t.wireframeLinecap,
                this.wireframeLinejoin = t.wireframeLinejoin,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this.morphNormals = t.morphNormals,
                this
        }
        ,
        Pi.prototype = Object.create(Ti.prototype),
        Pi.prototype.constructor = Pi,
        Pi.prototype.isMeshToonMaterial = !0,
        Pi.prototype.copy = function (t) {
            return Ti.prototype.copy.call(this, t),
                this.gradientMap = t.gradientMap,
                this
        }
        ,
        Si.prototype = Object.create(J.prototype),
        Si.prototype.constructor = Si,
        Si.prototype.isMeshNormalMaterial = !0,
        Si.prototype.copy = function (t) {
            return J.prototype.copy.call(this, t),
                this.bumpMap = t.bumpMap,
                this.bumpScale = t.bumpScale,
                this.normalMap = t.normalMap,
                this.normalScale.copy(t.normalScale),
                this.displacementMap = t.displacementMap,
                this.displacementScale = t.displacementScale,
                this.displacementBias = t.displacementBias,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this.morphNormals = t.morphNormals,
                this
        }
        ,
        Ai.prototype = Object.create(J.prototype),
        Ai.prototype.constructor = Ai,
        Ai.prototype.isMeshLambertMaterial = !0,
        Ai.prototype.copy = function (t) {
            return J.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.map = t.map,
                this.lightMap = t.lightMap,
                this.lightMapIntensity = t.lightMapIntensity,
                this.aoMap = t.aoMap,
                this.aoMapIntensity = t.aoMapIntensity,
                this.emissive.copy(t.emissive),
                this.emissiveMap = t.emissiveMap,
                this.emissiveIntensity = t.emissiveIntensity,
                this.specularMap = t.specularMap,
                this.alphaMap = t.alphaMap,
                this.envMap = t.envMap,
                this.combine = t.combine,
                this.reflectivity = t.reflectivity,
                this.refractionRatio = t.refractionRatio,
                this.wireframe = t.wireframe,
                this.wireframeLinewidth = t.wireframeLinewidth,
                this.wireframeLinecap = t.wireframeLinecap,
                this.wireframeLinejoin = t.wireframeLinejoin,
                this.skinning = t.skinning,
                this.morphTargets = t.morphTargets,
                this.morphNormals = t.morphNormals,
                this
        }
        ,
        Ei.prototype = Object.create(J.prototype),
        Ei.prototype.constructor = Ei,
        Ei.prototype.isLineDashedMaterial = !0,
        Ei.prototype.copy = function (t) {
            return J.prototype.copy.call(this, t),
                this.color.copy(t.color),
                this.linewidth = t.linewidth,
                this.scale = t.scale,
                this.dashSize = t.dashSize,
                this.gapSize = t.gapSize,
                this
        }
        ;
    var Gs = Object.freeze({
        ShadowMaterial: xi,
        SpriteMaterial: _e,
        RawShaderMaterial: wi,
        ShaderMaterial: $,
        PointsMaterial: Le,
        MeshPhysicalMaterial: Mi,
        MeshStandardMaterial: bi,
        MeshPhongMaterial: Ti,
        MeshToonMaterial: Pi,
        MeshNormalMaterial: Si,
        MeshLambertMaterial: Ai,
        MeshDepthMaterial: tt,
        MeshBasicMaterial: ft,
        LineDashedMaterial: Ei,
        LineBasicMaterial: Pe,
        Material: J
    })
        , Vs = {
            enabled: !1,
            files: {},
            add: function (t, e) {
                !1 !== this.enabled && (this.files[t] = e)
            },
            get: function (t) {
                if (!1 !== this.enabled)
                    return this.files[t]
            },
            remove: function (t) {
                delete this.files[t]
            },
            clear: function () {
                this.files = {}
            }
        }
        , Hs = new Li;
    Object.assign(Ci.prototype, {
        load: function (t, e, i, n) {
            void 0 === t && (t = ""),
                void 0 !== this.path && (t = this.path + t);
            var r = this
                , a = Vs.get(t);
            if (void 0 !== a)
                return r.manager.itemStart(t),
                    setTimeout(function () {
                        e && e(a),
                            r.manager.itemEnd(t)
                    }, 0),
                    a;
            var o = /^data:(.*?)(;base64)?,(.*)$/
                , s = t.match(o);
            if (s) {
                var h = s[1]
                    , l = !!s[2]
                    , c = s[3];
                c = window.decodeURIComponent(c),
                    l && (c = window.atob(c));
                try {
                    var u, p = (this.responseType || "").toLowerCase();
                    switch (p) {
                        case "arraybuffer":
                        case "blob":
                            u = new ArrayBuffer(c.length);
                            for (var d = new Uint8Array(u), f = 0; f < c.length; f++)
                                d[f] = c.charCodeAt(f);
                            "blob" === p && (u = new Blob([u], {
                                type: h
                            }));
                            break;
                        case "document":
                            var m = new DOMParser;
                            u = m.parseFromString(c, h);
                            break;
                        case "json":
                            u = JSON.parse(c);
                            break;
                        default:
                            u = c
                    }
                    window.setTimeout(function () {
                        e && e(u),
                            r.manager.itemEnd(t)
                    }, 0)
                } catch (e) {
                    window.setTimeout(function () {
                        n && n(e),
                            r.manager.itemEnd(t),
                            r.manager.itemError(t)
                    }, 0)
                }
            } else {
                var g = new XMLHttpRequest;
                g.open("GET", t, !0),
                    g.addEventListener("load", function (i) {
                        var a = i.target.response;
                        Vs.add(t, a),
                            200 === this.status ? (e && e(a),
                                r.manager.itemEnd(t)) : 0 === this.status ? (e && e(a),
                                    r.manager.itemEnd(t)) : (n && n(i),
                                        r.manager.itemEnd(t),
                                        r.manager.itemError(t))
                    }, !1),
                    void 0 !== i && g.addEventListener("progress", function (t) {
                        i(t)
                    }, !1),
                    g.addEventListener("error", function (e) {
                        n && n(e),
                            r.manager.itemEnd(t),
                            r.manager.itemError(t)
                    }, !1),
                    void 0 !== this.responseType && (g.responseType = this.responseType),
                    void 0 !== this.withCredentials && (g.withCredentials = this.withCredentials),
                    g.overrideMimeType && g.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain");
                for (var v in this.requestHeader)
                    g.setRequestHeader(v, this.requestHeader[v]);
                g.send(null)
            }
            return r.manager.itemStart(t),
                g
        },
        setPath: function (t) {
            return this.path = t,
                this
        },
        setResponseType: function (t) {
            return this.responseType = t,
                this
        },
        setWithCredentials: function (t) {
            return this.withCredentials = t,
                this
        },
        setMimeType: function (t) {
            return this.mimeType = t,
                this
        },
        setRequestHeader: function (t) {
            return this.requestHeader = t,
                this
        }
    }),
        Object.assign(Oi.prototype, {
            load: function (t, e, i, n) {
                var r = this
                    , a = []
                    , o = new Ie;
                o.image = a;
                var s = new Ci(this.manager);
                if (s.setPath(this.path),
                    s.setResponseType("arraybuffer"),
                    Array.isArray(t))
                    for (var h = 0, l = 0, c = t.length; l < c; ++l)
                        !function (l) {
                            s.load(t[l], function (t) {
                                var i = r._parser(t, !0);
                                a[l] = {
                                    width: i.width,
                                    height: i.height,
                                    format: i.format,
                                    mipmaps: i.mipmaps
                                },
                                    6 === (h += 1) && (1 === i.mipmapCount && (o.minFilter = bo),
                                        o.format = i.format,
                                        o.needsUpdate = !0,
                                        e && e(o))
                            }, i, n)
                        }(l);
                else
                    s.load(t, function (t) {
                        var i = r._parser(t, !0);
                        if (i.isCubemap)
                            for (var n = i.mipmaps.length / i.mipmapCount, s = 0; s < n; s++) {
                                a[s] = {
                                    mipmaps: []
                                };
                                for (var h = 0; h < i.mipmapCount; h++)
                                    a[s].mipmaps.push(i.mipmaps[s * i.mipmapCount + h]),
                                        a[s].format = i.format,
                                        a[s].width = i.width,
                                        a[s].height = i.height
                            }
                        else
                            o.image.width = i.width,
                                o.image.height = i.height,
                                o.mipmaps = i.mipmaps;
                        1 === i.mipmapCount && (o.minFilter = bo),
                            o.format = i.format,
                            o.needsUpdate = !0,
                            e && e(o)
                    }, i, n);
                return o
            },
            setPath: function (t) {
                return this.path = t,
                    this
            }
        }),
        Object.assign(Ri.prototype, {
            load: function (t, e, i, n) {
                var r = this
                    , a = new p
                    , o = new Ci(this.manager);
                return o.setResponseType("arraybuffer"),
                    o.load(t, function (t) {
                        var i = r._parser(t);
                        i && (void 0 !== i.image ? a.image = i.image : void 0 !== i.data && (a.image.width = i.width,
                            a.image.height = i.height,
                            a.image.data = i.data),
                            a.wrapS = void 0 !== i.wrapS ? i.wrapS : vo,
                            a.wrapT = void 0 !== i.wrapT ? i.wrapT : vo,
                            a.magFilter = void 0 !== i.magFilter ? i.magFilter : bo,
                            a.minFilter = void 0 !== i.minFilter ? i.minFilter : To,
                            a.anisotropy = void 0 !== i.anisotropy ? i.anisotropy : 1,
                            void 0 !== i.format && (a.format = i.format),
                            void 0 !== i.type && (a.type = i.type),
                            void 0 !== i.mipmaps && (a.mipmaps = i.mipmaps),
                            1 === i.mipmapCount && (a.minFilter = bo),
                            a.needsUpdate = !0,
                            e && e(a, i))
                    }, i, n),
                    a
            }
        }),
        Object.assign(Ii.prototype, {
            load: function (t, e, i, n) {
                void 0 === t && (t = ""),
                    void 0 !== this.path && (t = this.path + t);
                var r = this
                    , a = Vs.get(t);
                if (void 0 !== a)
                    return r.manager.itemStart(t),
                        setTimeout(function () {
                            e && e(a),
                                r.manager.itemEnd(t)
                        }, 0),
                        a;
                var o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
                return o.addEventListener("load", function () {
                    Vs.add(t, this),
                        e && e(this),
                        r.manager.itemEnd(t)
                }, !1),
                    o.addEventListener("error", function (e) {
                        n && n(e),
                            r.manager.itemEnd(t),
                            r.manager.itemError(t)
                    }, !1),
                    "data:" !== t.substr(0, 5) && void 0 !== this.crossOrigin && (o.crossOrigin = this.crossOrigin),
                    r.manager.itemStart(t),
                    o.src = t,
                    o
            },
            setCrossOrigin: function (t) {
                return this.crossOrigin = t,
                    this
            },
            setPath: function (t) {
                return this.path = t,
                    this
            }
        }),
        Object.assign(ki.prototype, {
            load: function (t, e, i, n) {
                var r = new d
                    , a = new Ii(this.manager);
                a.setCrossOrigin(this.crossOrigin),
                    a.setPath(this.path);
                for (var o = 0, s = 0; s < t.length; ++s)
                    !function (i) {
                        a.load(t[i], function (t) {
                            r.images[i] = t,
                                6 == ++o && (r.needsUpdate = !0,
                                    e && e(r))
                        }, void 0, n)
                    }(s);
                return r
            },
            setCrossOrigin: function (t) {
                return this.crossOrigin = t,
                    this
            },
            setPath: function (t) {
                return this.path = t,
                    this
            }
        }),
        Object.assign(zi.prototype, {
            load: function (t, e, i, n) {
                var r = new Ii(this.manager);
                r.setCrossOrigin(this.crossOrigin),
                    r.setPath(this.path);
                var o = new a;
                return o.image = r.load(t, function () {
                    var i = t.search(/\.(jpg|jpeg)$/) > 0 || 0 === t.search(/^data\:image\/jpeg/);
                    o.format = i ? No : Bo,
                        o.needsUpdate = !0,
                        void 0 !== e && e(o)
                }, i, n),
                    o
            },
            setCrossOrigin: function (t) {
                return this.crossOrigin = t,
                    this
            },
            setPath: function (t) {
                return this.path = t,
                    this
            }
        }),
        Fi.prototype = Object.assign(Object.create(ct.prototype), {
            constructor: Fi,
            isLight: !0,
            copy: function (t) {
                return ct.prototype.copy.call(this, t),
                    this.color.copy(t.color),
                    this.intensity = t.intensity,
                    this
            },
            toJSON: function (t) {
                var e = ct.prototype.toJSON.call(this, t);
                return e.object.color = this.color.getHex(),
                    e.object.intensity = this.intensity,
                    void 0 !== this.groundColor && (e.object.groundColor = this.groundColor.getHex()),
                    void 0 !== this.distance && (e.object.distance = this.distance),
                    void 0 !== this.angle && (e.object.angle = this.angle),
                    void 0 !== this.decay && (e.object.decay = this.decay),
                    void 0 !== this.penumbra && (e.object.penumbra = this.penumbra),
                    void 0 !== this.shadow && (e.object.shadow = this.shadow.toJSON()),
                    e
            }
        }),
        Di.prototype = Object.assign(Object.create(Fi.prototype), {
            constructor: Di,
            isHemisphereLight: !0,
            copy: function (t) {
                return Fi.prototype.copy.call(this, t),
                    this.groundColor.copy(t.groundColor),
                    this
            }
        }),
        Object.assign(Ni.prototype, {
            copy: function (t) {
                return this.camera = t.camera.clone(),
                    this.bias = t.bias,
                    this.radius = t.radius,
                    this.mapSize.copy(t.mapSize),
                    this
            },
            clone: function () {
                return (new this.constructor).copy(this)
            },
            toJSON: function () {
                var t = {};
                return 0 !== this.bias && (t.bias = this.bias),
                    1 !== this.radius && (t.radius = this.radius),
                    512 === this.mapSize.x && 512 === this.mapSize.y || (t.mapSize = this.mapSize.toArray()),
                    t.camera = this.camera.toJSON(!1).object,
                    delete t.camera.matrix,
                    t
            }
        }),
        Bi.prototype = Object.assign(Object.create(Ni.prototype), {
            constructor: Bi,
            isSpotLightShadow: !0,
            update: function (t) {
                var e = this.camera
                    , i = 2 * bs.RAD2DEG * t.angle
                    , n = this.mapSize.width / this.mapSize.height
                    , r = t.distance || e.far;
                i === e.fov && n === e.aspect && r === e.far || (e.fov = i,
                    e.aspect = n,
                    e.far = r,
                    e.updateProjectionMatrix())
            }
        }),
        Ui.prototype = Object.assign(Object.create(Fi.prototype), {
            constructor: Ui,
            isSpotLight: !0,
            copy: function (t) {
                return Fi.prototype.copy.call(this, t),
                    this.distance = t.distance,
                    this.angle = t.angle,
                    this.penumbra = t.penumbra,
                    this.decay = t.decay,
                    this.target = t.target.clone(),
                    this.shadow = t.shadow.clone(),
                    this
            }
        }),
        ji.prototype = Object.assign(Object.create(Fi.prototype), {
            constructor: ji,
            isPointLight: !0,
            copy: function (t) {
                return Fi.prototype.copy.call(this, t),
                    this.distance = t.distance,
                    this.decay = t.decay,
                    this.shadow = t.shadow.clone(),
                    this
            }
        }),
        Gi.prototype = Object.assign(Object.create(Ni.prototype), {
            constructor: Gi
        }),
        Vi.prototype = Object.assign(Object.create(Fi.prototype), {
            constructor: Vi,
            isDirectionalLight: !0,
            copy: function (t) {
                return Fi.prototype.copy.call(this, t),
                    this.target = t.target.clone(),
                    this.shadow = t.shadow.clone(),
                    this
            }
        }),
        Hi.prototype = Object.assign(Object.create(Fi.prototype), {
            constructor: Hi,
            isAmbientLight: !0
        }),
        Wi.prototype = Object.assign(Object.create(Fi.prototype), {
            constructor: Wi,
            isRectAreaLight: !0,
            copy: function (t) {
                return Fi.prototype.copy.call(this, t),
                    this.width = t.width,
                    this.height = t.height,
                    this
            },
            toJSON: function (t) {
                var e = Fi.prototype.toJSON.call(this, t);
                return e.object.width = this.width,
                    e.object.height = this.height,
                    e
            }
        });
    var Ws = {
        arraySlice: function (t, e, i) {
            return Ws.isTypedArray(t) ? new t.constructor(t.subarray(e, void 0 !== i ? i : t.length)) : t.slice(e, i)
        },
        convertArray: function (t, e, i) {
            return !t || !i && t.constructor === e ? t : "number" == typeof e.BYTES_PER_ELEMENT ? new e(t) : Array.prototype.slice.call(t)
        },
        isTypedArray: function (t) {
            return ArrayBuffer.isView(t) && !(t instanceof DataView)
        },
        getKeyframeOrder: function (t) {
            function e(e, i) {
                return t[e] - t[i]
            }
            for (var i = t.length, n = new Array(i), r = 0; r !== i; ++r)
                n[r] = r;
            return n.sort(e),
                n
        },
        sortedArray: function (t, e, i) {
            for (var n = t.length, r = new t.constructor(n), a = 0, o = 0; o !== n; ++a)
                for (var s = i[a] * e, h = 0; h !== e; ++h)
                    r[o++] = t[s + h];
            return r
        },
        flattenJSON: function (t, e, i, n) {
            for (var r = 1, a = t[0]; void 0 !== a && void 0 === a[n];)
                a = t[r++];
            if (void 0 !== a) {
                var o = a[n];
                if (void 0 !== o)
                    if (Array.isArray(o))
                        do {
                            o = a[n],
                                void 0 !== o && (e.push(a.time),
                                    i.push.apply(i, o)),
                                a = t[r++]
                        } while (void 0 !== a);
                    else if (void 0 !== o.toArray)
                        do {
                            o = a[n],
                                void 0 !== o && (e.push(a.time),
                                    o.toArray(i, i.length)),
                                a = t[r++]
                        } while (void 0 !== a);
                    else
                        do {
                            o = a[n],
                                void 0 !== o && (e.push(a.time),
                                    i.push(o)),
                                a = t[r++]
                        } while (void 0 !== a)
            }
        }
    };
    Object.assign(Xi.prototype, {
        evaluate: function (t) {
            var e = this.parameterPositions
                , i = this._cachedIndex
                , n = e[i]
                , r = e[i - 1];
            t: {
                e: {
                    var a;
                    i: {
                        n: if (!(t < n)) {
                            for (var o = i + 2; ;) {
                                if (void 0 === n) {
                                    if (t < r)
                                        break n;
                                    return i = e.length,
                                        this._cachedIndex = i,
                                        this.afterEnd_(i - 1, t, r)
                                }
                                if (i === o)
                                    break;
                                if (r = n,
                                    n = e[++i],
                                    t < n)
                                    break e
                            }
                            a = e.length;
                            break i
                        }
                        {
                            if (t >= r)
                                break t;
                            var s = e[1];
                            t < s && (i = 2,
                                r = s);
                            for (var o = i - 2; ;) {
                                if (void 0 === r)
                                    return this._cachedIndex = 0,
                                        this.beforeStart_(0, t, n);
                                if (i === o)
                                    break;
                                if (n = r,
                                    r = e[--i - 1],
                                    t >= r)
                                    break e
                            }
                            a = i,
                                i = 0
                        }
                    }
                    for (; i < a;) {
                        var h = i + a >>> 1;
                        t < e[h] ? a = h : i = h + 1
                    }
                    if (n = e[i],
                        void 0 === (r = e[i - 1]))
                        return this._cachedIndex = 0,
                            this.beforeStart_(0, t, n);
                    if (void 0 === n)
                        return i = e.length,
                            this._cachedIndex = i,
                            this.afterEnd_(i - 1, r, t)
                }
                this._cachedIndex = i,
                    this.intervalChanged_(i, r, n)
            }
            return this.interpolate_(i, r, t, n)
        },
        settings: null,
        DefaultSettings_: {},
        getSettings_: function () {
            return this.settings || this.DefaultSettings_
        },
        copySampleValue_: function (t) {
            for (var e = this.resultBuffer, i = this.sampleValues, n = this.valueSize, r = t * n, a = 0; a !== n; ++a)
                e[a] = i[r + a];
            return e
        },
        interpolate_: function (t, e, i, n) {
            throw new Error("call to abstract method")
        },
        intervalChanged_: function (t, e, i) { }
    }),
        //!\ DECLARE ALIAS AFTER assign prototype !
        Object.assign(Xi.prototype, {
            beforeStart_: Xi.prototype.copySampleValue_,
            afterEnd_: Xi.prototype.copySampleValue_
        }),
        Yi.prototype = Object.assign(Object.create(Xi.prototype), {
            constructor: Yi,
            DefaultSettings_: {
                endingStart: os,
                endingEnd: os
            },
            intervalChanged_: function (t, e, i) {
                var n = this.parameterPositions
                    , r = t - 2
                    , a = t + 1
                    , o = n[r]
                    , s = n[a];
                if (void 0 === o)
                    switch (this.getSettings_().endingStart) {
                        case ss:
                            r = t,
                                o = 2 * e - i;
                            break;
                        case hs:
                            r = n.length - 2,
                                o = e + n[r] - n[r + 1];
                            break;
                        default:
                            r = t,
                                o = i
                    }
                if (void 0 === s)
                    switch (this.getSettings_().endingEnd) {
                        case ss:
                            a = t,
                                s = 2 * i - e;
                            break;
                        case hs:
                            a = 1,
                                s = i + n[1] - n[0];
                            break;
                        default:
                            a = t - 1,
                                s = e
                    }
                var h = .5 * (i - e)
                    , l = this.valueSize;
                this._weightPrev = h / (e - o),
                    this._weightNext = h / (s - i),
                    this._offsetPrev = r * l,
                    this._offsetNext = a * l
            },
            interpolate_: function (t, e, i, n) {
                for (var r = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = t * o, h = s - o, l = this._offsetPrev, c = this._offsetNext, u = this._weightPrev, p = this._weightNext, d = (i - e) / (n - e), f = d * d, m = f * d, g = -u * m + 2 * u * f - u * d, v = (1 + u) * m + (-1.5 - 2 * u) * f + (-.5 + u) * d + 1, y = (-1 - p) * m + (1.5 + p) * f + .5 * d, _ = p * m - p * f, x = 0; x !== o; ++x)
                    r[x] = g * a[l + x] + v * a[h + x] + y * a[s + x] + _ * a[c + x];
                return r
            }
        }),
        qi.prototype = Object.assign(Object.create(Xi.prototype), {
            constructor: qi,
            interpolate_: function (t, e, i, n) {
                for (var r = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = t * o, h = s - o, l = (i - e) / (n - e), c = 1 - l, u = 0; u !== o; ++u)
                    r[u] = a[h + u] * c + a[s + u] * l;
                return r
            }
        }),
        Zi.prototype = Object.assign(Object.create(Xi.prototype), {
            constructor: Zi,
            interpolate_: function (t, e, i, n) {
                return this.copySampleValue_(t - 1)
            }
        });
    var Xs;
    Xs = {
        TimeBufferType: Float32Array,
        ValueBufferType: Float32Array,
        DefaultInterpolation: rs,
        InterpolantFactoryMethodDiscrete: function (t) {
            return new Zi(this.times, this.values, this.getValueSize(), t)
        },
        InterpolantFactoryMethodLinear: function (t) {
            return new qi(this.times, this.values, this.getValueSize(), t)
        },
        InterpolantFactoryMethodSmooth: function (t) {
            return new Yi(this.times, this.values, this.getValueSize(), t)
        },
        setInterpolation: function (t) {
            var e;
            switch (t) {
                case ns:
                    e = this.InterpolantFactoryMethodDiscrete;
                    break;
                case rs:
                    e = this.InterpolantFactoryMethodLinear;
                    break;
                case as:
                    e = this.InterpolantFactoryMethodSmooth
            }
            if (void 0 !== e)
                this.createInterpolant = e;
            else {
                var i = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                if (void 0 === this.createInterpolant) {
                    if (t === this.DefaultInterpolation)
                        throw new Error(i);
                    this.setInterpolation(this.DefaultInterpolation)
                }
            }
        },
        getInterpolation: function () {
            switch (this.createInterpolant) {
                case this.InterpolantFactoryMethodDiscrete:
                    return ns;
                case this.InterpolantFactoryMethodLinear:
                    return rs;
                case this.InterpolantFactoryMethodSmooth:
                    return as
            }
        },
        getValueSize: function () {
            return this.values.length / this.times.length
        },
        shift: function (t) {
            if (0 !== t)
                for (var e = this.times, i = 0, n = e.length; i !== n; ++i)
                    e[i] += t;
            return this
        },
        scale: function (t) {
            if (1 !== t)
                for (var e = this.times, i = 0, n = e.length; i !== n; ++i)
                    e[i] *= t;
            return this
        },
        trim: function (t, e) {
            for (var i = this.times, n = i.length, r = 0, a = n - 1; r !== n && i[r] < t;)
                ++r;
            for (; -1 !== a && i[a] > e;)
                --a;
            if (++a,
                0 !== r || a !== n) {
                r >= a && (a = Math.max(a, 1),
                    r = a - 1);
                var o = this.getValueSize();
                this.times = Ws.arraySlice(i, r, a),
                    this.values = Ws.arraySlice(this.values, r * o, a * o)
            }
            return this
        },
        validate: function () {
            var t = !0
                , e = this.getValueSize();
            e - Math.floor(e) != 0 && (t = !1);
            var i = this.times
                , n = this.values
                , r = i.length;
            0 === r && (t = !1);
            for (var a = null, o = 0; o !== r; o++) {
                var s = i[o];
                if ("number" == typeof s && isNaN(s)) {
                    t = !1;
                    break
                }
                if (null !== a && a > s) {
                    t = !1;
                    break
                }
                a = s
            }
            if (void 0 !== n && Ws.isTypedArray(n))
                for (var o = 0, h = n.length; o !== h; ++o) {
                    var l = n[o];
                    if (isNaN(l)) {
                        t = !1;
                        break
                    }
                }
            return t
        },
        optimize: function () {
            for (var t = this.times, e = this.values, i = this.getValueSize(), n = this.getInterpolation() === as, r = 1, a = t.length - 1, o = 1; o < a; ++o) {
                var s = !1
                    , h = t[o];
                if (h !== t[o + 1] && (1 !== o || h !== h[0]))
                    if (n)
                        s = !0;
                    else
                        for (var l = o * i, c = l - i, u = l + i, p = 0; p !== i; ++p) {
                            var d = e[l + p];
                            if (d !== e[c + p] || d !== e[u + p]) {
                                s = !0;
                                break
                            }
                        }
                if (s) {
                    if (o !== r) {
                        t[r] = t[o];
                        for (var f = o * i, m = r * i, p = 0; p !== i; ++p)
                            e[m + p] = e[f + p]
                    }
                    ++r
                }
            }
            if (a > 0) {
                t[r] = t[a];
                for (var f = a * i, m = r * i, p = 0; p !== i; ++p)
                    e[m + p] = e[f + p];
                ++r
            }
            return r !== t.length && (this.times = Ws.arraySlice(t, 0, r),
                this.values = Ws.arraySlice(e, 0, r * i)),
                this
        }
    },
        Qi.prototype = Object.assign(Object.create(Xs), {
            constructor: Qi,
            ValueTypeName: "vector"
        }),
        Ji.prototype = Object.assign(Object.create(Xi.prototype), {
            constructor: Ji,
            interpolate_: function (t, e, i, n) {
                for (var r = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = t * o, h = (i - e) / (n - e), c = s + o; s !== c; s += 4)
                    l.slerpFlat(r, 0, a, s - o, a, s, h);
                return r
            }
        }),
        $i.prototype = Object.assign(Object.create(Xs), {
            constructor: $i,
            ValueTypeName: "quaternion",
            DefaultInterpolation: rs,
            InterpolantFactoryMethodLinear: function (t) {
                return new Ji(this.times, this.values, this.getValueSize(), t)
            },
            InterpolantFactoryMethodSmooth: void 0
        }),
        tn.prototype = Object.assign(Object.create(Xs), {
            constructor: tn,
            ValueTypeName: "number"
        }),
        en.prototype = Object.assign(Object.create(Xs), {
            constructor: en,
            ValueTypeName: "string",
            ValueBufferType: Array,
            DefaultInterpolation: ns,
            InterpolantFactoryMethodLinear: void 0,
            InterpolantFactoryMethodSmooth: void 0
        }),
        nn.prototype = Object.assign(Object.create(Xs), {
            constructor: nn,
            ValueTypeName: "bool",
            ValueBufferType: Array,
            DefaultInterpolation: ns,
            InterpolantFactoryMethodLinear: void 0,
            InterpolantFactoryMethodSmooth: void 0
        }),
        rn.prototype = Object.assign(Object.create(Xs), {
            constructor: rn,
            ValueTypeName: "color"
        }),
        an.prototype = Xs,
        Xs.constructor = an,
        Object.assign(an, {
            parse: function (t) {
                if (void 0 === t.type)
                    throw new Error("track type undefined, can not parse");
                var e = an._getTrackTypeForValueTypeName(t.type);
                if (void 0 === t.times) {
                    var i = []
                        , n = [];
                    Ws.flattenJSON(t.keys, i, n, "value"),
                        t.times = i,
                        t.values = n
                }
                return void 0 !== e.parse ? e.parse(t) : new e(t.name, t.times, t.values, t.interpolation)
            },
            toJSON: function (t) {
                var e, i = t.constructor;
                if (void 0 !== i.toJSON)
                    e = i.toJSON(t);
                else {
                    e = {
                        name: t.name,
                        times: Ws.convertArray(t.times, Array),
                        values: Ws.convertArray(t.values, Array)
                    };
                    var n = t.getInterpolation();
                    n !== t.DefaultInterpolation && (e.interpolation = n)
                }
                return e.type = t.ValueTypeName,
                    e
            },
            _getTrackTypeForValueTypeName: function (t) {
                switch (t.toLowerCase()) {
                    case "scalar":
                    case "double":
                    case "float":
                    case "number":
                    case "integer":
                        return tn;
                    case "vector":
                    case "vector2":
                    case "vector3":
                    case "vector4":
                        return Qi;
                    case "color":
                        return rn;
                    case "quaternion":
                        return $i;
                    case "bool":
                    case "boolean":
                        return nn;
                    case "string":
                        return en
                }
                throw new Error("Unsupported typeName: " + t)
            }
        }),
        Object.assign(on, {
            parse: function (t) {
                for (var e = [], i = t.tracks, n = 1 / (t.fps || 1), r = 0, a = i.length; r !== a; ++r)
                    e.push(an.parse(i[r]).scale(n));
                return new on(t.name, t.duration, e)
            },
            toJSON: function (t) {
                for (var e = [], i = t.tracks, n = {
                    name: t.name,
                    duration: t.duration,
                    tracks: e
                }, r = 0, a = i.length; r !== a; ++r)
                    e.push(an.toJSON(i[r]));
                return n
            },
            CreateFromMorphTargetSequence: function (t, e, i, n) {
                for (var r = e.length, a = [], o = 0; o < r; o++) {
                    var s = []
                        , h = [];
                    s.push((o + r - 1) % r, o, (o + 1) % r),
                        h.push(0, 1, 0);
                    var l = Ws.getKeyframeOrder(s);
                    s = Ws.sortedArray(s, 1, l),
                        h = Ws.sortedArray(h, 1, l),
                        n || 0 !== s[0] || (s.push(r),
                            h.push(h[0])),
                        a.push(new tn(".morphTargetInfluences[" + e[o].name + "]", s, h).scale(1 / i))
                }
                return new on(t, -1, a)
            },
            findByName: function (t, e) {
                var i = t;
                if (!Array.isArray(t)) {
                    var n = t;
                    i = n.geometry && n.geometry.animations || n.animations
                }
                for (var r = 0; r < i.length; r++)
                    if (i[r].name === e)
                        return i[r];
                return null
            },
            CreateClipsFromMorphTargetSequences: function (t, e, i) {
                for (var n = {}, r = /^([\w-]*?)([\d]+)$/, a = 0, o = t.length; a < o; a++) {
                    var s = t[a]
                        , h = s.name.match(r);
                    if (h && h.length > 1) {
                        var l = h[1]
                            , c = n[l];
                        c || (n[l] = c = []),
                            c.push(s)
                    }
                }
                var u = [];
                for (var l in n)
                    u.push(on.CreateFromMorphTargetSequence(l, n[l], e, i));
                return u
            },
            parseAnimation: function (t, e) {
                if (!t)
                    return null;
                for (var i = function (t, e, i, n, r) {
                    if (0 !== i.length) {
                        var a = []
                            , o = [];
                        Ws.flattenJSON(i, a, o, n),
                            0 !== a.length && r.push(new t(e, a, o))
                    }
                }, n = [], r = t.name || "default", a = t.length || -1, o = t.fps || 30, s = t.hierarchy || [], h = 0; h < s.length; h++) {
                    var l = s[h].keys;
                    if (l && 0 !== l.length)
                        if (l[0].morphTargets) {
                            for (var c = {}, u = 0; u < l.length; u++)
                                if (l[u].morphTargets)
                                    for (var p = 0; p < l[u].morphTargets.length; p++)
                                        c[l[u].morphTargets[p]] = -1;
                            for (var d in c) {
                                for (var f = [], m = [], p = 0; p !== l[u].morphTargets.length; ++p) {
                                    var g = l[u];
                                    f.push(g.time),
                                        m.push(g.morphTarget === d ? 1 : 0)
                                }
                                n.push(new tn(".morphTargetInfluence[" + d + "]", f, m))
                            }
                            a = c.length * (o || 1)
                        } else {
                            var v = ".bones[" + e[h].name + "]";
                            i(Qi, v + ".position", l, "pos", n),
                                i($i, v + ".quaternion", l, "rot", n),
                                i(Qi, v + ".scale", l, "scl", n)
                        }
                }
                return 0 === n.length ? null : new on(r, a, n)
            }
        }),
        Object.assign(on.prototype, {
            resetDuration: function () {
                for (var t = this.tracks, e = 0, i = 0, n = t.length; i !== n; ++i) {
                    var r = this.tracks[i];
                    e = Math.max(e, r.times[r.times.length - 1])
                }
                this.duration = e
            },
            trim: function () {
                for (var t = 0; t < this.tracks.length; t++)
                    this.tracks[t].trim(0, this.duration);
                return this
            },
            optimize: function () {
                for (var t = 0; t < this.tracks.length; t++)
                    this.tracks[t].optimize();
                return this
            }
        }),
        Object.assign(sn.prototype, {
            load: function (t, e, i, n) {
                var r = this
                    , a = new Ci(r.manager);
                a.setResponseType("json"),
                    a.load(t, function (t) {
                        e(r.parse(t))
                    }, i, n)
            },
            setTextures: function (t) {
                this.textures = t
            },
            parse: function (t) {
                function e(t) {
                    return i[t],
                        i[t]
                }
                var i = this.textures
                    , n = new Gs[t.type];
                if (void 0 !== t.uuid && (n.uuid = t.uuid),
                    void 0 !== t.name && (n.name = t.name),
                    void 0 !== t.color && n.color.setHex(t.color),
                    void 0 !== t.roughness && (n.roughness = t.roughness),
                    void 0 !== t.metalness && (n.metalness = t.metalness),
                    void 0 !== t.emissive && n.emissive.setHex(t.emissive),
                    void 0 !== t.specular && n.specular.setHex(t.specular),
                    void 0 !== t.shininess && (n.shininess = t.shininess),
                    void 0 !== t.clearCoat && (n.clearCoat = t.clearCoat),
                    void 0 !== t.clearCoatRoughness && (n.clearCoatRoughness = t.clearCoatRoughness),
                    void 0 !== t.uniforms && (n.uniforms = t.uniforms),
                    void 0 !== t.vertexShader && (n.vertexShader = t.vertexShader),
                    void 0 !== t.fragmentShader && (n.fragmentShader = t.fragmentShader),
                    void 0 !== t.vertexColors && (n.vertexColors = t.vertexColors),
                    void 0 !== t.fog && (n.fog = t.fog),
                    void 0 !== t.shading && (n.shading = t.shading),
                    void 0 !== t.blending && (n.blending = t.blending),
                    void 0 !== t.side && (n.side = t.side),
                    void 0 !== t.opacity && (n.opacity = t.opacity),
                    void 0 !== t.transparent && (n.transparent = t.transparent),
                    void 0 !== t.alphaTest && (n.alphaTest = t.alphaTest),
                    void 0 !== t.depthTest && (n.depthTest = t.depthTest),
                    void 0 !== t.depthWrite && (n.depthWrite = t.depthWrite),
                    void 0 !== t.colorWrite && (n.colorWrite = t.colorWrite),
                    void 0 !== t.wireframe && (n.wireframe = t.wireframe),
                    void 0 !== t.wireframeLinewidth && (n.wireframeLinewidth = t.wireframeLinewidth),
                    void 0 !== t.wireframeLinecap && (n.wireframeLinecap = t.wireframeLinecap),
                    void 0 !== t.wireframeLinejoin && (n.wireframeLinejoin = t.wireframeLinejoin),
                    void 0 !== t.skinning && (n.skinning = t.skinning),
                    void 0 !== t.morphTargets && (n.morphTargets = t.morphTargets),
                    void 0 !== t.size && (n.size = t.size),
                    void 0 !== t.sizeAttenuation && (n.sizeAttenuation = t.sizeAttenuation),
                    void 0 !== t.map && (n.map = e(t.map)),
                    void 0 !== t.alphaMap && (n.alphaMap = e(t.alphaMap),
                        n.transparent = !0),
                    void 0 !== t.bumpMap && (n.bumpMap = e(t.bumpMap)),
                    void 0 !== t.bumpScale && (n.bumpScale = t.bumpScale),
                    void 0 !== t.normalMap && (n.normalMap = e(t.normalMap)),
                    void 0 !== t.normalScale) {
                    var a = t.normalScale;
                    !1 === Array.isArray(a) && (a = [a, a]),
                        n.normalScale = (new r).fromArray(a)
                }
                return void 0 !== t.displacementMap && (n.displacementMap = e(t.displacementMap)),
                    void 0 !== t.displacementScale && (n.displacementScale = t.displacementScale),
                    void 0 !== t.displacementBias && (n.displacementBias = t.displacementBias),
                    void 0 !== t.roughnessMap && (n.roughnessMap = e(t.roughnessMap)),
                    void 0 !== t.metalnessMap && (n.metalnessMap = e(t.metalnessMap)),
                    void 0 !== t.emissiveMap && (n.emissiveMap = e(t.emissiveMap)),
                    void 0 !== t.emissiveIntensity && (n.emissiveIntensity = t.emissiveIntensity),
                    void 0 !== t.specularMap && (n.specularMap = e(t.specularMap)),
                    void 0 !== t.envMap && (n.envMap = e(t.envMap)),
                    void 0 !== t.reflectivity && (n.reflectivity = t.reflectivity),
                    void 0 !== t.lightMap && (n.lightMap = e(t.lightMap)),
                    void 0 !== t.lightMapIntensity && (n.lightMapIntensity = t.lightMapIntensity),
                    void 0 !== t.aoMap && (n.aoMap = e(t.aoMap)),
                    void 0 !== t.aoMapIntensity && (n.aoMapIntensity = t.aoMapIntensity),
                    void 0 !== t.gradientMap && (n.gradientMap = e(t.gradientMap)),
                    n
            }
        }),
        Object.assign(hn.prototype, {
            load: function (t, e, i, n) {
                var r = this
                    , a = new Ci(r.manager);
                a.setResponseType("json"),
                    a.load(t, function (t) {
                        e(r.parse(t))
                    }, i, n)
            },
            parse: function (t) {
                var e = new Lt
                    , i = t.data.index;
                if (void 0 !== i) {
                    var n = new Ys[i.type](i.array);
                    e.setIndex(new mt(n, 1))
                }
                var r = t.data.attributes;
                for (var a in r) {
                    var o = r[a]
                        , n = new Ys[o.type](o.array);
                    e.addAttribute(a, new mt(n, o.itemSize, o.normalized))
                }
                var s = t.data.groups || t.data.drawcalls || t.data.offsets;
                if (void 0 !== s)
                    for (var h = 0, l = s.length; h !== l; ++h) {
                        var u = s[h];
                        e.addGroup(u.start, u.count, u.materialIndex)
                    }
                var p = t.data.boundingSphere;
                if (void 0 !== p) {
                    var d = new c;
                    void 0 !== p.center && d.fromArray(p.center),
                        e.boundingSphere = new it(d, p.radius)
                }
                return e
            }
        });
    var Ys = {
        Int8Array: Int8Array,
        Uint8Array: Uint8Array,
        Uint8ClampedArray: Uint8ClampedArray,
        Int16Array: Int16Array,
        Uint16Array: Uint16Array,
        Int32Array: Int32Array,
        Uint32Array: Uint32Array,
        Float32Array: Float32Array,
        Float64Array: Float64Array
    };
    ln.Handlers = {
        handlers: [],
        add: function (t, e) {
            this.handlers.push(t, e)
        },
        get: function (t) {
            for (var e = this.handlers, i = 0, n = e.length; i < n; i += 2) {
                var r = e[i]
                    , a = e[i + 1];
                if (r.test(t))
                    return a
            }
            return null
        }
    },
        Object.assign(ln.prototype, {
            crossOrigin: void 0,
            extractUrlBase: function (t) {
                var e = t.split("/");
                return 1 === e.length ? "./" : (e.pop(),
                    e.join("/") + "/")
            },
            initMaterials: function (t, e, i) {
                for (var n = [], r = 0; r < t.length; ++r)
                    n[r] = this.createMaterial(t[r], e, i);
                return n
            },
            createMaterial: function () {
                var t = {
                    NoBlending: Ma,
                    NormalBlending: Ta,
                    AdditiveBlending: Pa,
                    SubtractiveBlending: Sa,
                    MultiplyBlending: Aa,
                    CustomBlending: Ea
                }
                    , e = new q
                    , i = new zi
                    , n = new sn;
                return function (r, a, o) {
                    function s(t, e, n, r, s) {
                        var l, c = a + t, u = ln.Handlers.get(c);
                        null !== u ? l = u.load(c) : (i.setCrossOrigin(o),
                            l = i.load(c)),
                            void 0 !== e && (l.repeat.fromArray(e),
                                1 !== e[0] && (l.wrapS = go),
                                1 !== e[1] && (l.wrapT = go)),
                            void 0 !== n && l.offset.fromArray(n),
                            void 0 !== r && ("repeat" === r[0] && (l.wrapS = go),
                                "mirror" === r[0] && (l.wrapS = yo),
                                "repeat" === r[1] && (l.wrapT = go),
                                "mirror" === r[1] && (l.wrapT = yo)),
                            void 0 !== s && (l.anisotropy = s);
                        var p = bs.generateUUID();
                        return h[p] = l,
                            p
                    }
                    var h = {}
                        , l = {
                            uuid: bs.generateUUID(),
                            type: "MeshLambertMaterial"
                        };
                    for (var c in r) {
                        var u = r[c];
                        switch (c) {
                            case "DbgColor":
                            case "DbgIndex":
                            case "opticalDensity":
                            case "illumination":
                                break;
                            case "DbgName":
                                l.name = u;
                                break;
                            case "blending":
                                l.blending = t[u];
                                break;
                            case "colorAmbient":
                            case "mapAmbient":
                                break;
                            case "colorDiffuse":
                                l.color = e.fromArray(u).getHex();
                                break;
                            case "colorSpecular":
                                l.specular = e.fromArray(u).getHex();
                                break;
                            case "colorEmissive":
                                l.emissive = e.fromArray(u).getHex();
                                break;
                            case "specularCoef":
                                l.shininess = u;
                                break;
                            case "shading":
                                "basic" === u.toLowerCase() && (l.type = "MeshBasicMaterial"),
                                    "phong" === u.toLowerCase() && (l.type = "MeshPhongMaterial"),
                                    "standard" === u.toLowerCase() && (l.type = "MeshStandardMaterial");
                                break;
                            case "mapDiffuse":
                                l.map = s(u, r.mapDiffuseRepeat, r.mapDiffuseOffset, r.mapDiffuseWrap, r.mapDiffuseAnisotropy);
                                break;
                            case "mapDiffuseRepeat":
                            case "mapDiffuseOffset":
                            case "mapDiffuseWrap":
                            case "mapDiffuseAnisotropy":
                                break;
                            case "mapEmissive":
                                l.emissiveMap = s(u, r.mapEmissiveRepeat, r.mapEmissiveOffset, r.mapEmissiveWrap, r.mapEmissiveAnisotropy);
                                break;
                            case "mapEmissiveRepeat":
                            case "mapEmissiveOffset":
                            case "mapEmissiveWrap":
                            case "mapEmissiveAnisotropy":
                                break;
                            case "mapLight":
                                l.lightMap = s(u, r.mapLightRepeat, r.mapLightOffset, r.mapLightWrap, r.mapLightAnisotropy);
                                break;
                            case "mapLightRepeat":
                            case "mapLightOffset":
                            case "mapLightWrap":
                            case "mapLightAnisotropy":
                                break;
                            case "mapAO":
                                l.aoMap = s(u, r.mapAORepeat, r.mapAOOffset, r.mapAOWrap, r.mapAOAnisotropy);
                                break;
                            case "mapAORepeat":
                            case "mapAOOffset":
                            case "mapAOWrap":
                            case "mapAOAnisotropy":
                                break;
                            case "mapBump":
                                l.bumpMap = s(u, r.mapBumpRepeat, r.mapBumpOffset, r.mapBumpWrap, r.mapBumpAnisotropy);
                                break;
                            case "mapBumpScale":
                                l.bumpScale = u;
                                break;
                            case "mapBumpRepeat":
                            case "mapBumpOffset":
                            case "mapBumpWrap":
                            case "mapBumpAnisotropy":
                                break;
                            case "mapNormal":
                                l.normalMap = s(u, r.mapNormalRepeat, r.mapNormalOffset, r.mapNormalWrap, r.mapNormalAnisotropy);
                                break;
                            case "mapNormalFactor":
                                l.normalScale = [u, u];
                                break;
                            case "mapNormalRepeat":
                            case "mapNormalOffset":
                            case "mapNormalWrap":
                            case "mapNormalAnisotropy":
                                break;
                            case "mapSpecular":
                                l.specularMap = s(u, r.mapSpecularRepeat, r.mapSpecularOffset, r.mapSpecularWrap, r.mapSpecularAnisotropy);
                                break;
                            case "mapSpecularRepeat":
                            case "mapSpecularOffset":
                            case "mapSpecularWrap":
                            case "mapSpecularAnisotropy":
                                break;
                            case "mapMetalness":
                                l.metalnessMap = s(u, r.mapMetalnessRepeat, r.mapMetalnessOffset, r.mapMetalnessWrap, r.mapMetalnessAnisotropy);
                                break;
                            case "mapMetalnessRepeat":
                            case "mapMetalnessOffset":
                            case "mapMetalnessWrap":
                            case "mapMetalnessAnisotropy":
                                break;
                            case "mapRoughness":
                                l.roughnessMap = s(u, r.mapRoughnessRepeat, r.mapRoughnessOffset, r.mapRoughnessWrap, r.mapRoughnessAnisotropy);
                                break;
                            case "mapRoughnessRepeat":
                            case "mapRoughnessOffset":
                            case "mapRoughnessWrap":
                            case "mapRoughnessAnisotropy":
                                break;
                            case "mapAlpha":
                                l.alphaMap = s(u, r.mapAlphaRepeat, r.mapAlphaOffset, r.mapAlphaWrap, r.mapAlphaAnisotropy);
                                break;
                            case "mapAlphaRepeat":
                            case "mapAlphaOffset":
                            case "mapAlphaWrap":
                            case "mapAlphaAnisotropy":
                                break;
                            case "flipSided":
                                l.side = ga;
                                break;
                            case "doubleSided":
                                l.side = va;
                                break;
                            case "transparency":
                                l.opacity = u;
                                break;
                            case "depthTest":
                            case "depthWrite":
                            case "colorWrite":
                            case "opacity":
                            case "reflectivity":
                            case "transparent":
                            case "visible":
                            case "wireframe":
                                l[c] = u;
                                break;
                            case "vertexColors":
                                !0 === u && (l.vertexColors = ba),
                                    "face" === u && (l.vertexColors = wa)
                        }
                    }
                    return "MeshBasicMaterial" === l.type && delete l.emissive,
                        "MeshPhongMaterial" !== l.type && delete l.specular,
                        l.opacity < 1 && (l.transparent = !0),
                        n.setTextures(h),
                        n.parse(l)
                }
            }()
        }),
        Object.assign(cn.prototype, {
            load: function (t, e, i, n) {
                var r = this
                    , a = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : ln.prototype.extractUrlBase(t)
                    , o = new Ci(this.manager);
                o.setResponseType("json"),
                    o.setWithCredentials(this.withCredentials),
                    o.load(t, function (t) {
                        var i = t.metadata;
                        if (void 0 !== i) {
                            var n = i.type;
                            if (void 0 !== n) {
                                if ("object" === n.toLowerCase())
                                    return;
                                if ("scene" === n.toLowerCase())
                                    return
                            }
                        }
                        var o = r.parse(t, a);
                        e(o.geometry, o.materials)
                    }, i, n)
            },
            setTexturePath: function (t) {
                this.texturePath = t
            },
            parse: function () {
                function t(t, e) {
                    function i(t, e) {
                        return t & 1 << e
                    }
                    var n, a, o, s, h, l, u, p, d, f, m, g, v, y, _, x, w, b, M, T, P, S, A, E, L, C, O, R = t.faces, I = t.vertices, k = t.normals, z = t.colors, F = t.scale, D = 0;
                    if (void 0 !== t.uvs) {
                        for (n = 0; n < t.uvs.length; n++)
                            t.uvs[n].length && D++;
                        for (n = 0; n < D; n++)
                            e.faceVertexUvs[n] = []
                    }
                    for (s = 0,
                        h = I.length; s < h;)
                        b = new c,
                            b.x = I[s++] * F,
                            b.y = I[s++] * F,
                            b.z = I[s++] * F,
                            e.vertices.push(b);
                    for (s = 0,
                        h = R.length; s < h;)
                        if (f = R[s++],
                            m = i(f, 0),
                            g = i(f, 1),
                            v = i(f, 3),
                            y = i(f, 4),
                            _ = i(f, 5),
                            x = i(f, 6),
                            w = i(f, 7),
                            m) {
                            if (T = new dt,
                                T.a = R[s],
                                T.b = R[s + 1],
                                T.c = R[s + 3],
                                P = new dt,
                                P.a = R[s + 1],
                                P.b = R[s + 2],
                                P.c = R[s + 3],
                                s += 4,
                                g && (d = R[s++],
                                    T.materialIndex = d,
                                    P.materialIndex = d),
                                o = e.faces.length,
                                v)
                                for (n = 0; n < D; n++)
                                    for (E = t.uvs[n],
                                        e.faceVertexUvs[n][o] = [],
                                        e.faceVertexUvs[n][o + 1] = [],
                                        a = 0; a < 4; a++)
                                        p = R[s++],
                                            C = E[2 * p],
                                            O = E[2 * p + 1],
                                            L = new r(C, O),
                                            2 !== a && e.faceVertexUvs[n][o].push(L),
                                            0 !== a && e.faceVertexUvs[n][o + 1].push(L);
                            if (y && (u = 3 * R[s++],
                                T.normal.set(k[u++], k[u++], k[u]),
                                P.normal.copy(T.normal)),
                                _)
                                for (n = 0; n < 4; n++)
                                    u = 3 * R[s++],
                                        A = new c(k[u++], k[u++], k[u]),
                                        2 !== n && T.vertexNormals.push(A),
                                        0 !== n && P.vertexNormals.push(A);
                            if (x && (l = R[s++],
                                S = z[l],
                                T.color.setHex(S),
                                P.color.setHex(S)),
                                w)
                                for (n = 0; n < 4; n++)
                                    l = R[s++],
                                        S = z[l],
                                        2 !== n && T.vertexColors.push(new q(S)),
                                        0 !== n && P.vertexColors.push(new q(S));
                            e.faces.push(T),
                                e.faces.push(P)
                        } else {
                            if (M = new dt,
                                M.a = R[s++],
                                M.b = R[s++],
                                M.c = R[s++],
                                g && (d = R[s++],
                                    M.materialIndex = d),
                                o = e.faces.length,
                                v)
                                for (n = 0; n < D; n++)
                                    for (E = t.uvs[n],
                                        e.faceVertexUvs[n][o] = [],
                                        a = 0; a < 3; a++)
                                        p = R[s++],
                                            C = E[2 * p],
                                            O = E[2 * p + 1],
                                            L = new r(C, O),
                                            e.faceVertexUvs[n][o].push(L);
                            if (y && (u = 3 * R[s++],
                                M.normal.set(k[u++], k[u++], k[u])),
                                _)
                                for (n = 0; n < 3; n++)
                                    u = 3 * R[s++],
                                        A = new c(k[u++], k[u++], k[u]),
                                        M.vertexNormals.push(A);
                            if (x && (l = R[s++],
                                M.color.setHex(z[l])),
                                w)
                                for (n = 0; n < 3; n++)
                                    l = R[s++],
                                        M.vertexColors.push(new q(z[l]));
                            e.faces.push(M)
                        }
                }
                function e(t, e) {
                    var i = void 0 !== t.influencesPerVertex ? t.influencesPerVertex : 2;
                    if (t.skinWeights)
                        for (var n = 0, r = t.skinWeights.length; n < r; n += i) {
                            var a = t.skinWeights[n]
                                , s = i > 1 ? t.skinWeights[n + 1] : 0
                                , h = i > 2 ? t.skinWeights[n + 2] : 0
                                , l = i > 3 ? t.skinWeights[n + 3] : 0;
                            e.skinWeights.push(new o(a, s, h, l))
                        }
                    if (t.skinIndices)
                        for (var n = 0, r = t.skinIndices.length; n < r; n += i) {
                            var c = t.skinIndices[n]
                                , u = i > 1 ? t.skinIndices[n + 1] : 0
                                , p = i > 2 ? t.skinIndices[n + 2] : 0
                                , d = i > 3 ? t.skinIndices[n + 3] : 0;
                            e.skinIndices.push(new o(c, u, p, d))
                        }
                    e.bones = t.bones,
                        e.bones && e.bones.length > 0 && (e.skinWeights.length !== e.skinIndices.length || (e.skinIndices.length,
                            e.vertices.length))
                }
                function i(t, e) {
                    var i = t.scale;
                    if (void 0 !== t.morphTargets)
                        for (var n = 0, r = t.morphTargets.length; n < r; n++) {
                            e.morphTargets[n] = {},
                                e.morphTargets[n].name = t.morphTargets[n].name,
                                e.morphTargets[n].vertices = [];
                            for (var a = e.morphTargets[n].vertices, o = t.morphTargets[n].vertices, s = 0, h = o.length; s < h; s += 3) {
                                var l = new c;
                                l.x = o[s] * i,
                                    l.y = o[s + 1] * i,
                                    l.z = o[s + 2] * i,
                                    a.push(l)
                            }
                        }
                    if (void 0 !== t.morphColors && t.morphColors.length > 0)
                        for (var u = e.faces, p = t.morphColors[0].colors, n = 0, r = u.length; n < r; n++)
                            u[n].color.fromArray(p, 3 * n)
                }
                function n(t, e) {
                    var i = []
                        , n = [];
                    void 0 !== t.animation && n.push(t.animation),
                        void 0 !== t.animations && (t.animations.length ? n = n.concat(t.animations) : n.push(t.animations));
                    for (var r = 0; r < n.length; r++) {
                        var a = on.parseAnimation(n[r], e.bones);
                        a && i.push(a)
                    }
                    if (e.morphTargets) {
                        var o = on.CreateClipsFromMorphTargetSequences(e.morphTargets, 10);
                        i = i.concat(o)
                    }
                    i.length > 0 && (e.animations = i)
                }
                return function (r, a) {
                    void 0 !== r.data && (r = r.data),
                        void 0 !== r.scale ? r.scale = 1 / r.scale : r.scale = 1;
                    var o = new Et;
                    return t(r, o),
                        e(r, o),
                        i(r, o),
                        n(r, o),
                        o.computeFaceNormals(),
                        o.computeBoundingSphere(),
                        void 0 === r.materials || 0 === r.materials.length ? {
                            geometry: o
                        } : {
                            geometry: o,
                            materials: ln.prototype.initMaterials(r.materials, a, this.crossOrigin)
                        }
                }
            }()
        }),
        Object.assign(un.prototype, {
            load: function (t, e, i, n) {
                "" === this.texturePath && (this.texturePath = t.substring(0, t.lastIndexOf("/") + 1));
                var r = this;
                new Ci(r.manager).load(t, function (t) {
                    var i = null;
                    try {
                        i = JSON.parse(t)
                    } catch (t) {
                        return void (void 0 !== n && n(t))
                    }
                    var a = i.metadata;
                    void 0 !== a && void 0 !== a.type && "geometry" !== a.type.toLowerCase() && r.parse(i, e)
                }, i, n)
            },
            setTexturePath: function (t) {
                this.texturePath = t
            },
            setCrossOrigin: function (t) {
                this.crossOrigin = t
            },
            parse: function (t, e) {
                var i = this.parseGeometries(t.geometries)
                    , n = this.parseImages(t.images, function () {
                        void 0 !== e && e(o)
                    })
                    , r = this.parseTextures(t.textures, n)
                    , a = this.parseMaterials(t.materials, r)
                    , o = this.parseObject(t.object, i, a);
                return t.animations && (o.animations = this.parseAnimations(t.animations)),
                    void 0 !== t.images && 0 !== t.images.length || void 0 !== e && e(o),
                    o
            },
            parseGeometries: function (t) {
                var e = {};
                if (void 0 !== t)
                    for (var i = new cn, n = new hn, r = 0, a = t.length; r < a; r++) {
                        var o, s = t[r];
                        switch (s.type) {
                            case "PlaneGeometry":
                            case "PlaneBufferGeometry":
                                o = new js[s.type](s.width, s.height, s.widthSegments, s.heightSegments);
                                break;
                            case "BoxGeometry":
                            case "BoxBufferGeometry":
                            case "CubeGeometry":
                                o = new js[s.type](s.width, s.height, s.depth, s.widthSegments, s.heightSegments, s.depthSegments);
                                break;
                            case "CircleGeometry":
                            case "CircleBufferGeometry":
                                o = new js[s.type](s.radius, s.segments, s.thetaStart, s.thetaLength);
                                break;
                            case "CylinderGeometry":
                            case "CylinderBufferGeometry":
                                o = new js[s.type](s.radiusTop, s.radiusBottom, s.height, s.radialSegments, s.heightSegments, s.openEnded, s.thetaStart, s.thetaLength);
                                break;
                            case "ConeGeometry":
                            case "ConeBufferGeometry":
                                o = new js[s.type](s.radius, s.height, s.radialSegments, s.heightSegments, s.openEnded, s.thetaStart, s.thetaLength);
                                break;
                            case "SphereGeometry":
                            case "SphereBufferGeometry":
                                o = new js[s.type](s.radius, s.widthSegments, s.heightSegments, s.phiStart, s.phiLength, s.thetaStart, s.thetaLength);
                                break;
                            case "DodecahedronGeometry":
                            case "IcosahedronGeometry":
                            case "OctahedronGeometry":
                            case "TetrahedronGeometry":
                                o = new js[s.type](s.radius, s.detail);
                                break;
                            case "RingGeometry":
                            case "RingBufferGeometry":
                                o = new js[s.type](s.innerRadius, s.outerRadius, s.thetaSegments, s.phiSegments, s.thetaStart, s.thetaLength);
                                break;
                            case "TorusGeometry":
                            case "TorusBufferGeometry":
                                o = new js[s.type](s.radius, s.tube, s.radialSegments, s.tubularSegments, s.arc);
                                break;
                            case "TorusKnotGeometry":
                            case "TorusKnotBufferGeometry":
                                o = new js[s.type](s.radius, s.tube, s.tubularSegments, s.radialSegments, s.p, s.q);
                                break;
                            case "LatheGeometry":
                            case "LatheBufferGeometry":
                                o = new js[s.type](s.points, s.segments, s.phiStart, s.phiLength);
                                break;
                            case "BufferGeometry":
                                o = n.parse(s);
                                break;
                            case "Geometry":
                                o = i.parse(s, this.texturePath).geometry;
                                break;
                            default:
                                continue
                        }
                        o.uuid = s.uuid,
                            void 0 !== s.name && (o.name = s.name),
                            e[s.uuid] = o
                    }
                return e
            },
            parseMaterials: function (t, e) {
                var i = {};
                if (void 0 !== t) {
                    var n = new sn;
                    n.setTextures(e);
                    for (var r = 0, a = t.length; r < a; r++) {
                        var o = t[r];
                        if ("MultiMaterial" === o.type) {
                            for (var s = [], h = 0; h < o.materials.length; h++)
                                s.push(n.parse(o.materials[h]));
                            i[o.uuid] = s
                        } else
                            i[o.uuid] = n.parse(o)
                    }
                }
                return i
            },
            parseAnimations: function (t) {
                for (var e = [], i = 0; i < t.length; i++) {
                    var n = on.parse(t[i]);
                    e.push(n)
                }
                return e
            },
            parseImages: function (t, e) {
                var i = this
                    , n = {};
                if (void 0 !== t && t.length > 0) {
                    var r = new Li(e)
                        , a = new Ii(r);
                    a.setCrossOrigin(this.crossOrigin);
                    for (var o = 0, s = t.length; o < s; o++) {
                        var h = t[o]
                            , l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(h.url) ? h.url : i.texturePath + h.url;
                        n[h.uuid] = function (t) {
                            return i.manager.itemStart(t),
                                a.load(t, function () {
                                    i.manager.itemEnd(t)
                                }, void 0, function () {
                                    i.manager.itemEnd(t),
                                        i.manager.itemError(t)
                                })
                        }(l)
                    }
                }
                return n
            },
            parseTextures: function (t, e) {
                function i(t, e) {
                    return "number" == typeof t ? t : e[t]
                }
                var n = {};
                if (void 0 !== t)
                    for (var r = 0, o = t.length; r < o; r++) {
                        var s = t[r];
                        s.image,
                            e[s.image];
                        var h = new a(e[s.image]);
                        h.needsUpdate = !0,
                            h.uuid = s.uuid,
                            void 0 !== s.name && (h.name = s.name),
                            void 0 !== s.mapping && (h.mapping = i(s.mapping, qs)),
                            void 0 !== s.offset && h.offset.fromArray(s.offset),
                            void 0 !== s.repeat && h.repeat.fromArray(s.repeat),
                            void 0 !== s.wrap && (h.wrapS = i(s.wrap[0], Zs),
                                h.wrapT = i(s.wrap[1], Zs)),
                            void 0 !== s.minFilter && (h.minFilter = i(s.minFilter, Ks)),
                            void 0 !== s.magFilter && (h.magFilter = i(s.magFilter, Ks)),
                            void 0 !== s.anisotropy && (h.anisotropy = s.anisotropy),
                            void 0 !== s.flipY && (h.flipY = s.flipY),
                            n[s.uuid] = h
                    }
                return n
            },
            parseObject: function () {
                var t = new u;
                return function (e, i, n) {
                    function r(t) {
                        return i[t],
                            i[t]
                    }
                    function a(t) {
                        if (void 0 !== t) {
                            if (Array.isArray(t)) {
                                for (var e = [], i = 0, r = t.length; i < r; i++) {
                                    var a = t[i];
                                    n[a],
                                        e.push(n[a])
                                }
                                return e
                            }
                            return n[t],
                                n[t]
                        }
                    }
                    var o;
                    switch (e.type) {
                        case "Scene":
                            o = new ve,
                                void 0 !== e.background && Number.isInteger(e.background) && (o.background = new q(e.background)),
                                void 0 !== e.fog && ("Fog" === e.fog.type ? o.fog = new ge(e.fog.color, e.fog.near, e.fog.far) : "FogExp2" === e.fog.type && (o.fog = new me(e.fog.color, e.fog.density)));
                            break;
                        case "PerspectiveCamera":
                            o = new Ft(e.fov, e.aspect, e.near, e.far),
                                void 0 !== e.focus && (o.focus = e.focus),
                                void 0 !== e.zoom && (o.zoom = e.zoom),
                                void 0 !== e.filmGauge && (o.filmGauge = e.filmGauge),
                                void 0 !== e.filmOffset && (o.filmOffset = e.filmOffset),
                                void 0 !== e.view && (o.view = Object.assign({}, e.view));
                            break;
                        case "OrthographicCamera":
                            o = new Dt(e.left, e.right, e.top, e.bottom, e.near, e.far);
                            break;
                        case "AmbientLight":
                            o = new Hi(e.color, e.intensity);
                            break;
                        case "DirectionalLight":
                            o = new Vi(e.color, e.intensity);
                            break;
                        case "PointLight":
                            o = new ji(e.color, e.intensity, e.distance, e.decay);
                            break;
                        case "RectAreaLight":
                            o = new Wi(e.color, e.intensity, e.width, e.height);
                            break;
                        case "SpotLight":
                            o = new Ui(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                            break;
                        case "HemisphereLight":
                            o = new Di(e.color, e.groundColor, e.intensity);
                            break;
                        case "SkinnedMesh":
                        case "Mesh":
                            var s = r(e.geometry)
                                , h = a(e.material);
                            o = s.bones && s.bones.length > 0 ? new Te(s, h) : new Ct(s, h);
                            break;
                        case "LOD":
                            o = new we;
                            break;
                        case "Line":
                            o = new Se(r(e.geometry), a(e.material), e.mode);
                            break;
                        case "LineLoop":
                            o = new Ee(r(e.geometry), a(e.material));
                            break;
                        case "LineSegments":
                            o = new Ae(r(e.geometry), a(e.material));
                            break;
                        case "PointCloud":
                        case "Points":
                            o = new Ce(r(e.geometry), a(e.material));
                            break;
                        case "Sprite":
                            o = new xe(a(e.material));
                            break;
                        case "Group":
                            o = new Oe;
                            break;
                        default:
                            o = new ct
                    }
                    if (o.uuid = e.uuid,
                        void 0 !== e.name && (o.name = e.name),
                        void 0 !== e.matrix ? (t.fromArray(e.matrix),
                            t.decompose(o.position, o.quaternion, o.scale)) : (void 0 !== e.position && o.position.fromArray(e.position),
                                void 0 !== e.rotation && o.rotation.fromArray(e.rotation),
                                void 0 !== e.quaternion && o.quaternion.fromArray(e.quaternion),
                                void 0 !== e.scale && o.scale.fromArray(e.scale)),
                        void 0 !== e.castShadow && (o.castShadow = e.castShadow),
                        void 0 !== e.receiveShadow && (o.receiveShadow = e.receiveShadow),
                        e.shadow && (void 0 !== e.shadow.bias && (o.shadow.bias = e.shadow.bias),
                            void 0 !== e.shadow.radius && (o.shadow.radius = e.shadow.radius),
                            void 0 !== e.shadow.mapSize && o.shadow.mapSize.fromArray(e.shadow.mapSize),
                            void 0 !== e.shadow.camera && (o.shadow.camera = this.parseObject(e.shadow.camera))),
                        void 0 !== e.visible && (o.visible = e.visible),
                        void 0 !== e.userData && (o.userData = e.userData),
                        void 0 !== e.children)
                        for (var l in e.children)
                            o.add(this.parseObject(e.children[l], i, n));
                    if ("LOD" === e.type)
                        for (var c = e.levels, u = 0; u < c.length; u++) {
                            var p = c[u]
                                , l = o.getObjectByProperty("uuid", p.object);
                            void 0 !== l && o.addLevel(l, p.distance)
                        }
                    return o
                }
            }()
        });
    var qs = {
        UVMapping: so,
        CubeReflectionMapping: ho,
        CubeRefractionMapping: lo,
        EquirectangularReflectionMapping: co,
        EquirectangularRefractionMapping: uo,
        SphericalReflectionMapping: po,
        CubeUVReflectionMapping: fo,
        CubeUVRefractionMapping: mo
    }
        , Zs = {
            RepeatWrapping: go,
            ClampToEdgeWrapping: vo,
            MirroredRepeatWrapping: yo
        }
        , Ks = {
            NearestFilter: _o,
            NearestMipMapNearestFilter: xo,
            NearestMipMapLinearFilter: wo,
            LinearFilter: bo,
            LinearMipMapNearestFilter: Mo,
            LinearMipMapLinearFilter: To
        };
    Object.assign(bn.prototype, {
        getPoint: function () {
            return null
        },
        getPointAt: function (t) {
            var e = this.getUtoTmapping(t);
            return this.getPoint(e)
        },
        getPoints: function (t) {
            void 0 === t && (t = 5);
            for (var e = [], i = 0; i <= t; i++)
                e.push(this.getPoint(i / t));
            return e
        },
        getSpacedPoints: function (t) {
            void 0 === t && (t = 5);
            for (var e = [], i = 0; i <= t; i++)
                e.push(this.getPointAt(i / t));
            return e
        },
        getLength: function () {
            var t = this.getLengths();
            return t[t.length - 1]
        },
        getLengths: function (t) {
            if (void 0 === t && (t = this.arcLengthDivisions),
                this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate)
                return this.cacheArcLengths;
            this.needsUpdate = !1;
            var e, i, n = [], r = this.getPoint(0), a = 0;
            for (n.push(0),
                i = 1; i <= t; i++)
                e = this.getPoint(i / t),
                    a += e.distanceTo(r),
                    n.push(a),
                    r = e;
            return this.cacheArcLengths = n,
                n
        },
        updateArcLengths: function () {
            this.needsUpdate = !0,
                this.getLengths()
        },
        getUtoTmapping: function (t, e) {
            var i, n = this.getLengths(), r = 0, a = n.length;
            i = e || t * n[a - 1];
            for (var o, s = 0, h = a - 1; s <= h;)
                if (r = Math.floor(s + (h - s) / 2),
                    (o = n[r] - i) < 0)
                    s = r + 1;
                else {
                    if (!(o > 0)) {
                        h = r;
                        break
                    }
                    h = r - 1
                }
            if (r = h,
                n[r] === i)
                return r / (a - 1);
            var l = n[r];
            return (r + (i - l) / (n[r + 1] - l)) / (a - 1)
        },
        getTangent: function (t) {
            var e = t - 1e-4
                , i = t + 1e-4;
            e < 0 && (e = 0),
                i > 1 && (i = 1);
            var n = this.getPoint(e);
            return this.getPoint(i).clone().sub(n).normalize()
        },
        getTangentAt: function (t) {
            var e = this.getUtoTmapping(t);
            return this.getTangent(e)
        },
        computeFrenetFrames: function (t, e) {
            var i, n, r, a = new c, o = [], s = [], h = [], l = new c, p = new u;
            for (i = 0; i <= t; i++)
                n = i / t,
                    o[i] = this.getTangentAt(n),
                    o[i].normalize();
            s[0] = new c,
                h[0] = new c;
            var d = Number.MAX_VALUE
                , f = Math.abs(o[0].x)
                , m = Math.abs(o[0].y)
                , g = Math.abs(o[0].z);
            for (f <= d && (d = f,
                a.set(1, 0, 0)),
                m <= d && (d = m,
                    a.set(0, 1, 0)),
                g <= d && a.set(0, 0, 1),
                l.crossVectors(o[0], a).normalize(),
                s[0].crossVectors(o[0], l),
                h[0].crossVectors(o[0], s[0]),
                i = 1; i <= t; i++)
                s[i] = s[i - 1].clone(),
                    h[i] = h[i - 1].clone(),
                    l.crossVectors(o[i - 1], o[i]),
                    l.length() > Number.EPSILON && (l.normalize(),
                        r = Math.acos(bs.clamp(o[i - 1].dot(o[i]), -1, 1)),
                        s[i].applyMatrix4(p.makeRotationAxis(l, r))),
                    h[i].crossVectors(o[i], s[i]);
            if (!0 === e)
                for (r = Math.acos(bs.clamp(s[0].dot(s[t]), -1, 1)),
                    r /= t,
                    o[0].dot(l.crossVectors(s[0], s[t])) > 0 && (r = -r),
                    i = 1; i <= t; i++)
                    s[i].applyMatrix4(p.makeRotationAxis(o[i], r * i)),
                        h[i].crossVectors(o[i], s[i]);
            return {
                tangents: o,
                normals: s,
                binormals: h
            }
        }
    }),
        Mn.prototype = Object.create(bn.prototype),
        Mn.prototype.constructor = Mn,
        Mn.prototype.isLineCurve = !0,
        Mn.prototype.getPoint = function (t) {
            if (1 === t)
                return this.v2.clone();
            var e = this.v2.clone().sub(this.v1);
            return e.multiplyScalar(t).add(this.v1),
                e
        }
        ,
        Mn.prototype.getPointAt = function (t) {
            return this.getPoint(t)
        }
        ,
        Mn.prototype.getTangent = function (t) {
            return this.v2.clone().sub(this.v1).normalize()
        }
        ,
        Tn.prototype = Object.assign(Object.create(bn.prototype), {
            constructor: Tn,
            add: function (t) {
                this.curves.push(t)
            },
            closePath: function () {
                var t = this.curves[0].getPoint(0)
                    , e = this.curves[this.curves.length - 1].getPoint(1);
                t.equals(e) || this.curves.push(new Mn(e, t))
            },
            getPoint: function (t) {
                for (var e = t * this.getLength(), i = this.getCurveLengths(), n = 0; n < i.length;) {
                    if (i[n] >= e) {
                        var r = i[n] - e
                            , a = this.curves[n]
                            , o = a.getLength()
                            , s = 0 === o ? 0 : 1 - r / o;
                        return a.getPointAt(s)
                    }
                    n++
                }
                return null
            },
            getLength: function () {
                var t = this.getCurveLengths();
                return t[t.length - 1]
            },
            updateArcLengths: function () {
                this.needsUpdate = !0,
                    this.cacheLengths = null,
                    this.getCurveLengths()
            },
            getCurveLengths: function () {
                if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
                    return this.cacheLengths;
                for (var t = [], e = 0, i = 0, n = this.curves.length; i < n; i++)
                    e += this.curves[i].getLength(),
                        t.push(e);
                return this.cacheLengths = t,
                    t
            },
            getSpacedPoints: function (t) {
                void 0 === t && (t = 40);
                for (var e = [], i = 0; i <= t; i++)
                    e.push(this.getPoint(i / t));
                return this.autoClose && e.push(e[0]),
                    e
            },
            getPoints: function (t) {
                t = t || 12;
                for (var e, i = [], n = 0, r = this.curves; n < r.length; n++)
                    for (var a = r[n], o = a && a.isEllipseCurve ? 2 * t : a && a.isLineCurve ? 1 : a && a.isSplineCurve ? t * a.points.length : t, s = a.getPoints(o), h = 0; h < s.length; h++) {
                        var l = s[h];
                        e && e.equals(l) || (i.push(l),
                            e = l)
                    }
                return this.autoClose && i.length > 1 && !i[i.length - 1].equals(i[0]) && i.push(i[0]),
                    i
            },
            createPointsGeometry: function (t) {
                var e = this.getPoints(t);
                return this.createGeometry(e)
            },
            createSpacedPointsGeometry: function (t) {
                var e = this.getSpacedPoints(t);
                return this.createGeometry(e)
            },
            createGeometry: function (t) {
                for (var e = new Et, i = 0, n = t.length; i < n; i++) {
                    var r = t[i];
                    e.vertices.push(new c(r.x, r.y, r.z || 0))
                }
                return e
            }
        }),
        Pn.prototype = Object.create(bn.prototype),
        Pn.prototype.constructor = Pn,
        Pn.prototype.isEllipseCurve = !0,
        Pn.prototype.getPoint = function (t) {
            for (var e = 2 * Math.PI, i = this.aEndAngle - this.aStartAngle, n = Math.abs(i) < Number.EPSILON; i < 0;)
                i += e;
            for (; i > e;)
                i -= e;
            i < Number.EPSILON && (i = n ? 0 : e),
                !0 !== this.aClockwise || n || (i === e ? i = -e : i -= e);
            var a = this.aStartAngle + t * i
                , o = this.aX + this.xRadius * Math.cos(a)
                , s = this.aY + this.yRadius * Math.sin(a);
            if (0 !== this.aRotation) {
                var h = Math.cos(this.aRotation)
                    , l = Math.sin(this.aRotation)
                    , c = o - this.aX
                    , u = s - this.aY;
                o = c * h - u * l + this.aX,
                    s = c * l + u * h + this.aY
            }
            return new r(o, s)
        }
        ,
        Sn.prototype = Object.create(bn.prototype),
        Sn.prototype.constructor = Sn,
        Sn.prototype.isSplineCurve = !0,
        Sn.prototype.getPoint = function (t) {
            var e = this.points
                , i = (e.length - 1) * t
                , n = Math.floor(i)
                , a = i - n
                , o = e[0 === n ? n : n - 1]
                , s = e[n]
                , h = e[n > e.length - 2 ? e.length - 1 : n + 1]
                , l = e[n > e.length - 3 ? e.length - 1 : n + 2];
            return new r(pn(a, o.x, s.x, h.x, l.x), pn(a, o.y, s.y, h.y, l.y))
        }
        ,
        An.prototype = Object.create(bn.prototype),
        An.prototype.constructor = An,
        An.prototype.getPoint = function (t) {
            var e = this.v0
                , i = this.v1
                , n = this.v2
                , a = this.v3;
            return new r(wn(t, e.x, i.x, n.x, a.x), wn(t, e.y, i.y, n.y, a.y))
        }
        ,
        En.prototype = Object.create(bn.prototype),
        En.prototype.constructor = En,
        En.prototype.getPoint = function (t) {
            var e = this.v0
                , i = this.v1
                , n = this.v2;
            return new r(gn(t, e.x, i.x, n.x), gn(t, e.y, i.y, n.y))
        }
        ;
    var Qs = Object.assign(Object.create(Tn.prototype), {
        fromPoints: function (t) {
            this.moveTo(t[0].x, t[0].y);
            for (var e = 1, i = t.length; e < i; e++)
                this.lineTo(t[e].x, t[e].y)
        },
        moveTo: function (t, e) {
            this.currentPoint.set(t, e)
        },
        lineTo: function (t, e) {
            var i = new Mn(this.currentPoint.clone(), new r(t, e));
            this.curves.push(i),
                this.currentPoint.set(t, e)
        },
        quadraticCurveTo: function (t, e, i, n) {
            var a = new En(this.currentPoint.clone(), new r(t, e), new r(i, n));
            this.curves.push(a),
                this.currentPoint.set(i, n)
        },
        bezierCurveTo: function (t, e, i, n, a, o) {
            var s = new An(this.currentPoint.clone(), new r(t, e), new r(i, n), new r(a, o));
            this.curves.push(s),
                this.currentPoint.set(a, o)
        },
        splineThru: function (t) {
            var e = [this.currentPoint.clone()].concat(t)
                , i = new Sn(e);
            this.curves.push(i),
                this.currentPoint.copy(t[t.length - 1])
        },
        arc: function (t, e, i, n, r, a) {
            var o = this.currentPoint.x
                , s = this.currentPoint.y;
            this.absarc(t + o, e + s, i, n, r, a)
        },
        absarc: function (t, e, i, n, r, a) {
            this.absellipse(t, e, i, i, n, r, a)
        },
        ellipse: function (t, e, i, n, r, a, o, s) {
            var h = this.currentPoint.x
                , l = this.currentPoint.y;
            this.absellipse(t + h, e + l, i, n, r, a, o, s)
        },
        absellipse: function (t, e, i, n, r, a, o, s) {
            var h = new Pn(t, e, i, n, r, a, o, s);
            if (this.curves.length > 0) {
                var l = h.getPoint(0);
                l.equals(this.currentPoint) || this.lineTo(l.x, l.y)
            }
            this.curves.push(h);
            var c = h.getPoint(1);
            this.currentPoint.copy(c)
        }
    });
    Ln.prototype = Qs,
        Qs.constructor = Ln,
        Cn.prototype = Object.assign(Object.create(Qs), {
            constructor: Cn,
            getPointsHoles: function (t) {
                for (var e = [], i = 0, n = this.holes.length; i < n; i++)
                    e[i] = this.holes[i].getPoints(t);
                return e
            },
            extractAllPoints: function (t) {
                return {
                    shape: this.getPoints(t),
                    holes: this.getPointsHoles(t)
                }
            },
            extractPoints: function (t) {
                return this.extractAllPoints(t)
            }
        }),
        Object.assign(On.prototype, {
            moveTo: function (t, e) {
                this.currentPath = new Ln,
                    this.subPaths.push(this.currentPath),
                    this.currentPath.moveTo(t, e)
            },
            lineTo: function (t, e) {
                this.currentPath.lineTo(t, e)
            },
            quadraticCurveTo: function (t, e, i, n) {
                this.currentPath.quadraticCurveTo(t, e, i, n)
            },
            bezierCurveTo: function (t, e, i, n, r, a) {
                this.currentPath.bezierCurveTo(t, e, i, n, r, a)
            },
            splineThru: function (t) {
                this.currentPath.splineThru(t)
            },
            toShapes: function (t, e) {
                function i(t) {
                    for (var e = [], i = 0, n = t.length; i < n; i++) {
                        var r = t[i]
                            , a = new Cn;
                        a.curves = r.curves,
                            e.push(a)
                    }
                    return e
                }
                var n = Us.isClockWise
                    , r = this.subPaths;
                if (0 === r.length)
                    return [];
                if (!0 === e)
                    return i(r);
                var a, o, s, h = [];
                if (1 === r.length)
                    return o = r[0],
                        s = new Cn,
                        s.curves = o.curves,
                        h.push(s),
                        h;
                var l = !n(r[0].getPoints());
                l = t ? !l : l;
                var c, u = [], p = [], d = [], f = 0;
                p[f] = void 0,
                    d[f] = [];
                for (var m = 0, g = r.length; m < g; m++)
                    o = r[m],
                        c = o.getPoints(),
                        a = n(c),
                        a = t ? !a : a,
                        a ? (!l && p[f] && f++,
                            p[f] = {
                                s: new Cn,
                                p: c
                            },
                            p[f].s.curves = o.curves,
                            l && f++,
                            d[f] = []) : d[f].push({
                                h: o,
                                p: c[0]
                            });
                if (!p[0])
                    return i(r);
                if (p.length > 1) {
                    for (var v = !1, y = [], _ = 0, x = p.length; _ < x; _++)
                        u[_] = [];
                    for (var _ = 0, x = p.length; _ < x; _++)
                        for (var w = d[_], b = 0; b < w.length; b++) {
                            for (var M = w[b], T = !0, P = 0; P < p.length; P++)
                                (function (t, e) {
                                    for (var i = e.length, n = !1, r = i - 1, a = 0; a < i; r = a++) {
                                        var o = e[r]
                                            , s = e[a]
                                            , h = s.x - o.x
                                            , l = s.y - o.y;
                                        if (Math.abs(l) > Number.EPSILON) {
                                            if (l < 0 && (o = e[a],
                                                h = -h,
                                                s = e[r],
                                                l = -l),
                                                t.y < o.y || t.y > s.y)
                                                continue;
                                            if (t.y === o.y) {
                                                if (t.x === o.x)
                                                    return !0
                                            } else {
                                                var c = l * (t.x - o.x) - h * (t.y - o.y);
                                                if (0 === c)
                                                    return !0;
                                                if (c < 0)
                                                    continue;
                                                n = !n
                                            }
                                        } else {
                                            if (t.y !== o.y)
                                                continue;
                                            if (s.x <= t.x && t.x <= o.x || o.x <= t.x && t.x <= s.x)
                                                return !0
                                        }
                                    }
                                    return n
                                }
                                )(M.p, p[P].p) && (_ !== P && y.push({
                                    froms: _,
                                    tos: P,
                                    hole: b
                                }),
                                    T ? (T = !1,
                                        u[P].push(M)) : v = !0);
                            T && u[_].push(M)
                        }
                    y.length > 0 && (v || (d = u))
                }
                for (var S, m = 0, A = p.length; m < A; m++) {
                    s = p[m].s,
                        h.push(s),
                        S = d[m];
                    for (var E = 0, L = S.length; E < L; E++)
                        s.holes.push(S[E].h)
                }
                return h
            }
        }),
        Object.assign(Rn.prototype, {
            isFont: !0,
            generateShapes: function (t, e, i) {
                function n(t, e, n, a) {
                    var o = r.glyphs[t] || r.glyphs["?"];
                    if (o) {
                        var s, h, l, c, u, p, d, f, m, g, v, y = new On, _ = [];
                        if (o.o)
                            for (var x = o._cachedOutline || (o._cachedOutline = o.o.split(" ")), w = 0, b = x.length; w < b;) {
                                var M = x[w++];
                                switch (M) {
                                    case "m":
                                        s = x[w++] * e + n,
                                            h = x[w++] * e + a,
                                            y.moveTo(s, h);
                                        break;
                                    case "l":
                                        s = x[w++] * e + n,
                                            h = x[w++] * e + a,
                                            y.lineTo(s, h);
                                        break;
                                    case "q":
                                        if (l = x[w++] * e + n,
                                            c = x[w++] * e + a,
                                            d = x[w++] * e + n,
                                            f = x[w++] * e + a,
                                            y.quadraticCurveTo(d, f, l, c),
                                            v = _[_.length - 1]) {
                                            u = v.x,
                                                p = v.y;
                                            for (var T = 1; T <= i; T++) {
                                                var P = T / i;
                                                gn(P, u, d, l),
                                                    gn(P, p, f, c)
                                            }
                                        }
                                        break;
                                    case "b":
                                        if (l = x[w++] * e + n,
                                            c = x[w++] * e + a,
                                            d = x[w++] * e + n,
                                            f = x[w++] * e + a,
                                            m = x[w++] * e + n,
                                            g = x[w++] * e + a,
                                            y.bezierCurveTo(d, f, m, g, l, c),
                                            v = _[_.length - 1]) {
                                            u = v.x,
                                                p = v.y;
                                            for (var T = 1; T <= i; T++) {
                                                var P = T / i;
                                                wn(P, u, d, m, l),
                                                    wn(P, p, f, g, c)
                                            }
                                        }
                                }
                            }
                        return {
                            offsetX: o.ha * e,
                            path: y
                        }
                    }
                }
                void 0 === e && (e = 100),
                    void 0 === i && (i = 4);
                for (var r = this.data, a = function (t) {
                    for (var i = String(t).split(""), a = e / r.resolution, o = (r.boundingBox.yMax - r.boundingBox.yMin + r.underlineThickness) * a, s = 0, h = 0, l = [], c = 0; c < i.length; c++) {
                        var u = i[c];
                        if ("\n" === u)
                            s = 0,
                                h -= o;
                        else {
                            var p = n(u, a, s, h);
                            s += p.offsetX,
                                l.push(p.path)
                        }
                    }
                    return l
                }(t), o = [], s = 0, h = a.length; s < h; s++)
                    Array.prototype.push.apply(o, a[s].toShapes());
                return o
            }
        }),
        Object.assign(In.prototype, {
            load: function (t, e, i, n) {
                var r = this;
                new Ci(this.manager).load(t, function (t) {
                    var i;
                    try {
                        i = JSON.parse(t)
                    } catch (e) {
                        i = JSON.parse(t.substring(65, t.length - 2))
                    }
                    var n = r.parse(i);
                    e && e(n)
                }, i, n)
            },
            parse: function (t) {
                return new Rn(t)
            }
        });
    var Js, $s = {
        getContext: function () {
            return void 0 === Js && (Js = new (window.AudioContext || window.webkitAudioContext)),
                Js
        },
        setContext: function (t) {
            Js = t
        }
    };
    Object.assign(kn.prototype, {
        load: function (t, e, i, n) {
            var r = new Ci(this.manager);
            r.setResponseType("arraybuffer"),
                r.load(t, function (t) {
                    $s.getContext().decodeAudioData(t, function (t) {
                        e(t)
                    })
                }, i, n)
        }
    }),
        Object.assign(zn.prototype, {
            update: function () {
                var t, e, i, n, r, a, o, s, h = new u, l = new u;
                return function (c) {
                    if (t !== this || e !== c.focus || i !== c.fov || n !== c.aspect * this.aspect || r !== c.near || a !== c.far || o !== c.zoom || s !== this.eyeSep) {
                        t = this,
                            e = c.focus,
                            i = c.fov,
                            n = c.aspect * this.aspect,
                            r = c.near,
                            a = c.far,
                            o = c.zoom;
                        var u = c.projectionMatrix.clone();
                        s = this.eyeSep / 2;
                        var p, d, f = s * r / e, m = r * Math.tan(bs.DEG2RAD * i * .5) / o;
                        l.elements[12] = -s,
                            h.elements[12] = s,
                            p = -m * n + f,
                            d = m * n + f,
                            u.elements[0] = 2 * r / (d - p),
                            u.elements[8] = (d + p) / (d - p),
                            this.cameraL.projectionMatrix.copy(u),
                            p = -m * n - f,
                            d = m * n - f,
                            u.elements[0] = 2 * r / (d - p),
                            u.elements[8] = (d + p) / (d - p),
                            this.cameraR.projectionMatrix.copy(u)
                    }
                    this.cameraL.matrixWorld.copy(c.matrixWorld).multiply(l),
                        this.cameraR.matrixWorld.copy(c.matrixWorld).multiply(h)
                }
            }()
        }),
        Fn.prototype = Object.create(ct.prototype),
        Fn.prototype.constructor = Fn,
        Dn.prototype = Object.assign(Object.create(Ft.prototype), {
            constructor: Dn,
            isArrayCamera: !0
        }),
        Nn.prototype = Object.assign(Object.create(ct.prototype), {
            constructor: Nn,
            getInput: function () {
                return this.gain
            },
            removeFilter: function () {
                null !== this.filter && (this.gain.disconnect(this.filter),
                    this.filter.disconnect(this.context.destination),
                    this.gain.connect(this.context.destination),
                    this.filter = null)
            },
            getFilter: function () {
                return this.filter
            },
            setFilter: function (t) {
                null !== this.filter ? (this.gain.disconnect(this.filter),
                    this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
                    this.filter = t,
                    this.gain.connect(this.filter),
                    this.filter.connect(this.context.destination)
            },
            getMasterVolume: function () {
                return this.gain.gain.value
            },
            setMasterVolume: function (t) {
                this.gain.gain.value = t
            },
            updateMatrixWorld: function () {
                var t = new c
                    , e = new l
                    , i = new c
                    , n = new c;
                return function (r) {
                    ct.prototype.updateMatrixWorld.call(this, r);
                    var a = this.context.listener
                        , o = this.up;
                    this.matrixWorld.decompose(t, e, i),
                        n.set(0, 0, -1).applyQuaternion(e),
                        a.positionX ? (a.positionX.setValueAtTime(t.x, this.context.currentTime),
                            a.positionY.setValueAtTime(t.y, this.context.currentTime),
                            a.positionZ.setValueAtTime(t.z, this.context.currentTime),
                            a.forwardX.setValueAtTime(n.x, this.context.currentTime),
                            a.forwardY.setValueAtTime(n.y, this.context.currentTime),
                            a.forwardZ.setValueAtTime(n.z, this.context.currentTime),
                            a.upX.setValueAtTime(o.x, this.context.currentTime),
                            a.upY.setValueAtTime(o.y, this.context.currentTime),
                            a.upZ.setValueAtTime(o.z, this.context.currentTime)) : (a.setPosition(t.x, t.y, t.z),
                                a.setOrientation(n.x, n.y, n.z, o.x, o.y, o.z))
                }
            }()
        }),
        Bn.prototype = Object.assign(Object.create(ct.prototype), {
            constructor: Bn,
            getOutput: function () {
                return this.gain
            },
            setNodeSource: function (t) {
                return this.hasPlaybackControl = !1,
                    this.sourceType = "audioNode",
                    this.source = t,
                    this.connect(),
                    this
            },
            setBuffer: function (t) {
                return this.buffer = t,
                    this.sourceType = "buffer",
                    this.autoplay && this.play(),
                    this
            },
            play: function () {
                if (!0 !== this.isPlaying && !1 !== this.hasPlaybackControl) {
                    var t = this.context.createBufferSource();
                    return t.buffer = this.buffer,
                        t.loop = this.loop,
                        t.onended = this.onEnded.bind(this),
                        t.playbackRate.setValueAtTime(this.playbackRate, this.startTime),
                        t.start(0, this.startTime),
                        this.isPlaying = !0,
                        this.source = t,
                        this.connect()
                }
            },
            pause: function () {
                if (!1 !== this.hasPlaybackControl)
                    return this.source.stop(),
                        this.startTime = this.context.currentTime,
                        this.isPlaying = !1,
                        this
            },
            stop: function () {
                if (!1 !== this.hasPlaybackControl)
                    return this.source.stop(),
                        this.startTime = 0,
                        this.isPlaying = !1,
                        this
            },
            connect: function () {
                if (this.filters.length > 0) {
                    this.source.connect(this.filters[0]);
                    for (var t = 1, e = this.filters.length; t < e; t++)
                        this.filters[t - 1].connect(this.filters[t]);
                    this.filters[this.filters.length - 1].connect(this.getOutput())
                } else
                    this.source.connect(this.getOutput());
                return this
            },
            disconnect: function () {
                if (this.filters.length > 0) {
                    this.source.disconnect(this.filters[0]);
                    for (var t = 1, e = this.filters.length; t < e; t++)
                        this.filters[t - 1].disconnect(this.filters[t]);
                    this.filters[this.filters.length - 1].disconnect(this.getOutput())
                } else
                    this.source.disconnect(this.getOutput());
                return this
            },
            getFilters: function () {
                return this.filters
            },
            setFilters: function (t) {
                return t || (t = []),
                    !0 === this.isPlaying ? (this.disconnect(),
                        this.filters = t,
                        this.connect()) : this.filters = t,
                    this
            },
            getFilter: function () {
                return this.getFilters()[0]
            },
            setFilter: function (t) {
                return this.setFilters(t ? [t] : [])
            },
            setPlaybackRate: function (t) {
                if (!1 !== this.hasPlaybackControl)
                    return this.playbackRate = t,
                        !0 === this.isPlaying && this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime),
                        this
            },
            getPlaybackRate: function () {
                return this.playbackRate
            },
            onEnded: function () {
                this.isPlaying = !1
            },
            getLoop: function () {
                return !1 !== this.hasPlaybackControl && this.loop
            },
            setLoop: function (t) {
                if (!1 !== this.hasPlaybackControl)
                    return this.loop = t,
                        !0 === this.isPlaying && (this.source.loop = this.loop),
                        this
            },
            getVolume: function () {
                return this.gain.gain.value
            },
            setVolume: function (t) {
                return this.gain.gain.value = t,
                    this
            }
        }),
        Un.prototype = Object.assign(Object.create(Bn.prototype), {
            constructor: Un,
            getOutput: function () {
                return this.panner
            },
            getRefDistance: function () {
                return this.panner.refDistance
            },
            setRefDistance: function (t) {
                this.panner.refDistance = t
            },
            getRolloffFactor: function () {
                return this.panner.rolloffFactor
            },
            setRolloffFactor: function (t) {
                this.panner.rolloffFactor = t
            },
            getDistanceModel: function () {
                return this.panner.distanceModel
            },
            setDistanceModel: function (t) {
                this.panner.distanceModel = t
            },
            getMaxDistance: function () {
                return this.panner.maxDistance
            },
            setMaxDistance: function (t) {
                this.panner.maxDistance = t
            },
            updateMatrixWorld: function () {
                var t = new c;
                return function (e) {
                    ct.prototype.updateMatrixWorld.call(this, e),
                        t.setFromMatrixPosition(this.matrixWorld),
                        this.panner.setPosition(t.x, t.y, t.z)
                }
            }()
        }),
        Object.assign(jn.prototype, {
            getFrequencyData: function () {
                return this.analyser.getByteFrequencyData(this.data),
                    this.data
            },
            getAverageFrequency: function () {
                for (var t = 0, e = this.getFrequencyData(), i = 0; i < e.length; i++)
                    t += e[i];
                return t / e.length
            }
        }),
        Object.assign(Gn.prototype, {
            accumulate: function (t, e) {
                var i = this.buffer
                    , n = this.valueSize
                    , r = t * n + n
                    , a = this.cumulativeWeight;
                if (0 === a) {
                    for (var o = 0; o !== n; ++o)
                        i[r + o] = i[o];
                    a = e
                } else {
                    a += e;
                    var s = e / a;
                    this._mixBufferRegion(i, r, 0, s, n)
                }
                this.cumulativeWeight = a
            },
            apply: function (t) {
                var e = this.valueSize
                    , i = this.buffer
                    , n = t * e + e
                    , r = this.cumulativeWeight
                    , a = this.binding;
                if (this.cumulativeWeight = 0,
                    r < 1) {
                    var o = 3 * e;
                    this._mixBufferRegion(i, n, o, 1 - r, e)
                }
                for (var s = e, h = e + e; s !== h; ++s)
                    if (i[s] !== i[s + e]) {
                        a.setValue(i, n);
                        break
                    }
            },
            saveOriginalState: function () {
                var t = this.binding
                    , e = this.buffer
                    , i = this.valueSize
                    , n = 3 * i;
                t.getValue(e, n);
                for (var r = i, a = n; r !== a; ++r)
                    e[r] = e[n + r % i];
                this.cumulativeWeight = 0
            },
            restoreOriginalState: function () {
                var t = 3 * this.valueSize;
                this.binding.setValue(this.buffer, t)
            },
            _select: function (t, e, i, n, r) {
                if (n >= .5)
                    for (var a = 0; a !== r; ++a)
                        t[e + a] = t[i + a]
            },
            _slerp: function (t, e, i, n) {
                l.slerpFlat(t, e, t, e, t, i, n)
            },
            _lerp: function (t, e, i, n, r) {
                for (var a = 1 - n, o = 0; o !== r; ++o) {
                    var s = e + o;
                    t[s] = t[s] * a + t[i + o] * n
                }
            }
        }),
        Object.assign(Vn.prototype, {
            getValue: function (t, e) {
                this.bind();
                var i = this._targetGroup.nCachedObjects_
                    , n = this._bindings[i];
                void 0 !== n && n.getValue(t, e)
            },
            setValue: function (t, e) {
                for (var i = this._bindings, n = this._targetGroup.nCachedObjects_, r = i.length; n !== r; ++n)
                    i[n].setValue(t, e)
            },
            bind: function () {
                for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, i = t.length; e !== i; ++e)
                    t[e].bind()
            },
            unbind: function () {
                for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, i = t.length; e !== i; ++e)
                    t[e].unbind()
            }
        }),
        Object.assign(Hn, {
            Composite: Vn,
            create: function (t, e, i) {
                return t && t.isAnimationObjectGroup ? new Hn.Composite(t, e, i) : new Hn(t, e, i)
            },
            parseTrackName: function () {
                var t = /((?:[\w-]+[\/:])*)/
                    , e = /([\w-\.]+)?/
                    , i = /(?:\.([\w-]+)(?:\[(.+)\])?)?/
                    , n = /\.([\w-]+)(?:\[(.+)\])?/
                    , r = new RegExp("^" + t.source + e.source + i.source + n.source + "$")
                    , a = ["material", "materials", "bones"];
                return function (t) {
                    var e = r.exec(t);
                    if (!e)
                        throw new Error("PropertyBinding: Cannot parse trackName: " + t);
                    var i = {
                        nodeName: e[2],
                        objectName: e[3],
                        objectIndex: e[4],
                        propertyName: e[5],
                        propertyIndex: e[6]
                    }
                        , n = i.nodeName && i.nodeName.lastIndexOf(".");
                    if (void 0 !== n && -1 !== n) {
                        var o = i.nodeName.substring(n + 1);
                        -1 !== a.indexOf(o) && (i.nodeName = i.nodeName.substring(0, n),
                            i.objectName = o)
                    }
                    if (null === i.propertyName || 0 === i.propertyName.length)
                        throw new Error("PropertyBinding: can not parse propertyName from trackName: " + t);
                    return i
                }
            }(),
            findNode: function (t, e) {
                if (!e || "" === e || "root" === e || "." === e || -1 === e || e === t.name || e === t.uuid)
                    return t;
                if (t.skeleton) {
                    var i = function (t) {
                        for (var i = 0; i < t.bones.length; i++) {
                            var n = t.bones[i];
                            if (n.name === e)
                                return n
                        }
                        return null
                    }(t.skeleton);
                    if (i)
                        return i
                }
                if (t.children) {
                    var n = function (t) {
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            if (r.name === e || r.uuid === e)
                                return r;
                            var a = n(r.children);
                            if (a)
                                return a
                        }
                        return null
                    }
                        , r = n(t.children);
                    if (r)
                        return r
                }
                return null
            }
        }),
        Object.assign(Hn.prototype, {
            _getValue_unavailable: function () { },
            _setValue_unavailable: function () { },
            BindingType: {
                Direct: 0,
                EntireArray: 1,
                ArrayElement: 2,
                HasFromToArray: 3
            },
            Versioning: {
                None: 0,
                NeedsUpdate: 1,
                MatrixWorldNeedsUpdate: 2
            },
            GetterByBindingType: [function (t, e) {
                t[e] = this.node[this.propertyName]
            }
                , function (t, e) {
                    for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n)
                        t[e++] = i[n]
                }
                , function (t, e) {
                    t[e] = this.resolvedProperty[this.propertyIndex]
                }
                , function (t, e) {
                    this.resolvedProperty.toArray(t, e)
                }
            ],
            SetterByBindingTypeAndVersioning: [[function (t, e) {
                this.node[this.propertyName] = t[e]
            }
                , function (t, e) {
                    this.node[this.propertyName] = t[e],
                        this.targetObject.needsUpdate = !0
                }
                , function (t, e) {
                    this.node[this.propertyName] = t[e],
                        this.targetObject.matrixWorldNeedsUpdate = !0
                }
            ], [function (t, e) {
                for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n)
                    i[n] = t[e++]
            }
                , function (t, e) {
                    for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n)
                        i[n] = t[e++];
                    this.targetObject.needsUpdate = !0
                }
                , function (t, e) {
                    for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n)
                        i[n] = t[e++];
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
            ], [function (t, e) {
                this.resolvedProperty[this.propertyIndex] = t[e]
            }
                , function (t, e) {
                    this.resolvedProperty[this.propertyIndex] = t[e],
                        this.targetObject.needsUpdate = !0
                }
                , function (t, e) {
                    this.resolvedProperty[this.propertyIndex] = t[e],
                        this.targetObject.matrixWorldNeedsUpdate = !0
                }
            ], [function (t, e) {
                this.resolvedProperty.fromArray(t, e)
            }
                , function (t, e) {
                    this.resolvedProperty.fromArray(t, e),
                        this.targetObject.needsUpdate = !0
                }
                , function (t, e) {
                    this.resolvedProperty.fromArray(t, e),
                        this.targetObject.matrixWorldNeedsUpdate = !0
                }
            ]],
            getValue: function (t, e) {
                this.bind(),
                    this.getValue(t, e)
            },
            setValue: function (t, e) {
                this.bind(),
                    this.setValue(t, e)
            },
            bind: function () {
                var t = this.node
                    , e = this.parsedPath
                    , i = e.objectName
                    , n = e.propertyName
                    , r = e.propertyIndex;
                if (t || (t = Hn.findNode(this.rootNode, e.nodeName) || this.rootNode,
                    this.node = t),
                    this.getValue = this._getValue_unavailable,
                    this.setValue = this._setValue_unavailable,
                    t) {
                    if (i) {
                        var a = e.objectIndex;
                        switch (i) {
                            case "materials":
                                if (!t.material)
                                    return;
                                if (!t.material.materials)
                                    return;
                                t = t.material.materials;
                                break;
                            case "bones":
                                if (!t.skeleton)
                                    return;
                                t = t.skeleton.bones;
                                for (var o = 0; o < t.length; o++)
                                    if (t[o].name === a) {
                                        a = o;
                                        break
                                    }
                                break;
                            default:
                                if (void 0 === t[i])
                                    return;
                                t = t[i]
                        }
                        if (void 0 !== a) {
                            if (void 0 === t[a])
                                return;
                            t = t[a]
                        }
                    }
                    var s = t[n];
                    if (void 0 !== s) {
                        var h = this.Versioning.None;
                        void 0 !== t.needsUpdate ? (h = this.Versioning.NeedsUpdate,
                            this.targetObject = t) : void 0 !== t.matrixWorldNeedsUpdate && (h = this.Versioning.MatrixWorldNeedsUpdate,
                                this.targetObject = t);
                        var l = this.BindingType.Direct;
                        if (void 0 !== r) {
                            if ("morphTargetInfluences" === n) {
                                if (!t.geometry)
                                    return;
                                if (!t.geometry.morphTargets)
                                    return;
                                for (var o = 0; o < this.node.geometry.morphTargets.length; o++)
                                    if (t.geometry.morphTargets[o].name === r) {
                                        r = o;
                                        break
                                    }
                            }
                            l = this.BindingType.ArrayElement,
                                this.resolvedProperty = s,
                                this.propertyIndex = r
                        } else
                            void 0 !== s.fromArray && void 0 !== s.toArray ? (l = this.BindingType.HasFromToArray,
                                this.resolvedProperty = s) : Array.isArray(s) ? (l = this.BindingType.EntireArray,
                                    this.resolvedProperty = s) : this.propertyName = n;
                        this.getValue = this.GetterByBindingType[l],
                            this.setValue = this.SetterByBindingTypeAndVersioning[l][h]
                    } else {
                        e.nodeName
                    }
                }
            },
            unbind: function () {
                this.node = null,
                    this.getValue = this._getValue_unbound,
                    this.setValue = this._setValue_unbound
            }
        }),
        //!\ DECLARE ALIAS AFTER assign prototype !
        Object.assign(Hn.prototype, {
            _getValue_unbound: Hn.prototype.getValue,
            _setValue_unbound: Hn.prototype.setValue
        }),
        Object.assign(Wn.prototype, {
            isAnimationObjectGroup: !0,
            add: function (t) {
                for (var e = this._objects, i = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, a = this._paths, o = this._parsedPaths, s = this._bindings, h = s.length, l = 0, c = arguments.length; l !== c; ++l) {
                    var u = arguments[l]
                        , p = u.uuid
                        , d = r[p];
                    if (void 0 === d) {
                        d = i++,
                            r[p] = d,
                            e.push(u);
                        for (var f = 0, m = h; f !== m; ++f)
                            s[f].push(new Hn(u, a[f], o[f]))
                    } else if (d < n) {
                        e[d];
                        var g = --n
                            , v = e[g];
                        r[v.uuid] = d,
                            e[d] = v,
                            r[p] = g,
                            e[g] = u;
                        for (var f = 0, m = h; f !== m; ++f) {
                            var y = s[f]
                                , _ = y[g]
                                , x = y[d];
                            y[d] = _,
                                void 0 === x && (x = new Hn(u, a[f], o[f])),
                                y[g] = x
                        }
                    } else
                        e[d]
                }
                this.nCachedObjects_ = n
            },
            remove: function (t) {
                for (var e = this._objects, i = this.nCachedObjects_, n = this._indicesByUUID, r = this._bindings, a = r.length, o = 0, s = arguments.length; o !== s; ++o) {
                    var h = arguments[o]
                        , l = h.uuid
                        , c = n[l];
                    if (void 0 !== c && c >= i) {
                        var u = i++
                            , p = e[u];
                        n[p.uuid] = c,
                            e[c] = p,
                            n[l] = u,
                            e[u] = h;
                        for (var d = 0, f = a; d !== f; ++d) {
                            var m = r[d]
                                , g = m[u]
                                , v = m[c];
                            m[c] = g,
                                m[u] = v
                        }
                    }
                }
                this.nCachedObjects_ = i
            },
            uncache: function (t) {
                for (var e = this._objects, i = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, a = this._bindings, o = a.length, s = 0, h = arguments.length; s !== h; ++s) {
                    var l = arguments[s]
                        , c = l.uuid
                        , u = r[c];
                    if (void 0 !== u)
                        if (delete r[c],
                            u < n) {
                            var p = --n
                                , d = e[p]
                                , f = --i
                                , m = e[f];
                            r[d.uuid] = u,
                                e[u] = d,
                                r[m.uuid] = p,
                                e[p] = m,
                                e.pop();
                            for (var g = 0, v = o; g !== v; ++g) {
                                var y = a[g]
                                    , _ = y[p]
                                    , x = y[f];
                                y[u] = _,
                                    y[p] = x,
                                    y.pop()
                            }
                        } else {
                            var f = --i
                                , m = e[f];
                            r[m.uuid] = u,
                                e[u] = m,
                                e.pop();
                            for (var g = 0, v = o; g !== v; ++g) {
                                var y = a[g];
                                y[u] = y[f],
                                    y.pop()
                            }
                        }
                }
                this.nCachedObjects_ = n
            },
            subscribe_: function (t, e) {
                var i = this._bindingsIndicesByPath
                    , n = i[t]
                    , r = this._bindings;
                if (void 0 !== n)
                    return r[n];
                var a = this._paths
                    , o = this._parsedPaths
                    , s = this._objects
                    , h = s.length
                    , l = this.nCachedObjects_
                    , c = new Array(h);
                n = r.length,
                    i[t] = n,
                    a.push(t),
                    o.push(e),
                    r.push(c);
                for (var u = l, p = s.length; u !== p; ++u) {
                    var d = s[u];
                    c[u] = new Hn(d, t, e)
                }
                return c
            },
            unsubscribe_: function (t) {
                var e = this._bindingsIndicesByPath
                    , i = e[t];
                if (void 0 !== i) {
                    var n = this._paths
                        , r = this._parsedPaths
                        , a = this._bindings
                        , o = a.length - 1
                        , s = a[o];
                    e[t[o]] = i,
                        a[i] = s,
                        a.pop(),
                        r[i] = r[o],
                        r.pop(),
                        n[i] = n[o],
                        n.pop()
                }
            }
        }),
        Object.assign(Xn.prototype, {
            play: function () {
                return this._mixer._activateAction(this),
                    this
            },
            stop: function () {
                return this._mixer._deactivateAction(this),
                    this.reset()
            },
            reset: function () {
                return this.paused = !1,
                    this.enabled = !0,
                    this.time = 0,
                    this._loopCount = -1,
                    this._startTime = null,
                    this.stopFading().stopWarping()
            },
            isRunning: function () {
                return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
            },
            isScheduled: function () {
                return this._mixer._isActiveAction(this)
            },
            startAt: function (t) {
                return this._startTime = t,
                    this
            },
            setLoop: function (t, e) {
                return this.loop = t,
                    this.repetitions = e,
                    this
            },
            setEffectiveWeight: function (t) {
                return this.weight = t,
                    this._effectiveWeight = this.enabled ? t : 0,
                    this.stopFading()
            },
            getEffectiveWeight: function () {
                return this._effectiveWeight
            },
            fadeIn: function (t) {
                return this._scheduleFading(t, 0, 1)
            },
            fadeOut: function (t) {
                return this._scheduleFading(t, 1, 0)
            },
            crossFadeFrom: function (t, e, i) {
                if (t.fadeOut(e),
                    this.fadeIn(e),
                    i) {
                    var n = this._clip.duration
                        , r = t._clip.duration
                        , a = r / n
                        , o = n / r;
                    t.warp(1, a, e),
                        this.warp(o, 1, e)
                }
                return this
            },
            crossFadeTo: function (t, e, i) {
                return t.crossFadeFrom(this, e, i)
            },
            stopFading: function () {
                var t = this._weightInterpolant;
                return null !== t && (this._weightInterpolant = null,
                    this._mixer._takeBackControlInterpolant(t)),
                    this
            },
            setEffectiveTimeScale: function (t) {
                return this.timeScale = t,
                    this._effectiveTimeScale = this.paused ? 0 : t,
                    this.stopWarping()
            },
            getEffectiveTimeScale: function () {
                return this._effectiveTimeScale
            },
            setDuration: function (t) {
                return this.timeScale = this._clip.duration / t,
                    this.stopWarping()
            },
            syncWith: function (t) {
                return this.time = t.time,
                    this.timeScale = t.timeScale,
                    this.stopWarping()
            },
            halt: function (t) {
                return this.warp(this._effectiveTimeScale, 0, t)
            },
            warp: function (t, e, i) {
                var n = this._mixer
                    , r = n.time
                    , a = this._timeScaleInterpolant
                    , o = this.timeScale;
                null === a && (a = n._lendControlInterpolant(),
                    this._timeScaleInterpolant = a);
                var s = a.parameterPositions
                    , h = a.sampleValues;
                return s[0] = r,
                    s[1] = r + i,
                    h[0] = t / o,
                    h[1] = e / o,
                    this
            },
            stopWarping: function () {
                var t = this._timeScaleInterpolant;
                return null !== t && (this._timeScaleInterpolant = null,
                    this._mixer._takeBackControlInterpolant(t)),
                    this
            },
            getMixer: function () {
                return this._mixer
            },
            getClip: function () {
                return this._clip
            },
            getRoot: function () {
                return this._localRoot || this._mixer._root
            },
            _update: function (t, e, i, n) {
                if (!this.enabled)
                    return void this._updateWeight(t);
                var r = this._startTime;
                if (null !== r) {
                    var a = (t - r) * i;
                    if (a < 0 || 0 === i)
                        return;
                    this._startTime = null,
                        e = i * a
                }
                e *= this._updateTimeScale(t);
                var o = this._updateTime(e)
                    , s = this._updateWeight(t);
                if (s > 0)
                    for (var h = this._interpolants, l = this._propertyBindings, c = 0, u = h.length; c !== u; ++c)
                        h[c].evaluate(o),
                            l[c].accumulate(n, s)
            },
            _updateWeight: function (t) {
                var e = 0;
                if (this.enabled) {
                    e = this.weight;
                    var i = this._weightInterpolant;
                    if (null !== i) {
                        var n = i.evaluate(t)[0];
                        e *= n,
                            t > i.parameterPositions[1] && (this.stopFading(),
                                0 === n && (this.enabled = !1))
                    }
                }
                return this._effectiveWeight = e,
                    e
            },
            _updateTimeScale: function (t) {
                var e = 0;
                if (!this.paused) {
                    e = this.timeScale;
                    var i = this._timeScaleInterpolant;
                    if (null !== i) {
                        e *= i.evaluate(t)[0],
                            t > i.parameterPositions[1] && (this.stopWarping(),
                                0 === e ? this.paused = !0 : this.timeScale = e)
                    }
                }
                return this._effectiveTimeScale = e,
                    e
            },
            _updateTime: function (t) {
                var e = this.time + t;
                if (0 === t)
                    return e;
                var i = this._clip.duration
                    , n = this.loop
                    , r = this._loopCount;
                if (n === ts) {
                    -1 === r && (this._loopCount = 0,
                        this._setEndings(!0, !0, !1));
                    t: {
                        if (e >= i)
                            e = i;
                        else {
                            if (!(e < 0))
                                break t;
                            e = 0
                        }
                        this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                            this._mixer.dispatchEvent({
                                type: "finished",
                                action: this,
                                direction: t < 0 ? -1 : 1
                            })
                    }
                } else {
                    var a = n === is;
                    if (-1 === r && (t >= 0 ? (r = 0,
                        this._setEndings(!0, 0 === this.repetitions, a)) : this._setEndings(0 === this.repetitions, !0, a)),
                        e >= i || e < 0) {
                        var o = Math.floor(e / i);
                        e -= i * o,
                            r += Math.abs(o);
                        var s = this.repetitions - r;
                        if (s < 0)
                            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                                e = t > 0 ? i : 0,
                                this._mixer.dispatchEvent({
                                    type: "finished",
                                    action: this,
                                    direction: t > 0 ? 1 : -1
                                });
                        else {
                            if (0 === s) {
                                var h = t < 0;
                                this._setEndings(h, !h, a)
                            } else
                                this._setEndings(!1, !1, a);
                            this._loopCount = r,
                                this._mixer.dispatchEvent({
                                    type: "loop",
                                    action: this,
                                    loopDelta: o
                                })
                        }
                    }
                    if (a && 1 == (1 & r))
                        return this.time = e,
                            i - e
                }
                return this.time = e,
                    e
            },
            _setEndings: function (t, e, i) {
                var n = this._interpolantSettings;
                i ? (n.endingStart = ss,
                    n.endingEnd = ss) : (n.endingStart = t ? this.zeroSlopeAtStart ? ss : os : hs,
                        n.endingEnd = e ? this.zeroSlopeAtEnd ? ss : os : hs)
            },
            _scheduleFading: function (t, e, i) {
                var n = this._mixer
                    , r = n.time
                    , a = this._weightInterpolant;
                null === a && (a = n._lendControlInterpolant(),
                    this._weightInterpolant = a);
                var o = a.parameterPositions
                    , s = a.sampleValues;
                return o[0] = r,
                    s[0] = e,
                    o[1] = r + t,
                    s[1] = i,
                    this
            }
        }),
        Object.assign(Yn.prototype, n.prototype, {
            _bindAction: function (t, e) {
                var i = t._localRoot || this._root
                    , n = t._clip.tracks
                    , r = n.length
                    , a = t._propertyBindings
                    , o = t._interpolants
                    , s = i.uuid
                    , h = this._bindingsByRootAndName
                    , l = h[s];
                void 0 === l && (l = {},
                    h[s] = l);
                for (var c = 0; c !== r; ++c) {
                    var u = n[c]
                        , p = u.name
                        , d = l[p];
                    if (void 0 !== d)
                        a[c] = d;
                    else {
                        if (void 0 !== (d = a[c])) {
                            null === d._cacheIndex && (++d.referenceCount,
                                this._addInactiveBinding(d, s, p));
                            continue
                        }
                        var f = e && e._propertyBindings[c].binding.parsedPath;
                        d = new Gn(Hn.create(i, p, f), u.ValueTypeName, u.getValueSize()),
                            ++d.referenceCount,
                            this._addInactiveBinding(d, s, p),
                            a[c] = d
                    }
                    o[c].resultBuffer = d.buffer
                }
            },
            _activateAction: function (t) {
                if (!this._isActiveAction(t)) {
                    if (null === t._cacheIndex) {
                        var e = (t._localRoot || this._root).uuid
                            , i = t._clip.uuid
                            , n = this._actionsByClip[i];
                        this._bindAction(t, n && n.knownActions[0]),
                            this._addInactiveAction(t, i, e)
                    }
                    for (var r = t._propertyBindings, a = 0, o = r.length; a !== o; ++a) {
                        var s = r[a];
                        0 == s.useCount++ && (this._lendBinding(s),
                            s.saveOriginalState())
                    }
                    this._lendAction(t)
                }
            },
            _deactivateAction: function (t) {
                if (this._isActiveAction(t)) {
                    for (var e = t._propertyBindings, i = 0, n = e.length; i !== n; ++i) {
                        var r = e[i];
                        0 == --r.useCount && (r.restoreOriginalState(),
                            this._takeBackBinding(r))
                    }
                    this._takeBackAction(t)
                }
            },
            _initMemoryManager: function () {
                this._actions = [],
                    this._nActiveActions = 0,
                    this._actionsByClip = {},
                    this._bindings = [],
                    this._nActiveBindings = 0,
                    this._bindingsByRootAndName = {},
                    this._controlInterpolants = [],
                    this._nActiveControlInterpolants = 0;
                var t = this;
                this.stats = {
                    actions: {
                        get total() {
                            return t._actions.length
                        },
                        get inUse() {
                            return t._nActiveActions
                        }
                    },
                    bindings: {
                        get total() {
                            return t._bindings.length
                        },
                        get inUse() {
                            return t._nActiveBindings
                        }
                    },
                    controlInterpolants: {
                        get total() {
                            return t._controlInterpolants.length
                        },
                        get inUse() {
                            return t._nActiveControlInterpolants
                        }
                    }
                }
            },
            _isActiveAction: function (t) {
                var e = t._cacheIndex;
                return null !== e && e < this._nActiveActions
            },
            _addInactiveAction: function (t, e, i) {
                var n = this._actions
                    , r = this._actionsByClip
                    , a = r[e];
                if (void 0 === a)
                    a = {
                        knownActions: [t],
                        actionByRoot: {}
                    },
                        t._byClipCacheIndex = 0,
                        r[e] = a;
                else {
                    var o = a.knownActions;
                    t._byClipCacheIndex = o.length,
                        o.push(t)
                }
                t._cacheIndex = n.length,
                    n.push(t),
                    a.actionByRoot[i] = t
            },
            _removeInactiveAction: function (t) {
                var e = this._actions
                    , i = e[e.length - 1]
                    , n = t._cacheIndex;
                i._cacheIndex = n,
                    e[n] = i,
                    e.pop(),
                    t._cacheIndex = null;
                var r = t._clip.uuid
                    , a = this._actionsByClip
                    , o = a[r]
                    , s = o.knownActions
                    , h = s[s.length - 1]
                    , l = t._byClipCacheIndex;
                h._byClipCacheIndex = l,
                    s[l] = h,
                    s.pop(),
                    t._byClipCacheIndex = null,
                    delete o.actionByRoot[(t._localRoot || this._root).uuid],
                    0 === s.length && delete a[r],
                    this._removeInactiveBindingsForAction(t)
            },
            _removeInactiveBindingsForAction: function (t) {
                for (var e = t._propertyBindings, i = 0, n = e.length; i !== n; ++i) {
                    var r = e[i];
                    0 == --r.referenceCount && this._removeInactiveBinding(r)
                }
            },
            _lendAction: function (t) {
                var e = this._actions
                    , i = t._cacheIndex
                    , n = this._nActiveActions++
                    , r = e[n];
                t._cacheIndex = n,
                    e[n] = t,
                    r._cacheIndex = i,
                    e[i] = r
            },
            _takeBackAction: function (t) {
                var e = this._actions
                    , i = t._cacheIndex
                    , n = --this._nActiveActions
                    , r = e[n];
                t._cacheIndex = n,
                    e[n] = t,
                    r._cacheIndex = i,
                    e[i] = r
            },
            _addInactiveBinding: function (t, e, i) {
                var n = this._bindingsByRootAndName
                    , r = n[e]
                    , a = this._bindings;
                void 0 === r && (r = {},
                    n[e] = r),
                    r[i] = t,
                    t._cacheIndex = a.length,
                    a.push(t)
            },
            _removeInactiveBinding: function (t) {
                var e = this._bindings
                    , i = t.binding
                    , n = i.rootNode.uuid
                    , r = i.path
                    , a = this._bindingsByRootAndName
                    , o = a[n]
                    , s = e[e.length - 1]
                    , h = t._cacheIndex;
                s._cacheIndex = h,
                    e[h] = s,
                    e.pop(),
                    delete o[r];
                t: {
                    for (var l in o)
                        break t;
                    delete a[n]
                }
            },
            _lendBinding: function (t) {
                var e = this._bindings
                    , i = t._cacheIndex
                    , n = this._nActiveBindings++
                    , r = e[n];
                t._cacheIndex = n,
                    e[n] = t,
                    r._cacheIndex = i,
                    e[i] = r
            },
            _takeBackBinding: function (t) {
                var e = this._bindings
                    , i = t._cacheIndex
                    , n = --this._nActiveBindings
                    , r = e[n];
                t._cacheIndex = n,
                    e[n] = t,
                    r._cacheIndex = i,
                    e[i] = r
            },
            _lendControlInterpolant: function () {
                var t = this._controlInterpolants
                    , e = this._nActiveControlInterpolants++
                    , i = t[e];
                return void 0 === i && (i = new qi(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer),
                    i.__cacheIndex = e,
                    t[e] = i),
                    i
            },
            _takeBackControlInterpolant: function (t) {
                var e = this._controlInterpolants
                    , i = t.__cacheIndex
                    , n = --this._nActiveControlInterpolants
                    , r = e[n];
                t.__cacheIndex = n,
                    e[n] = t,
                    r.__cacheIndex = i,
                    e[i] = r
            },
            _controlInterpolantsResultBuffer: new Float32Array(1),
            clipAction: function (t, e) {
                var i = e || this._root
                    , n = i.uuid
                    , r = "string" == typeof t ? on.findByName(i, t) : t
                    , a = null !== r ? r.uuid : t
                    , o = this._actionsByClip[a]
                    , s = null;
                if (void 0 !== o) {
                    var h = o.actionByRoot[n];
                    if (void 0 !== h)
                        return h;
                    s = o.knownActions[0],
                        null === r && (r = s._clip)
                }
                if (null === r)
                    return null;
                var l = new Xn(this, r, e);
                return this._bindAction(l, s),
                    this._addInactiveAction(l, a, n),
                    l
            },
            existingAction: function (t, e) {
                var i = e || this._root
                    , n = i.uuid
                    , r = "string" == typeof t ? on.findByName(i, t) : t
                    , a = r ? r.uuid : t
                    , o = this._actionsByClip[a];
                return void 0 !== o ? o.actionByRoot[n] || null : null
            },
            stopAllAction: function () {
                var t = this._actions
                    , e = this._nActiveActions
                    , i = this._bindings
                    , n = this._nActiveBindings;
                this._nActiveActions = 0,
                    this._nActiveBindings = 0;
                for (var r = 0; r !== e; ++r)
                    t[r].reset();
                for (var r = 0; r !== n; ++r)
                    i[r].useCount = 0;
                return this
            },
            update: function (t) {
                t *= this.timeScale;
                for (var e = this._actions, i = this._nActiveActions, n = this.time += t, r = Math.sign(t), a = this._accuIndex ^= 1, o = 0; o !== i; ++o) {
                    e[o]._update(n, t, r, a)
                }
                for (var s = this._bindings, h = this._nActiveBindings, o = 0; o !== h; ++o)
                    s[o].apply(a);
                return this
            },
            getRoot: function () {
                return this._root
            },
            uncacheClip: function (t) {
                var e = this._actions
                    , i = t.uuid
                    , n = this._actionsByClip
                    , r = n[i];
                if (void 0 !== r) {
                    for (var a = r.knownActions, o = 0, s = a.length; o !== s; ++o) {
                        var h = a[o];
                        this._deactivateAction(h);
                        var l = h._cacheIndex
                            , c = e[e.length - 1];
                        h._cacheIndex = null,
                            h._byClipCacheIndex = null,
                            c._cacheIndex = l,
                            e[l] = c,
                            e.pop(),
                            this._removeInactiveBindingsForAction(h)
                    }
                    delete n[i]
                }
            },
            uncacheRoot: function (t) {
                var e = t.uuid
                    , i = this._actionsByClip;
                for (var n in i) {
                    var r = i[n].actionByRoot
                        , a = r[e];
                    void 0 !== a && (this._deactivateAction(a),
                        this._removeInactiveAction(a))
                }
                var o = this._bindingsByRootAndName
                    , s = o[e];
                if (void 0 !== s)
                    for (var h in s) {
                        var l = s[h];
                        l.restoreOriginalState(),
                            this._removeInactiveBinding(l)
                    }
            },
            uncacheAction: function (t, e) {
                var i = this.existingAction(t, e);
                null !== i && (this._deactivateAction(i),
                    this._removeInactiveAction(i))
            }
        }),
        qn.prototype.clone = function () {
            return new qn(void 0 === this.value.clone ? this.value : this.value.clone())
        }
        ,
        Zn.prototype = Object.assign(Object.create(Lt.prototype), {
            constructor: Zn,
            isInstancedBufferGeometry: !0,
            addGroup: function (t, e, i) {
                this.groups.push({
                    start: t,
                    count: e,
                    materialIndex: i
                })
            },
            copy: function (t) {
                var e = t.index;
                null !== e && this.setIndex(e.clone());
                var i = t.attributes;
                for (var n in i) {
                    var r = i[n];
                    this.addAttribute(n, r.clone())
                }
                for (var a = t.groups, o = 0, s = a.length; o < s; o++) {
                    var h = a[o];
                    this.addGroup(h.start, h.count, h.materialIndex)
                }
                return this
            }
        }),
        Object.defineProperties(Kn.prototype, {
            count: {
                get: function () {
                    return this.data.count
                }
            },
            array: {
                get: function () {
                    return this.data.array
                }
            }
        }),
        Object.assign(Kn.prototype, {
            isInterleavedBufferAttribute: !0,
            setX: function (t, e) {
                return this.data.array[t * this.data.stride + this.offset] = e,
                    this
            },
            setY: function (t, e) {
                return this.data.array[t * this.data.stride + this.offset + 1] = e,
                    this
            },
            setZ: function (t, e) {
                return this.data.array[t * this.data.stride + this.offset + 2] = e,
                    this
            },
            setW: function (t, e) {
                return this.data.array[t * this.data.stride + this.offset + 3] = e,
                    this
            },
            getX: function (t) {
                return this.data.array[t * this.data.stride + this.offset]
            },
            getY: function (t) {
                return this.data.array[t * this.data.stride + this.offset + 1]
            },
            getZ: function (t) {
                return this.data.array[t * this.data.stride + this.offset + 2]
            },
            getW: function (t) {
                return this.data.array[t * this.data.stride + this.offset + 3]
            },
            setXY: function (t, e, i) {
                return t = t * this.data.stride + this.offset,
                    this.data.array[t + 0] = e,
                    this.data.array[t + 1] = i,
                    this
            },
            setXYZ: function (t, e, i, n) {
                return t = t * this.data.stride + this.offset,
                    this.data.array[t + 0] = e,
                    this.data.array[t + 1] = i,
                    this.data.array[t + 2] = n,
                    this
            },
            setXYZW: function (t, e, i, n, r) {
                return t = t * this.data.stride + this.offset,
                    this.data.array[t + 0] = e,
                    this.data.array[t + 1] = i,
                    this.data.array[t + 2] = n,
                    this.data.array[t + 3] = r,
                    this
            }
        }),
        Object.defineProperty(Qn.prototype, "needsUpdate", {
            set: function (t) {
                !0 === t && this.version++
            }
        }),
        Object.assign(Qn.prototype, {
            isInterleavedBuffer: !0,
            setArray: function (t) {
                if (Array.isArray(t))
                    throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                this.count = void 0 !== t ? t.length / this.stride : 0,
                    this.array = t
            },
            setDynamic: function (t) {
                return this.dynamic = t,
                    this
            },
            copy: function (t) {
                return this.array = new t.array.constructor(t.array),
                    this.count = t.count,
                    this.stride = t.stride,
                    this.dynamic = t.dynamic,
                    this
            },
            copyAt: function (t, e, i) {
                t *= this.stride,
                    i *= e.stride;
                for (var n = 0, r = this.stride; n < r; n++)
                    this.array[t + n] = e.array[i + n];
                return this
            },
            set: function (t, e) {
                return void 0 === e && (e = 0),
                    this.array.set(t, e),
                    this
            },
            clone: function () {
                return (new this.constructor).copy(this)
            },
            onUpload: function (t) {
                return this.onUploadCallback = t,
                    this
            }
        }),
        Jn.prototype = Object.assign(Object.create(Qn.prototype), {
            constructor: Jn,
            isInstancedInterleavedBuffer: !0,
            copy: function (t) {
                return Qn.prototype.copy.call(this, t),
                    this.meshPerAttribute = t.meshPerAttribute,
                    this
            }
        }),
        $n.prototype = Object.assign(Object.create(mt.prototype), {
            constructor: $n,
            isInstancedBufferAttribute: !0,
            copy: function (t) {
                return mt.prototype.copy.call(this, t),
                    this.meshPerAttribute = t.meshPerAttribute,
                    this
            }
        }),
        Object.assign(tr.prototype, {
            linePrecision: 1,
            set: function (t, e) {
                this.ray.set(t, e)
            },
            setFromCamera: function (t, e) {
                e && e.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(e.matrixWorld),
                    this.ray.direction.set(t.x, t.y, .5).unproject(e).sub(this.ray.origin).normalize()) : e && e.isOrthographicCamera && (this.ray.origin.set(t.x, t.y, (e.near + e.far) / (e.near - e.far)).unproject(e),
                        this.ray.direction.set(0, 0, -1).transformDirection(e.matrixWorld))
            },
            intersectObject: function (t, e) {
                var i = [];
                return ir(t, this, i, e),
                    i.sort(er),
                    i
            },
            intersectObjects: function (t, e) {
                var i = [];
                if (!1 === Array.isArray(t))
                    return i;
                for (var n = 0, r = t.length; n < r; n++)
                    ir(t[n], this, i, e);
                return i.sort(er),
                    i
            }
        }),
        Object.assign(nr.prototype, {
            start: function () {
                this.startTime = ("undefined" == typeof performance ? Date : performance).now(),
                    this.oldTime = this.startTime,
                    this.elapsedTime = 0,
                    this.running = !0
            },
            stop: function () {
                this.getElapsedTime(),
                    this.running = !1
            },
            getElapsedTime: function () {
                return this.getDelta(),
                    this.elapsedTime
            },
            getDelta: function () {
                var t = 0;
                if (this.autoStart && !this.running)
                    return this.start(),
                        0;
                if (this.running) {
                    var e = ("undefined" == typeof performance ? Date : performance).now();
                    t = (e - this.oldTime) / 1e3,
                        this.oldTime = e,
                        this.elapsedTime += t
                }
                return t
            }
        }),
        Object.assign(rr.prototype, {
            set: function (t, e, i) {
                return this.radius = t,
                    this.phi = e,
                    this.theta = i,
                    this
            },
            clone: function () {
                return (new this.constructor).copy(this)
            },
            copy: function (t) {
                return this.radius = t.radius,
                    this.phi = t.phi,
                    this.theta = t.theta,
                    this
            },
            makeSafe: function () {
                return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)),
                    this
            },
            setFromVector3: function (t) {
                return this.radius = t.length(),
                    0 === this.radius ? (this.theta = 0,
                        this.phi = 0) : (this.theta = Math.atan2(t.x, t.z),
                            this.phi = Math.acos(bs.clamp(t.y / this.radius, -1, 1))),
                    this
            }
        }),
        Object.assign(ar.prototype, {
            set: function (t, e, i) {
                return this.radius = t,
                    this.theta = e,
                    this.y = i,
                    this
            },
            clone: function () {
                return (new this.constructor).copy(this)
            },
            copy: function (t) {
                return this.radius = t.radius,
                    this.theta = t.theta,
                    this.y = t.y,
                    this
            },
            setFromVector3: function (t) {
                return this.radius = Math.sqrt(t.x * t.x + t.z * t.z),
                    this.theta = Math.atan2(t.x, t.z),
                    this.y = t.y,
                    this
            }
        }),
        or.prototype = Object.create(Ct.prototype),
        or.prototype.constructor = or,
        or.prototype.createAnimation = function (t, e, i, n) {
            var r = {
                start: e,
                end: i,
                length: i - e + 1,
                fps: n,
                duration: (i - e) / n,
                lastFrame: 0,
                currentFrame: 0,
                active: !1,
                time: 0,
                direction: 1,
                weight: 1,
                directionBackwards: !1,
                mirroredLoop: !1
            };
            this.animationsMap[t] = r,
                this.animationsList.push(r)
        }
        ,
        or.prototype.autoCreateAnimations = function (t) {
            for (var e, i = /([a-z]+)_?(\d+)/i, n = {}, r = this.geometry, a = 0, o = r.morphTargets.length; a < o; a++) {
                var s = r.morphTargets[a]
                    , h = s.name.match(i);
                if (h && h.length > 1) {
                    var l = h[1];
                    n[l] || (n[l] = {
                        start: 1 / 0,
                        end: -1 / 0
                    });
                    var c = n[l];
                    a < c.start && (c.start = a),
                        a > c.end && (c.end = a),
                        e || (e = l)
                }
            }
            for (var l in n) {
                var c = n[l];
                this.createAnimation(l, c.start, c.end, t)
            }
            this.firstAnimation = e
        }
        ,
        or.prototype.setAnimationDirectionForward = function (t) {
            var e = this.animationsMap[t];
            e && (e.direction = 1,
                e.directionBackwards = !1)
        }
        ,
        or.prototype.setAnimationDirectionBackward = function (t) {
            var e = this.animationsMap[t];
            e && (e.direction = -1,
                e.directionBackwards = !0)
        }
        ,
        or.prototype.setAnimationFPS = function (t, e) {
            var i = this.animationsMap[t];
            i && (i.fps = e,
                i.duration = (i.end - i.start) / i.fps)
        }
        ,
        or.prototype.setAnimationDuration = function (t, e) {
            var i = this.animationsMap[t];
            i && (i.duration = e,
                i.fps = (i.end - i.start) / i.duration)
        }
        ,
        or.prototype.setAnimationWeight = function (t, e) {
            var i = this.animationsMap[t];
            i && (i.weight = e)
        }
        ,
        or.prototype.setAnimationTime = function (t, e) {
            var i = this.animationsMap[t];
            i && (i.time = e)
        }
        ,
        or.prototype.getAnimationTime = function (t) {
            var e = 0
                , i = this.animationsMap[t];
            return i && (e = i.time),
                e
        }
        ,
        or.prototype.getAnimationDuration = function (t) {
            var e = -1
                , i = this.animationsMap[t];
            return i && (e = i.duration),
                e
        }
        ,
        or.prototype.playAnimation = function (t) {
            var e = this.animationsMap[t];
            e && (e.time = 0,
                e.active = !0)
        }
        ,
        or.prototype.stopAnimation = function (t) {
            var e = this.animationsMap[t];
            e && (e.active = !1)
        }
        ,
        or.prototype.update = function (t) {
            for (var e = 0, i = this.animationsList.length; e < i; e++) {
                var n = this.animationsList[e];
                if (n.active) {
                    var r = n.duration / n.length;
                    n.time += n.direction * t,
                        n.mirroredLoop ? (n.time > n.duration || n.time < 0) && (n.direction *= -1,
                            n.time > n.duration && (n.time = n.duration,
                                n.directionBackwards = !0),
                            n.time < 0 && (n.time = 0,
                                n.directionBackwards = !1)) : (n.time = n.time % n.duration,
                                    n.time < 0 && (n.time += n.duration));
                    var a = n.start + bs.clamp(Math.floor(n.time / r), 0, n.length - 1)
                        , o = n.weight;
                    a !== n.currentFrame && (this.morphTargetInfluences[n.lastFrame] = 0,
                        this.morphTargetInfluences[n.currentFrame] = 1 * o,
                        this.morphTargetInfluences[a] = 0,
                        n.lastFrame = n.currentFrame,
                        n.currentFrame = a);
                    var s = n.time % r / r;
                    n.directionBackwards && (s = 1 - s),
                        n.currentFrame !== n.lastFrame ? (this.morphTargetInfluences[n.currentFrame] = s * o,
                            this.morphTargetInfluences[n.lastFrame] = (1 - s) * o) : this.morphTargetInfluences[n.currentFrame] = o
                }
            }
        }
        ,
        sr.prototype = Object.create(ct.prototype),
        sr.prototype.constructor = sr,
        sr.prototype.isImmediateRenderObject = !0,
        hr.prototype = Object.create(Ae.prototype),
        hr.prototype.constructor = hr,
        hr.prototype.update = function () {
            var t = new c
                , e = new c
                , i = new nt;
            return function () {
                var n = ["a", "b", "c"];
                this.object.updateMatrixWorld(!0),
                    i.getNormalMatrix(this.object.matrixWorld);
                var r = this.object.matrixWorld
                    , a = this.geometry.attributes.position
                    , o = this.object.geometry;
                if (o && o.isGeometry)
                    for (var s = o.vertices, h = o.faces, l = 0, c = 0, u = h.length; c < u; c++)
                        for (var p = h[c], d = 0, f = p.vertexNormals.length; d < f; d++) {
                            var m = s[p[n[d]]]
                                , g = p.vertexNormals[d];
                            t.copy(m).applyMatrix4(r),
                                e.copy(g).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),
                                a.setXYZ(l, t.x, t.y, t.z),
                                l += 1,
                                a.setXYZ(l, e.x, e.y, e.z),
                                l += 1
                        }
                else if (o && o.isBufferGeometry)
                    for (var v = o.attributes.position, y = o.attributes.normal, l = 0, d = 0, f = v.count; d < f; d++)
                        t.set(v.getX(d), v.getY(d), v.getZ(d)).applyMatrix4(r),
                            e.set(y.getX(d), y.getY(d), y.getZ(d)),
                            e.applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),
                            a.setXYZ(l, t.x, t.y, t.z),
                            l += 1,
                            a.setXYZ(l, e.x, e.y, e.z),
                            l += 1;
                a.needsUpdate = !0
            }
        }(),
        lr.prototype = Object.create(ct.prototype),
        lr.prototype.constructor = lr,
        lr.prototype.dispose = function () {
            this.cone.geometry.dispose(),
                this.cone.material.dispose()
        }
        ,
        lr.prototype.update = function () {
            var t = new c
                , e = new c;
            return function () {
                var i = this.light.distance ? this.light.distance : 1e3
                    , n = i * Math.tan(this.light.angle);
                this.cone.scale.set(n, n, i),
                    t.setFromMatrixPosition(this.light.matrixWorld),
                    e.setFromMatrixPosition(this.light.target.matrixWorld),
                    this.cone.lookAt(e.sub(t)),
                    this.cone.material.color.copy(this.light.color)
            }
        }(),
        cr.prototype = Object.create(Ae.prototype),
        cr.prototype.constructor = cr,
        cr.prototype.getBoneList = function (t) {
            var e = [];
            t && t.isBone && e.push(t);
            for (var i = 0; i < t.children.length; i++)
                e.push.apply(e, this.getBoneList(t.children[i]));
            return e
        }
        ,
        cr.prototype.update = function () {
            var t = new c
                , e = new u
                , i = new u;
            return function () {
                var n = this.geometry
                    , r = n.getAttribute("position");
                i.getInverse(this.root.matrixWorld);
                for (var a = 0, o = 0; a < this.bones.length; a++) {
                    var s = this.bones[a];
                    s.parent && s.parent.isBone && (e.multiplyMatrices(i, s.matrixWorld),
                        t.setFromMatrixPosition(e),
                        r.setXYZ(o, t.x, t.y, t.z),
                        e.multiplyMatrices(i, s.parent.matrixWorld),
                        t.setFromMatrixPosition(e),
                        r.setXYZ(o + 1, t.x, t.y, t.z),
                        o += 2)
                }
                n.getAttribute("position").needsUpdate = !0
            }
        }(),
        ur.prototype = Object.create(Ct.prototype),
        ur.prototype.constructor = ur,
        ur.prototype.dispose = function () {
            this.geometry.dispose(),
                this.material.dispose()
        }
        ,
        ur.prototype.update = function () {
            this.material.color.copy(this.light.color)
        }
        ,
        pr.prototype = Object.create(ct.prototype),
        pr.prototype.constructor = pr,
        pr.prototype.dispose = function () {
            this.children[0].geometry.dispose(),
                this.children[0].material.dispose()
        }
        ,
        pr.prototype.update = function () {
            var t = this.children[0];
            t.material.color.copy(this.light.color);
            var e = .5 * this.light.width
                , i = .5 * this.light.height
                , n = t.geometry.attributes.position
                , r = n.array;
            r[0] = e,
                r[1] = -i,
                r[2] = 0,
                r[3] = e,
                r[4] = i,
                r[5] = 0,
                r[6] = -e,
                r[7] = i,
                r[8] = 0,
                r[9] = -e,
                r[10] = -i,
                r[11] = 0,
                r[12] = e,
                r[13] = -i,
                r[14] = 0,
                n.needsUpdate = !0
        }
        ,
        dr.prototype = Object.create(ct.prototype),
        dr.prototype.constructor = dr,
        dr.prototype.dispose = function () {
            this.children[0].geometry.dispose(),
                this.children[0].material.dispose()
        }
        ,
        dr.prototype.update = function () {
            var t = new c
                , e = new q
                , i = new q;
            return function () {
                var n = this.children[0]
                    , r = n.geometry.getAttribute("color");
                e.copy(this.light.color),
                    i.copy(this.light.groundColor);
                for (var a = 0, o = r.count; a < o; a++) {
                    var s = a < o / 2 ? e : i;
                    r.setXYZ(a, s.r, s.g, s.b)
                }
                n.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()),
                    r.needsUpdate = !0
            }
        }(),
        fr.prototype = Object.create(Ae.prototype),
        fr.prototype.constructor = fr,
        mr.prototype = Object.create(Ae.prototype),
        mr.prototype.constructor = mr,
        gr.prototype = Object.create(Ae.prototype),
        gr.prototype.constructor = gr,
        gr.prototype.update = function () {
            var t = new c
                , e = new c
                , i = new nt;
            return function () {
                this.object.updateMatrixWorld(!0),
                    i.getNormalMatrix(this.object.matrixWorld);
                for (var n = this.object.matrixWorld, r = this.geometry.attributes.position, a = this.object.geometry, o = a.vertices, s = a.faces, h = 0, l = 0, c = s.length; l < c; l++) {
                    var u = s[l]
                        , p = u.normal;
                    t.copy(o[u.a]).add(o[u.b]).add(o[u.c]).divideScalar(3).applyMatrix4(n),
                        e.copy(p).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),
                        r.setXYZ(h, t.x, t.y, t.z),
                        h += 1,
                        r.setXYZ(h, e.x, e.y, e.z),
                        h += 1
                }
                r.needsUpdate = !0
            }
        }(),
        vr.prototype = Object.create(ct.prototype),
        vr.prototype.constructor = vr,
        vr.prototype.dispose = function () {
            var t = this.children[0]
                , e = this.children[1];
            t.geometry.dispose(),
                t.material.dispose(),
                e.geometry.dispose(),
                e.material.dispose()
        }
        ,
        vr.prototype.update = function () {
            var t = new c
                , e = new c
                , i = new c;
            return function () {
                t.setFromMatrixPosition(this.light.matrixWorld),
                    e.setFromMatrixPosition(this.light.target.matrixWorld),
                    i.subVectors(e, t);
                var n = this.children[0]
                    , r = this.children[1];
                n.lookAt(i),
                    n.material.color.copy(this.light.color),
                    r.lookAt(i),
                    r.scale.z = i.length()
            }
        }(),
        yr.prototype = Object.create(Ae.prototype),
        yr.prototype.constructor = yr,
        yr.prototype.update = function () {
            function t(t, a, o, s) {
                n.set(a, o, s).unproject(r);
                var h = i[t];
                if (void 0 !== h)
                    for (var l = e.getAttribute("position"), c = 0, u = h.length; c < u; c++)
                        l.setXYZ(h[c], n.x, n.y, n.z)
            }
            var e, i, n = new c, r = new zt;
            return function () {
                e = this.geometry,
                    i = this.pointMap;
                r.projectionMatrix.copy(this.camera.projectionMatrix),
                    t("c", 0, 0, -1),
                    t("t", 0, 0, 1),
                    t("n1", -1, -1, -1),
                    t("n2", 1, -1, -1),
                    t("n3", -1, 1, -1),
                    t("n4", 1, 1, -1),
                    t("f1", -1, -1, 1),
                    t("f2", 1, -1, 1),
                    t("f3", -1, 1, 1),
                    t("f4", 1, 1, 1),
                    t("u1", .7, 1.1, -1),
                    t("u2", -.7, 1.1, -1),
                    t("u3", 0, 2, -1),
                    t("cf1", -1, 0, 1),
                    t("cf2", 1, 0, 1),
                    t("cf3", 0, -1, 1),
                    t("cf4", 0, 1, 1),
                    t("cn1", -1, 0, -1),
                    t("cn2", 1, 0, -1),
                    t("cn3", 0, -1, -1),
                    t("cn4", 0, 1, -1),
                    e.getAttribute("position").needsUpdate = !0
            }
        }(),
        _r.prototype = Object.create(Ae.prototype),
        _r.prototype.constructor = _r,
        _r.prototype.update = function () {
            var t = new et;
            return function (e) {
                if (void 0 !== this.object && t.setFromObject(this.object),
                    !t.isEmpty()) {
                    var i = t.min
                        , n = t.max
                        , r = this.geometry.attributes.position
                        , a = r.array;
                    a[0] = n.x,
                        a[1] = n.y,
                        a[2] = n.z,
                        a[3] = i.x,
                        a[4] = n.y,
                        a[5] = n.z,
                        a[6] = i.x,
                        a[7] = i.y,
                        a[8] = n.z,
                        a[9] = n.x,
                        a[10] = i.y,
                        a[11] = n.z,
                        a[12] = n.x,
                        a[13] = n.y,
                        a[14] = i.z,
                        a[15] = i.x,
                        a[16] = n.y,
                        a[17] = i.z,
                        a[18] = i.x,
                        a[19] = i.y,
                        a[20] = i.z,
                        a[21] = n.x,
                        a[22] = i.y,
                        a[23] = i.z,
                        r.needsUpdate = !0,
                        this.geometry.computeBoundingSphere()
                }
            }
        }(),
        _r.prototype.setFromObject = function (t) {
            return this.object = t,
                this.update(),
                this
        }
        ;
    var th, eh;
    xr.prototype = Object.create(ct.prototype),
        xr.prototype.constructor = xr,
        xr.prototype.setDirection = function () {
            var t, e = new c;
            return function (i) {
                i.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : i.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (e.set(i.z, 0, -i.x).normalize(),
                    t = Math.acos(i.y),
                    this.quaternion.setFromAxisAngle(e, t))
            }
        }(),
        xr.prototype.setLength = function (t, e, i) {
            void 0 === e && (e = .2 * t),
                void 0 === i && (i = .2 * e),
                this.line.scale.set(1, Math.max(0, t - e), 1),
                this.line.updateMatrix(),
                this.cone.scale.set(i, e, i),
                this.cone.position.y = t,
                this.cone.updateMatrix()
        }
        ,
        xr.prototype.setColor = function (t) {
            this.line.material.color.copy(t),
                this.cone.material.color.copy(t)
        }
        ,
        wr.prototype = Object.create(Ae.prototype),
        wr.prototype.constructor = wr;
    var ih = new c
        , nh = new br
        , rh = new br
        , ah = new br;
    Mr.prototype = Object.create(bn.prototype),
        Mr.prototype.constructor = Mr,
        Mr.prototype.getPoint = function (t) {
            var e = this.points
                , i = e.length
                , n = (i - (this.closed ? 0 : 1)) * t
                , r = Math.floor(n)
                , a = n - r;
            this.closed ? r += r > 0 ? 0 : (Math.floor(Math.abs(r) / e.length) + 1) * e.length : 0 === a && r === i - 1 && (r = i - 2,
                a = 1);
            var o, s, h, l;
            if (this.closed || r > 0 ? o = e[(r - 1) % i] : (ih.subVectors(e[0], e[1]).add(e[0]),
                o = ih),
                s = e[r % i],
                h = e[(r + 1) % i],
                this.closed || r + 2 < i ? l = e[(r + 2) % i] : (ih.subVectors(e[i - 1], e[i - 2]).add(e[i - 1]),
                    l = ih),
                void 0 === this.type || "centripetal" === this.type || "chordal" === this.type) {
                var u = "chordal" === this.type ? .5 : .25
                    , p = Math.pow(o.distanceToSquared(s), u)
                    , d = Math.pow(s.distanceToSquared(h), u)
                    , f = Math.pow(h.distanceToSquared(l), u);
                d < 1e-4 && (d = 1),
                    p < 1e-4 && (p = d),
                    f < 1e-4 && (f = d),
                    nh.initNonuniformCatmullRom(o.x, s.x, h.x, l.x, p, d, f),
                    rh.initNonuniformCatmullRom(o.y, s.y, h.y, l.y, p, d, f),
                    ah.initNonuniformCatmullRom(o.z, s.z, h.z, l.z, p, d, f)
            } else if ("catmullrom" === this.type) {
                var m = void 0 !== this.tension ? this.tension : .5;
                nh.initCatmullRom(o.x, s.x, h.x, l.x, m),
                    rh.initCatmullRom(o.y, s.y, h.y, l.y, m),
                    ah.initCatmullRom(o.z, s.z, h.z, l.z, m)
            }
            return new c(nh.calc(a), rh.calc(a), ah.calc(a))
        }
        ,
        Tr.prototype = Object.create(bn.prototype),
        Tr.prototype.constructor = Tr,
        Tr.prototype.getPoint = function (t) {
            var e = this.v0
                , i = this.v1
                , n = this.v2
                , r = this.v3;
            return new c(wn(t, e.x, i.x, n.x, r.x), wn(t, e.y, i.y, n.y, r.y), wn(t, e.z, i.z, n.z, r.z))
        }
        ,
        Pr.prototype = Object.create(bn.prototype),
        Pr.prototype.constructor = Pr,
        Pr.prototype.getPoint = function (t) {
            var e = this.v0
                , i = this.v1
                , n = this.v2;
            return new c(gn(t, e.x, i.x, n.x), gn(t, e.y, i.y, n.y), gn(t, e.z, i.z, n.z))
        }
        ,
        Sr.prototype = Object.create(bn.prototype),
        Sr.prototype.constructor = Sr,
        Sr.prototype.getPoint = function (t) {
            if (1 === t)
                return this.v2.clone();
            var e = new c;
            return e.subVectors(this.v2, this.v1),
                e.multiplyScalar(t),
                e.add(this.v1),
                e
        }
        ,
        Ar.prototype = Object.create(Pn.prototype),
        Ar.prototype.constructor = Ar;
    var oh = {
        createMultiMaterialObject: function (t, e) {
            for (var i = new Oe, n = 0, r = e.length; n < r; n++)
                i.add(new Ct(t, e[n]));
            return i
        },
        detach: function (t, e, i) {
            t.applyMatrix(e.matrixWorld),
                e.remove(t),
                i.add(t)
        },
        attach: function (t, e, i) {
            var n = new u;
            n.getInverse(i.matrixWorld),
                t.applyMatrix(n),
                e.remove(t),
                i.add(t)
        }
    }
        , sh = 0
        , hh = 1;
    bn.create = function (t, e) {
        return t.prototype = Object.create(bn.prototype),
            t.prototype.constructor = t,
            t.prototype.getPoint = e,
            t
    }
        ,
        qr.prototype = Object.create(Mr.prototype),
        Zr.prototype = Object.create(Mr.prototype),
        Kr.prototype = Object.create(Mr.prototype),
        Object.assign(Kr.prototype, {
            initFromArray: function (t) { },
            getControlPointsArray: function (t) { },
            reparametrizeByArcLength: function (t) { }
        }),
        fr.prototype.setColors = function () { }
        ,
        Object.assign(Z.prototype, {
            center: function (t) {
                return this.getCenter(t)
            },
            empty: function () {
                return this.isEmpty()
            },
            isIntersectionBox: function (t) {
                return this.intersectsBox(t)
            },
            size: function (t) {
                return this.getSize(t)
            }
        }),
        Object.assign(et.prototype, {
            center: function (t) {
                return this.getCenter(t)
            },
            empty: function () {
                return this.isEmpty()
            },
            isIntersectionBox: function (t) {
                return this.intersectsBox(t)
            },
            isIntersectionSphere: function (t) {
                return this.intersectsSphere(t)
            },
            size: function (t) {
                return this.getSize(t)
            }
        }),
        ut.prototype.center = function (t) {
            return this.getCenter(t)
        }
        ,
        bs.random16 = function () {
            return Math.random()
        }
        ,
        Object.assign(nt.prototype, {
            flattenToArrayOffset: function (t, e) {
                return this.toArray(t, e)
            },
            multiplyVector3: function (t) {
                return t.applyMatrix3(this)
            },
            multiplyVector3Array: function (t) {
                return this.applyToVector3Array(t)
            },
            applyToBuffer: function (t, e, i) {
                return this.applyToBufferAttribute(t)
            },
            applyToVector3Array: function (t, e, i) { }
        }),
        Object.assign(u.prototype, {
            extractPosition: function (t) {
                return this.copyPosition(t)
            },
            flattenToArrayOffset: function (t, e) {
                return this.toArray(t, e)
            },
            getPosition: function () {
                var t;
                return function () {
                    return void 0 === t && (t = new c),
                        t.setFromMatrixColumn(this, 3)
                }
            }(),
            setRotationFromQuaternion: function (t) {
                return this.makeRotationFromQuaternion(t)
            },
            multiplyToArray: function () { },
            multiplyVector3: function (t) {
                return t.applyMatrix4(this)
            },
            multiplyVector4: function (t) {
                return t.applyMatrix4(this)
            },
            multiplyVector3Array: function (t) {
                return this.applyToVector3Array(t)
            },
            rotateAxis: function (t) {
                t.transformDirection(this)
            },
            crossVector: function (t) {
                return t.applyMatrix4(this)
            },
            translate: function () { },
            rotateX: function () { },
            rotateY: function () { },
            rotateZ: function () { },
            rotateByAxis: function () { },
            applyToBuffer: function (t, e, i) {
                return this.applyToBufferAttribute(t)
            },
            applyToVector3Array: function (t, e, i) { },
            makeFrustum: function (t, e, i, n, r, a) {
                return this.makePerspective(t, e, n, i, r, a)
            }
        }),
        rt.prototype.isIntersectionLine = function (t) {
            return this.intersectsLine(t)
        }
        ,
        l.prototype.multiplyVector3 = function (t) {
            return t.applyQuaternion(this)
        }
        ,
        Object.assign(st.prototype, {
            isIntersectionBox: function (t) {
                return this.intersectsBox(t)
            },
            isIntersectionPlane: function (t) {
                return this.intersectsPlane(t)
            },
            isIntersectionSphere: function (t) {
                return this.intersectsSphere(t)
            }
        }),
        Object.assign(Cn.prototype, {
            extrude: function (t) {
                return new ei(this, t)
            },
            makeGeometry: function (t) {
                return new ui(this, t)
            }
        }),
        Object.assign(r.prototype, {
            fromAttribute: function (t, e, i) {
                return this.fromBufferAttribute(t, e, i)
            }
        }),
        Object.assign(c.prototype, {
            setEulerFromRotationMatrix: function () { },
            setEulerFromQuaternion: function () { },
            getPositionFromMatrix: function (t) {
                return this.setFromMatrixPosition(t)
            },
            getScaleFromMatrix: function (t) {
                return this.setFromMatrixScale(t)
            },
            getColumnFromMatrix: function (t, e) {
                return this.setFromMatrixColumn(e, t)
            },
            applyProjection: function (t) {
                return this.applyMatrix4(t)
            },
            fromAttribute: function (t, e, i) {
                return this.fromBufferAttribute(t, e, i)
            }
        }),
        Object.assign(o.prototype, {
            fromAttribute: function (t, e, i) {
                return this.fromBufferAttribute(t, e, i)
            }
        }),
        Et.prototype.computeTangents = function () { }
        ,
        Object.assign(ct.prototype, {
            getChildByName: function (t) {
                return this.getObjectByName(t)
            },
            renderDepth: function () { },
            translate: function (t, e) {
                return this.translateOnAxis(e, t)
            }
        }),
        Object.defineProperties(ct.prototype, {
            eulerOrder: {
                get: function () {
                    return this.rotation.order
                },
                set: function (t) {
                    this.rotation.order = t
                }
            },
            useQuaternion: {
                get: function () { },
                set: function () { }
            }
        }),
        Object.defineProperties(we.prototype, {
            objects: {
                get: function () {
                    return this.levels
                }
            }
        }),
        Object.defineProperty(be.prototype, "useVertexTexture", {
            get: function () { },
            set: function () { }
        }),
        Object.defineProperty(bn.prototype, "__arcLengthDivisions", {
            get: function () {
                return this.arcLengthDivisions
            },
            set: function (t) {
                this.arcLengthDivisions = t
            }
        }),
        Ft.prototype.setLens = function (t, e) {
            void 0 !== e && (this.filmGauge = e),
                this.setFocalLength(t)
        }
        ,
        Object.defineProperties(Fi.prototype, {
            onlyShadow: {
                set: function () { }
            },
            shadowCameraFov: {
                set: function (t) {
                    this.shadow.camera.fov = t
                }
            },
            shadowCameraLeft: {
                set: function (t) {
                    this.shadow.camera.left = t
                }
            },
            shadowCameraRight: {
                set: function (t) {
                    this.shadow.camera.right = t
                }
            },
            shadowCameraTop: {
                set: function (t) {
                    this.shadow.camera.top = t
                }
            },
            shadowCameraBottom: {
                set: function (t) {
                    this.shadow.camera.bottom = t
                }
            },
            shadowCameraNear: {
                set: function (t) {
                    this.shadow.camera.near = t
                }
            },
            shadowCameraFar: {
                set: function (t) {
                    this.shadow.camera.far = t
                }
            },
            shadowCameraVisible: {
                set: function () { }
            },
            shadowBias: {
                set: function (t) {
                    this.shadow.bias = t
                }
            },
            shadowDarkness: {
                set: function () { }
            },
            shadowMapWidth: {
                set: function (t) {
                    this.shadow.mapSize.width = t
                }
            },
            shadowMapHeight: {
                set: function (t) {
                    this.shadow.mapSize.height = t
                }
            }
        }),
        Object.defineProperties(mt.prototype, {
            length: {
                get: function () {
                    return this.array.length
                }
            }
        }),
        Object.assign(Lt.prototype, {
            addIndex: function (t) {
                this.setIndex(t)
            },
            addDrawCall: function (t, e, i) {
                this.addGroup(t, e)
            },
            clearDrawCalls: function () {
                this.clearGroups()
            },
            computeTangents: function () { },
            computeOffsets: function () { }
        }),
        Object.defineProperties(Lt.prototype, {
            drawcalls: {
                get: function () {
                    return this.groups
                }
            },
            offsets: {
                get: function () {
                    return this.groups
                }
            }
        }),
        Object.defineProperties(qn.prototype, {
            dynamic: {
                set: function () { }
            },
            onUpdate: {
                value: function () {
                    return this
                }
            }
        }),
        Object.defineProperties(J.prototype, {
            wrapAround: {
                get: function () { },
                set: function () { }
            },
            wrapRGB: {
                get: function () {
                    return new q
                }
            }
        }),
        Object.defineProperties(Ti.prototype, {
            metal: {
                get: function () {
                    return !1
                },
                set: function () { }
            }
        }),
        Object.defineProperties($.prototype, {
            derivatives: {
                get: function () {
                    return this.extensions.derivatives
                },
                set: function (t) {
                    this.extensions.derivatives = t
                }
            }
        }),
        Object.assign(fe.prototype, {
            getCurrentRenderTarget: function () {
                return this.getRenderTarget()
            },
            supportsFloatTextures: function () {
                return this.extensions.get("OES_texture_float")
            },
            supportsHalfFloatTextures: function () {
                return this.extensions.get("OES_texture_half_float")
            },
            supportsStandardDerivatives: function () {
                return this.extensions.get("OES_standard_derivatives")
            },
            supportsCompressedTextureS3TC: function () {
                return this.extensions.get("WEBGL_compressed_texture_s3tc")
            },
            supportsCompressedTexturePVRTC: function () {
                return this.extensions.get("WEBGL_compressed_texture_pvrtc")
            },
            supportsBlendMinMax: function () {
                return this.extensions.get("EXT_blend_minmax")
            },
            supportsVertexTextures: function () {
                return this.capabilities.vertexTextures
            },
            supportsInstancedArrays: function () {
                return this.extensions.get("ANGLE_instanced_arrays")
            },
            enableScissorTest: function (t) {
                this.setScissorTest(t)
            },
            initMaterial: function () { },
            addPrePlugin: function () { },
            addPostPlugin: function () { },
            updateShadowMap: function () { }
        }),
        Object.defineProperties(fe.prototype, {
            shadowMapEnabled: {
                get: function () {
                    return this.shadowMap.enabled
                },
                set: function (t) {
                    this.shadowMap.enabled = t
                }
            },
            shadowMapType: {
                get: function () {
                    return this.shadowMap.type
                },
                set: function (t) {
                    this.shadowMap.type = t
                }
            },
            shadowMapCullFace: {
                get: function () {
                    return this.shadowMap.cullFace
                },
                set: function (t) {
                    this.shadowMap.cullFace = t
                }
            }
        }),
        Object.defineProperties(ot.prototype, {
            cullFace: {
                get: function () {
                    return this.renderReverseSided ? ha : sa
                },
                set: function (t) {
                    var e = t !== sa;
                    this.renderReverseSided = e
                }
            }
        }),
        Object.defineProperties(s.prototype, {
            wrapS: {
                get: function () {
                    return this.texture.wrapS
                },
                set: function (t) {
                    this.texture.wrapS = t
                }
            },
            wrapT: {
                get: function () {
                    return this.texture.wrapT
                },
                set: function (t) {
                    this.texture.wrapT = t
                }
            },
            magFilter: {
                get: function () {
                    return this.texture.magFilter
                },
                set: function (t) {
                    this.texture.magFilter = t
                }
            },
            minFilter: {
                get: function () {
                    return this.texture.minFilter
                },
                set: function (t) {
                    this.texture.minFilter = t
                }
            },
            anisotropy: {
                get: function () {
                    return this.texture.anisotropy
                },
                set: function (t) {
                    this.texture.anisotropy = t
                }
            },
            offset: {
                get: function () {
                    return this.texture.offset
                },
                set: function (t) {
                    this.texture.offset = t
                }
            },
            repeat: {
                get: function () {
                    return this.texture.repeat
                },
                set: function (t) {
                    this.texture.repeat = t
                }
            },
            format: {
                get: function () {
                    return this.texture.format
                },
                set: function (t) {
                    this.texture.format = t
                }
            },
            type: {
                get: function () {
                    return this.texture.type
                },
                set: function (t) {
                    this.texture.type = t
                }
            },
            generateMipmaps: {
                get: function () {
                    return this.texture.generateMipmaps
                },
                set: function (t) {
                    this.texture.generateMipmaps = t
                }
            }
        }),
        Bn.prototype.load = function (t) {
            var e = this;
            return (new kn).load(t, function (t) {
                e.setBuffer(t)
            }),
                this
        }
        ,
        jn.prototype.getData = function () {
            return this.getFrequencyData()
        }
        ;
    var lh = {
        merge: function (t, e, i) {
            var n;
            e.isMesh && (e.matrixAutoUpdate && e.updateMatrix(),
                n = e.matrix,
                e = e.geometry),
                t.merge(e, n, i)
        },
        center: function (t) {
            return t.center()
        }
    }
        , ch = {
            crossOrigin: void 0,
            loadTexture: function (t, e, i, n) {
                var r = new zi;
                r.setCrossOrigin(this.crossOrigin);
                var a = r.load(t, i, void 0, n);
                return e && (a.mapping = e),
                    a
            },
            loadTextureCube: function (t, e, i, n) {
                var r = new ki;
                r.setCrossOrigin(this.crossOrigin);
                var a = r.load(t, i, void 0, n);
                return e && (a.mapping = e),
                    a
            },
            loadCompressedTexture: function () { },
            loadCompressedTextureCube: function () { }
        }
}
    , function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = {
            mousePos: {
                x: 0,
                y: 0,
                px: 0,
                py: 0,
                cx: 0,
                cy: 0
            },
            winWidth: 0,
            winHeight: 0,
            allowExperience: !0
        };
        e.default = n
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , a = i(0)
            , o = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(a)
            , s = function () {
                function t() {
                    n(this, t),
                        this.group = new o.Group,
                        this.isCollidable = !0,
                        this.isIdeling = !1,
                        this.isSwinging = !1
                }
                return r(t, [{
                    key: "init",
                    value: function () {
                        this.createGeometry(),
                            this.createCollider(),
                            this.applyShadow()
                    }
                }, {
                    key: "createGeometry",
                    value: function () {
                        var t = new o.MeshLambertMaterial({
                            color: 1050375
                        })
                            , e = new o.CylinderGeometry(10, 10, 20, 4)
                            , t = new o.MeshPhongMaterial({
                                color: 3153936
                            });
                        this.body = new o.Mesh(e, t),
                            this.group.add(this.body)
                    }
                }, {
                    key: "applyShadow",
                    value: function () {
                        this.group.traverse(function (t) {
                            t instanceof o.Mesh && (t.castShadow = !0,
                                t.receiveShadow = !0)
                        })
                    }
                }, {
                    key: "createCollider",
                    value: function () {
                        if (this.isCollidable) {
                            var t = (new o.Box3).setFromObject(this.group);
                            t.w = t.max.x - t.min.x + 2,
                                t.d = t.max.z - t.min.z + 2,
                                t.h = t.max.y - t.min.y + 2,
                                t.x = t.min.x + t.w / 2,
                                t.y = t.min.y + t.h / 2,
                                t.z = t.min.z + t.d / 2;
                            var e = new o.CubeGeometry(t.w, t.h, t.d, 1)
                                , i = new o.MeshBasicMaterial({
                                    color: 3153936,
                                    visible: !1
                                });
                            this.collider = new o.Mesh(e, i),
                                this.collider.position.set(t.x, t.y, t.z),
                                this.group.add(this.collider)
                        }
                    }
                }, {
                    key: "idle",
                    value: function () { }
                }, {
                    key: "fix",
                    value: function () { }
                }, {
                    key: "swing",
                    value: function () {
                        this.idle()
                    }
                }]),
                    t
            }();
        e.default = s
    }
    , function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = {
            camZ: 2e3,
            camY: 400,
            camX: 0,
            shadowLightX: 200,
            shadowLightY: 500,
            shadowLightZ: 150,
            shadowLightIntensity: .4,
            scaleMultiplier: 1
        };
        e.default = n
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var a = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , o = i(0)
            , s = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(o)
            , h = i(3)
            , l = n(h)
            , c = i(8)
            , u = n(c)
            , p = i(2)
            , d = n(p)
            , f = i(51)(s)
            , m = function () {
                function t(e, i, n, a) {
                    r(this, t),
                        this.scene = new s.Scene,
                        this.width = n,
                        this.height = a,
                        this.aspectRatio = n / a,
                        this.container = e;
                    this.camera = new s.PerspectiveCamera(50, this.aspectRatio, 1, 2e4),
                        this.camera.position.x = l.default.camX,
                        this.camera.position.z = l.default.camZ,
                        this.camera.position.y = l.default.camY,
                        this.vectorLookAt = new s.Vector3(0, 0, 0),
                        this.camera.lookAt(this.vectorLookAt),
                        this.renderer = i,
                        this.container.appendChild(this.renderer.domElement),
                        this.isHiding = !1,
                        this.isExperiment = !0,
                        this.audioController = new u.default,
                        this.controls = new f(this.camera, this.renderer.domElement),
                        this.defineVariables(),
                        this.createLights(),
                        this.createFloor(),
                        this.createCharacter(),
                        this.render()
                }
                return a(t, [{
                    key: "defineVariables",
                    value: function () { }
                }, {
                    key: "createLights",
                    value: function () {
                        this.globalLight = new s.HemisphereLight(16777215, 5592405, 1),
                            this.shadowLight = new s.DirectionalLight(16777215, .4),
                            this.shadowLight.position.set(200, 500, 150),
                            this.shadowLight.castShadow = !0,
                            this.shadowLight.shadow.camera.left = -4e3,
                            this.shadowLight.shadow.camera.right = 4e3,
                            this.shadowLight.shadow.camera.top = 4e3,
                            this.shadowLight.shadow.camera.bottom = -4e3,
                            this.shadowLight.shadow.camera.near = 1,
                            this.shadowLight.shadow.camera.far = 4e3,
                            this.shadowLight.shadow.mapSize.width = this.shadowLight.shadow.mapSize.height = 2048,
                            this.scene.add(this.globalLight),
                            this.scene.add(this.shadowLight)
                    }
                }, {
                    key: "createFloor",
                    value: function () {
                        var t = new s.ShadowMaterial;
                        t.opacity = .1,
                            this.floor = new s.Mesh(new s.PlaneBufferGeometry(4e3, 4e3), t),
                            this.floor.name = "floor",
                            this.floor.rotation.x = -Math.PI / 2,
                            this.floor.receiveShadow = !0,
                            this.scene.add(this.floor)
                    }
                }, {
                    key: "createCharacter",
                    value: function () {
                        this.character = new d.default,
                            this.scene.add(this.character.group)
                    }
                }, {
                    key: "render",
                    value: function () {
                        this.controls.enabled && this.controls.update(),
                            this.renderer.render(this.scene, this.camera)
                    }
                }, {
                    key: "updateSize",
                    value: function (t, e) {
                        this.renderer.setSize(t, e),
                            this.camera.aspect = t / e,
                            this.camera.updateProjectionMatrix()
                    }
                }, {
                    key: "mouseMove",
                    value: function (t) { }
                }, {
                    key: "mouseDown",
                    value: function (t) { }
                }, {
                    key: "mouseUp",
                    value: function (t) { }
                }, {
                    key: "mouseWheel",
                    value: function (t) { }
                }, {
                    key: "hide",
                    value: function (t, e) {
                        this.isHiding = !0,
                            "function" == typeof e && e()
                    }
                }, {
                    key: "show",
                    value: function (t, e) {
                        "function" == typeof e && e()
                    }
                }, {
                    key: "destroy",
                    value: function () {
                        if (this.controls && (this.controls.dispose(),
                            delete this.controls),
                            this.camera && (this.camera = null),
                            this.container && (this.container = null),
                            this.scene) {
                            for (; this.scene.children.length > 0;) {
                                var t = this.scene.children[0];
                                this.scene.remove(t),
                                    t.geometry && t.geometry.dispose(),
                                    t.material && t.material.dispose(),
                                    t = null
                            }
                            this.scene = null
                        }
                    }
                }]),
                    t
            }();
        e.default = m
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e, i) {
            return Math.min(Math.max(t, e), i)
        }
        function r(t, e, i, n, r) {
            return n + (Math.max(Math.min(t, i), e) - e) / (i - e) * (r - n)
        }
        function a(t) {
            var e = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);
            return e ? {
                r: parseInt(e[1], 16),
                g: parseInt(e[2], 16),
                b: parseInt(e[3], 16)
            } : null
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            e.clamp = n,
            e.rule3 = r,
            e.hexToRgb = a
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var a = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , o = i(0)
            , s = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(o)
            , h = i(1)
            , l = n(h)
            , c = i(11)
            , u = n(c)
            , p = i(8)
            , d = n(p)
            , f = i(38)
            , m = n(f)
            , g = i(9)
            , v = n(g)
            , y = i(47)
            , _ = n(y)
            , x = i(43)
            , w = n(x)
            , b = i(44)
            , M = n(b)
            , T = i(45)
            , P = n(T)
            , S = i(46)
            , A = n(S)
            , E = i(48)
            , L = n(E)
            , C = i(49)
            , O = n(C)
            , R = i(19)
            , I = n(R)
            , k = null
            , z = function () {
                function t() {
                    if (r(this, t),
                        k)
                        return k;
                    k = this,
                        this.directionHideTo = "none",
                        this.directionShowFrom = "none",
                        this.navController = new u.default,
                        this.experienceInfo = new m.default,
                        this.currentExperience = 0,
                        this.characters = v.default,
                        this.renderer = new s.WebGLRenderer({
                            alpha: !0,
                            antialias: !0
                        }),
                        this.renderer.setPixelRatio(window.devicePixelRatio),
                        this.renderer.setSize(l.default.winWidth, l.default.winHeight),
                        this.renderer.shadowMap.enabled = !0,
                        this.renderer.shadowMapSoft = !0,
                        this.renderer.toneMappingExposure = 1.3,
                        this.init()
                }
                return a(t, [{
                    key: "init",
                    value: function () {
                        this.container = document.getElementsByClassName("world")[0],
                            this.audioContorller = new d.default,
                            this.audioContorller.playBackground()
                    }
                }, {
                    key: "switchWorld",
                    value: function (t) {
                        var e = this;
                        this.currentWorld ? this.currentWorld.hide(this.directionHideTo, function () {
                            e.currentWorld.destroy(),
                                window.location.hash = t,
                                e.showWorld(t)
                        }) : (window.location.hash = t,
                            this.showWorld(t))
                    }
                }, {
                    key: "showWorld",
                    value: function (t) {
                        I.default.sendPage();
                        var e;
                        switch (t) {
                            case "home":
                                e = _.default;
                                break;
                            case "lion":
                                this.currentExperience = 0,
                                    e = L.default;
                                break;
                            case "cat":
                                this.currentExperience = 1,
                                    e = M.default;
                                break;
                            case "dragon":
                                this.currentExperience = 2,
                                    e = P.default;
                                break;
                            case "bird":
                                this.currentExperience = 3,
                                    e = w.default;
                                break;
                            case "rabbit":
                                this.currentExperience = 4,
                                    e = O.default;
                                break;
                            case "fish":
                                this.currentExperience = 5,
                                    e = A.default;
                                break;
                            default:
                                e = _.default
                        }
                        e != _.default ? (this.navController.showMomentsNav(),
                            this.experienceInfo.update(this.currentExperience, this.characters[this.currentExperience])) : (this.navController.hideMomentsNav(),
                                this.experienceInfo.hide()),
                            this.navController.updateExperience(this.currentExperience),
                            this.currentWorld = new e(this.container, this.renderer, l.default.winWidth, l.default.winHeight),
                            this.currentWorld.show(this.directionShowFrom),
                            this.currentWorld.updateSize(l.default.winWidth, l.default.winHeight)
                    }
                }, {
                    key: "nextExp",
                    value: function () {
                        this.currentExperience = this.currentExperience < this.characters.length - 1 ? this.currentExperience + 1 : 0,
                            this.switchWorld(this.characters[this.currentExperience].n)
                    }
                }, {
                    key: "previousExp",
                    value: function () {
                        this.currentExperience = this.currentExperience > 0 ? this.currentExperience - 1 : this.characters.length - 1,
                            this.switchWorld(this.characters[this.currentExperience].n)
                    }
                }, {
                    key: "allExp",
                    value: function () {
                        this.switchWorld("home")
                    }
                }, {
                    key: "updateSize",
                    value: function () {
                        this.currentWorld && this.currentWorld.updateSize(l.default.winWidth, l.default.winHeight)
                    }
                }, {
                    key: "mouseMove",
                    value: function (t) {
                        this.currentWorld && this.currentWorld.mouseMove(l.default.mousePos)
                    }
                }, {
                    key: "mouseDown",
                    value: function (t) {
                        this.currentWorld && this.currentWorld.mouseDown(l.default.mousePos)
                    }
                }, {
                    key: "mouseUp",
                    value: function (t) {
                        this.currentWorld && this.currentWorld.mouseUp(l.default.mousePos)
                    }
                }, {
                    key: "mouseWheel",
                    value: function (t) {
                        this.currentWorld && this.currentWorld.mouseWheel(t)
                    }
                }, {
                    key: "keyUp",
                    value: function (t) {
                        37 === t ? this.arrowLeft() : 39 === t ? this.arrowRight() : 38 !== t && 40 !== t || this.arrowTopBottom()
                    }
                }, {
                    key: "arrowLeft",
                    value: function () {
                        this.currentWorld.selectPrevious ? this.currentWorld.selectPrevious() : this.navController.previousExp()
                    }
                }, {
                    key: "arrowRight",
                    value: function () {
                        this.currentWorld.selectNext ? this.currentWorld.selectNext() : this.navController.nextExp()
                    }
                }, {
                    key: "arrowTopBottom",
                    value: function () {
                        this.currentWorld.goExperience ? this.currentWorld.goExperience() : this.navController.allExp()
                    }
                }, {
                    key: "loop",
                    value: function () {
                        l.default.allowExperience && this.currentWorld && this.currentWorld.render(),
                            requestAnimationFrame(this.loop.bind(this))
                    }
                }]),
                    t
            }();
        e.default = z
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , a = null
            , o = function () {
                function t() {
                    if (n(this, t),
                        a)
                        return a;
                    this.linksBorders = document.getElementsByClassName("link-border-color"),
                        this.links = document.getElementsByClassName("link"),
                        this.epicLogo = document.getElementsByClassName("epic-logo-svg")[0],
                        this.gridIcon = document.getElementsByClassName("grid-icon")[0],
                        this.sublines = CSSRulePlugin.getRule(".link:after"),
                        this.momentsNavContainer = document.getElementsByClassName("moments-nav-container")[0],
                        this.previous = document.getElementsByClassName("link-previous")[0],
                        this.next = document.getElementsByClassName("link-next")[0],
                        this.allMoments = document.getElementsByClassName("link-all")[0],
                        this.about = document.getElementsByClassName("link-about")[0],
                        this.speaker = document.getElementsByClassName("speakerIcon")[0],
                        TweenMax.set(this.momentsNavContainer, {
                            x: "100%"
                        }),
                        a = this
                }
                return r(t, [{
                    key: "updateColor",
                    value: function (t) {
                        TweenMax.to(this.linksBorders, 1, {
                            borderColor: t
                        }),
                            TweenMax.to(this.links, 1, {
                                color: t
                            }),
                            TweenMax.to(this.epicLogo, 1, {
                                fill: t
                            }),
                            TweenMax.to(this.gridIcon, 1, {
                                fill: t
                            }),
                            TweenMax.to(this.sublines, 1, {
                                cssRule: {
                                    backgroundColor: t
                                }
                            }),
                            TweenMax.to(this.speaker, 1, {
                                fill: t
                            })
                    }
                }, {
                    key: "showMomentsNav",
                    value: function () {
                        TweenMax.to(this.momentsNavContainer, 1, {
                            x: "0%",
                            ease: Power4.easeOut
                        })
                    }
                }, {
                    key: "hideMomentsNav",
                    value: function () {
                        TweenMax.to(this.momentsNavContainer, 1, {
                            x: "100%",
                            ease: Power4.easeIn
                        })
                    }
                }]),
                    t
            }();
        e.default = o
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , a = i(7)
            , o = function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }(a)
            , s = null
            , h = function () {
                function t() {
                    if (n(this, t),
                        s)
                        return s;
                    this.expSounds = ["/assets/music/mp3/00.mp3", "/assets/music/mp3/01.mp3", "/assets/music/mp3/02.mp3", "/assets/music/mp3/03.mp3", "/assets/music/mp3/04.mp3", "/assets/music/mp3/05.mp3", "/assets/music/mp3/06.mp3", "/assets/music/mp3/07.mp3", "/assets/music/mp3/08.mp3", "/assets/music/mp3/09.mp3"],
                        this.goExpFile = "/assets/music/mp3/09.mp3",
                        this.bgrSound = "/assets/music/mp3/60s.mp3",
                        this.navUi = new o.default,
                        this.speaker = document.getElementsByClassName("speakerIcon")[0],
                        this.speakerWaves = document.getElementsByClassName("speakerWaves")[0],
                        this.targetVolume = .2,
                        this.volume = this.targetVolume,
                        this.audioMute = !1,
                        this.currentFile = "",
                        this.speaker.addEventListener("mousedown", this.switchSound.bind(this), !1),
                        s = this
                }
                return r(t, [{
                    key: "playBackground",
                    value: function () {
                        this.audioBgr = new Audio(this.bgrSound),
                            this.audioBgr.addEventListener("ended", this.replayBackground.bind(this), !1),
                            this.replayBackground()
                    }
                }, {
                    key: "replayBackground",
                    value: function () {
                        this.audioBgr.volume = this.volume,
                            this.audioBgr.play()
                    }
                }, {
                    key: "switchSound",
                    value: function () {
                        this.audioMute ? this.unmute() : this.mute()
                    }
                }, {
                    key: "play",
                    value: function (t) {
                        if ("random" == t) {
                            var e = Math.floor(Math.random() * this.expSounds.length);
                            this.currentFile = this.expSounds[e]
                        } else
                            this.currentFile = t;
                        this.audioFx = new Audio(this.currentFile),
                            this.audioFx.volume = this.volume,
                            this.audioFx.play()
                    }
                }, {
                    key: "kill",
                    value: function () {
                        this.audioFx && (this.audioFx.pause(),
                            this.audioFx = new Audio(""))
                    }
                }, {
                    key: "mute",
                    value: function () {
                        var t = this;
                        this.audioMute = !0,
                            TweenMax.to(this, 1, {
                                volume: 0,
                                onUpdate: function () {
                                    t.audioFx && (t.audioFx.volume = t.volume),
                                        t.audioBgr && (t.audioBgr.volume = t.volume)
                                }
                            }),
                            this.audioBgr && (this.audioBgr.removeEventListener("ended", this.replayBackground.bind(this), !1),
                                this.audioBgr.pause()),
                            TweenMax.to(this.speakerWaves, .5, {
                                autoAlpha: 0
                            })
                    }
                }, {
                    key: "unmute",
                    value: function () {
                        var t = this;
                        this.audioMute = !1,
                            TweenMax.to(this, 1, {
                                volume: this.targetVolume,
                                onUpdate: function () {
                                    t.audioFx && (t.audioFx.volume = t.volume),
                                        t.audioBgr && (t.audioBgr.volume = t.volume)
                                }
                            }),
                            this.audioBgr && (this.audioBgr.removeEventListener("ended", this.replayBackground.bind(this), !1),
                                this.audioBgr.play()),
                            TweenMax.to(this.speakerWaves, .5, {
                                autoAlpha: 1
                            })
                    }
                }]),
                    t
            }();
        e.default = h
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = i(16)
            , a = n(r)
            , o = i(13)
            , s = n(o)
            , h = i(14)
            , l = n(h)
            , c = i(12)
            , u = n(c)
            , p = i(17)
            , d = n(p)
            , f = i(15)
            , m = n(f)
            , g = [{
                n: "lion",
                title: "Chill the lion",
                description: "Refresh the lion from the blistering heat",
                instruction: "Click and drag the fan around the lion",
                bc: 15459815,
                tc: 11704226,
                c: a.default,
                posy: 100,
                scale: 1,
                rotationY: 0
            }, {
                n: "cat",
                title: "The cat and the yarn",
                description: "Happiness is a moving ball of wool",
                instruction: "Move the ball around the cat.",
                bc: 7261388,
                tc: 16766658,
                c: s.default,
                posy: 0,
                scale: 2.3,
                rotationY: 0
            }, {
                n: "dragon",
                title: "Sneeze the dragon",
                description: "Awake the sleeping beast",
                instruction: "Keep clicking as fast as possible.",
                bc: 6630967,
                tc: 16637580,
                c: l.default,
                posy: 70,
                scale: 2,
                rotationY: 0
            }, {
                n: "bird",
                title: "Paranoid Bird",
                description: "A hate / love story",
                instruction: "move your mouse around the big bird",
                bc: 14736077,
                tc: 16746324,
                c: u.default,
                posy: 30,
                scale: 1,
                rotationY: 0
            }, {
                n: "rabbit",
                title: "The frantic run of the valorous rabbit",
                description: "A serious misunderstanding",
                instruction: "Click to jump, avoid the hedgehogs, grap the carrots.",
                bc: 14411494,
                tc: 16294773,
                c: d.default,
                posy: 0,
                scale: 8,
                rotationY: 0
            }, {
                n: "fish",
                title: "Mighty fish",
                description: "Don't stop me now",
                instruction: "Move your mouse around the screen.",
                bc: 9364654,
                tc: 7452035,
                c: m.default,
                posy: 100,
                scale: 1,
                rotationY: .5 * -Math.PI
            }];
        e.default = g
    }
    , function (t, e) {
        var i;
        i = function () {
            return this
        }();
        try {
            i = i || Function("return this")() || (0,
                eval)("this")
        } catch (t) {
            "object" == typeof window && (i = window)
        }
        t.exports = i
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var a = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , o = i(8)
            , s = n(o)
            , h = i(9)
            , l = n(h)
            , c = i(3)
            , u = (n(c),
                i(6))
            , p = n(u)
            , d = i(7)
            , f = n(d)
            , m = i(18)
            , g = n(m)
            , v = i(19)
            , y = n(v)
            , _ = null
            , x = function () {
                function t() {
                    if (r(this, t),
                        _)
                        return _;
                    this.worldWrapper = document.getElementsByClassName("wrapper")[0],
                        this.closeAboutUI = document.getElementsByClassName("about-block-close")[0],
                        this.aboutSection = document.getElementsByClassName("about-block")[0],
                        this.navUI = new f.default,
                        this.currentExperience = 0,
                        this.characters = l.default,
                        this.backgroundPanel = new g.default,
                        this.moh = new p.default,
                        this.audioController = new s.default,
                        this.navUI.previous.addEventListener("mousedown", this.previousExp.bind(this)),
                        this.navUI.next.addEventListener("mousedown", this.nextExp.bind(this)),
                        this.navUI.about.addEventListener("mousedown", this.goAbout.bind(this)),
                        this.navUI.allMoments.addEventListener("mousedown", this.allExp.bind(this)),
                        this.closeAboutUI.addEventListener("mousedown", this.closeAbout.bind(this)),
                        _ = this,
                        TweenMax.set(this.aboutSection, {
                            scale: .8,
                            y: 20
                        })
                }
                return a(t, [{
                    key: "nextExp",
                    value: function () {
                        this.moh.directionHideTo = "left",
                            this.moh.directionShowFrom = "right",
                            this.moh.nextExp(),
                            this.audioController.play("random")
                    }
                }, {
                    key: "previousExp",
                    value: function () {
                        this.moh.directionHideTo = "right",
                            this.moh.directionShowFrom = "left",
                            this.moh.previousExp(),
                            this.audioController.play("random")
                    }
                }, {
                    key: "allExp",
                    value: function () {
                        this.moh.directionHideTo = "none",
                            this.moh.directionShowFrom = "none",
                            this.moh.allExp(),
                            this.audioController.play("random")
                    }
                }, {
                    key: "goAbout",
                    value: function () {
                        y.default.event("ui", "click", "about", 1),
                            TweenMax.to(this.worldWrapper, 1, {
                                y: "100%",
                                ease: Power4.easeInOut
                            }),
                            TweenMax.to(this.aboutSection, 1, {
                                scale: 1,
                                y: 0,
                                ease: Power4.easeInOut
                            }),
                            this.audioController.play("random")
                    }
                }, {
                    key: "closeAbout",
                    value: function () {
                        TweenMax.to(this.worldWrapper, 1, {
                            y: "0%",
                            ease: Power4.easeInOut
                        }),
                            TweenMax.to(this.aboutSection, 1, {
                                scale: .8,
                                y: 20,
                                ease: Power4.easeInOut
                            }),
                            this.audioController.play("random")
                    }
                }, {
                    key: "updateExperience",
                    value: function (t) {
                        var e = this.currentExperience < t ? "right" : "left";
                        this.currentExperience = t,
                            this.navUI.updateColor(this.characters[this.currentExperience].tc),
                            this.backgroundPanel.update(this.characters[this.currentExperience].bc, e)
                    }
                }, {
                    key: "updateColor",
                    value: function (t) {
                        this.navUI.updateColor(t)
                    }
                }, {
                    key: "hideMomentsNav",
                    value: function () {
                        this.navUI.hideMomentsNav()
                    }
                }, {
                    key: "showMomentsNav",
                    value: function () {
                        this.navUI.showMomentsNav()
                    }
                }]),
                    t
            }();
        e.default = x
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function a(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , s = i(0)
            , h = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(s)
            , l = i(2)
            , c = function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }(l)
            , u = function (t) {
                function e() {
                    n(this, e);
                    var t = r(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this));
                    return t.idelingPos = new h.Vector2(0, 0),
                        t.isFixing = !1,
                        t
                }
                return a(e, t),
                    o(e, [{
                        key: "createGeometry",
                        value: function () {
                            this.rSegments = 4,
                                this.hSegments = 5,
                                this.cylRay = 120,
                                this.bodyBirdInitPositions = [],
                                this.vAngle = this.hAngle = 0,
                                this.normalSkin = {
                                    r: 1,
                                    g: 222 / 255,
                                    b: 121 / 255
                                },
                                this.shySkin = {
                                    r: 1,
                                    g: 157 / 255,
                                    b: 101 / 255
                                },
                                this.color = {
                                    r: this.normalSkin.r,
                                    g: this.normalSkin.g,
                                    b: this.normalSkin.b
                                },
                                this.side = "left",
                                this.shyAngles = {
                                    h: 0,
                                    v: 0
                                },
                                this.behaviourInterval,
                                this.intervalRunning = !1,
                                this.group = new h.Group,
                                this.group.name = "bird",
                                this.yellowMat = new h.MeshPhongMaterial({
                                    color: 16768633,
                                    shininess: 0
                                }),
                                this.whiteMat = new h.MeshPhongMaterial({
                                    color: 16777215,
                                    shininess: 0
                                }),
                                this.blackMat = new h.MeshPhongMaterial({
                                    color: 0,
                                    shininess: 0
                                }),
                                this.orangeMat = new h.MeshPhongMaterial({
                                    color: 16733493,
                                    shininess: 0
                                }),
                                this.wingLeftGroup = new h.Group,
                                this.wingRightGroup = new h.Group;
                            var t = new h.BoxGeometry(60, 60, 5)
                                , e = new h.Mesh(t, this.yellowMat);
                            this.wingLeftGroup.add(e),
                                this.wingLeftGroup.position.x = 70,
                                this.wingLeftGroup.position.z = 0,
                                this.wingLeftGroup.rotation.y = Math.PI / 2,
                                e.rotation.x = -Math.PI / 4;
                            var i = new h.Mesh(t, this.yellowMat);
                            this.wingRightGroup.add(i),
                                this.wingRightGroup.position.x = -70,
                                this.wingRightGroup.position.z = 0,
                                this.wingRightGroup.rotation.y = -Math.PI / 2,
                                i.rotation.x = -Math.PI / 4;
                            var n = new h.CylinderGeometry(40, 70, 200, this.rSegments, this.hSegments);
                            this.bodyBird = new h.Mesh(n, this.yellowMat),
                                this.bodyBird.position.y = 70,
                                this.bodyVerticesLength = (this.rSegments + 1) * this.hSegments;
                            for (var r = 0; r < this.bodyVerticesLength; r++) {
                                var a = this.bodyBird.geometry.vertices[r];
                                this.bodyBirdInitPositions.push({
                                    x: a.x,
                                    y: a.y,
                                    z: a.z
                                })
                            }
                            this.group.add(this.bodyBird),
                                this.group.add(this.wingLeftGroup),
                                this.group.add(this.wingRightGroup),
                                this.face = new h.Group;
                            var o = new h.BoxGeometry(60, 60, 10)
                                , s = new h.BoxGeometry(10, 10, 10);
                            this.leftEye = new h.Mesh(o, this.whiteMat),
                                this.leftEye.position.x = -30,
                                this.leftEye.position.y = 120,
                                this.leftEye.position.z = 35,
                                this.leftEye.rotation.y = -Math.PI / 4,
                                this.leftIris = new h.Mesh(s, this.blackMat),
                                this.leftIris.position.x = -30,
                                this.leftIris.position.y = 120,
                                this.leftIris.position.z = 40,
                                this.leftIris.rotation.y = -Math.PI / 4,
                                this.rightEye = new h.Mesh(o, this.whiteMat),
                                this.rightEye.position.x = 30,
                                this.rightEye.position.y = 120,
                                this.rightEye.position.z = 35,
                                this.rightEye.rotation.y = Math.PI / 4,
                                this.rightIris = new h.Mesh(s, this.blackMat),
                                this.rightIris.position.x = 30,
                                this.rightIris.position.y = 120,
                                this.rightIris.position.z = 40,
                                this.rightIris.rotation.y = Math.PI / 4;
                            var l = new h.CylinderGeometry(0, 20, 20, 4, 1);
                            this.beak = new h.Mesh(l, this.orangeMat),
                                this.beak.position.z = 65,
                                this.beak.position.y = 70,
                                this.beak.rotation.x = Math.PI / 2,
                                this.face.add(this.rightEye),
                                this.face.add(this.rightIris),
                                this.face.add(this.leftEye),
                                this.face.add(this.leftIris),
                                this.face.add(this.beak);
                            var c = new h.BoxGeometry(10, 20, 5);
                            this.feather1 = new h.Mesh(c, this.yellowMat),
                                this.feather1.position.z = 55,
                                this.feather1.position.y = 185,
                                this.feather1.rotation.x = Math.PI / 4,
                                this.feather1.scale.set(1.5, 1.5, 1),
                                this.feather2 = new h.Mesh(c, this.yellowMat),
                                this.feather2.position.z = 50,
                                this.feather2.position.y = 180,
                                this.feather2.position.x = 20,
                                this.feather2.rotation.x = Math.PI / 4,
                                this.feather2.rotation.z = -Math.PI / 8,
                                this.feather3 = new h.Mesh(c, this.yellowMat),
                                this.feather3.position.z = 50,
                                this.feather3.position.y = 180,
                                this.feather3.position.x = -20,
                                this.feather3.rotation.x = Math.PI / 4,
                                this.feather3.rotation.z = Math.PI / 8,
                                this.face.add(this.feather1),
                                this.face.add(this.feather2),
                                this.face.add(this.feather3),
                                this.group.add(this.face)
                        }
                    }, {
                        key: "look",
                        value: function (t, e) {
                            this.hAngle = t,
                                this.vAngle = e,
                                this.leftIris.position.y = 120 - 30 * this.vAngle,
                                this.leftIris.position.x = 10 * this.hAngle - 30,
                                this.leftIris.position.z = 40 + 10 * this.hAngle,
                                this.rightIris.position.y = 120 - 30 * this.vAngle,
                                this.rightIris.position.x = 30 + 10 * this.hAngle,
                                this.rightIris.position.z = 40 - 10 * this.hAngle,
                                this.leftEye.position.y = this.rightEye.position.y = 120 - 10 * this.vAngle,
                                this.beak.position.y = 70 - 20 * this.vAngle,
                                this.beak.rotation.x = Math.PI / 2 + this.vAngle / 3,
                                this.feather1.rotation.x = Math.PI / 4 + this.vAngle / 2,
                                this.feather1.position.y = 185 - 10 * this.vAngle,
                                this.feather1.position.z = 55 + 10 * this.vAngle,
                                this.feather2.rotation.x = Math.PI / 4 + this.vAngle / 2,
                                this.feather2.position.y = 180 - 10 * this.vAngle,
                                this.feather2.position.z = 50 + 10 * this.vAngle,
                                this.feather3.rotation.x = Math.PI / 4 + this.vAngle / 2,
                                this.feather3.position.y = 180 - 10 * this.vAngle,
                                this.feather3.position.z = 50 + 10 * this.vAngle;
                            for (var i = 0; i < this.bodyVerticesLength; i++) {
                                var n, r = Math.floor(i / (this.rSegments + 1)), a = this.bodyBird.geometry.vertices[i], o = this.bodyBirdInitPositions[i];
                                n = r >= this.hSegments - 1 ? 0 : this.hAngle / (r + 1);
                                var s = o.x * Math.cos(n) + o.z * Math.sin(n)
                                    , h = -o.x * Math.sin(n) + o.z * Math.cos(n);
                                a.x = s,
                                    a.z = h
                            }
                            this.face.rotation.y = this.hAngle,
                                this.bodyBird.geometry.verticesNeedUpdate = !0
                        }
                    }, {
                        key: "lookAway",
                        value: function (t) {
                            var e = t ? .4 : 2
                                , i = t ? Strong.easeOut : Strong.easeInOut
                                , n = t ? .2 : 0
                                , r = t ? this.shySkin : this.normalSkin
                                , a = (2 * Math.random() - 1) * Math.PI / 3
                                , o = .75 + .25 * Math.random()
                                , s = .5 + .5 * Math.random();
                            if ("right" == this.side)
                                var h = (-1 + Math.random()) * Math.PI / 4;
                            else
                                var h = Math.random() * Math.PI / 4;
                            TweenMax.killTweensOf(this.shyAngles),
                                TweenMax.to(this.shyAngles, e, {
                                    v: a,
                                    h: h,
                                    ease: i,
                                    delay: n
                                }),
                                TweenMax.to(this.color, e, {
                                    r: r.r,
                                    g: r.g,
                                    b: r.b,
                                    ease: i,
                                    delay: n
                                }),
                                TweenMax.to(this.beak.scale, e, {
                                    z: s,
                                    x: o,
                                    ease: i,
                                    delay: n
                                })
                        }
                    }, {
                        key: "stare",
                        value: function () {
                            var t = this.normalSkin;
                            if ("right" == this.side)
                                var e = Math.PI / 3;
                            else
                                var e = -Math.PI / 3;
                            TweenMax.to(this.shyAngles, 2, {
                                v: -.5,
                                h: e,
                                ease: Strong.easeInOut
                            }),
                                TweenMax.to(this.color, 2, {
                                    r: t.r,
                                    g: t.g,
                                    b: t.b,
                                    ease: Strong.easeInOut
                                }),
                                TweenMax.to(this.beak.scale, 2, {
                                    z: .8,
                                    x: 1.5,
                                    ease: Strong.easeInOut
                                })
                        }
                    }, {
                        key: "fix",
                        value: function () {
                            var t = this;
                            this.isFixing || (this.isFixing = !0,
                                TweenMax.to(this, .5, {
                                    vAngle: 0,
                                    hAngle: 0,
                                    onUpdate: function () {
                                        t.look(t.vAngle, t.hAngle)
                                    },
                                    onComplete: function () {
                                        t.isFixing = !1
                                    }
                                }))
                        }
                    }, {
                        key: "idle",
                        value: function () {
                            var t = this;
                            if (!(this.isIdeling || Math.random() < .95)) {
                                this.isIdeling = !0;
                                var e = -Math.PI / 4 + Math.random() * Math.PI / 2
                                    , i = -Math.PI / 4 + Math.random() * Math.PI / 2
                                    , n = .5 + Math.random();
                                TweenMax.to(this.idelingPos, n, {
                                    x: e,
                                    y: i,
                                    ease: Power4.easeOut,
                                    onUpdate: function () {
                                        t.look(t.idelingPos.x, t.idelingPos.y)
                                    },
                                    onComplete: function () {
                                        t.isIdeling = !1
                                    }
                                })
                            }
                        }
                    }]),
                    e
            }(c.default);
        e.default = u
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function a(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , s = i(0)
            , h = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(s)
            , l = i(2)
            , c = function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }(l)
            , u = function (t) {
                function e() {
                    n(this, e);
                    var t = r(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this));
                    return t.idelingPos = new h.Vector3(0, 80, 100),
                        t.time = 0,
                        t
                }
                return a(e, t),
                    o(e, [{
                        key: "createGeometry",
                        value: function () {
                            this.group = new h.Group,
                                this.group.name = "cat";
                            var t = (new h.MeshPhongMaterial({
                                color: 16634486,
                                shading: h.FlatShading
                            }),
                                new h.MeshPhongMaterial({
                                    color: 14714750,
                                    shading: h.FlatShading
                                }))
                                , e = new h.MeshPhongMaterial({
                                    color: 6491413,
                                    shading: h.FlatShading
                                })
                                , i = new h.MeshPhongMaterial({
                                    color: 16777215,
                                    shading: h.FlatShading
                                })
                                , n = (new h.MeshPhongMaterial({
                                    color: 1118481,
                                    shading: h.FlatShading
                                }),
                                    new h.MeshPhongMaterial({
                                        color: 3022873,
                                        shading: h.FlatShading
                                    }))
                                , r = new h.MeshPhongMaterial({
                                    color: 6704970,
                                    shading: h.FlatShading
                                });
                            this.handHeight = 10,
                                this.bodyHeight = 80,
                                this.armHeight = (3 * this.bodyHeight / 5 - this.handHeight) / 2,
                                this.faceHeight = 30,
                                this.shouldersPosition = new h.Vector3(0, 2 * this.armHeight + this.handHeight, 0),
                                this.isAttacking = !1,
                                this.isFootReplacing = !1,
                                this.isBlinking = !1,
                                this.footUsed = "left",
                                this.transferPower = {
                                    x: 0,
                                    y: 0
                                },
                                this.body = new h.Group;
                            var a = new h.CylinderGeometry(0, 26, this.bodyHeight, 3, 1);
                            this.torso = new h.Mesh(a, n),
                                this.torso.geometry.applyMatrix((new h.Matrix4).makeRotationY(Math.PI / 3)),
                                this.torso.geometry.applyMatrix((new h.Matrix4).makeTranslation(0, -this.bodyHeight / 2, 0));
                            var o = new h.CylinderGeometry(6, 0, 17, 3);
                            o.applyMatrix((new h.Matrix4).makeRotationY(Math.PI / 3)),
                                o.applyMatrix((new h.Matrix4).makeScale(1, 1, .3)),
                                this.chest = new h.Mesh(o, i),
                                this.chest.position.set(0, -30, 1),
                                this.head = new h.Group;
                            var s = new h.BoxGeometry(30, this.faceHeight, 30);
                            this.face = new h.Mesh(s, n),
                                this.face.geometry.applyMatrix((new h.Matrix4).makeTranslation(0, this.faceHeight / 2, 0)),
                                this.face.geometry.applyMatrix((new h.Matrix4).makeRotationY(Math.PI / 4));
                            var l = new h.CylinderGeometry(10, 9, 9, 10, 1);
                            this.scarf1 = new h.Mesh(l, e),
                                this.scarf1.material.side = h.DoubleSide,
                                this.scarf1.position.y = -2,
                                this.scarf1.position.z = 0,
                                this.scarf1.rotation.z = .4,
                                this.scarf1.rotation.y = Math.PI / 3,
                                this.scarf2 = this.scarf1.clone(),
                                this.scarf2.scale.set(.9, .7, .9),
                                this.scarf2.position.y = -17,
                                this.scarf2.rotation.z = -.2;
                            var c = new h.BoxGeometry(50, 2, 10);
                            this.scarf3 = new h.Mesh(c, e),
                                this.scarf3.geometry.applyMatrix((new h.Matrix4).makeTranslation(25, 0, 0)),
                                this.scarf3.position.set(3, -15, 2),
                                this.scarf3.rotation.y = 1.2,
                                this.scarf3.rotation.z = -1,
                                this.head.add(this.scarf1),
                                this.torso.add(this.scarf2),
                                this.torso.add(this.scarf3),
                                this.torso.add(this.chest);
                            var u = new h.Matrix4;
                            u.set(1, 0, 0, 0, 0, 1, 0, 0, 0, .2, 1, 0, 0, 0, 0, 1),
                                this.torso.geometry.applyMatrix(u),
                                this.chest.geometry.applyMatrix(u),
                                this.body.add(this.torso),
                                this.body.position.y = this.bodyHeight;
                            var p = new h.BoxGeometry(16, .2, .2);
                            this.whisker1 = new h.Mesh(p, r),
                                this.whisker1.geometry.applyMatrix((new h.Matrix4).makeTranslation(-7, 0, 0)),
                                this.whisker1.position.set(-6, 8, 18),
                                this.whisker1.rotation.z = Math.PI / 12,
                                this.whisker2 = this.whisker1.clone(),
                                this.whisker2.position.y = 6,
                                this.whisker3 = this.whisker1.clone(),
                                this.whisker3.position.y = 4,
                                this.whisker4 = this.whisker1.clone(),
                                this.whisker4.rotation.z = Math.PI - Math.PI / 12,
                                this.whisker4.position.x = -this.whisker1.position.x,
                                this.whisker5 = this.whisker4.clone(),
                                this.whisker5.position.y = this.whisker2.position.y,
                                this.whisker6 = this.whisker4.clone(),
                                this.whisker6.position.y = this.whisker3.position.y,
                                this.head.add(this.whisker1),
                                this.head.add(this.whisker2),
                                this.head.add(this.whisker3),
                                this.head.add(this.whisker4),
                                this.head.add(this.whisker5),
                                this.head.add(this.whisker6);
                            var d = new h.CylinderGeometry(0, 8, 8, 3, 1);
                            d.applyMatrix((new h.Matrix4).makeTranslation(0, 4, 0));
                            var f = d.clone();
                            d.applyMatrix((new h.Matrix4).makeRotationY(1)),
                                d.applyMatrix((new h.Matrix4).makeScale(1, 1, .7)),
                                f.applyMatrix((new h.Matrix4).makeRotationY(-1)),
                                f.applyMatrix((new h.Matrix4).makeScale(1, 1, .7));
                            (new h.Matrix4).set(1, 0, 0, 0, 0, 1, 0, 0, -.5, 0, 1, 0, 0, 0, 0, 1),
                                (new h.Matrix4).set(1, -.5, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
                            this.rightEar = new h.Mesh(d, n),
                                this.rightEar.position.y = this.faceHeight,
                                this.rightEar.position.x = -14,
                                this.rightEar.position.z = -1.7,
                                this.leftEar = new h.Mesh(f, n),
                                this.leftEar.position.x = -this.rightEar.position.x,
                                this.leftEar.position.z = this.rightEar.position.z,
                                this.leftEar.position.y = this.rightEar.position.y;
                            var m = d.clone();
                            m.applyMatrix((new h.Matrix4).makeScale(.5, .5, .5)),
                                this.rightEarInside = new h.Mesh(m, t),
                                this.rightEarInside.position.y = .5,
                                this.rightEarInside.position.x = 1,
                                this.rightEarInside.position.z = 2,
                                this.rightEar.add(this.rightEarInside);
                            var g = f.clone();
                            g.applyMatrix((new h.Matrix4).makeScale(.5, .5, .5)),
                                this.leftEarInside = new h.Mesh(g, t),
                                this.leftEarInside.position.y = .5,
                                this.leftEarInside.position.x = -1,
                                this.leftEarInside.position.z = 2,
                                this.leftEar.add(this.leftEarInside);
                            var v = new h.BoxGeometry(12, 12, 1);
                            this.rightEye = new h.Mesh(v, i),
                                this.rightEye.position.set(-12, 20, 10),
                                this.rightEye.rotation.y = -Math.PI / 4,
                                this.leftEye = this.rightEye.clone(),
                                this.leftEye.position.x = -this.rightEye.position.x,
                                this.leftEye.rotation.y = Math.PI / 4;
                            var y = new h.BoxGeometry(4, 4, 2);
                            this.rightIris = new h.Mesh(y, n),
                                this.rightIris.position.x = 2,
                                this.rightIris.position.y = -2,
                                this.rightIris.position.z = .5,
                                this.leftIris = this.rightIris.clone(),
                                this.leftIris.position.x = -this.rightIris.position.x,
                                this.rightEye.add(this.rightIris),
                                this.leftEye.add(this.leftIris);
                            var _ = new h.CylinderGeometry(3, 0, 4, 4);
                            _.applyMatrix((new h.Matrix4).makeTranslation(0, -2, -4));
                            var x = (new h.Matrix4).set(1, 0, 0, 0, 0, 1, 0, 0, 0, -.7, 1, 1.4, 0, 0, 0, 1);
                            _.applyMatrix(x),
                                this.nose = new h.Mesh(_, t),
                                this.nose.position.z = 24,
                                this.nose.position.y = 14.1;
                            var w = new h.CylinderGeometry(8, 8, 14, 4);
                            w.applyMatrix((new h.Matrix4).makeScale(1, 1, 1.4)),
                                this.cheeks = new h.Mesh(w, n),
                                this.cheeks.position.set(0, 7, 13);
                            var b = w.clone();
                            b.applyMatrix((new h.Matrix4).makeTranslation(0, -4, 0)),
                                b.applyMatrix((new h.Matrix4).makeScale(.5, .2, .5)),
                                this.mouth = new h.Mesh(b, n);
                            var M = b.clone();
                            M.applyMatrix((new h.Matrix4).makeScale(.8, 1, .8)),
                                this.tongue = new h.Mesh(M, t),
                                this.tongue.position.set(0, .5, 0),
                                this.mouth.add(this.tongue),
                                this.mouth.rotation.x = Math.PI / 4,
                                this.mouth.position.set(0, 1.5, 18),
                                this.head.add(this.face),
                                this.head.add(this.rightEar),
                                this.head.add(this.leftEar),
                                this.head.add(this.rightEye),
                                this.head.add(this.leftEye),
                                this.head.add(this.nose),
                                this.head.add(this.cheeks),
                                this.head.add(this.mouth),
                                this.head.position.y = this.bodyHeight - 15,
                                this.head.position.z = -5,
                                this.rightShoulder = new h.Group,
                                this.leftShoulder = new h.Group,
                                this.rightShoulder.position.set(-6, this.shouldersPosition.y, 0),
                                this.leftShoulder.position.set(6, this.shouldersPosition.y, 0);
                            var T = new h.CylinderGeometry(4, 6, this.armHeight + 5, 4);
                            T.applyMatrix((new h.Matrix4).makeRotationY(Math.PI / 4)),
                                T.applyMatrix((new h.Matrix4).makeTranslation(0, -this.armHeight / 2, 0)),
                                this.rightArm = new h.Mesh(T, n),
                                this.rightShoulder.add(this.rightArm),
                                this.leftArm = this.rightArm.clone(),
                                this.leftShoulder.add(this.leftArm);
                            var P = new h.CylinderGeometry(6, 7, this.armHeight, 4);
                            P.applyMatrix((new h.Matrix4).makeRotationY(Math.PI / 4)),
                                P.applyMatrix((new h.Matrix4).makeTranslation(0, -this.armHeight / 2, 0)),
                                this.rightForeArm = new h.Mesh(P, n),
                                this.rightForeArm.position.y = -this.armHeight,
                                this.rightArm.add(this.rightForeArm),
                                this.leftForeArm = this.rightForeArm.clone(),
                                this.leftArm.add(this.leftForeArm);
                            var S = new h.BoxGeometry(10, 10, 10);
                            this.rightFoot = new h.Mesh(S, i),
                                this.rightFoot.geometry.applyMatrix((new h.Matrix4).makeTranslation(0, 0, 0)),
                                this.rightFoot.position.set(0, -this.armHeight - 5, 0),
                                this.rightForeArm.add(this.rightFoot),
                                this.leftFoot = this.rightFoot.clone(),
                                this.leftForeArm.add(this.leftFoot);
                            var A = new h.BoxGeometry(8, 2, 8);
                            this.rightFootPad = new h.Mesh(A, t),
                                this.rightFootPad.position.y = -4.5,
                                this.rightFoot.add(this.rightFootPad),
                                this.leftFootPad = this.rightFootPad.clone(),
                                this.leftFoot.add(this.leftFootPad);
                            var E = new h.BoxGeometry(8, 30, 30);
                            E.applyMatrix((new h.Matrix4).makeTranslation(0, 15, 0)),
                                this.rightKnee = new h.Mesh(E, n),
                                this.rightKnee.rotation.y = -Math.PI / 6,
                                this.rightKnee.position.x = -14,
                                this.rightKnee.position.z = -12,
                                this.leftKnee = this.rightKnee.clone(),
                                this.leftKnee.rotation.y = -this.rightKnee.rotation.y,
                                this.leftKnee.position.x = -this.rightKnee.position.x;
                            var L = new h.BoxGeometry(12, 6, 4);
                            this.rightLeg = new h.Mesh(L, i),
                                this.rightLeg.position.set(0, 3, 17),
                                this.rightKnee.add(this.rightLeg),
                                this.leftLeg = this.rightLeg.clone(),
                                this.leftKnee.add(this.leftLeg),
                                this.tail = new h.Group,
                                this.tail.position.z = -36,
                                this.tail.position.y = 5,
                                this.tail.rotation.x = Math.PI;
                            var C = this.tail
                                , O = 0
                                , R = 0;
                            this.tailNSegs = 8,
                                this.tailSegements = [];
                            var I = new h.CylinderGeometry(5, 4, 8, 4);
                            I.applyMatrix((new h.Matrix4).makeTranslation(0, 4, 0));
                            for (var k = 0; k < this.tailNSegs; k++) {
                                var z = k < this.tailNSegs - 1 ? n : i
                                    , F = I.clone()
                                    , D = Math.pow(1.15, k);
                                F.applyMatrix((new h.Matrix4).makeScale(D, D, D));
                                var N = new h.Mesh(F, z);
                                R = 0 == k ? -Math.PI / 2 : R / (k * k * k),
                                    N.position.y = O,
                                    N.rotation.x = R,
                                    C.add(N),
                                    C = N,
                                    O = 6 * D,
                                    R += .1,
                                    this.tailSegements.push(N)
                            }
                            var B = new h.CylinderGeometry(2, 0, 15, 4)
                                , U = new h.Mesh(B, r);
                            U.rotation.y = -Math.PI / 4,
                                U.position.x = -1.5,
                                U.position.y = 22,
                                U.position.z = 18.5;
                            var j = U.clone();
                            j.position.x = -U.position.x,
                                j.rotation.y = -U.rotation.y;
                            var G = new h.BoxGeometry(8, 2, 10)
                                , V = new h.Mesh(G, r);
                            V.rotation.y = Math.PI / 4,
                                V.position.x = 15.6,
                                V.position.y = 8,
                                V.position.z = -1;
                            var H = V.clone();
                            H.position.y = 4;
                            var W = V.clone();
                            W.rotation.y = -Math.PI / 4,
                                W.position.x = -V.position.x;
                            var X = W.clone();
                            X.position.y = H.position.y;
                            var Y = new h.BoxGeometry(1.6, 1, 10)
                                , q = new h.Mesh(Y, r);
                            q.position.x = -2.1,
                                q.position.z = 15,
                                q.position.y = 30;
                            var Z = q.clone();
                            Z.position.x = -q.position.x,
                                this.head.add(U),
                                this.head.add(j),
                                this.head.add(V),
                                this.head.add(H),
                                this.head.add(W),
                                this.head.add(X),
                                this.head.add(q),
                                this.head.add(Z);
                            var K = V.clone();
                            K.rotation.y = 0,
                                K.position.y = 16,
                                K.position.x = -1,
                                K.position.z = 11;
                            var Q = K.clone();
                            Q.position.y = 22,
                                Q.position.x = 1;
                            var J = K.clone();
                            J.position.y = 28,
                                this.rightKnee.add(K),
                                this.rightKnee.add(Q),
                                this.rightKnee.add(J);
                            var $ = K.clone();
                            $.position.x = -1;
                            var tt = $.clone();
                            tt.position.y = Q.position.y,
                                tt.position.x = 1;
                            var et = $.clone();
                            et.position.y = J.position.y,
                                this.leftKnee.add($),
                                this.leftKnee.add(tt),
                                this.leftKnee.add(et),
                                this.group.add(this.body),
                                this.group.add(this.head),
                                this.group.add(this.rightShoulder),
                                this.group.add(this.leftShoulder),
                                this.group.add(this.rightKnee),
                                this.group.add(this.leftKnee),
                                this.group.add(this.tail)
                        }
                    }, {
                        key: "updateTail",
                        value: function (t) {
                            for (var e = 0; e < this.tailNSegs; e++) {
                                var i = .6 * -e
                                    , n = Math.PI / (60 / (e + 1))
                                    , r = Math.sin(t + i) * n;
                                this.tailSegements[e].rotation.z = r
                            }
                        }
                    }, {
                        key: "interactWithBall",
                        value: function (t) {
                            var e = t.clone().sub(this.shouldersPosition.clone())
                                , i = e.length() < 1.3 * (2 * this.armHeight + this.handHeight + 8);
                            if (this.lookAt(t),
                                this.transferPower.x *= .8,
                                this.transferPower.y *= .8,
                                !this.isAttacking)
                                if (i)
                                    if (this.lookAt(t),
                                        Math.random() > .96)
                                        this.isAttacking = !0,
                                            this.isFootReplacing = !1,
                                            this.attack(this.footUsed, t, e);
                                    else {
                                        this.isFootReplacing = !1;
                                        var n = this.shouldersPosition.clone().add(e.clone().multiplyScalar(.4));
                                        this.prepareAttack(this.footUsed, n)
                                    }
                                else
                                    this.isFootReplacing || (this.isFootReplacing = !0,
                                        this.replaceFoot(this.footUsed));
                            Math.random() > .99 && this.blink(),
                                !this.mouthMoving && Math.random() > .99 && (this.mouthMoving = !0,
                                    this.moveMouth())
                        }
                    }, {
                        key: "lookAt",
                        value: function (t) {
                            this.isSwinging = !1,
                                TweenMax.killTweensOf(this.head.rotation),
                                this.oldTargetLookPos || (this.oldTargetLookPos = new h.Vector3(0, 65, 1e3)),
                                this.newTargetLookPos = t.clone(),
                                this.lookPos = this.oldTargetLookPos.clone().add(this.newTargetLookPos.sub(this.oldTargetLookPos).multiplyScalar(.15)),
                                this.head.lookAt(this.lookPos),
                                this.oldTargetLookPos = this.lookPos
                        }
                    }, {
                        key: "prepareAttack",
                        value: function (t, e) {
                            var i = this.getAngles(e, this.rightShoulder.position, this.armHeight);
                            this.updateArm(t, i, 1, Back.easeOut, null)
                        }
                    }, {
                        key: "attack",
                        value: function (t, e, i) {
                            var n = this
                                , r = "right" == t ? this.rightShoulder : this.leftShoulder
                                , a = this.getAngles(e, r.position, this.armHeight);
                            this.updateArm(t, a, .15, Back.easeOut, function () {
                                i.length() < 2 * n.armHeight + n.handHeight + 20 && (n.transferPower = {
                                    x: -i.x * (.5 * Math.random()) - .1 + .2 * Math.random(),
                                    y: -i.y * Math.random() * .5
                                }),
                                    n.isAttacking = !1
                            })
                        }
                    }, {
                        key: "replaceFoot",
                        value: function (t, e) {
                            var i = this
                                , e = 2 | e
                                , n = {
                                    theta: 0,
                                    alpha: 0,
                                    beta: 0
                                };
                            this.updateArm(t, n, e, Strong.easeInOut, function () {
                                i.isFootReplacing = !1
                            })
                        }
                    }, {
                        key: "updateArm",
                        value: function (t, e, i, n, r) {
                            var a, o, s, h;
                            "right" == t ? (a = this.rightShoulder,
                                o = this.rightArm,
                                s = this.rightForeArm,
                                h = this.rightFoot) : (a = this.leftShoulder,
                                    o = this.leftArm,
                                    s = this.leftForeArm,
                                    h = this.leftFoot);
                            var n = n || Back.easeOut
                                , l = Math.min(-e.beta, 1.5 * Math.PI);
                            TweenMax.killTweensOf([a.rotation, o.rotation, s.rotation, h.rotation]),
                                TweenMax.to(a.rotation, i, {
                                    y: e.theta,
                                    ease: n
                                }),
                                TweenMax.to(o.rotation, i, {
                                    x: e.alpha,
                                    ease: n
                                }),
                                TweenMax.to(s.rotation, i, {
                                    x: e.beta,
                                    ease: n,
                                    onComplete: r
                                }),
                                TweenMax.to(h.rotation, i, {
                                    x: l,
                                    ease: n
                                })
                        }
                    }, {
                        key: "blink",
                        value: function () {
                            var t = this;
                            this.isBlinking || (this.isBlinking = !0,
                                this.rightEye.scale.y = this.leftEye.scale.y = 1,
                                TweenMax.to(this.rightEye.scale, .07, {
                                    y: 0,
                                    yoyo: !0,
                                    repeat: 1
                                }),
                                TweenMax.to(this.leftEye.scale, .07, {
                                    y: 0,
                                    yoyo: !0,
                                    repeat: 1,
                                    onComplete: function () {
                                        t.isBlinking = !1
                                    }
                                }))
                        }
                    }, {
                        key: "moveMouth",
                        value: function () {
                            var t = this;
                            TweenMax.to(this.mouth.rotation, .2, {
                                x: Math.PI / 6,
                                yoyo: !0,
                                repeat: 1,
                                onComplete: function () {
                                    t.mouthMoving = !1
                                }
                            })
                        }
                    }, {
                        key: "getAngles",
                        value: function (t, e, i) {
                            var n, r, a, o, s, h = i, l = t.clone().sub(e), c = l.clone().normalize(), u = l.length() - 15, p = c.clone().multiplyScalar(u), d = u < 2 * h ? p.clone() : c.clone().multiplyScalar(2 * h), f = Math.atan2(d.x, d.z);
                            f = f < -Math.PI / 2 || f > Math.PI / 2 ? 0 : f;
                            var m = Math.sqrt(d.x * d.x + d.z * d.z);
                            a = Math.PI / 2 - Math.atan(d.y / m);
                            var g = u / (2 * h);
                            g = g > 1 ? 1 : g < -1 ? -1 : g,
                                r = Math.acos(g),
                                n = Math.PI - (r + a),
                                n = Math.max(0, n);
                            var v = (h * h + h * h - u * u) / (2 * h * h);
                            return v = v < -1 ? -1 : v > 1 ? 1 : v,
                                s = Math.acos(v),
                                o = Math.PI - s,
                                o = Math.min(o, 2 * Math.PI / 3),
                            {
                                theta: f,
                                alpha: -n,
                                beta: -o
                            }
                        }
                    }, {
                        key: "fix",
                        value: function () {
                            this.isSwinging = !1,
                                TweenMax.killTweensOf(this.head.rotation),
                                this.replaceFoot("right", 1),
                                this.replaceFoot("left", 1),
                                this.lookAt(new h.Vector3(0, 65, 1e3))
                        }
                    }, {
                        key: "idle",
                        value: function () {
                            var t = this;
                            if (this.isSwinging = !1,
                                TweenMax.killTweensOf(this.head.rotation),
                                this.time += .03,
                                this.updateTail(this.time),
                                Math.random() > .99 && this.blink(),
                                !(this.isIdeling || Math.random() < .99)) {
                                this.isIdeling = !0;
                                var e = 300 * Math.random() - 100
                                    , i = 300 * Math.random() - 100
                                    , n = 100 + 320 * Math.random()
                                    , r = .5 + Math.random();
                                TweenMax.to(this.idelingPos, r, {
                                    x: e,
                                    y: i,
                                    z: n,
                                    ease: Power4.easeOut,
                                    onUpdate: function () {
                                        t.lookAt(t.idelingPos)
                                    },
                                    onComplete: function () {
                                        t.isIdeling = !1
                                    }
                                })
                            }
                        }
                    }, {
                        key: "swing",
                        value: function () {
                            var t = this;
                            this.time += .03,
                                this.updateTail(this.time),
                                Math.random() > .99 && this.blink(),
                                this.isSwinging || (this.isSwinging = !0,
                                    TweenMax.to(this.head.rotation, .5, {
                                        z: -Math.PI / 16,
                                        y: Math.PI / 16,
                                        x: 0,
                                        ease: Power4.easeInOut,
                                        onComplete: function () {
                                            TweenMax.to(t.head.rotation, 1, {
                                                z: Math.PI / 16,
                                                y: -Math.PI / 16,
                                                x: 0,
                                                ease: Back.easeInOut,
                                                yoyo: !0,
                                                repeat: -1
                                            })
                                        }
                                    }))
                        }
                    }]),
                    e
            }(c.default);
        e.default = u
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function a(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , s = i(0)
            , h = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(s)
            , l = i(2)
            , c = function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }(l)
            , u = function (t) {
                function e() {
                    n(this, e);
                    var t = r(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this));
                    return t.idelingPos = new h.Vector3(0, 80, 100),
                        t.isFixing = !1,
                        t
                }
                return a(e, t),
                    o(e, [{
                        key: "createGeometry",
                        value: function () {
                            this.tailAmplitude = 3,
                                this.tailAngle = 0,
                                this.tailSpeed = .07,
                                this.wingAmplitude = Math.PI / 8,
                                this.wingAngle = 0,
                                this.wingSpeed = .1,
                                this.isSneezing = !1,
                                this.maxSneezingRate = 8,
                                this.sneezingRate = 0,
                                this.timeSmoke = 0,
                                this.timeFire = 0,
                                this.fireRate = 0,
                                this.group = new h.Group,
                                this.group.name = "dragon";
                            var t = new h.MeshPhongMaterial({
                                color: 6137475,
                                shading: h.FlatShading
                            })
                                , e = new h.MeshPhongMaterial({
                                    color: 9814152,
                                    shading: h.FlatShading
                                })
                                , i = new h.MeshPhongMaterial({
                                    color: 16637580,
                                    shading: h.FlatShading
                                })
                                , n = new h.MeshPhongMaterial({
                                    color: 13319756,
                                    shading: h.FlatShading
                                })
                                , r = new h.MeshPhongMaterial({
                                    color: 16446423,
                                    shading: h.FlatShading
                                })
                                , a = new h.MeshPhongMaterial({
                                    color: 8866396,
                                    shading: h.FlatShading
                                })
                                , o = new h.MeshPhongMaterial({
                                    color: 4206899,
                                    shading: h.FlatShading
                                });
                            new h.MeshPhongMaterial({
                                color: 13665166,
                                shading: h.FlatShading
                            });
                            this.body = new h.Group,
                                this.belly = this.makeCube(t, 30, 30, 40, 0, 0, 0, 0, 0, Math.PI / 4),
                                this.wingL = this.makeCube(i, 5, 30, 20, 15, 15, 0, -Math.PI / 4, 0, -Math.PI / 4),
                                this.wingL.geometry.applyMatrix((new h.Matrix4).makeTranslation(0, 15, 10)),
                                this.wingR = this.wingL.clone(),
                                this.wingR.position.x = -this.wingL.position.x,
                                this.wingR.rotation.z = -this.wingL.rotation.z;
                            var s = new h.CylinderGeometry(0, 10, 10, 4, 1);
                            this.pikeBody1 = new h.Mesh(s, t),
                                this.pikeBody1.scale.set(.2, 1, 1),
                                this.pikeBody1.position.z = 10,
                                this.pikeBody1.position.y = 26,
                                this.pikeBody2 = this.pikeBody1.clone(),
                                this.pikeBody2.position.z = 0,
                                this.pikeBody3 = this.pikeBody1.clone(),
                                this.pikeBody3.position.z = -10,
                                this.tail = new h.Group,
                                this.tail.position.z = -20,
                                this.tail.position.y = 10;
                            var l = new h.LineBasicMaterial({
                                color: 6137475,
                                linewidth: 5
                            })
                                , c = new h.Geometry;
                            c.vertices.push(new h.Vector3(0, 0, 0), new h.Vector3(0, 5, -10), new h.Vector3(0, -5, -20), new h.Vector3(0, 0, -30)),
                                this.tailLine = new h.Line(c, l);
                            var u = new h.CylinderGeometry(0, 10, 10, 4, 1);
                            u.applyMatrix((new h.Matrix4).makeRotationX(-Math.PI / 2)),
                                this.tailPike = new h.Mesh(u, i),
                                this.tailPike.scale.set(.2, 1, 1),
                                this.tailPike.position.z = -35,
                                this.tailPike.position.y = 0,
                                this.tail.add(this.tailLine),
                                this.tail.add(this.tailPike),
                                this.body.add(this.belly),
                                this.body.add(this.wingL),
                                this.body.add(this.wingR),
                                this.body.add(this.tail),
                                this.body.add(this.pikeBody1),
                                this.body.add(this.pikeBody2),
                                this.body.add(this.pikeBody3),
                                this.head = new h.Group,
                                this.face = this.makeCube(t, 60, 50, 80, 0, 25, 40, 0, 0, 0);
                            var p = new h.CylinderGeometry(0, 6, 10, 4, 1);
                            this.hornL = new h.Mesh(p, i),
                                this.hornL.position.y = 55,
                                this.hornL.position.z = 10,
                                this.hornL.position.x = 10,
                                this.hornR = this.hornL.clone(),
                                this.hornR.position.x = -10,
                                this.earL = this.makeCube(t, 5, 10, 20, 32, 42, 2, 0, 0, 0),
                                this.earL.geometry.applyMatrix((new h.Matrix4).makeTranslation(0, 5, -10)),
                                this.earL.geometry.applyMatrix((new h.Matrix4).makeRotationX(Math.PI / 4)),
                                this.earL.geometry.applyMatrix((new h.Matrix4).makeRotationY(-Math.PI / 4)),
                                this.earR = this.makeCube(t, 5, 10, 20, -32, 42, 2, 0, 0, 0),
                                this.earR.geometry.applyMatrix((new h.Matrix4).makeTranslation(0, 5, -10)),
                                this.earR.geometry.applyMatrix((new h.Matrix4).makeRotationX(Math.PI / 4)),
                                this.earR.geometry.applyMatrix((new h.Matrix4).makeRotationY(Math.PI / 4)),
                                this.mouth = new h.Group,
                                this.mouth.position.z = 50,
                                this.mouth.position.y = 3,
                                this.mouth.rotation.x = 0,
                                this.jaw = this.makeCube(t, 30, 10, 30, 0, -5, 15, 0, 0, 0),
                                this.mouth.add(this.jaw),
                                this.tongue = this.makeCube(n, 20, 10, 20, 0, -3, 15, 0, 0, 0),
                                this.mouth.add(this.tongue);
                            var d = new h.TorusGeometry(6, 2, 2, 10, Math.PI);
                            this.smile = new h.Mesh(d, o),
                                this.smile.position.z = 82,
                                this.smile.position.y = 5,
                                this.smile.rotation.z = -Math.PI,
                                this.cheekL = this.makeCube(e, 4, 20, 20, 30, 18, 55, 0, 0, 0),
                                this.cheekR = this.cheekL.clone(),
                                this.cheekR.position.x = -this.cheekL.position.x,
                                this.spot1 = this.makeCube(e, 2, 2, 2, 20, 16, 80, 0, 0, 0),
                                this.spot2 = this.spot1.clone(),
                                this.spot2.position.x = 15,
                                this.spot2.position.y = 14,
                                this.spot3 = this.spot1.clone(),
                                this.spot3.position.x = 16,
                                this.spot3.position.y = 20,
                                this.spot4 = this.spot1.clone(),
                                this.spot4.position.x = 12,
                                this.spot4.position.y = 18,
                                this.spot5 = this.spot1.clone(),
                                this.spot5.position.x = -15,
                                this.spot5.position.y = 14,
                                this.spot6 = this.spot1.clone(),
                                this.spot6.position.x = -14,
                                this.spot6.position.y = 20,
                                this.spot7 = this.spot1.clone(),
                                this.spot7.position.x = -19,
                                this.spot7.position.y = 17,
                                this.spot8 = this.spot1.clone(),
                                this.spot8.position.x = -11,
                                this.spot8.position.y = 17,
                                this.eyeL = this.makeCube(r, 10, 22, 22, 27, 34, 18, 0, 0, 0),
                                this.eyeR = this.eyeL.clone(),
                                this.eyeR.position.x = -27,
                                this.irisL = this.makeCube(a, 10, 12, 12, 28, 30, 24, 0, 0, 0),
                                this.irisR = this.irisL.clone(),
                                this.irisR.position.x = -this.irisL.position.x,
                                this.noseL = this.makeCube(o, 5, 5, 8, 5, 40, 77, 0, 0, 0),
                                this.noseR = this.noseL.clone(),
                                this.noseR.position.x = -this.noseL.position.x,
                                this.head.position.z = 30,
                                this.head.add(this.face),
                                this.head.add(this.hornL),
                                this.head.add(this.hornR),
                                this.head.add(this.earL),
                                this.head.add(this.earR),
                                this.head.add(this.mouth),
                                this.head.add(this.eyeL),
                                this.head.add(this.eyeR),
                                this.head.add(this.irisL),
                                this.head.add(this.irisR),
                                this.head.add(this.noseL),
                                this.head.add(this.noseR),
                                this.head.add(this.cheekL),
                                this.head.add(this.cheekR),
                                this.head.add(this.smile),
                                this.legFL = this.makeCube(t, 20, 10, 20, 20, -30, 15, 0, 0, 0),
                                this.legFR = this.legFL.clone(),
                                this.legFR.position.x = -30,
                                this.legBL = this.legFL.clone(),
                                this.legBL.position.z = -15,
                                this.legBR = this.legBL.clone(),
                                this.legBR.position.x = -30,
                                this.group.add(this.body),
                                this.group.add(this.head),
                                this.group.add(this.legFL),
                                this.group.add(this.legFR),
                                this.group.add(this.legBL),
                                this.group.add(this.legBR)
                        }
                    }, {
                        key: "update",
                        value: function () {
                            this.tailAngle += this.tailSpeed,
                                this.wingAngle += this.wingSpeed;
                            for (var t = 0; t < this.tailLine.geometry.vertices.length; t++) {
                                var e = this.tailLine.geometry.vertices[t];
                                e.y = Math.sin(this.tailAngle - Math.PI / 3 * t) * this.tailAmplitude * t * t,
                                    e.x = Math.cos(this.tailAngle / 2 + Math.PI / 10 * t) * this.tailAmplitude * t * t,
                                    t == this.tailLine.geometry.vertices.length - 1 && (this.tailPike.position.x = e.x,
                                        this.tailPike.position.y = e.y,
                                        this.tailPike.rotation.x = e.y / 30)
                            }
                            this.tailLine.geometry.verticesNeedUpdate = !0,
                                this.wingL.rotation.z = -Math.PI / 4 + Math.cos(this.wingAngle) * this.wingAmplitude,
                                this.wingR.rotation.z = Math.PI / 4 - Math.cos(this.wingAngle) * this.wingAmplitude
                        }
                    }, {
                        key: "prepareToSneeze",
                        value: function () {
                            TweenLite.to(this.head.rotation, .7, {
                                x: .12 * -this.sneezingRate,
                                ease: Back.easeOut
                            }),
                                TweenLite.to(this.head.position, .7, {
                                    z: 30 - 2.2 * this.sneezingRate,
                                    y: 2.2 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenLite.to(this.mouth.rotation, .7, {
                                    x: .18 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenLite.to(this.smile.position, .35, {
                                    z: 75,
                                    y: 10,
                                    ease: Back.easeOut
                                }),
                                TweenLite.to(this.smile.scale, .35, {
                                    x: .1,
                                    y: .1,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.noseL.scale, .7, {
                                    x: 1 + .1 * this.sneezingRate,
                                    y: 1 + .1 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.noseR.scale, .7, {
                                    x: 1 + .1 * this.sneezingRate,
                                    y: 1 + .1 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.eyeL.scale, .7, {
                                    y: 1 + .01 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.eyeR.scale, .7, {
                                    y: 1 + .01 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.irisL.scale, .7, {
                                    y: 1 + .05 * this.sneezingRate,
                                    z: 1 + .05 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.irisR.scale, .7, {
                                    y: 1 + .05 * this.sneezingRate,
                                    z: 1 + .05 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.irisL.position, .7, {
                                    y: 30 + .8 * this.sneezingRate,
                                    z: 24 - .4 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.irisR.position, .7, {
                                    y: 30 + .8 * this.sneezingRate,
                                    z: 24 - .4 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.earL.rotation, .7, {
                                    x: .1 * -this.sneezingRate,
                                    y: .1 * -this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.earR.rotation, .7, {
                                    x: .1 * -this.sneezingRate,
                                    y: .1 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.wingL.rotation, .7, {
                                    z: -Math.PI / 4 - .1 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.wingR.rotation, .7, {
                                    z: Math.PI / 4 + .1 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.body.rotation, .7, {
                                    x: .05 * -this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.body.scale, .7, {
                                    y: 1 + .01 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.body.position, .7, {
                                    z: 2 * -this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.tail.rotation, .7, {
                                    x: .1 * this.sneezingRate,
                                    ease: Back.easeOut
                                })
                        }
                    }, {
                        key: "sneeze",
                        value: function () {
                            var t = this
                                , e = 1 - this.sneezingRate / this.maxSneezingRate;
                            this.timeFire = Math.round(10 * this.sneezingRate),
                                TweenLite.to(this.head.rotation, .1, {
                                    x: .05 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenLite.to(this.head.position, .1, {
                                    z: 30 + 2.4 * this.sneezingRate,
                                    y: .4 * -this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenLite.to(this.mouth.rotation, .1, {
                                    x: 0,
                                    ease: Strong.easeOut
                                }),
                                TweenLite.to(this.smile.position, .2, {
                                    z: 82,
                                    y: 5,
                                    ease: Strong.easeIn
                                }),
                                TweenLite.to(this.smile.scale, .2, {
                                    x: 1,
                                    y: 1,
                                    ease: Strong.easeIn
                                }),
                                TweenMax.to(this.noseL.scale, .1, {
                                    y: .1 + e,
                                    ease: Strong.easeOut
                                }),
                                TweenMax.to(this.noseR.scale, .1, {
                                    y: .1 + e,
                                    ease: Strong.easeOut
                                }),
                                TweenMax.to(this.noseL.position, .1, {
                                    y: 40,
                                    ease: Strong.easeOut
                                }),
                                TweenMax.to(this.noseR.position, .1, {
                                    y: 40,
                                    ease: Strong.easeOut
                                }),
                                TweenMax.to(this.irisL.scale, .1, {
                                    y: .1 + e / 2,
                                    z: 1,
                                    ease: Strong.easeOut
                                }),
                                TweenMax.to(this.irisR.scale, .1, {
                                    y: .1 + e / 2,
                                    z: 1,
                                    ease: Strong.easeOut
                                }),
                                TweenMax.to(this.eyeL.scale, .1, {
                                    y: .1 + e / 2,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.eyeR.scale, .1, {
                                    y: .1 + e / 2,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.wingL.rotation, .1, {
                                    z: -Math.PI / 4 + .15 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.wingR.rotation, .1, {
                                    z: Math.PI / 4 - .15 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.body.rotation, .1, {
                                    x: .02 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.body.scale, .1, {
                                    y: 1 - .03 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.body.position, .1, {
                                    z: 2 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.irisL.position, .1 * 7, {
                                    y: 35,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.irisR.position, .1 * 7, {
                                    y: 35,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.earR.rotation, .1 * 3, {
                                    x: .2 * this.sneezingRate,
                                    y: .2 * this.sneezingRate,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.earL.rotation, .1 * 3, {
                                    x: .2 * this.sneezingRate,
                                    y: .2 * -this.sneezingRate,
                                    ease: Back.easeOut,
                                    onComplete: function () {
                                        t.backToNormal(),
                                            t.fireRate = t.sneezingRate
                                    }
                                }),
                                TweenMax.to(this.tail.rotation, .1 * 3, {
                                    x: .1 * -this.sneezingRate,
                                    ease: Back.easeOut
                                })
                        }
                    }, {
                        key: "backToNormal",
                        value: function () {
                            var t = this;
                            TweenLite.to(this.head.rotation, 1, {
                                x: 0,
                                ease: Strong.easeInOut
                            }),
                                TweenLite.to(this.head.position, 1, {
                                    z: 30,
                                    y: 0,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.noseL.scale, 1, {
                                    x: 1,
                                    y: 1,
                                    ease: Strong.easeInOut
                                }),
                                TweenMax.to(this.noseR.scale, 1, {
                                    x: 1,
                                    y: 1,
                                    ease: Strong.easeInOut
                                }),
                                TweenMax.to(this.noseL.position, 1, {
                                    y: 40,
                                    ease: Strong.easeInOut
                                }),
                                TweenMax.to(this.noseR.position, 1, {
                                    y: 40,
                                    ease: Strong.easeInOut
                                }),
                                TweenMax.to(this.irisL.scale, 1, {
                                    y: 1,
                                    z: 1,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.irisR.scale, 1, {
                                    y: 1,
                                    z: 1,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.irisL.position, .7, {
                                    y: 30,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.irisR.position, .7, {
                                    y: 30,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.eyeL.scale, 1, {
                                    y: 1,
                                    ease: Strong.easeOut
                                }),
                                TweenMax.to(this.eyeR.scale, 1, {
                                    y: 1,
                                    ease: Strong.easeOut
                                }),
                                TweenMax.to(this.body.rotation, 1, {
                                    x: 0,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.body.scale, 1, {
                                    y: 1,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.body.position, 1, {
                                    z: 0,
                                    ease: Back.easeOut
                                }),
                                TweenMax.to(this.wingL.rotation, 1.3, {
                                    z: -Math.PI / 4,
                                    ease: Back.easeInOut
                                }),
                                TweenMax.to(this.wingR.rotation, 1.3, {
                                    z: Math.PI / 4,
                                    ease: Back.easeInOut
                                }),
                                TweenMax.to(this.earL.rotation, 1.3, {
                                    x: 0,
                                    y: 0,
                                    ease: Back.easeInOut
                                }),
                                TweenMax.to(this.earR.rotation, 1.3, {
                                    x: 0,
                                    y: 0,
                                    ease: Back.easeInOut,
                                    onComplete: function () {
                                        t.isSneezing = !1,
                                            t.timeSmoke = Math.round(5 * t.sneezingRate),
                                            t.sneezingRate = 0
                                    }
                                }),
                                TweenMax.to(this.tail.rotation, 1.3, {
                                    x: 0,
                                    ease: Back.easeOut
                                })
                        }
                    }, {
                        key: "lookAt",
                        value: function (t) {
                            this.isSwinging = !1,
                                TweenMax.killTweensOf(this.head.rotation),
                                this.head.lookAt(t)
                        }
                    }, {
                        key: "idle",
                        value: function () {
                            var t = this;
                            if (this.isSwinging = !1,
                                TweenMax.killTweensOf(this.head.rotation),
                                this.update(),
                                !(this.isIdeling || Math.random() < .98)) {
                                this.isIdeling = !0;
                                var e = 400 * Math.random() - 200
                                    , i = 200 * Math.random()
                                    , n = .5 + 2 * Math.random();
                                TweenMax.to(this.idelingPos, n, {
                                    x: e,
                                    y: i,
                                    z: 500,
                                    ease: Power4.easeOut,
                                    onUpdate: function () {
                                        t.lookAt(t.idelingPos)
                                    },
                                    onComplete: function () {
                                        t.isIdeling = !1
                                    }
                                })
                            }
                        }
                    }, {
                        key: "fix",
                        value: function () {
                            var t = this;
                            if (this.isSwinging = !1,
                                TweenMax.killTweensOf(this.head.rotation),
                                !this.isFixing) {
                                TweenMax.to(this.idelingPos, .5, {
                                    x: 0,
                                    y: 80,
                                    z: 1e3,
                                    ease: Power4.easeOut,
                                    onUpdate: function () {
                                        t.lookAt(t.idelingPos)
                                    },
                                    onComplete: function () {
                                        t.isFixing = !1
                                    }
                                })
                            }
                        }
                    }, {
                        key: "swing",
                        value: function () {
                            var t = this;
                            this.isSwinging || (this.isSwinging = !0,
                                TweenMax.to(this.head.rotation, .5, {
                                    z: -Math.PI / 16,
                                    y: Math.PI / 16,
                                    x: 0,
                                    ease: Power4.easeInOut,
                                    onComplete: function () {
                                        TweenMax.to(t.head.rotation, 1, {
                                            z: Math.PI / 16,
                                            y: -Math.PI / 16,
                                            x: 0,
                                            ease: Back.easeInOut,
                                            yoyo: !0,
                                            repeat: -1
                                        })
                                    }
                                }))
                        }
                    }, {
                        key: "makeCube",
                        value: function (t, e, i, n, r, a, o, s, l, c) {
                            var u = new h.BoxGeometry(e, i, n)
                                , p = new h.Mesh(u, t);
                            return p.position.x = r,
                                p.position.y = a,
                                p.position.z = o,
                                p.rotation.x = s,
                                p.rotation.y = l,
                                p.rotation.z = c,
                                p
                        }
                    }]),
                    e
            }(c.default);
        e.default = u
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function a(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , s = i(0)
            , h = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(s)
            , l = i(2)
            , c = function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }(l)
            , u = function (t) {
                function e() {
                    n(this, e);
                    var t = r(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this));
                    return t.isIdeling = !1,
                        t.idelingPos = {
                            x: 0,
                            y: 0
                        },
                        t
                }
                return a(e, t),
                    o(e, [{
                        key: "createGeometry",
                        value: function () {
                            this.angleFin = 0,
                                this.fishFastColor = {
                                    r: 255,
                                    g: 0,
                                    b: 224
                                },
                                this.fishSlowColor = {
                                    r: 0,
                                    g: 207,
                                    b: 255
                                };
                            var t = .5 * Math.PI;
                            this.group = new h.Group,
                                this.group.name = "fish";
                            var e = new h.BoxGeometry(120, 120, 120)
                                , i = new h.MeshPhongMaterial({
                                    color: 8451582,
                                    shading: h.FlatShading
                                });
                            this.bodyFish = new h.Mesh(e, i);
                            var n = new h.CylinderGeometry(0, 60, 60, 4, !1)
                                , r = new h.MeshPhongMaterial({
                                    color: 16711900,
                                    shading: h.FlatShading
                                });
                            this.tailFish = new h.Mesh(n, r),
                                this.tailFish.scale.set(.8, 1, .1),
                                this.tailFish.position.x = -60,
                                this.tailFish.rotation.z = -t;
                            var a = new h.BoxGeometry(25, 10, 120)
                                , o = new h.MeshPhongMaterial({
                                    color: 8451582,
                                    shading: h.FlatShading
                                });
                            this.lipsFish = new h.Mesh(a, o),
                                this.lipsFish.position.x = 65,
                                this.lipsFish.position.y = -47,
                                this.lipsFish.rotation.z = t,
                                this.topFish = new h.Mesh(n, r),
                                this.topFish.scale.set(.8, 1, .1),
                                this.topFish.position.x = -20,
                                this.topFish.position.y = 60,
                                this.topFish.rotation.z = -t,
                                this.sideRightFish = new h.Mesh(n, r),
                                this.sideRightFish.scale.set(.8, 1, .1),
                                this.sideRightFish.rotation.x = t,
                                this.sideRightFish.rotation.z = -t,
                                this.sideRightFish.position.x = 0,
                                this.sideRightFish.position.y = -50,
                                this.sideRightFish.position.z = -60,
                                this.sideLeftFish = new h.Mesh(n, r),
                                this.sideLeftFish.scale.set(.8, 1, .1),
                                this.sideLeftFish.rotation.x = t,
                                this.sideLeftFish.rotation.z = -t,
                                this.sideLeftFish.position.x = 0,
                                this.sideLeftFish.position.y = -50,
                                this.sideLeftFish.position.z = 60;
                            var s = new h.BoxGeometry(40, 40, 5)
                                , l = new h.MeshPhongMaterial({
                                    color: 16777215,
                                    shading: h.FlatShading
                                });
                            this.rightEye = new h.Mesh(s, l),
                                this.rightEye.position.z = -60,
                                this.rightEye.position.x = 25,
                                this.rightEye.position.y = -10;
                            var c = new h.BoxGeometry(10, 10, 3)
                                , u = new h.MeshPhongMaterial({
                                    color: 3342336,
                                    shading: h.FlatShading
                                });
                            this.rightIris = new h.Mesh(c, u),
                                this.rightIris.position.z = -65,
                                this.rightIris.position.x = 35,
                                this.rightIris.position.y = -10,
                                this.leftEye = new h.Mesh(s, l),
                                this.leftEye.position.z = 60,
                                this.leftEye.position.x = 25,
                                this.leftEye.position.y = -10,
                                this.leftIris = new h.Mesh(c, u),
                                this.leftIris.position.z = 65,
                                this.leftIris.position.x = 35,
                                this.leftIris.position.y = -10;
                            var p = new h.BoxGeometry(20, 4, 20)
                                , d = new h.MeshPhongMaterial({
                                    color: 16777215,
                                    shading: h.FlatShading
                                });
                            this.tooth1 = new h.Mesh(p, d),
                                this.tooth1.position.x = 65,
                                this.tooth1.position.y = -35,
                                this.tooth1.position.z = -50,
                                this.tooth1.rotation.z = t,
                                this.tooth1.rotation.x = -t,
                                this.tooth2 = new h.Mesh(p, d),
                                this.tooth2.position.x = 65,
                                this.tooth2.position.y = -30,
                                this.tooth2.position.z = -25,
                                this.tooth2.rotation.z = t,
                                this.tooth2.rotation.x = -Math.PI / 12,
                                this.tooth3 = new h.Mesh(p, d),
                                this.tooth3.position.x = 65,
                                this.tooth3.position.y = -25,
                                this.tooth3.position.z = 0,
                                this.tooth3.rotation.z = t,
                                this.tooth4 = new h.Mesh(p, d),
                                this.tooth4.position.x = 65,
                                this.tooth4.position.y = -30,
                                this.tooth4.position.z = 25,
                                this.tooth4.rotation.z = t,
                                this.tooth4.rotation.x = Math.PI / 12,
                                this.tooth5 = new h.Mesh(p, d),
                                this.tooth5.position.x = 65,
                                this.tooth5.position.y = -35,
                                this.tooth5.position.z = 50,
                                this.tooth5.rotation.z = t,
                                this.tooth5.rotation.x = Math.PI / 8,
                                this.group.add(this.bodyFish),
                                this.group.add(this.tailFish),
                                this.group.add(this.topFish),
                                this.group.add(this.sideRightFish),
                                this.group.add(this.sideLeftFish),
                                this.group.add(this.rightEye),
                                this.group.add(this.rightIris),
                                this.group.add(this.leftEye),
                                this.group.add(this.leftIris),
                                this.group.add(this.tooth1),
                                this.group.add(this.tooth2),
                                this.group.add(this.tooth3),
                                this.group.add(this.tooth4),
                                this.group.add(this.tooth5),
                                this.group.add(this.lipsFish)
                        }
                    }, {
                        key: "swim",
                        value: function (t, e, i) {
                            this.isSwinging = !1;
                            this.group.rotation.z += (-t.y / 50 - this.group.rotation.z) / e,
                                this.group.rotation.x += (-t.y / 50 - this.group.rotation.x) / e,
                                this.group.rotation.y += (-t.y / 50 - this.group.rotation.y) / e,
                                this.rightEye.rotation.z = this.leftEye.rotation.z = -t.y / 150,
                                this.rightIris.position.x = this.leftIris.position.y = -10 - t.y / 2,
                                this.rightEye.scale.set(1, 1 - t.x / 150, 1),
                                this.leftEye.scale.set(1, 1 - t.x / 150, 1);
                            var n = t.x / 100
                                , r = t.x / 300;
                            this.angleFin += n;
                            var a = Math.cos(this.angleFin)
                                , o = Math.sin(this.angleFin / 5);
                            this.tailFish.rotation.y = .5 * a,
                                this.topFish.rotation.x = .5 * o,
                                this.sideRightFish.rotation.x = Math.PI / 2 + .2 * o,
                                this.sideLeftFish.rotation.x = Math.PI / 2 + .2 * o;
                            var s = (this.fishSlowColor.r + (this.fishFastColor.r - this.fishSlowColor.r) * n) / 255
                                , h = (this.fishSlowColor.g + (this.fishFastColor.g - this.fishSlowColor.g) * n) / 255
                                , l = (this.fishSlowColor.b + (this.fishFastColor.b - this.fishSlowColor.b) * n) / 255;
                            this.bodyFish.material.color.setRGB(s, h, l),
                                this.lipsFish.material.color.setRGB(s, h, l),
                                this.group.scale.set(1 + r, 1 - r, 1 - r)
                        }
                    }, {
                        key: "idle",
                        value: function () {
                            var t = this;
                            if (this.isSwinging = !1,
                                TweenMax.killTweensOf(this.group.rotation),
                                !(this.isIdeling || Math.random() < .95)) {
                                this.isIdeling = !0;
                                var e = -Math.PI / 6 + Math.random() * Math.PI / 3
                                    , i = -Math.PI / 6 + Math.random() * Math.PI / 3
                                    , n = .5 + 2 * Math.random();
                                TweenMax.to(this.idelingPos, n, {
                                    x: e,
                                    y: i,
                                    ease: Power4.easeInOut,
                                    onUpdate: function () {
                                        t.group.rotation.x = t.idelingPos.x,
                                            t.group.rotation.y = -Math.PI / 2 + t.idelingPos.y
                                    },
                                    onComplete: function () {
                                        t.isIdeling = !1
                                    }
                                })
                            }
                        }
                    }, {
                        key: "fix",
                        value: function () {
                            this.isSwinging = !1,
                                TweenMax.killTweensOf(this.group.rotation),
                                TweenMax.killTweensOf(this.idelingPos),
                                this.swim({
                                    x: 0,
                                    y: 0
                                }, 10)
                        }
                    }, {
                        key: "swing",
                        value: function () {
                            var t = this;
                            this.isSwinging || (this.isSwinging = !0,
                                TweenMax.to(this.group.rotation, .5, {
                                    z: -Math.PI / 16,
                                    y: -Math.PI / 2 + Math.PI / 16,
                                    x: 0,
                                    ease: Power4.easeInOut,
                                    onComplete: function () {
                                        TweenMax.to(t.group.rotation, 1, {
                                            z: Math.PI / 16,
                                            y: -Math.PI / 2 + -Math.PI / 16,
                                            x: 0,
                                            ease: Back.easeInOut,
                                            yoyo: !0,
                                            repeat: -1
                                        })
                                    }
                                }))
                        }
                    }]),
                    e
            }(c.default);
        e.default = u
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function a(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , s = i(0)
            , h = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(s)
            , l = i(2)
            , c = function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }(l)
            , u = i(5)
            , p = function (t) {
                function e() {
                    n(this, e);
                    var t = r(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this));
                    return t.windTime = 0,
                        t.idelingPos = {
                            x: 0,
                            y: 0
                        },
                        t
                }
                return a(e, t),
                    o(e, [{
                        key: "createGeometry",
                        value: function () {
                            this.bodyInitPositions = [],
                                this.maneParts = [],
                                this.group = new h.Group,
                                this.group.name = "lion",
                                this.yellowMat = new h.MeshPhongMaterial({
                                    color: 16634486,
                                    shading: h.FlatShading
                                }),
                                this.redMat = new h.MeshPhongMaterial({
                                    color: 11351333,
                                    shading: h.FlatShading
                                }),
                                this.pinkMat = new h.MeshPhongMaterial({
                                    color: 15031595,
                                    shading: h.FlatShading
                                }),
                                this.whiteMat = new h.MeshPhongMaterial({
                                    color: 16777215,
                                    shading: h.FlatShading
                                }),
                                this.purpleMat = new h.MeshPhongMaterial({
                                    color: 4528468,
                                    shading: h.FlatShading
                                }),
                                this.greyMat = new h.MeshPhongMaterial({
                                    color: 6635340,
                                    shading: h.FlatShading
                                }),
                                this.blackMat = new h.MeshPhongMaterial({
                                    color: 3156261,
                                    shading: h.FlatShading
                                });
                            var t = new h.CylinderGeometry(30, 80, 160, 4)
                                , e = new h.BoxGeometry(40, 40, 15)
                                , i = new h.BoxGeometry(80, 80, 80)
                                , n = new h.BoxGeometry(4, 4, 4)
                                , r = new h.BoxGeometry(30, 2, 1);
                            r.applyMatrix((new h.Matrix4).makeTranslation(15, 0, 0));
                            var a = new h.BoxGeometry(20, 20, 10)
                                , o = new h.BoxGeometry(40, 40, 20)
                                , s = new h.BoxGeometry(5, 30, 30)
                                , l = new h.BoxGeometry(4, 10, 10)
                                , c = new h.BoxGeometry(20, 20, 10)
                                , u = new h.TorusGeometry(12, 4, 2, 10, Math.PI)
                                , p = new h.BoxGeometry(40, 15, 20)
                                , d = new h.BoxGeometry(25, 80, 80);
                            d.applyMatrix((new h.Matrix4).makeTranslation(0, 50, 0));
                            var f = new h.BoxGeometry(40, 20, 20);
                            this.body = new h.Mesh(t, this.yellowMat),
                                this.body.position.z = -60,
                                this.body.position.y = -20,
                                this.bodyVertices = [0, 1, 2, 3, 4, 8],
                                this.body.geometry.vertices[0].z = 85,
                                this.body.geometry.vertices[0].x = -30,
                                this.body.geometry.vertices[1].z = 85,
                                this.body.geometry.vertices[1].x = 30,
                                this.body.geometry.vertices[2].z = 0,
                                this.body.geometry.vertices[2].x = 0,
                                this.body.geometry.vertices[2].y = 40,
                                this.body.geometry.vertices[3].z = 0,
                                this.body.geometry.vertices[3].x = 0,
                                this.body.geometry.vertices[3].y = 40,
                                this.body.geometry.vertices[8].z = 0,
                                this.body.geometry.vertices[8].x = 0,
                                this.body.geometry.vertices[8].y = 40,
                                this.body.geometry.vertices[6].z = -60;
                            for (var m = 0; m < this.bodyVertices.length; m++) {
                                var g = this.body.geometry.vertices[this.bodyVertices[m]];
                                g.z = 70,
                                    g.x = 0,
                                    this.bodyInitPositions.push({
                                        x: g.x,
                                        y: g.y,
                                        z: g.z
                                    })
                            }
                            this.leftKnee = new h.Mesh(d, this.yellowMat),
                                this.leftKnee.position.x = 65,
                                this.leftKnee.position.z = -20,
                                this.leftKnee.position.y = -110,
                                this.leftKnee.rotation.z = -.3,
                                this.rightKnee = new h.Mesh(d, this.yellowMat),
                                this.rightKnee.position.x = -65,
                                this.rightKnee.position.z = -20,
                                this.rightKnee.position.y = -110,
                                this.rightKnee.rotation.z = .3,
                                this.backLeftFoot = new h.Mesh(f, this.yellowMat),
                                this.backLeftFoot.position.z = 30,
                                this.backLeftFoot.position.x = 75,
                                this.backLeftFoot.position.y = -90,
                                this.backRightFoot = new h.Mesh(f, this.yellowMat),
                                this.backRightFoot.position.z = 30,
                                this.backRightFoot.position.x = -75,
                                this.backRightFoot.position.y = -90,
                                this.frontRightFoot = new h.Mesh(f, this.yellowMat),
                                this.frontRightFoot.position.z = 40,
                                this.frontRightFoot.position.x = -22,
                                this.frontRightFoot.position.y = -90,
                                this.frontLeftFoot = new h.Mesh(f, this.yellowMat),
                                this.frontLeftFoot.position.z = 40,
                                this.frontLeftFoot.position.x = 22,
                                this.frontLeftFoot.position.y = -90,
                                this.mane = new h.Group;
                            for (var v = 0; v < 4; v++)
                                for (var y = 0; y < 4; y++) {
                                    var _ = new h.Mesh(e, this.redMat);
                                    _.position.x = 40 * v - 60,
                                        _.position.y = 40 * y - 60;
                                    var x, w, b = Math.random() * Math.PI * 2;
                                    0 == v && 0 == y || 0 == v && 3 == y || 3 == v && 0 == y || 3 == v && 3 == y ? (x = -10 - Math.floor(5 * Math.random()),
                                        w = -5) : 0 == v || 0 == y || 3 == v || 3 == y ? (x = -5 - Math.floor(5 * Math.random()),
                                            w = 0) : (x = 0,
                                                w = 0),
                                        this.maneParts.push({
                                            mesh: _,
                                            amp: x,
                                            zOffset: w,
                                            periodOffset: b,
                                            xInit: _.position.x,
                                            yInit: _.position.y
                                        }),
                                        this.mane.add(_)
                                }
                            this.mane.position.y = -10,
                                this.mane.position.z = 80,
                                this.face = new h.Mesh(i, this.yellowMat),
                                this.face.position.z = 135,
                                this.mustaches = [],
                                this.mustache1 = new h.Mesh(r, this.greyMat),
                                this.mustache1.position.x = 30,
                                this.mustache1.position.y = -5,
                                this.mustache1.position.z = 175,
                                this.mustache2 = this.mustache1.clone(),
                                this.mustache2.position.x = 35,
                                this.mustache2.position.y = -12,
                                this.mustache3 = this.mustache1.clone(),
                                this.mustache3.position.y = -19,
                                this.mustache3.position.x = 30,
                                this.mustache4 = this.mustache1.clone(),
                                this.mustache4.rotation.z = Math.PI,
                                this.mustache4.position.x = -30,
                                this.mustache5 = new h.Mesh(r, this.blackMat),
                                this.mustache5 = this.mustache2.clone(),
                                this.mustache5.rotation.z = Math.PI,
                                this.mustache5.position.x = -35,
                                this.mustache6 = new h.Mesh(r, this.blackMat),
                                this.mustache6 = this.mustache3.clone(),
                                this.mustache6.rotation.z = Math.PI,
                                this.mustache6.position.x = -30,
                                this.mustaches.push(this.mustache1),
                                this.mustaches.push(this.mustache2),
                                this.mustaches.push(this.mustache3),
                                this.mustaches.push(this.mustache4),
                                this.mustaches.push(this.mustache5),
                                this.mustaches.push(this.mustache6),
                                this.spot1 = new h.Mesh(n, this.redMat),
                                this.spot1.position.x = 39,
                                this.spot1.position.z = 150,
                                this.spot2 = this.spot1.clone(),
                                this.spot2.position.z = 160,
                                this.spot2.position.y = -10,
                                this.spot3 = this.spot1.clone(),
                                this.spot3.position.z = 140,
                                this.spot3.position.y = -15,
                                this.spot4 = this.spot1.clone(),
                                this.spot4.position.z = 150,
                                this.spot4.position.y = -20,
                                this.spot5 = this.spot1.clone(),
                                this.spot5.position.x = -39,
                                this.spot6 = this.spot2.clone(),
                                this.spot6.position.x = -39,
                                this.spot7 = this.spot3.clone(),
                                this.spot7.position.x = -39,
                                this.spot8 = this.spot4.clone(),
                                this.spot8.position.x = -39,
                                this.leftEye = new h.Mesh(s, this.whiteMat),
                                this.leftEye.position.x = 40,
                                this.leftEye.position.z = 120,
                                this.leftEye.position.y = 25,
                                this.rightEye = new h.Mesh(s, this.whiteMat),
                                this.rightEye.position.x = -40,
                                this.rightEye.position.z = 120,
                                this.rightEye.position.y = 25,
                                this.leftIris = new h.Mesh(l, this.purpleMat),
                                this.leftIris.position.x = 42,
                                this.leftIris.position.z = 120,
                                this.leftIris.position.y = 25,
                                this.rightIris = new h.Mesh(l, this.purpleMat),
                                this.rightIris.position.x = -42,
                                this.rightIris.position.z = 120,
                                this.rightIris.position.y = 25,
                                this.mouth = new h.Mesh(c, this.blackMat),
                                this.mouth.position.z = 171,
                                this.mouth.position.y = -30,
                                this.mouth.scale.set(.5, .5, 1),
                                this.smile = new h.Mesh(u, this.greyMat),
                                this.smile.position.z = 173,
                                this.smile.position.y = -15,
                                this.smile.rotation.z = -Math.PI,
                                this.lips = new h.Mesh(p, this.yellowMat),
                                this.lips.position.z = 165,
                                this.lips.position.y = -45,
                                this.rightEar = new h.Mesh(a, this.yellowMat),
                                this.rightEar.position.x = -50,
                                this.rightEar.position.y = 45,
                                this.rightEar.position.z = 100,
                                this.leftEar = new h.Mesh(a, this.yellowMat),
                                this.leftEar.position.x = 50,
                                this.leftEar.position.y = 45,
                                this.leftEar.position.z = 100,
                                this.nose = new h.Mesh(o, this.greyMat),
                                this.nose.position.z = 170,
                                this.nose.position.y = 25,
                                this.head = new h.Group,
                                this.head.add(this.face),
                                this.head.add(this.mane),
                                this.head.add(this.rightEar),
                                this.head.add(this.leftEar),
                                this.head.add(this.nose),
                                this.head.add(this.leftEye),
                                this.head.add(this.rightEye),
                                this.head.add(this.leftIris),
                                this.head.add(this.rightIris),
                                this.head.add(this.mouth),
                                this.head.add(this.smile),
                                this.head.add(this.lips),
                                this.head.add(this.spot1),
                                this.head.add(this.spot2),
                                this.head.add(this.spot3),
                                this.head.add(this.spot4),
                                this.head.add(this.spot5),
                                this.head.add(this.spot6),
                                this.head.add(this.spot7),
                                this.head.add(this.spot8),
                                this.head.add(this.mustache1),
                                this.head.add(this.mustache2),
                                this.head.add(this.mustache3),
                                this.head.add(this.mustache4),
                                this.head.add(this.mustache5),
                                this.head.add(this.mustache6),
                                this.head.position.y = 60,
                                this.head.position.z = -40,
                                this.group.add(this.body),
                                this.group.add(this.head),
                                this.group.add(this.leftKnee),
                                this.group.add(this.rightKnee),
                                this.group.add(this.backLeftFoot),
                                this.group.add(this.backRightFoot),
                                this.group.add(this.frontRightFoot),
                                this.group.add(this.frontLeftFoot)
                        }
                    }, {
                        key: "cool",
                        value: function (t, e) {
                            this.tHeadRotY = (0,
                                u.rule3)(t, -200, 200, Math.PI / 4, -Math.PI / 4),
                                this.tHeadRotX = (0,
                                    u.rule3)(e, -200, 200, Math.PI / 4, -Math.PI / 4),
                                this.tHeadRotZ = 0,
                                this.tHeadPosX = (0,
                                    u.rule3)(t, -200, 200, -70, 70),
                                this.tHeadPosY = (0,
                                    u.rule3)(e, -140, 260, 100, 20),
                                this.tHeadPosZ = 100,
                                this.tEyeScale = .1,
                                this.tIrisYScale = .1,
                                this.tIrisZScale = 3,
                                this.tIrisPosY = 20,
                                this.tLeftIrisPosZ = 120,
                                this.tRightIrisPosZ = 120,
                                this.tLipsPosX = (0,
                                    u.rule3)(t, -200, 200, -15, 15),
                                this.tLipsPosY = (0,
                                    u.rule3)(e, -200, 200, -45, -40),
                                this.tMouthPosZ = 168,
                                this.tSmilePosX = (0,
                                    u.rule3)(t, -200, 200, -15, 15),
                                this.tSmilePosY = (0,
                                    u.rule3)(e, -200, 200, -20, -8),
                                this.tSmilePosZ = 176,
                                this.tSmileRotZ = (0,
                                    u.rule3)(t, -200, 200, -Math.PI - .3, .3 - Math.PI),
                                this.tRightKneeRotZ = (0,
                                    u.rule3)(t, -200, 200, .3 + Math.PI / 8, .3 - Math.PI / 8),
                                this.tLeftKneeRotZ = (0,
                                    u.rule3)(t, -200, 200, Math.PI / 8 - .3, -.3 - Math.PI / 8),
                                this.updateBody(10),
                                this.mane.rotation.y = -.8 * this.head.rotation.y,
                                this.mane.rotation.x = -.8 * this.head.rotation.x;
                            var i = 2e4 / (t * t + e * e);
                            i = Math.max(Math.min(i, 1), .5),
                                this.windTime += i;
                            for (var n = 0; n < this.maneParts.length; n++) {
                                var r = this.maneParts[n].mesh
                                    , a = this.maneParts[n].amp
                                    , o = this.maneParts[n].zOffset
                                    , s = this.maneParts[n].periodOffset;
                                r.position.z = o + Math.cos(this.windTime + s) * a * i * 2
                            }
                            this.leftEar.rotation.x = Math.cos(this.windTime) * Math.PI / 16 * i,
                                this.rightEar.rotation.x = -Math.cos(this.windTime) * Math.PI / 16 * i;
                            for (var n = 0; n < this.mustaches.length; n++) {
                                var r = this.mustaches[n]
                                    , a = n < 3 ? -Math.PI / 8 : Math.PI / 8;
                                r.rotation.y = a + Math.cos(this.windTime + n) * i * a
                            }
                            for (var n = 0; n < this.bodyVertices.length; n++) {
                                var h = this.bodyInitPositions[n];
                                this.body.geometry.vertices[this.bodyVertices[n]].x = h.x + this.head.position.x
                            }
                            this.body.geometry.verticesNeedUpdate = !0
                        }
                    }, {
                        key: "updateBody",
                        value: function (t) {
                            this.head.rotation.y += (this.tHeadRotY - this.head.rotation.y) / t,
                                this.head.rotation.x += (this.tHeadRotX - this.head.rotation.x) / t,
                                this.head.rotation.z += (this.tHeadRotZ - this.head.rotation.z) / t,
                                this.head.position.x += (this.tHeadPosX - this.head.position.x) / t,
                                this.head.position.y += (this.tHeadPosY - this.head.position.y) / t,
                                this.head.position.z += (this.tHeadPosZ - this.head.position.z) / t,
                                this.leftEye.scale.y += (this.tEyeScale - this.leftEye.scale.y) / (2 * t),
                                this.rightEye.scale.y = this.leftEye.scale.y,
                                this.leftIris.scale.y += (this.tIrisYScale - this.leftIris.scale.y) / (2 * t),
                                this.rightIris.scale.y = this.leftIris.scale.y,
                                this.leftIris.scale.z += (this.tIrisZScale - this.leftIris.scale.z) / (2 * t),
                                this.rightIris.scale.z = this.leftIris.scale.z,
                                this.leftIris.position.y += (this.tIrisPosY - this.leftIris.position.y) / t,
                                this.rightIris.position.y = this.leftIris.position.y,
                                this.leftIris.position.z += (this.tLeftIrisPosZ - this.leftIris.position.z) / t,
                                this.rightIris.position.z += (this.tRightIrisPosZ - this.rightIris.position.z) / t,
                                this.rightKnee.rotation.z += (this.tRightKneeRotZ - this.rightKnee.rotation.z) / t,
                                this.leftKnee.rotation.z += (this.tLeftKneeRotZ - this.leftKnee.rotation.z) / t,
                                this.lips.position.x += (this.tLipsPosX - this.lips.position.x) / t,
                                this.lips.position.y += (this.tLipsPosY - this.lips.position.y) / t,
                                this.smile.position.x += (this.tSmilePosX - this.smile.position.x) / t,
                                this.mouth.position.z += (this.tMouthPosZ - this.mouth.position.z) / t,
                                this.smile.position.z += (this.tSmilePosZ - this.smile.position.z) / t,
                                this.smile.position.y += (this.tSmilePosY - this.smile.position.y) / t,
                                this.smile.rotation.z += (this.tSmileRotZ - this.smile.rotation.z) / t
                        }
                    }, {
                        key: "look",
                        value: function (t, e) {
                            this.isSwinging = !1,
                                TweenMax.killTweensOf(this.head.rotation),
                                this.tHeadRotY = (0,
                                    u.rule3)(t, -200, 200, -Math.PI / 4, Math.PI / 4),
                                this.tHeadRotX = (0,
                                    u.rule3)(e, -200, 200, -Math.PI / 4, Math.PI / 4),
                                this.tHeadRotZ = 0,
                                this.tHeadPosX = (0,
                                    u.rule3)(t, -200, 200, 70, -70),
                                this.tHeadPosY = (0,
                                    u.rule3)(e, -140, 260, 20, 100),
                                this.tHeadPosZ = -40,
                                this.tEyeScale = 1,
                                this.tIrisYScale = 1,
                                this.tIrisZScale = 1,
                                this.tIrisPosY = (0,
                                    u.rule3)(e, -200, 200, 35, 15),
                                this.tLeftIrisPosZ = (0,
                                    u.rule3)(t, -200, 200, 130, 110),
                                this.tRightIrisPosZ = (0,
                                    u.rule3)(t, -200, 200, 110, 130),
                                this.tLipsPosX = 0,
                                this.tLipsPosY = -45,
                                this.tSmilePosX = 0,
                                this.tMouthPosZ = 174,
                                this.tSmilePosZ = 173,
                                this.tSmilePosY = -15,
                                this.tSmileRotZ = -Math.PI,
                                this.tRightKneeRotZ = (0,
                                    u.rule3)(t, -200, 200, .3 - Math.PI / 8, .3 + Math.PI / 8),
                                this.tLeftKneeRotZ = (0,
                                    u.rule3)(t, -200, 200, -.3 - Math.PI / 8, Math.PI / 8 - .3),
                                this.updateBody(10),
                                this.mane.rotation.y = 0,
                                this.mane.rotation.x = 0;
                            for (var i = 0; i < this.maneParts.length; i++) {
                                var n = this.maneParts[i].mesh;
                                n.position.z = 0,
                                    n.rotation.y = 0
                            }
                            for (var i = 0; i < this.mustaches.length; i++) {
                                var n = this.mustaches[i];
                                n.rotation.y = 0
                            }
                            for (var i = 0; i < this.bodyVertices.length; i++) {
                                var r = this.bodyInitPositions[i];
                                this.body.geometry.vertices[this.bodyVertices[i]].x = r.x + this.head.position.x
                            }
                            this.body.geometry.verticesNeedUpdate = !0
                        }
                    }, {
                        key: "fix",
                        value: function () {
                            this.isSwinging = !1,
                                TweenMax.killTweensOf(this.head.rotation),
                                this.tHeadRotY = 0,
                                this.tHeadRotX = 0,
                                this.tHeadRotZ = 0,
                                this.tHeadPosX = 0,
                                this.tHeadPosY = 60,
                                this.tHeadPosZ = -40,
                                this.tEyeScale = 1,
                                this.tIrisYScale = 1,
                                this.tIrisZScale = 1,
                                this.tIrisPosY = 25,
                                this.tLeftIrisPosZ = 120,
                                this.tRightIrisPosZ = 120,
                                this.tLipsPosX = 0,
                                this.tLipsPosY = -45,
                                this.tSmilePosX = 0,
                                this.tMouthPosZ = 174,
                                this.tSmilePosZ = 173,
                                this.tSmilePosY = -15,
                                this.tSmileRotZ = -Math.PI,
                                this.tRightKneeRotZ = .3,
                                this.tLeftKneeRotZ = .3,
                                this.updateBody(10),
                                this.mane.rotation.y = 0,
                                this.mane.rotation.x = 0;
                            for (var t = 0; t < this.maneParts.length; t++) {
                                var e = this.maneParts[t].mesh;
                                e.position.z = 0,
                                    e.rotation.y = 0
                            }
                            for (var t = 0; t < this.mustaches.length; t++) {
                                var e = this.mustaches[t];
                                e.rotation.y = 0
                            }
                            for (var t = 0; t < this.bodyVertices.length; t++) {
                                var i = this.bodyInitPositions[t];
                                this.body.geometry.vertices[this.bodyVertices[t]].x = i.x + this.head.position.x
                            }
                            this.body.geometry.verticesNeedUpdate = !0
                        }
                    }, {
                        key: "idle",
                        value: function () {
                            var t = this;
                            if (this.isSwinging = !1,
                                TweenMax.killTweensOf(this.head.rotation),
                                !(this.isIdeling || Math.random() < .9)) {
                                this.isIdeling = !0;
                                var e = 200 * Math.random() - 100
                                    , i = 200 * Math.random() - 100
                                    , n = 1 + 2 * Math.random();
                                TweenMax.to(this.idelingPos, n, {
                                    x: e,
                                    y: i,
                                    ease: Power4.easeInOut,
                                    onUpdate: function () {
                                        t.look(t.idelingPos.x, t.idelingPos.y)
                                    },
                                    onComplete: function () {
                                        t.isIdeling = !1
                                    }
                                })
                            }
                        }
                    }, {
                        key: "swing",
                        value: function () {
                            var t = this;
                            this.isSwinging || (this.isSwinging = !0,
                                this.smile.position.z = 176,
                                this.smile.position.y = -20,
                                this.mouth.position.z = 168,
                                TweenMax.to(this.head.rotation, .5, {
                                    z: -Math.PI / 16,
                                    y: Math.PI / 16,
                                    x: 0,
                                    ease: Power4.easeInOut,
                                    onComplete: function () {
                                        TweenMax.to(t.head.rotation, 1, {
                                            z: Math.PI / 16,
                                            y: -Math.PI / 16,
                                            x: 0,
                                            ease: Back.easeInOut,
                                            yoyo: !0,
                                            repeat: -1
                                        })
                                    }
                                }))
                        }
                    }]),
                    e
            }(c.default);
        e.default = p
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function a(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , s = i(0)
            , h = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(s)
            , l = i(2)
            , c = function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }(l)
            , u = function (t) {
                function e() {
                    n(this, e);
                    var t = r(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this));
                    return t.maxSpeed = 48,
                        t.idelingPos = {
                            x: 0,
                            y: 0,
                            eLx: 0,
                            eRx: 0
                        },
                        t
                }
                return a(e, t),
                    o(e, [{
                        key: "createGeometry",
                        value: function () {
                            var t = new h.MeshPhongMaterial({
                                color: 1050375,
                                shading: h.FlatShading
                            })
                                , e = new h.MeshPhongMaterial({
                                    color: 11815737,
                                    shininess: 0,
                                    shading: h.FlatShading
                                })
                                , i = (new h.MeshPhongMaterial({
                                    color: 8044430,
                                    shininess: 0,
                                    shading: h.FlatShading
                                }),
                                    new h.MeshPhongMaterial({
                                        color: 14442309,
                                        shininess: 0,
                                        shading: h.FlatShading
                                    }))
                                , n = new h.MeshPhongMaterial({
                                    color: 14711383,
                                    shading: h.FlatShading
                                })
                                , r = new h.MeshPhongMaterial({
                                    color: 10786697,
                                    shading: h.FlatShading
                                });
                            new h.MeshPhongMaterial({
                                color: 16752293,
                                shading: h.FlatShading
                            });
                            this.status = "running",
                                this.runningCycle = 0,
                                this.group = new h.Group,
                                this.group.name = "rabbit",
                                this.body = new h.Group,
                                this.group.add(this.body);
                            var a = new h.CubeGeometry(7, 7, 10, 1);
                            this.torso = new h.Mesh(a, e),
                                this.torso.position.z = 0,
                                this.torso.position.y = 7,
                                this.torso.castShadow = !0,
                                this.body.add(this.torso);
                            var o = new h.CubeGeometry(9, 9, 5, 1);
                            this.pants = new h.Mesh(o, r),
                                this.pants.position.z = -3,
                                this.pants.position.y = 0,
                                this.pants.castShadow = !0,
                                this.torso.add(this.pants);
                            var s = new h.CubeGeometry(3, 3, 3, 1);
                            s.applyMatrix((new h.Matrix4).makeTranslation(0, 0, -2)),
                                this.tail = new h.Mesh(s, n),
                                this.tail.position.z = -4,
                                this.tail.position.y = 5,
                                this.tail.castShadow = !0,
                                this.torso.add(this.tail),
                                this.torso.rotation.x = -Math.PI / 8;
                            var l = new h.CubeGeometry(10, 10, 13, 1);
                            l.applyMatrix((new h.Matrix4).makeTranslation(0, 0, 7.5)),
                                this.head = new h.Mesh(l, e),
                                this.head.position.z = 2,
                                this.head.position.y = 11,
                                this.head.castShadow = !0,
                                this.body.add(this.head);
                            var c = new h.CubeGeometry(1, 4, 4, 1);
                            this.cheekR = new h.Mesh(c, i),
                                this.cheekR.position.x = -5,
                                this.cheekR.position.z = 7,
                                this.cheekR.position.y = -2.5,
                                this.cheekR.castShadow = !0,
                                this.head.add(this.cheekR),
                                this.cheekL = this.cheekR.clone(),
                                this.cheekL.position.x = -this.cheekR.position.x,
                                this.head.add(this.cheekL);
                            var u = new h.CubeGeometry(6, 6, 3, 1);
                            this.nose = new h.Mesh(u, n),
                                this.nose.position.z = 13.5,
                                this.nose.position.y = 2.6,
                                this.nose.castShadow = !0,
                                this.head.add(this.nose);
                            var p = new h.CubeGeometry(4, 2, 4, 1);
                            p.applyMatrix((new h.Matrix4).makeTranslation(0, 0, 3)),
                                p.applyMatrix((new h.Matrix4).makeRotationX(Math.PI / 12)),
                                this.mouth = new h.Mesh(p, e),
                                this.mouth.position.z = 8,
                                this.mouth.position.y = -4,
                                this.mouth.castShadow = !0,
                                this.head.add(this.mouth);
                            var d = new h.CubeGeometry(3, 3, 3, 1);
                            this.pawFR = new h.Mesh(d, n),
                                this.pawFR.position.x = -2,
                                this.pawFR.position.z = 6,
                                this.pawFR.position.y = 1.5,
                                this.pawFR.castShadow = !0,
                                this.body.add(this.pawFR),
                                this.pawFL = this.pawFR.clone(),
                                this.pawFL.position.x = -this.pawFR.position.x,
                                this.pawFL.castShadow = !0,
                                this.body.add(this.pawFL);
                            var f = new h.CubeGeometry(3, 3, 6, 1);
                            this.pawBL = new h.Mesh(f, n),
                                this.pawBL.position.y = 1.5,
                                this.pawBL.position.z = 0,
                                this.pawBL.position.x = 5,
                                this.pawBL.castShadow = !0,
                                this.body.add(this.pawBL),
                                this.pawBR = this.pawBL.clone(),
                                this.pawBR.position.x = -this.pawBL.position.x,
                                this.pawBR.castShadow = !0,
                                this.body.add(this.pawBR);
                            var m = new h.CubeGeometry(7, 18, 2, 1);
                            m.vertices[6].x += 2,
                                m.vertices[6].z += .5,
                                m.vertices[7].x += 2,
                                m.vertices[7].z -= .5,
                                m.vertices[2].x -= 2,
                                m.vertices[2].z -= .5,
                                m.vertices[3].x -= 2,
                                m.vertices[3].z += .5,
                                m.applyMatrix((new h.Matrix4).makeTranslation(0, 9, 0)),
                                this.earL = new h.Mesh(m, e),
                                this.earL.position.x = 2,
                                this.earL.position.z = 2.5,
                                this.earL.position.y = 5,
                                this.earL.rotation.z = -Math.PI / 12,
                                this.earL.castShadow = !0,
                                this.head.add(this.earL),
                                this.earR = this.earL.clone(),
                                this.earR.position.x = -this.earL.position.x,
                                this.earR.rotation.z = -this.earL.rotation.z,
                                this.earR.castShadow = !0,
                                this.head.add(this.earR);
                            var g = new h.CubeGeometry(2, 4, 4);
                            this.eyeL = new h.Mesh(g, r),
                                this.eyeL.position.x = 5,
                                this.eyeL.position.z = 5.5,
                                this.eyeL.position.y = 2.9,
                                this.eyeL.castShadow = !0,
                                this.head.add(this.eyeL);
                            var v = new h.CubeGeometry(.6, 2, 2);
                            this.iris = new h.Mesh(v, t),
                                this.iris.position.x = 1.2,
                                this.iris.position.y = 1,
                                this.iris.position.z = 1,
                                this.eyeL.add(this.iris),
                                this.eyeR = this.eyeL.clone(),
                                this.eyeR.children[0].position.x = -this.iris.position.x,
                                this.eyeR.position.x = -this.eyeL.position.x,
                                this.head.add(this.eyeR)
                        }
                    }, {
                        key: "fix",
                        value: function () {
                            this.isSwinging = !1,
                                TweenMax.killTweensOf(this.eyeL.scale),
                                TweenMax.killTweensOf(this.eyeR.scale),
                                TweenMax.killTweensOf(this.head.position),
                                TweenMax.killTweensOf(this.head.rotation),
                                TweenMax.killTweensOf(this.torso.rotation),
                                TweenMax.killTweensOf(this.torso.position),
                                TweenMax.killTweensOf(this.pants.position),
                                TweenMax.killTweensOf(this.pants.rotation),
                                TweenMax.killTweensOf(this.tail.position),
                                TweenMax.killTweensOf(this.tail.rotation),
                                TweenMax.killTweensOf(this.cheekR.rotation),
                                TweenMax.killTweensOf(this.cheekR.position),
                                TweenMax.killTweensOf(this.cheekL.position),
                                TweenMax.killTweensOf(this.cheekL.rotation),
                                TweenMax.killTweensOf(this.mouth.rotation),
                                TweenMax.killTweensOf(this.mouth.position),
                                TweenMax.killTweensOf(this.pawFR.position),
                                TweenMax.killTweensOf(this.pawFR.rotation),
                                TweenMax.killTweensOf(this.pawFL.position),
                                TweenMax.killTweensOf(this.pawFL.rotation),
                                TweenMax.killTweensOf(this.pawBR.position),
                                TweenMax.killTweensOf(this.pawBR.rotation),
                                TweenMax.killTweensOf(this.pawBL.position),
                                TweenMax.killTweensOf(this.pawBL.rotation),
                                TweenMax.killTweensOf(this.earL.rotation),
                                TweenMax.killTweensOf(this.earL.position),
                                TweenMax.killTweensOf(this.earR.rotation),
                                TweenMax.killTweensOf(this.earR.position),
                                TweenMax.killTweensOf(this.iris.rotation),
                                TweenMax.killTweensOf(this.iris.position),
                                TweenMax.killTweensOf(this.eyeR.children[0].position),
                                TweenMax.killTweensOf(this.eyeR.children[0].rotation),
                                TweenMax.killTweensOf(this.idelingPos),
                                this.status = "sitting",
                                this.body.position.y = 0,
                                this.body.rotation.x = 0,
                                this.torso.position.z = 0,
                                this.torso.position.y = 7,
                                this.torso.rotation.x = 0,
                                this.pants.position.z = -3,
                                this.pants.position.y = 0,
                                this.tail.position.z = -4,
                                this.tail.position.y = 5,
                                this.head.position.z += (2 - this.head.position.z) / 2,
                                this.head.position.y += (11 - this.head.position.y) / 2,
                                this.head.rotation.x += (0 - this.head.rotation.x) / 2,
                                this.head.rotation.y += (0 - this.head.rotation.y) / 2,
                                this.cheekR.position.x = -5,
                                this.cheekR.position.z = 7,
                                this.cheekR.position.y = -2.5,
                                this.cheekL.position.x = -this.cheekR.position.x,
                                this.nose.position.z = 13.5,
                                this.nose.position.y = 2.6,
                                this.mouth.position.z = 8,
                                this.mouth.position.y = -4,
                                this.mouth.rotation.x = 0,
                                this.pawFR.rotation.x += (0 - this.pawFR.rotation.x) / 2,
                                this.pawFR.position.x += (-2 - this.pawFR.position.x) / 2,
                                this.pawFR.position.z += (6 - this.pawFR.position.z) / 2,
                                this.pawFR.position.y += (1.5 - this.pawFR.position.y) / 2,
                                this.pawFL.position.x += (2 - this.pawFL.position.x) / 2,
                                this.pawFL.rotation.x += (0 - this.pawFL.rotation.x) / 2,
                                this.pawFL.position.z += (6 - this.pawFL.position.z) / 2,
                                this.pawFL.position.y += (1.5 - this.pawFL.position.y) / 2,
                                this.pawBL.position.y += (1.5 - this.pawBL.position.y) / 2,
                                this.pawBL.position.z += (0 - this.pawBL.position.z) / 2,
                                this.pawBL.position.x += (5 - this.pawBL.position.x) / 2,
                                this.pawBL.rotation.x += (0 - this.pawBL.rotation.x) / 2,
                                this.pawBR.position.x += (-5 - this.pawBR.position.x) / 2,
                                this.pawBR.position.y += (1.5 - this.pawBR.position.y) / 2,
                                this.pawBR.rotation.x += (0 - this.pawBR.rotation.x) / 2,
                                this.pawBR.position.z += (0 - this.pawBR.position.z) / 2,
                                this.eyeR.scale.y = this.eyeL.scale.y = 1,
                                this.earL.position.x += (2 - this.earL.position.x) / 2,
                                this.earL.position.z += (2.5 - this.earL.position.z) / 2,
                                this.earL.position.y += (5 - this.earL.position.y) / 2,
                                this.earL.rotation.z += (-Math.PI / 12 - this.earL.rotation.z) / 2,
                                this.earL.rotation.x += (0 - this.earL.rotation.x) / 2,
                                this.earR.position.x += (-2 - this.earR.position.x) / 2,
                                this.earR.rotation.z += (Math.PI / 12 - this.earR.rotation.z) / 2,
                                this.earR.rotation.x += (0 - this.earR.rotation.x) / 2,
                                this.eyeL.position.x = 5,
                                this.eyeL.position.z = 5.5,
                                this.eyeL.position.y = 2.9,
                                this.iris.position.x = 1.2,
                                this.iris.position.y = 1,
                                this.iris.position.z = 1,
                                this.eyeR.children[0].position.x = -this.iris.position.x,
                                this.eyeR.position.x = -this.eyeL.position.x
                        }
                    }, {
                        key: "run",
                        value: function (t, e) {
                            this.status = "running";
                            var i = Math.min(e, this.maxSpeed);
                            this.runningCycle += t * i * .7,
                                this.runningCycle = this.runningCycle % (2 * Math.PI);
                            var n = this.runningCycle;
                            this.body.position.y = 6 + 4 * Math.sin(n - Math.PI / 2),
                                this.body.rotation.x = .2 + 4 * Math.sin(n - Math.PI / 2) * .1,
                                this.torso.rotation.x = 4 * Math.sin(n - Math.PI / 2) * .1,
                                this.torso.position.y = 7 + 4 * Math.sin(n - Math.PI / 2) * .5,
                                this.mouth.rotation.x = Math.PI / 16 + 4 * Math.cos(n) * .05,
                                this.head.position.z = 2 + 4 * Math.sin(n - Math.PI / 2) * .5,
                                this.head.position.y = 8 + 4 * Math.cos(n - Math.PI / 2) * .7,
                                this.head.rotation.x = 4 * Math.sin(n + Math.PI) * .1 - .2,
                                this.earL.rotation.x = .8 * Math.cos(-Math.PI / 2 + n),
                                this.earR.rotation.x = 1.2 * Math.cos(-Math.PI / 2 + .2 + n),
                                this.eyeR.scale.y = this.eyeL.scale.y = .7 + .6 * Math.abs(Math.cos(-Math.PI / 4 + .5 * n)),
                                this.tail.rotation.x = 4 * Math.cos(Math.PI / 2 + n) * .3,
                                this.pawFR.position.y = 1.5 + 4 * Math.sin(n),
                                this.pawFR.rotation.x = Math.cos(n) * Math.PI / 4,
                                this.pawFR.position.z = 6 - 4 * Math.cos(n) * 2,
                                this.pawFL.position.y = 1.5 + 4 * Math.sin(.2 + n),
                                this.pawFL.rotation.x = Math.cos(n) * Math.PI / 4,
                                this.pawFL.position.z = 6 - 4 * Math.cos(.2 + n) * 2,
                                this.pawBR.position.y = 1.5 + 4 * Math.sin(Math.PI + n),
                                this.pawBR.rotation.x = Math.cos(n + 1.5 * Math.PI) * Math.PI / 3,
                                this.pawBR.position.z = 4 * -Math.cos(Math.PI + n),
                                this.pawBL.position.y = 1.5 + 4 * Math.sin(Math.PI + n),
                                this.pawBL.rotation.x = Math.cos(n + 1.5 * Math.PI) * Math.PI / 3,
                                this.pawBL.position.z = 4 * -Math.cos(Math.PI + n)
                        }
                    }, {
                        key: "jump",
                        value: function (t) {
                            var e = this;
                            if ("jumping" != this.status) {
                                this.status = "jumping";
                                var i = 10 / t;
                                TweenMax.to(this.earL.rotation, i, {
                                    x: "+=.3",
                                    ease: Back.easeOut
                                }),
                                    TweenMax.to(this.earR.rotation, i, {
                                        x: "-=.3",
                                        ease: Back.easeOut
                                    }),
                                    TweenMax.to(this.pawFL.rotation, i, {
                                        x: "+=.7",
                                        ease: Back.easeOut
                                    }),
                                    TweenMax.to(this.pawFR.rotation, i, {
                                        x: "-=.7",
                                        ease: Back.easeOut
                                    }),
                                    TweenMax.to(this.pawBL.rotation, i, {
                                        x: "+=.7",
                                        ease: Back.easeOut
                                    }),
                                    TweenMax.to(this.pawBR.rotation, i, {
                                        x: "-=.7",
                                        ease: Back.easeOut
                                    }),
                                    TweenMax.to(this.tail.rotation, i, {
                                        x: "+=1",
                                        ease: Back.easeOut
                                    }),
                                    TweenMax.to(this.mouth.rotation, i, {
                                        x: .5,
                                        ease: Back.easeOut
                                    }),
                                    TweenMax.to(this.group.position, i / 2, {
                                        y: 45,
                                        ease: Power2.easeOut
                                    }),
                                    TweenMax.to(this.group.position, i / 2, {
                                        y: 0,
                                        ease: Power4.easeIn,
                                        delay: i / 2,
                                        onComplete: function () {
                                            e.status = "running"
                                        }
                                    })
                            }
                        }
                    }, {
                        key: "nod",
                        value: function () {
                            var t = this
                                , e = .5 + Math.random()
                                , i = -Math.PI / 6 + Math.random() * Math.PI / 3;
                            TweenMax.to(this.head.rotation, e, {
                                y: i,
                                ease: Power4.easeInOut,
                                onComplete: function () {
                                    t.nod()
                                }
                            });
                            var n = Math.PI / 4 + Math.random() * Math.PI / 6
                                , r = Math.PI / 4 + Math.random() * Math.PI / 6;
                            TweenMax.to(this.earL.rotation, e, {
                                x: n,
                                ease: Power4.easeInOut
                            }),
                                TweenMax.to(this.earR.rotation, e, {
                                    x: r,
                                    ease: Power4.easeInOut
                                });
                            var a = Math.random() * Math.PI / 2
                                , o = 8 * Math.random() - 4;
                            TweenMax.to(this.pawBL.rotation, e / 2, {
                                x: a,
                                ease: Power1.easeInOut,
                                yoyo: !0,
                                repeat: 2
                            }),
                                TweenMax.to(this.pawBL.position, e / 2, {
                                    y: o,
                                    ease: Power1.easeInOut,
                                    yoyo: !0,
                                    repeat: 2
                                });
                            var s = Math.random() * Math.PI / 2
                                , h = 8 * Math.random() - 4;
                            TweenMax.to(this.pawBR.rotation, e / 2, {
                                x: s,
                                ease: Power1.easeInOut,
                                yoyo: !0,
                                repeat: 2
                            }),
                                TweenMax.to(this.pawBR.position, e / 2, {
                                    y: h,
                                    ease: Power1.easeInOut,
                                    yoyo: !0,
                                    repeat: 2
                                });
                            var l = Math.random() * Math.PI / 2
                                , c = 8 * Math.random() - 4;
                            TweenMax.to(this.pawFL.rotation, e / 2, {
                                x: l,
                                ease: Power1.easeInOut,
                                yoyo: !0,
                                repeat: 2
                            }),
                                TweenMax.to(this.pawFL.position, e / 2, {
                                    y: c,
                                    ease: Power1.easeInOut,
                                    yoyo: !0,
                                    repeat: 2
                                });
                            var u = Math.random() * Math.PI / 2
                                , p = 8 * Math.random() - 4;
                            TweenMax.to(this.pawFR.rotation, e / 2, {
                                x: u,
                                ease: Power1.easeInOut,
                                yoyo: !0,
                                repeat: 2
                            }),
                                TweenMax.to(this.pawFR.position, e / 2, {
                                    y: p,
                                    ease: Power1.easeInOut,
                                    yoyo: !0,
                                    repeat: 2
                                });
                            var d = Math.random() * Math.PI / 8;
                            TweenMax.to(this.mouth.rotation, e, {
                                x: d,
                                ease: Power1.easeInOut
                            });
                            var f = 2 * Math.random() - 1
                                , m = 2 * Math.random() - 1
                                , g = this.iris
                                , v = this.eyeR.children[0];
                            TweenMax.to([g.position, v.position], e, {
                                y: f,
                                z: m,
                                ease: Power1.easeInOut
                            }),
                                Math.random() > .2 && TweenMax.to([this.eyeR.scale, this.eyeL.scale], e / 8, {
                                    y: 0,
                                    ease: Power1.easeInOut,
                                    yoyo: !0,
                                    repeat: 1
                                })
                        }
                    }, {
                        key: "hang",
                        value: function () {
                            var t = this
                                , e = Power4.easeOut;
                            TweenMax.killTweensOf(this.eyeL.scale),
                                TweenMax.killTweensOf(this.eyeR.scale),
                                this.body.rotation.x = 0,
                                this.torso.rotation.x = 0,
                                this.body.position.y = 0,
                                this.torso.position.y = 7,
                                TweenMax.to(this.group.rotation, 1, {
                                    y: 0,
                                    ease: e
                                }),
                                TweenMax.to(this.group.position, 1, {
                                    y: -7,
                                    z: 6,
                                    ease: e
                                }),
                                TweenMax.to(this.head.rotation, 1, {
                                    x: Math.PI / 6,
                                    ease: e,
                                    onComplete: function () {
                                        t.nod()
                                    }
                                }),
                                TweenMax.to(this.earL.rotation, 1, {
                                    x: Math.PI / 3,
                                    ease: e
                                }),
                                TweenMax.to(this.earR.rotation, 1, {
                                    x: Math.PI / 3,
                                    ease: e
                                }),
                                TweenMax.to(this.pawFL.position, 1, {
                                    y: -1,
                                    z: 3,
                                    ease: e
                                }),
                                TweenMax.to(this.pawFR.position, 1, {
                                    y: -1,
                                    z: 3,
                                    ease: e
                                }),
                                TweenMax.to(this.pawBL.position, 1, {
                                    y: -2,
                                    z: -3,
                                    ease: e
                                }),
                                TweenMax.to(this.pawBR.position, 1, {
                                    y: -2,
                                    z: -3,
                                    ease: e
                                }),
                                TweenMax.to(this.eyeL.scale, 1, {
                                    y: 1,
                                    ease: e
                                }),
                                TweenMax.to(this.eyeR.scale, 1, {
                                    y: 1,
                                    ease: e
                                })
                        }
                    }, {
                        key: "look",
                        value: function (t, e, i, n) {
                            this.isSwinging = !1,
                                TweenMax.killTweensOf(this.head.rotation),
                                this.head.rotation.x = t,
                                this.head.rotation.y = e,
                                this.earL.rotation.x = i,
                                this.earL.rotation.y = n,
                                this.earR.rotation.x = .5 * t - .2,
                                this.earR.rotation.y = .4 * e - .1
                        }
                    }, {
                        key: "idle",
                        value: function () {
                            var t = this;
                            if (this.isSwinging = !1,
                                TweenMax.killTweensOf(this.head.rotation),
                                !(this.isIdeling || Math.random() < .99)) {
                                this.isIdeling = !0;
                                var e = -Math.PI / 6 + Math.random() * Math.PI / 3
                                    , i = -Math.PI / 6 + Math.random() * Math.PI / 3
                                    , n = -Math.PI / 6 + Math.random() * Math.PI / 3
                                    , r = -Math.PI / 6 + Math.random() * Math.PI / 3
                                    , a = .5 + 2 * Math.random();
                                TweenMax.to(this.idelingPos, a, {
                                    x: e,
                                    y: i,
                                    eRx: n,
                                    eLx: r,
                                    ease: Power4.easeInOut,
                                    onUpdate: function () {
                                        t.look(t.idelingPos.x, t.idelingPos.y, t.idelingPos.eLx, t.idelingPos.eRx)
                                    },
                                    onComplete: function () {
                                        t.isIdeling = !1
                                    }
                                })
                            }
                        }
                    }, {
                        key: "swing",
                        value: function () {
                            var t = this;
                            this.isSwinging || (this.isSwinging = !0,
                                TweenMax.to(this.head.rotation, .5, {
                                    z: -Math.PI / 16,
                                    y: Math.PI / 16,
                                    x: 0,
                                    ease: Power4.easeInOut,
                                    onComplete: function () {
                                        TweenMax.to(t.head.rotation, 1, {
                                            z: Math.PI / 16,
                                            y: -Math.PI / 16,
                                            x: 0,
                                            ease: Back.easeInOut,
                                            yoyo: !0,
                                            repeat: -1
                                        })
                                    }
                                }))
                        }
                    }]),
                    e
            }(c.default);
        e.default = u
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , a = i(1)
            , o = function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }(a)
            , s = null
            , h = function () {
                function t() {
                    if (n(this, t),
                        s)
                        return s;
                    this.bgr1 = document.getElementsByClassName("bgr1")[0],
                        this.bgr2 = document.getElementsByClassName("bgr2")[0],
                        this.bgrBack = this.bgr1,
                        this.bgrFront = this.bgr2,
                        s = this
                }
                return r(t, [{
                    key: "update",
                    value: function (t, e, i) {
                        var n = this;
                        TweenMax.set(this.bgrFront, {
                            backgroundColor: t
                        }),
                            "right" == e ? TweenMax.set(this.bgrFront, {
                                x: o.default.winWidth
                            }) : TweenMax.set(this.bgrFront, {
                                x: 0
                            }),
                            TweenMax.to(this.bgrFront, 1, {
                                x: 0,
                                width: "100%",
                                ease: Power4.easeInOut,
                                onComplete: function () {
                                    n.bgrFront == n.bgr2 ? (n.bgrFront = n.bgr1,
                                        n.bgrBack = n.bgr2) : (n.bgrFront = n.bgr2,
                                            n.bgrBack = n.bgr1),
                                        TweenMax.set(n.bgrBack, {
                                            zIndex: 0
                                        }),
                                        TweenMax.set(n.bgrFront, {
                                            zIndex: 1,
                                            width: "0%"
                                        }),
                                        "function" == typeof i && i()
                                }
                            })
                    }
                }]),
                    t
            }();
        e.default = h
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , a = function () {
                function t() {
                    n(this, t),
                        this.gaAvailable = "function" == typeof ga
                }
                return r(t, [{
                    key: "event",
                    value: function (t, e, i, n) {
                        this.gaAvailable && ga("send", "event", t, e, i, n)
                    }
                }, {
                    key: "sendPage",
                    value: function () {
                        this.gaAvailable && ga("send", "pageview", {
                            page: location.pathname + location.search + location.hash
                        })
                    }
                }]),
                    t
            }();
        e.default = new a
    }
    , function (t, e, i) {
        (function (i) {
            var n, r;
            /*!
     * VERSION: 1.20.2
     * DATE: 2017-06-30
     * UPDATES AND DOCS AT: http://greensock.com
     *
     * @license Copyright (c) 2008-2017, GreenSock. All rights reserved.
     * This work is subject to the terms at http://greensock.com/standard-license or for
     * Club GreenSock members, the software agreement that was issued with your membership.
     * 
     * @author: Jack Doyle, jack@greensock.com
     */
            !function (i, a) {
                "use strict";
                var o = {}
                    , s = i.document
                    , h = i.GreenSockGlobals = i.GreenSockGlobals || i;
                if (!h.TweenLite) {
                    var l, c, u, p, d, f = function (t) {
                        var e, i = t.split("."), n = h;
                        for (e = 0; e < i.length; e++)
                            n[i[e]] = n = n[i[e]] || {};
                        return n
                    }, m = f("com.greensock"), g = function (t) {
                        var e, i = [], n = t.length;
                        for (e = 0; e !== n; i.push(t[e++]))
                            ;
                        return i
                    }, v = function () { }, y = function () {
                        var t = Object.prototype.toString
                            , e = t.call([]);
                        return function (i) {
                            return null != i && (i instanceof Array || "object" == typeof i && !!i.push && t.call(i) === e)
                        }
                    }(), _ = {}, x = function (i, a, s, l) {
                        this.sc = _[i] ? _[i].sc : [],
                            _[i] = this,
                            this.gsClass = null,
                            this.func = s;
                        var c = [];
                        this.check = function (u) {
                            for (var p, d, m, g, v = a.length, y = v; --v > -1;)
                                (p = _[a[v]] || new x(a[v], [])).gsClass ? (c[v] = p.gsClass,
                                    y--) : u && p.sc.push(this);
                            if (0 === y && s) {
                                if (d = ("com.greensock." + i).split("."),
                                    m = d.pop(),
                                    g = f(d.join("."))[m] = this.gsClass = s.apply(s, c),
                                    l)
                                    if (h[m] = o[m] = g,
                                        void 0 !== t && t.exports)
                                        if ("TweenLite" === i) {
                                            t.exports = o.TweenLite = g;
                                            for (v in o)
                                                g[v] = o[v]
                                        } else
                                            o.TweenLite && (o.TweenLite[m] = g);
                                    else
                                        n = [],
                                            void 0 !== (r = function () {
                                                return g
                                            }
                                                .apply(e, n)) && (t.exports = r);
                                for (v = 0; v < this.sc.length; v++)
                                    this.sc[v].check()
                            }
                        }
                            ,
                            this.check(!0)
                    }, w = i._gsDefine = function (t, e, i, n) {
                        return new x(t, e, i, n)
                    }
                        , b = m._class = function (t, e, i) {
                            return e = e || function () { }
                                ,
                                w(t, [], function () {
                                    return e
                                }, i),
                                e
                        }
                        ;
                    w.globals = h;
                    var M = [0, 0, 1, 1]
                        , T = b("easing.Ease", function (t, e, i, n) {
                            this._func = t,
                                this._type = i || 0,
                                this._power = n || 0,
                                this._params = e ? M.concat(e) : M
                        }, !0)
                        , P = T.map = {}
                        , S = T.register = function (t, e, i, n) {
                            for (var r, a, o, s, h = e.split(","), l = h.length, c = (i || "easeIn,easeOut,easeInOut").split(","); --l > -1;)
                                for (a = h[l],
                                    r = n ? b("easing." + a, null, !0) : m.easing[a] || {},
                                    o = c.length; --o > -1;)
                                    s = c[o],
                                        P[a + "." + s] = P[s + a] = r[s] = t.getRatio ? t : t[s] || new t
                        }
                        ;
                    for (u = T.prototype,
                        u._calcEnd = !1,
                        u.getRatio = function (t) {
                            if (this._func)
                                return this._params[0] = t,
                                    this._func.apply(null, this._params);
                            var e = this._type
                                , i = this._power
                                , n = 1 === e ? 1 - t : 2 === e ? t : t < .5 ? 2 * t : 2 * (1 - t);
                            return 1 === i ? n *= n : 2 === i ? n *= n * n : 3 === i ? n *= n * n * n : 4 === i && (n *= n * n * n * n),
                                1 === e ? 1 - n : 2 === e ? n : t < .5 ? n / 2 : 1 - n / 2
                        }
                        ,
                        l = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"],
                        c = l.length; --c > -1;)
                        u = l[c] + ",Power" + c,
                            S(new T(null, null, 1, c), u, "easeOut", !0),
                            S(new T(null, null, 2, c), u, "easeIn" + (0 === c ? ",easeNone" : "")),
                            S(new T(null, null, 3, c), u, "easeInOut");
                    P.linear = m.easing.Linear.easeIn,
                        P.swing = m.easing.Quad.easeInOut;
                    var A = b("events.EventDispatcher", function (t) {
                        this._listeners = {},
                            this._eventTarget = t || this
                    });
                    u = A.prototype,
                        u.addEventListener = function (t, e, i, n, r) {
                            r = r || 0;
                            var a, o, s = this._listeners[t], h = 0;
                            for (this !== p || d || p.wake(),
                                null == s && (this._listeners[t] = s = []),
                                o = s.length; --o > -1;)
                                a = s[o],
                                    a.c === e && a.s === i ? s.splice(o, 1) : 0 === h && a.pr < r && (h = o + 1);
                            s.splice(h, 0, {
                                c: e,
                                s: i,
                                up: n,
                                pr: r
                            })
                        }
                        ,
                        u.removeEventListener = function (t, e) {
                            var i, n = this._listeners[t];
                            if (n)
                                for (i = n.length; --i > -1;)
                                    if (n[i].c === e)
                                        return void n.splice(i, 1)
                        }
                        ,
                        u.dispatchEvent = function (t) {
                            var e, i, n, r = this._listeners[t];
                            if (r)
                                for (e = r.length,
                                    e > 1 && (r = r.slice(0)),
                                    i = this._eventTarget; --e > -1;)
                                    (n = r[e]) && (n.up ? n.c.call(n.s || i, {
                                        type: t,
                                        target: i
                                    }) : n.c.call(n.s || i))
                        }
                        ;
                    var E = i.requestAnimationFrame
                        , L = i.cancelAnimationFrame
                        , C = Date.now || function () {
                            return (new Date).getTime()
                        }
                        , O = C();
                    for (l = ["ms", "moz", "webkit", "o"],
                        c = l.length; --c > -1 && !E;)
                        E = i[l[c] + "RequestAnimationFrame"],
                            L = i[l[c] + "CancelAnimationFrame"] || i[l[c] + "CancelRequestAnimationFrame"];
                    b("Ticker", function (t, e) {
                        var i, n, r, a, o, h = this, l = C(), c = !(!1 === e || !E) && "auto", u = 500, f = 33, m = function (t) {
                            var e, s, c = C() - O;
                            c > u && (l += c - f),
                                O += c,
                                h.time = (O - l) / 1e3,
                                e = h.time - o,
                                (!i || e > 0 || !0 === t) && (h.frame++,
                                    o += e + (e >= a ? .004 : a - e),
                                    s = !0),
                                !0 !== t && (r = n(m)),
                                s && h.dispatchEvent("tick")
                        };
                        A.call(h),
                            h.time = h.frame = 0,
                            h.tick = function () {
                                m(!0)
                            }
                            ,
                            h.lagSmoothing = function (t, e) {
                                u = t || 1e10,
                                    f = Math.min(e, u, 0)
                            }
                            ,
                            h.sleep = function () {
                                null != r && (c && L ? L(r) : clearTimeout(r),
                                    n = v,
                                    r = null,
                                    h === p && (d = !1))
                            }
                            ,
                            h.wake = function (t) {
                                null !== r ? h.sleep() : t ? l += -O + (O = C()) : h.frame > 10 && (O = C() - u + 5),
                                    n = 0 === i ? v : c && E ? E : function (t) {
                                        return setTimeout(t, 1e3 * (o - h.time) + 1 | 0)
                                    }
                                    ,
                                    h === p && (d = !0),
                                    m(2)
                            }
                            ,
                            h.fps = function (t) {
                                if (!arguments.length)
                                    return i;
                                i = t,
                                    a = 1 / (i || 60),
                                    o = this.time + a,
                                    h.wake()
                            }
                            ,
                            h.useRAF = function (t) {
                                if (!arguments.length)
                                    return c;
                                h.sleep(),
                                    c = t,
                                    h.fps(i)
                            }
                            ,
                            h.fps(t),
                            setTimeout(function () {
                                "auto" === c && h.frame < 5 && "hidden" !== s.visibilityState && h.useRAF(!1)
                            }, 1500)
                    }),
                        u = m.Ticker.prototype = new m.events.EventDispatcher,
                        u.constructor = m.Ticker;
                    var R = b("core.Animation", function (t, e) {
                        if (this.vars = e = e || {},
                            this._duration = this._totalDuration = t || 0,
                            this._delay = Number(e.delay) || 0,
                            this._timeScale = 1,
                            this._active = !0 === e.immediateRender,
                            this.data = e.data,
                            this._reversed = !0 === e.reversed,
                            J) {
                            d || p.wake();
                            var i = this.vars.useFrames ? Q : J;
                            i.add(this, i._time),
                                this.vars.paused && this.paused(!0)
                        }
                    });
                    p = R.ticker = new m.Ticker,
                        u = R.prototype,
                        u._dirty = u._gc = u._initted = u._paused = !1,
                        u._totalTime = u._time = 0,
                        u._rawPrevTime = -1,
                        u._next = u._last = u._onUpdate = u._timeline = u.timeline = null,
                        u._paused = !1;
                    var I = function () {
                        d && C() - O > 2e3 && "hidden" !== s.visibilityState && p.wake();
                        var t = setTimeout(I, 2e3);
                        t.unref && t.unref()
                    };
                    I(),
                        u.play = function (t, e) {
                            return null != t && this.seek(t, e),
                                this.reversed(!1).paused(!1)
                        }
                        ,
                        u.pause = function (t, e) {
                            return null != t && this.seek(t, e),
                                this.paused(!0)
                        }
                        ,
                        u.resume = function (t, e) {
                            return null != t && this.seek(t, e),
                                this.paused(!1)
                        }
                        ,
                        u.seek = function (t, e) {
                            return this.totalTime(Number(t), !1 !== e)
                        }
                        ,
                        u.restart = function (t, e) {
                            return this.reversed(!1).paused(!1).totalTime(t ? -this._delay : 0, !1 !== e, !0)
                        }
                        ,
                        u.reverse = function (t, e) {
                            return null != t && this.seek(t || this.totalDuration(), e),
                                this.reversed(!0).paused(!1)
                        }
                        ,
                        u.render = function (t, e, i) { }
                        ,
                        u.invalidate = function () {
                            return this._time = this._totalTime = 0,
                                this._initted = this._gc = !1,
                                this._rawPrevTime = -1,
                                !this._gc && this.timeline || this._enabled(!0),
                                this
                        }
                        ,
                        u.isActive = function () {
                            var t, e = this._timeline, i = this._startTime;
                            return !e || !this._gc && !this._paused && e.isActive() && (t = e.rawTime(!0)) >= i && t < i + this.totalDuration() / this._timeScale - 1e-7
                        }
                        ,
                        u._enabled = function (t, e) {
                            return d || p.wake(),
                                this._gc = !t,
                                this._active = this.isActive(),
                                !0 !== e && (t && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !t && this.timeline && this._timeline._remove(this, !0)),
                                !1
                        }
                        ,
                        u._kill = function (t, e) {
                            return this._enabled(!1, !1)
                        }
                        ,
                        u.kill = function (t, e) {
                            return this._kill(t, e),
                                this
                        }
                        ,
                        u._uncache = function (t) {
                            for (var e = t ? this : this.timeline; e;)
                                e._dirty = !0,
                                    e = e.timeline;
                            return this
                        }
                        ,
                        u._swapSelfInParams = function (t) {
                            for (var e = t.length, i = t.concat(); --e > -1;)
                                "{self}" === t[e] && (i[e] = this);
                            return i
                        }
                        ,
                        u._callback = function (t) {
                            var e = this.vars
                                , i = e[t]
                                , n = e[t + "Params"]
                                , r = e[t + "Scope"] || e.callbackScope || this;
                            switch (n ? n.length : 0) {
                                case 0:
                                    i.call(r);
                                    break;
                                case 1:
                                    i.call(r, n[0]);
                                    break;
                                case 2:
                                    i.call(r, n[0], n[1]);
                                    break;
                                default:
                                    i.apply(r, n)
                            }
                        }
                        ,
                        u.eventCallback = function (t, e, i, n) {
                            if ("on" === (t || "").substr(0, 2)) {
                                var r = this.vars;
                                if (1 === arguments.length)
                                    return r[t];
                                null == e ? delete r[t] : (r[t] = e,
                                    r[t + "Params"] = y(i) && -1 !== i.join("").indexOf("{self}") ? this._swapSelfInParams(i) : i,
                                    r[t + "Scope"] = n),
                                    "onUpdate" === t && (this._onUpdate = e)
                            }
                            return this
                        }
                        ,
                        u.delay = function (t) {
                            return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + t - this._delay),
                                this._delay = t,
                                this) : this._delay
                        }
                        ,
                        u.duration = function (t) {
                            return arguments.length ? (this._duration = this._totalDuration = t,
                                this._uncache(!0),
                                this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== t && this.totalTime(this._totalTime * (t / this._duration), !0),
                                this) : (this._dirty = !1,
                                    this._duration)
                        }
                        ,
                        u.totalDuration = function (t) {
                            return this._dirty = !1,
                                arguments.length ? this.duration(t) : this._totalDuration
                        }
                        ,
                        u.time = function (t, e) {
                            return arguments.length ? (this._dirty && this.totalDuration(),
                                this.totalTime(t > this._duration ? this._duration : t, e)) : this._time
                        }
                        ,
                        u.totalTime = function (t, e, i) {
                            if (d || p.wake(),
                                !arguments.length)
                                return this._totalTime;
                            if (this._timeline) {
                                if (t < 0 && !i && (t += this.totalDuration()),
                                    this._timeline.smoothChildTiming) {
                                    this._dirty && this.totalDuration();
                                    var n = this._totalDuration
                                        , r = this._timeline;
                                    if (t > n && !i && (t = n),
                                        this._startTime = (this._paused ? this._pauseTime : r._time) - (this._reversed ? n - t : t) / this._timeScale,
                                        r._dirty || this._uncache(!1),
                                        r._timeline)
                                        for (; r._timeline;)
                                            r._timeline._time !== (r._startTime + r._totalTime) / r._timeScale && r.totalTime(r._totalTime, !0),
                                                r = r._timeline
                                }
                                this._gc && this._enabled(!0, !1),
                                    this._totalTime === t && 0 !== this._duration || (N.length && tt(),
                                        this.render(t, e, !1),
                                        N.length && tt())
                            }
                            return this
                        }
                        ,
                        u.progress = u.totalProgress = function (t, e) {
                            var i = this.duration();
                            return arguments.length ? this.totalTime(i * t, e) : i ? this._time / i : this.ratio
                        }
                        ,
                        u.startTime = function (t) {
                            return arguments.length ? (t !== this._startTime && (this._startTime = t,
                                this.timeline && this.timeline._sortChildren && this.timeline.add(this, t - this._delay)),
                                this) : this._startTime
                        }
                        ,
                        u.endTime = function (t) {
                            return this._startTime + (0 != t ? this.totalDuration() : this.duration()) / this._timeScale
                        }
                        ,
                        u.timeScale = function (t) {
                            if (!arguments.length)
                                return this._timeScale;
                            if (t = t || 1e-10,
                                this._timeline && this._timeline.smoothChildTiming) {
                                var e = this._pauseTime
                                    , i = e || 0 === e ? e : this._timeline.totalTime();
                                this._startTime = i - (i - this._startTime) * this._timeScale / t
                            }
                            return this._timeScale = t,
                                this._uncache(!1)
                        }
                        ,
                        u.reversed = function (t) {
                            return arguments.length ? (t != this._reversed && (this._reversed = t,
                                this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)),
                                this) : this._reversed
                        }
                        ,
                        u.paused = function (t) {
                            if (!arguments.length)
                                return this._paused;
                            var e, i, n = this._timeline;
                            return t != this._paused && n && (d || t || p.wake(),
                                e = n.rawTime(),
                                i = e - this._pauseTime,
                                !t && n.smoothChildTiming && (this._startTime += i,
                                    this._uncache(!1)),
                                this._pauseTime = t ? e : null,
                                this._paused = t,
                                this._active = this.isActive(),
                                !t && 0 !== i && this._initted && this.duration() && (e = n.smoothChildTiming ? this._totalTime : (e - this._startTime) / this._timeScale,
                                    this.render(e, e === this._totalTime, !0))),
                                this._gc && !t && this._enabled(!0, !1),
                                this
                        }
                        ;
                    var k = b("core.SimpleTimeline", function (t) {
                        R.call(this, 0, t),
                            this.autoRemoveChildren = this.smoothChildTiming = !0
                    });
                    u = k.prototype = new R,
                        u.constructor = k,
                        u.kill()._gc = !1,
                        u._first = u._last = u._recent = null,
                        u._sortChildren = !1,
                        u.add = u.insert = function (t, e, i, n) {
                            var r, a;
                            if (t._startTime = Number(e || 0) + t._delay,
                                t._paused && this !== t._timeline && (t._pauseTime = t._startTime + (this.rawTime() - t._startTime) / t._timeScale),
                                t.timeline && t.timeline._remove(t, !0),
                                t.timeline = t._timeline = this,
                                t._gc && t._enabled(!0, !0),
                                r = this._last,
                                this._sortChildren)
                                for (a = t._startTime; r && r._startTime > a;)
                                    r = r._prev;
                            return r ? (t._next = r._next,
                                r._next = t) : (t._next = this._first,
                                    this._first = t),
                                t._next ? t._next._prev = t : this._last = t,
                                t._prev = r,
                                this._recent = t,
                                this._timeline && this._uncache(!0),
                                this
                        }
                        ,
                        u._remove = function (t, e) {
                            return t.timeline === this && (e || t._enabled(!1, !0),
                                t._prev ? t._prev._next = t._next : this._first === t && (this._first = t._next),
                                t._next ? t._next._prev = t._prev : this._last === t && (this._last = t._prev),
                                t._next = t._prev = t.timeline = null,
                                t === this._recent && (this._recent = this._last),
                                this._timeline && this._uncache(!0)),
                                this
                        }
                        ,
                        u.render = function (t, e, i) {
                            var n, r = this._first;
                            for (this._totalTime = this._time = this._rawPrevTime = t; r;)
                                n = r._next,
                                    (r._active || t >= r._startTime && !r._paused && !r._gc) && (r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, i) : r.render((t - r._startTime) * r._timeScale, e, i)),
                                    r = n
                        }
                        ,
                        u.rawTime = function () {
                            return d || p.wake(),
                                this._totalTime
                        }
                        ;
                    var z = b("TweenLite", function (t, e, n) {
                        if (R.call(this, e, n),
                            this.render = z.prototype.render,
                            null == t)
                            throw "Cannot tween a null target.";
                        this.target = t = "string" != typeof t ? t : z.selector(t) || t;
                        var r, a, o, s = t.jquery || t.length && t !== i && t[0] && (t[0] === i || t[0].nodeType && t[0].style && !t.nodeType), h = this.vars.overwrite;
                        if (this._overwrite = h = null == h ? K[z.defaultOverwrite] : "number" == typeof h ? h >> 0 : K[h],
                            (s || t instanceof Array || t.push && y(t)) && "number" != typeof t[0])
                            for (this._targets = o = g(t),
                                this._propLookup = [],
                                this._siblings = [],
                                r = 0; r < o.length; r++)
                                a = o[r],
                                    a ? "string" != typeof a ? a.length && a !== i && a[0] && (a[0] === i || a[0].nodeType && a[0].style && !a.nodeType) ? (o.splice(r--, 1),
                                        this._targets = o = o.concat(g(a))) : (this._siblings[r] = et(a, this, !1),
                                            1 === h && this._siblings[r].length > 1 && nt(a, this, null, 1, this._siblings[r])) : "string" == typeof (a = o[r--] = z.selector(a)) && o.splice(r + 1, 1) : o.splice(r--, 1);
                        else
                            this._propLookup = {},
                                this._siblings = et(t, this, !1),
                                1 === h && this._siblings.length > 1 && nt(t, this, null, 1, this._siblings);
                        (this.vars.immediateRender || 0 === e && 0 === this._delay && !1 !== this.vars.immediateRender) && (this._time = -1e-10,
                            this.render(Math.min(0, -this._delay)))
                    }, !0)
                        , F = function (t) {
                            return t && t.length && t !== i && t[0] && (t[0] === i || t[0].nodeType && t[0].style && !t.nodeType)
                        }
                        , D = function (t, e) {
                            var i, n = {};
                            for (i in t)
                                Z[i] || i in e && "transform" !== i && "x" !== i && "y" !== i && "width" !== i && "height" !== i && "className" !== i && "border" !== i || !(!X[i] || X[i] && X[i]._autoCSS) || (n[i] = t[i],
                                    delete t[i]);
                            t.css = n
                        };
                    u = z.prototype = new R,
                        u.constructor = z,
                        u.kill()._gc = !1,
                        u.ratio = 0,
                        u._firstPT = u._targets = u._overwrittenProps = u._startAt = null,
                        u._notifyPluginsOfEnabled = u._lazy = !1,
                        z.version = "1.20.2",
                        z.defaultEase = u._ease = new T(null, null, 1, 1),
                        z.defaultOverwrite = "auto",
                        z.ticker = p,
                        z.autoSleep = 120,
                        z.lagSmoothing = function (t, e) {
                            p.lagSmoothing(t, e)
                        }
                        ,
                        z.selector = i.$ || i.jQuery || function (t) {
                            var e = i.$ || i.jQuery;
                            return e ? (z.selector = e,
                                e(t)) : void 0 === s ? t : s.querySelectorAll ? s.querySelectorAll(t) : s.getElementById("#" === t.charAt(0) ? t.substr(1) : t)
                        }
                        ;
                    var N = []
                        , B = {}
                        , U = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi
                        , j = /[\+-]=-?[\.\d]/
                        , G = function (t) {
                            for (var e, i = this._firstPT; i;)
                                e = i.blob ? 1 === t && this.end ? this.end : t ? this.join("") : this.start : i.c * t + i.s,
                                    i.m ? e = i.m(e, this._target || i.t) : e < 1e-6 && e > -1e-6 && !i.blob && (e = 0),
                                    i.f ? i.fp ? i.t[i.p](i.fp, e) : i.t[i.p](e) : i.t[i.p] = e,
                                    i = i._next
                        }
                        , V = function (t, e, i, n) {
                            var r, a, o, s, h, l, c, u = [], p = 0, d = "", f = 0;
                            for (u.start = t,
                                u.end = e,
                                t = u[0] = t + "",
                                e = u[1] = e + "",
                                i && (i(u),
                                    t = u[0],
                                    e = u[1]),
                                u.length = 0,
                                r = t.match(U) || [],
                                a = e.match(U) || [],
                                n && (n._next = null,
                                    n.blob = 1,
                                    u._firstPT = u._applyPT = n),
                                h = a.length,
                                s = 0; s < h; s++)
                                c = a[s],
                                    l = e.substr(p, e.indexOf(c, p) - p),
                                    d += l || !s ? l : ",",
                                    p += l.length,
                                    f ? f = (f + 1) % 5 : "rgba(" === l.substr(-5) && (f = 1),
                                    c === r[s] || r.length <= s ? d += c : (d && (u.push(d),
                                        d = ""),
                                        o = parseFloat(r[s]),
                                        u.push(o),
                                        u._firstPT = {
                                            _next: u._firstPT,
                                            t: u,
                                            p: u.length - 1,
                                            s: o,
                                            c: ("=" === c.charAt(1) ? parseInt(c.charAt(0) + "1", 10) * parseFloat(c.substr(2)) : parseFloat(c) - o) || 0,
                                            f: 0,
                                            m: f && f < 4 ? Math.round : 0
                                        }),
                                    p += c.length;
                            return d += e.substr(p),
                                d && u.push(d),
                                u.setRatio = G,
                                j.test(e) && (u.end = 0),
                                u
                        }
                        , H = function (t, e, i, n, r, a, o, s, h) {
                            "function" == typeof n && (n = n(h || 0, t));
                            var l, c = typeof t[e], u = "function" !== c ? "" : e.indexOf("set") || "function" != typeof t["get" + e.substr(3)] ? e : "get" + e.substr(3), p = "get" !== i ? i : u ? o ? t[u](o) : t[u]() : t[e], d = "string" == typeof n && "=" === n.charAt(1), f = {
                                t: t,
                                p: e,
                                s: p,
                                f: "function" === c,
                                pg: 0,
                                n: r || e,
                                m: a ? "function" == typeof a ? a : Math.round : 0,
                                pr: 0,
                                c: d ? parseInt(n.charAt(0) + "1", 10) * parseFloat(n.substr(2)) : parseFloat(n) - p || 0
                            };
                            if (("number" != typeof p || "number" != typeof n && !d) && (o || isNaN(p) || !d && isNaN(n) || "boolean" == typeof p || "boolean" == typeof n ? (f.fp = o,
                                l = V(p, d ? parseFloat(f.s) + f.c : n, s || z.defaultStringFilter, f),
                                f = {
                                    t: l,
                                    p: "setRatio",
                                    s: 0,
                                    c: 1,
                                    f: 2,
                                    pg: 0,
                                    n: r || e,
                                    pr: 0,
                                    m: 0
                                }) : (f.s = parseFloat(p),
                                    d || (f.c = parseFloat(n) - f.s || 0))),
                                f.c)
                                return (f._next = this._firstPT) && (f._next._prev = f),
                                    this._firstPT = f,
                                    f
                        }
                        , W = z._internals = {
                            isArray: y,
                            isSelector: F,
                            lazyTweens: N,
                            blobDif: V
                        }
                        , X = z._plugins = {}
                        , Y = W.tweenLookup = {}
                        , q = 0
                        , Z = W.reservedProps = {
                            ease: 1,
                            delay: 1,
                            overwrite: 1,
                            onComplete: 1,
                            onCompleteParams: 1,
                            onCompleteScope: 1,
                            useFrames: 1,
                            runBackwards: 1,
                            startAt: 1,
                            onUpdate: 1,
                            onUpdateParams: 1,
                            onUpdateScope: 1,
                            onStart: 1,
                            onStartParams: 1,
                            onStartScope: 1,
                            onReverseComplete: 1,
                            onReverseCompleteParams: 1,
                            onReverseCompleteScope: 1,
                            onRepeat: 1,
                            onRepeatParams: 1,
                            onRepeatScope: 1,
                            easeParams: 1,
                            yoyo: 1,
                            immediateRender: 1,
                            repeat: 1,
                            repeatDelay: 1,
                            data: 1,
                            paused: 1,
                            reversed: 1,
                            autoCSS: 1,
                            lazy: 1,
                            onOverwrite: 1,
                            callbackScope: 1,
                            stringFilter: 1,
                            id: 1,
                            yoyoEase: 1
                        }
                        , K = {
                            none: 0,
                            all: 1,
                            auto: 2,
                            concurrent: 3,
                            allOnStart: 4,
                            preexisting: 5,
                            true: 1,
                            false: 0
                        }
                        , Q = R._rootFramesTimeline = new k
                        , J = R._rootTimeline = new k
                        , $ = 30
                        , tt = W.lazyRender = function () {
                            var t, e = N.length;
                            for (B = {}; --e > -1;)
                                (t = N[e]) && !1 !== t._lazy && (t.render(t._lazy[0], t._lazy[1], !0),
                                    t._lazy = !1);
                            N.length = 0
                        }
                        ;
                    J._startTime = p.time,
                        Q._startTime = p.frame,
                        J._active = Q._active = !0,
                        setTimeout(tt, 1),
                        R._updateRoot = z.render = function () {
                            var t, e, i;
                            if (N.length && tt(),
                                J.render((p.time - J._startTime) * J._timeScale, !1, !1),
                                Q.render((p.frame - Q._startTime) * Q._timeScale, !1, !1),
                                N.length && tt(),
                                p.frame >= $) {
                                $ = p.frame + (parseInt(z.autoSleep, 10) || 120);
                                for (i in Y) {
                                    for (e = Y[i].tweens,
                                        t = e.length; --t > -1;)
                                        e[t]._gc && e.splice(t, 1);
                                    0 === e.length && delete Y[i]
                                }
                                if ((!(i = J._first) || i._paused) && z.autoSleep && !Q._first && 1 === p._listeners.tick.length) {
                                    for (; i && i._paused;)
                                        i = i._next;
                                    i || p.sleep()
                                }
                            }
                        }
                        ,
                        p.addEventListener("tick", R._updateRoot);
                    var et = function (t, e, i) {
                        var n, r, a = t._gsTweenID;
                        if (Y[a || (t._gsTweenID = a = "t" + q++)] || (Y[a] = {
                            target: t,
                            tweens: []
                        }),
                            e && (n = Y[a].tweens,
                                n[r = n.length] = e,
                                i))
                            for (; --r > -1;)
                                n[r] === e && n.splice(r, 1);
                        return Y[a].tweens
                    }
                        , it = function (t, e, i, n) {
                            var r, a, o = t.vars.onOverwrite;
                            return o && (r = o(t, e, i, n)),
                                o = z.onOverwrite,
                                o && (a = o(t, e, i, n)),
                                !1 !== r && !1 !== a
                        }
                        , nt = function (t, e, i, n, r) {
                            var a, o, s, h;
                            if (1 === n || n >= 4) {
                                for (h = r.length,
                                    a = 0; a < h; a++)
                                    if ((s = r[a]) !== e)
                                        s._gc || s._kill(null, t, e) && (o = !0);
                                    else if (5 === n)
                                        break;
                                return o
                            }
                            var l, c = e._startTime + 1e-10, u = [], p = 0, d = 0 === e._duration;
                            for (a = r.length; --a > -1;)
                                (s = r[a]) === e || s._gc || s._paused || (s._timeline !== e._timeline ? (l = l || rt(e, 0, d),
                                    0 === rt(s, l, d) && (u[p++] = s)) : s._startTime <= c && s._startTime + s.totalDuration() / s._timeScale > c && ((d || !s._initted) && c - s._startTime <= 2e-10 || (u[p++] = s)));
                            for (a = p; --a > -1;)
                                if (s = u[a],
                                    2 === n && s._kill(i, t, e) && (o = !0),
                                    2 !== n || !s._firstPT && s._initted) {
                                    if (2 !== n && !it(s, e))
                                        continue;
                                    s._enabled(!1, !1) && (o = !0)
                                }
                            return o
                        }
                        , rt = function (t, e, i) {
                            for (var n = t._timeline, r = n._timeScale, a = t._startTime; n._timeline;) {
                                if (a += n._startTime,
                                    r *= n._timeScale,
                                    n._paused)
                                    return -100;
                                n = n._timeline
                            }
                            return a /= r,
                                a > e ? a - e : i && a === e || !t._initted && a - e < 2e-10 ? 1e-10 : (a += t.totalDuration() / t._timeScale / r) > e + 1e-10 ? 0 : a - e - 1e-10
                        };
                    u._init = function () {
                        var t, e, i, n, r, a, o = this.vars, s = this._overwrittenProps, h = this._duration, l = !!o.immediateRender, c = o.ease;
                        if (o.startAt) {
                            this._startAt && (this._startAt.render(-1, !0),
                                this._startAt.kill()),
                                r = {};
                            for (n in o.startAt)
                                r[n] = o.startAt[n];
                            if (r.overwrite = !1,
                                r.immediateRender = !0,
                                r.lazy = l && !1 !== o.lazy,
                                r.startAt = r.delay = null,
                                r.onUpdate = o.onUpdate,
                                r.onUpdateScope = o.onUpdateScope || o.callbackScope || this,
                                this._startAt = z.to(this.target, 0, r),
                                l)
                                if (this._time > 0)
                                    this._startAt = null;
                                else if (0 !== h)
                                    return
                        } else if (o.runBackwards && 0 !== h)
                            if (this._startAt)
                                this._startAt.render(-1, !0),
                                    this._startAt.kill(),
                                    this._startAt = null;
                            else {
                                0 !== this._time && (l = !1),
                                    i = {};
                                for (n in o)
                                    Z[n] && "autoCSS" !== n || (i[n] = o[n]);
                                if (i.overwrite = 0,
                                    i.data = "isFromStart",
                                    i.lazy = l && !1 !== o.lazy,
                                    i.immediateRender = l,
                                    this._startAt = z.to(this.target, 0, i),
                                    l) {
                                    if (0 === this._time)
                                        return
                                } else
                                    this._startAt._init(),
                                        this._startAt._enabled(!1),
                                        this.vars.immediateRender && (this._startAt = null)
                            }
                        if (this._ease = c = c ? c instanceof T ? c : "function" == typeof c ? new T(c, o.easeParams) : P[c] || z.defaultEase : z.defaultEase,
                            o.easeParams instanceof Array && c.config && (this._ease = c.config.apply(c, o.easeParams)),
                            this._easeType = this._ease._type,
                            this._easePower = this._ease._power,
                            this._firstPT = null,
                            this._targets)
                            for (a = this._targets.length,
                                t = 0; t < a; t++)
                                this._initProps(this._targets[t], this._propLookup[t] = {}, this._siblings[t], s ? s[t] : null, t) && (e = !0);
                        else
                            e = this._initProps(this.target, this._propLookup, this._siblings, s, 0);
                        if (e && z._onPluginEvent("_onInitAllProps", this),
                            s && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)),
                            o.runBackwards)
                            for (i = this._firstPT; i;)
                                i.s += i.c,
                                    i.c = -i.c,
                                    i = i._next;
                        this._onUpdate = o.onUpdate,
                            this._initted = !0
                    }
                        ,
                        u._initProps = function (t, e, n, r, a) {
                            var o, s, h, l, c, u;
                            if (null == t)
                                return !1;
                            B[t._gsTweenID] && tt(),
                                this.vars.css || t.style && t !== i && t.nodeType && X.css && !1 !== this.vars.autoCSS && D(this.vars, t);
                            for (o in this.vars)
                                if (u = this.vars[o],
                                    Z[o])
                                    u && (u instanceof Array || u.push && y(u)) && -1 !== u.join("").indexOf("{self}") && (this.vars[o] = u = this._swapSelfInParams(u, this));
                                else if (X[o] && (l = new X[o])._onInitTween(t, this.vars[o], this, a)) {
                                    for (this._firstPT = c = {
                                        _next: this._firstPT,
                                        t: l,
                                        p: "setRatio",
                                        s: 0,
                                        c: 1,
                                        f: 1,
                                        n: o,
                                        pg: 1,
                                        pr: l._priority,
                                        m: 0
                                    },
                                        s = l._overwriteProps.length; --s > -1;)
                                        e[l._overwriteProps[s]] = this._firstPT;
                                    (l._priority || l._onInitAllProps) && (h = !0),
                                        (l._onDisable || l._onEnable) && (this._notifyPluginsOfEnabled = !0),
                                        c._next && (c._next._prev = c)
                                } else
                                    e[o] = H.call(this, t, o, "get", u, o, 0, null, this.vars.stringFilter, a);
                            return r && this._kill(r, t) ? this._initProps(t, e, n, r, a) : this._overwrite > 1 && this._firstPT && n.length > 1 && nt(t, this, e, this._overwrite, n) ? (this._kill(e, t),
                                this._initProps(t, e, n, r, a)) : (this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration) && (B[t._gsTweenID] = !0),
                                    h)
                        }
                        ,
                        u.render = function (t, e, i) {
                            var n, r, a, o, s = this._time, h = this._duration, l = this._rawPrevTime;
                            if (t >= h - 1e-7 && t >= 0)
                                this._totalTime = this._time = h,
                                    this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1,
                                    this._reversed || (n = !0,
                                        r = "onComplete",
                                        i = i || this._timeline.autoRemoveChildren),
                                    0 === h && (this._initted || !this.vars.lazy || i) && (this._startTime === this._timeline._duration && (t = 0),
                                        (l < 0 || t <= 0 && t >= -1e-7 || 1e-10 === l && "isPause" !== this.data) && l !== t && (i = !0,
                                            l > 1e-10 && (r = "onReverseComplete")),
                                        this._rawPrevTime = o = !e || t || l === t ? t : 1e-10);
                            else if (t < 1e-7)
                                this._totalTime = this._time = 0,
                                    this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                                    (0 !== s || 0 === h && l > 0) && (r = "onReverseComplete",
                                        n = this._reversed),
                                    t < 0 && (this._active = !1,
                                        0 === h && (this._initted || !this.vars.lazy || i) && (l >= 0 && (1e-10 !== l || "isPause" !== this.data) && (i = !0),
                                            this._rawPrevTime = o = !e || t || l === t ? t : 1e-10)),
                                    (!this._initted || this._startAt && this._startAt.progress()) && (i = !0);
                            else if (this._totalTime = this._time = t,
                                this._easeType) {
                                var c = t / h
                                    , u = this._easeType
                                    , p = this._easePower;
                                (1 === u || 3 === u && c >= .5) && (c = 1 - c),
                                    3 === u && (c *= 2),
                                    1 === p ? c *= c : 2 === p ? c *= c * c : 3 === p ? c *= c * c * c : 4 === p && (c *= c * c * c * c),
                                    this.ratio = 1 === u ? 1 - c : 2 === u ? c : t / h < .5 ? c / 2 : 1 - c / 2
                            } else
                                this.ratio = this._ease.getRatio(t / h);
                            if (this._time !== s || i) {
                                if (!this._initted) {
                                    if (this._init(),
                                        !this._initted || this._gc)
                                        return;
                                    if (!i && this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration))
                                        return this._time = this._totalTime = s,
                                            this._rawPrevTime = l,
                                            N.push(this),
                                            void (this._lazy = [t, e]);
                                    this._time && !n ? this.ratio = this._ease.getRatio(this._time / h) : n && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                                }
                                for (!1 !== this._lazy && (this._lazy = !1),
                                    this._active || !this._paused && this._time !== s && t >= 0 && (this._active = !0),
                                    0 === s && (this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : r || (r = "_dummyGS")),
                                        this.vars.onStart && (0 === this._time && 0 !== h || e || this._callback("onStart"))),
                                    a = this._firstPT; a;)
                                    a.f ? a.t[a.p](a.c * this.ratio + a.s) : a.t[a.p] = a.c * this.ratio + a.s,
                                        a = a._next;
                                this._onUpdate && (t < 0 && this._startAt && -1e-4 !== t && this._startAt.render(t, e, i),
                                    e || (this._time !== s || n || i) && this._callback("onUpdate")),
                                    r && (this._gc && !i || (t < 0 && this._startAt && !this._onUpdate && -1e-4 !== t && this._startAt.render(t, e, i),
                                        n && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                                            this._active = !1),
                                        !e && this.vars[r] && this._callback(r),
                                        0 === h && 1e-10 === this._rawPrevTime && 1e-10 !== o && (this._rawPrevTime = 0)))
                            }
                        }
                        ,
                        u._kill = function (t, e, i) {
                            if ("all" === t && (t = null),
                                null == t && (null == e || e === this.target))
                                return this._lazy = !1,
                                    this._enabled(!1, !1);
                            e = "string" != typeof e ? e || this._targets || this.target : z.selector(e) || e;
                            var n, r, a, o, s, h, l, c, u, p = i && this._time && i._startTime === this._startTime && this._timeline === i._timeline;
                            if ((y(e) || F(e)) && "number" != typeof e[0])
                                for (n = e.length; --n > -1;)
                                    this._kill(t, e[n], i) && (h = !0);
                            else {
                                if (this._targets) {
                                    for (n = this._targets.length; --n > -1;)
                                        if (e === this._targets[n]) {
                                            s = this._propLookup[n] || {},
                                                this._overwrittenProps = this._overwrittenProps || [],
                                                r = this._overwrittenProps[n] = t ? this._overwrittenProps[n] || {} : "all";
                                            break
                                        }
                                } else {
                                    if (e !== this.target)
                                        return !1;
                                    s = this._propLookup,
                                        r = this._overwrittenProps = t ? this._overwrittenProps || {} : "all"
                                }
                                if (s) {
                                    if (l = t || s,
                                        c = t !== r && "all" !== r && t !== s && ("object" != typeof t || !t._tempKill),
                                        i && (z.onOverwrite || this.vars.onOverwrite)) {
                                        for (a in l)
                                            s[a] && (u || (u = []),
                                                u.push(a));
                                        if ((u || !t) && !it(this, i, e, u))
                                            return !1
                                    }
                                    for (a in l)
                                        (o = s[a]) && (p && (o.f ? o.t[o.p](o.s) : o.t[o.p] = o.s,
                                            h = !0),
                                            o.pg && o.t._kill(l) && (h = !0),
                                            o.pg && 0 !== o.t._overwriteProps.length || (o._prev ? o._prev._next = o._next : o === this._firstPT && (this._firstPT = o._next),
                                                o._next && (o._next._prev = o._prev),
                                                o._next = o._prev = null),
                                            delete s[a]),
                                            c && (r[a] = 1);
                                    !this._firstPT && this._initted && this._enabled(!1, !1)
                                }
                            }
                            return h
                        }
                        ,
                        u.invalidate = function () {
                            return this._notifyPluginsOfEnabled && z._onPluginEvent("_onDisable", this),
                                this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null,
                                this._notifyPluginsOfEnabled = this._active = this._lazy = !1,
                                this._propLookup = this._targets ? {} : [],
                                R.prototype.invalidate.call(this),
                                this.vars.immediateRender && (this._time = -1e-10,
                                    this.render(Math.min(0, -this._delay))),
                                this
                        }
                        ,
                        u._enabled = function (t, e) {
                            if (d || p.wake(),
                                t && this._gc) {
                                var i, n = this._targets;
                                if (n)
                                    for (i = n.length; --i > -1;)
                                        this._siblings[i] = et(n[i], this, !0);
                                else
                                    this._siblings = et(this.target, this, !0)
                            }
                            return R.prototype._enabled.call(this, t, e),
                                !(!this._notifyPluginsOfEnabled || !this._firstPT) && z._onPluginEvent(t ? "_onEnable" : "_onDisable", this)
                        }
                        ,
                        z.to = function (t, e, i) {
                            return new z(t, e, i)
                        }
                        ,
                        z.from = function (t, e, i) {
                            return i.runBackwards = !0,
                                i.immediateRender = 0 != i.immediateRender,
                                new z(t, e, i)
                        }
                        ,
                        z.fromTo = function (t, e, i, n) {
                            return n.startAt = i,
                                n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                                new z(t, e, n)
                        }
                        ,
                        z.delayedCall = function (t, e, i, n, r) {
                            return new z(e, 0, {
                                delay: t,
                                onComplete: e,
                                onCompleteParams: i,
                                callbackScope: n,
                                onReverseComplete: e,
                                onReverseCompleteParams: i,
                                immediateRender: !1,
                                lazy: !1,
                                useFrames: r,
                                overwrite: 0
                            })
                        }
                        ,
                        z.set = function (t, e) {
                            return new z(t, 0, e)
                        }
                        ,
                        z.getTweensOf = function (t, e) {
                            if (null == t)
                                return [];
                            t = "string" != typeof t ? t : z.selector(t) || t;
                            var i, n, r, a;
                            if ((y(t) || F(t)) && "number" != typeof t[0]) {
                                for (i = t.length,
                                    n = []; --i > -1;)
                                    n = n.concat(z.getTweensOf(t[i], e));
                                for (i = n.length; --i > -1;)
                                    for (a = n[i],
                                        r = i; --r > -1;)
                                        a === n[r] && n.splice(i, 1)
                            } else if (t._gsTweenID)
                                for (n = et(t).concat(),
                                    i = n.length; --i > -1;)
                                    (n[i]._gc || e && !n[i].isActive()) && n.splice(i, 1);
                            return n || []
                        }
                        ,
                        z.killTweensOf = z.killDelayedCallsTo = function (t, e, i) {
                            "object" == typeof e && (i = e,
                                e = !1);
                            for (var n = z.getTweensOf(t, e), r = n.length; --r > -1;)
                                n[r]._kill(i, t)
                        }
                        ;
                    var at = b("plugins.TweenPlugin", function (t, e) {
                        this._overwriteProps = (t || "").split(","),
                            this._propName = this._overwriteProps[0],
                            this._priority = e || 0,
                            this._super = at.prototype
                    }, !0);
                    if (u = at.prototype,
                        at.version = "1.19.0",
                        at.API = 2,
                        u._firstPT = null,
                        u._addTween = H,
                        u.setRatio = G,
                        u._kill = function (t) {
                            var e, i = this._overwriteProps, n = this._firstPT;
                            if (null != t[this._propName])
                                this._overwriteProps = [];
                            else
                                for (e = i.length; --e > -1;)
                                    null != t[i[e]] && i.splice(e, 1);
                            for (; n;)
                                null != t[n.n] && (n._next && (n._next._prev = n._prev),
                                    n._prev ? (n._prev._next = n._next,
                                        n._prev = null) : this._firstPT === n && (this._firstPT = n._next)),
                                    n = n._next;
                            return !1
                        }
                        ,
                        u._mod = u._roundProps = function (t) {
                            for (var e, i = this._firstPT; i;)
                                e = t[this._propName] || null != i.n && t[i.n.split(this._propName + "_").join("")],
                                    e && "function" == typeof e && (2 === i.f ? i.t._applyPT.m = e : i.m = e),
                                    i = i._next
                        }
                        ,
                        z._onPluginEvent = function (t, e) {
                            var i, n, r, a, o, s = e._firstPT;
                            if ("_onInitAllProps" === t) {
                                for (; s;) {
                                    for (o = s._next,
                                        n = r; n && n.pr > s.pr;)
                                        n = n._next;
                                    (s._prev = n ? n._prev : a) ? s._prev._next = s : r = s,
                                        (s._next = n) ? n._prev = s : a = s,
                                        s = o
                                }
                                s = e._firstPT = r
                            }
                            for (; s;)
                                s.pg && "function" == typeof s.t[t] && s.t[t]() && (i = !0),
                                    s = s._next;
                            return i
                        }
                        ,
                        at.activate = function (t) {
                            for (var e = t.length; --e > -1;)
                                t[e].API === at.API && (X[(new t[e])._propName] = t[e]);
                            return !0
                        }
                        ,
                        w.plugin = function (t) {
                            if (!(t && t.propName && t.init && t.API))
                                throw "illegal plugin definition.";
                            var e, i = t.propName, n = t.priority || 0, r = t.overwriteProps, a = {
                                init: "_onInitTween",
                                set: "setRatio",
                                kill: "_kill",
                                round: "_mod",
                                mod: "_mod",
                                initAll: "_onInitAllProps"
                            }, o = b("plugins." + i.charAt(0).toUpperCase() + i.substr(1) + "Plugin", function () {
                                at.call(this, i, n),
                                    this._overwriteProps = r || []
                            }, !0 === t.global), s = o.prototype = new at(i);
                            s.constructor = o,
                                o.API = t.API;
                            for (e in a)
                                "function" == typeof t[e] && (s[a[e]] = t[e]);
                            return o.version = t.version,
                                at.activate([o]),
                                o
                        }
                        ,
                        l = i._gsQueue) {
                        for (c = 0; c < l.length; c++)
                            l[c]();
                        for (u in _)
                            _[u].func || i.console.log("GSAP encountered missing dependency: " + u)
                    }
                    d = !1
                }
            }(void 0 !== t && t.exports && void 0 !== i ? i : this || window)
        }
        ).call(e, i(10))
    }
    , function (t, e, i) {
        "use strict";
        /*!
     * Detectizr v2.2.0
     * http://barisaydinoglu.github.com/Detectizr/
     *
     * Written by Baris Aydinoglu (http://baris.aydinoglu.info) - Copyright 2012
     * Released under the MIT license
     *
     * Date: 2016-11-10T12:08Z
     */
        window.Detectizr = function (t, e, i, n) {
            function r(t, e) {
                var i, n, a;
                if (arguments.length > 2)
                    for (i = 1,
                        n = arguments.length; i < n; i += 1)
                        r(t, arguments[i]);
                else
                    for (a in e)
                        e.hasOwnProperty(a) && (t[a] = e[a]);
                return t
            }
            function a(t) {
                return x.browser.userAgent.indexOf(t) > -1
            }
            function o(t) {
                return t.test(x.browser.userAgent)
            }
            function s(t) {
                return t.exec(x.browser.userAgent)
            }
            function h(t) {
                return t.replace(/^\s+|\s+$/g, "")
            }
            function l(t) {
                return null === t || t === n ? "" : String(t).replace(/((\s|\-|\.)+[a-z0-9])/g, function (t) {
                    return t.toUpperCase().replace(/(\s|\-|\.)/g, "")
                })
            }
            function c(t, e) {
                var i = e || ""
                    , n = 1 === t.nodeType && (t.className ? (" " + t.className + " ").replace(P, " ") : "");
                if (n) {
                    for (; n.indexOf(" " + i + " ") >= 0;)
                        n = n.replace(" " + i + " ", " ");
                    t.className = e ? h(n) : ""
                }
            }
            function u(t, e, i) {
                t && (t = l(t),
                    e && (e = l(e),
                        p(t + e, !0),
                        i && p(t + e + "_" + i, !0)))
            }
            function p(t, e) {
                t && w && (M.addAllFeaturesAsClass ? w.addTest(t, e) : (e = "function" == typeof e ? e() : e,
                    e ? w.addTest(t, !0) : (delete w[t],
                        c(S, t))))
            }
            function d(t, e) {
                t.version = e;
                var i = e.split(".");
                i.length > 0 ? (i = i.reverse(),
                    t.major = i.pop(),
                    i.length > 0 ? (t.minor = i.pop(),
                        i.length > 0 ? (i = i.reverse(),
                            t.patch = i.join(".")) : t.patch = "0") : t.minor = "0") : t.major = "0"
            }
            function f() {
                t.clearTimeout(y),
                    y = t.setTimeout(function () {
                        _ = x.device.orientation,
                            t.innerHeight > t.innerWidth ? x.device.orientation = "portrait" : x.device.orientation = "landscape",
                            p(x.device.orientation, !0),
                            _ !== x.device.orientation && p(_, !1)
                    }, 10)
            }
            function m(t) {
                var i, n, r, a, o, s = e.plugins;
                for (a = s.length - 1; a >= 0; a--) {
                    for (i = s[a],
                        n = i.name + i.description,
                        r = 0,
                        o = t.length; o >= 0; o--)
                        -1 !== n.indexOf(t[o]) && (r += 1);
                    if (r === t.length)
                        return !0
                }
                return !1
            }
            function g(t) {
                var e;
                for (e = t.length - 1; e >= 0; e--)
                    try {
                        new ActiveXObject(t[e])
                    } catch (t) { }
                return !1
            }
            function v(n) {
                var h, c, v, y, _, P, S;
                if (M = r({}, M, n || {}),
                    M.detectDevice) {
                    for (x.device = {
                        type: "",
                        model: "",
                        orientation: ""
                    },
                        v = x.device,
                        o(/googletv|smarttv|smart-tv|internet.tv|netcast|nettv|appletv|boxee|kylo|roku|dlnadoc|roku|pov_tv|hbbtv|ce\-html/) ? (v.type = b[0],
                            v.model = "smartTv") : o(/xbox|playstation.3|wii/) ? (v.type = b[0],
                                v.model = "gameConsole") : o(/ip(a|ro)d/) ? (v.type = b[1],
                                    v.model = "ipad") : o(/tablet/) && !o(/rx-34/) && !o(/shield/) || o(/folio/) ? (v.type = b[1],
                                        v.model = String(s(/playbook/) || "")) : o(/linux/) && o(/android/) && !o(/fennec|mobi|htc.magic|htcX06ht|nexus.one|sc-02b|fone.945/) ? (v.type = b[1],
                                            v.model = "android") : o(/kindle/) || o(/mac.os/) && o(/silk/) ? (v.type = b[1],
                                                v.model = "kindle") : o(/gt-p10|sc-01c|shw-m180s|sgh-t849|sch-i800|shw-m180l|sph-p100|sgh-i987|zt180|htc(.flyer|\_flyer)|sprint.atp51|viewpad7|pandigital(sprnova|nova)|ideos.s7|dell.streak.7|advent.vega|a101it|a70bht|mid7015|next2|nook/) || o(/mb511/) && o(/rutem/) ? (v.type = b[1],
                                                    v.model = "android") : o(/bb10/) ? (v.type = b[2],
                                                        v.model = "blackberry") : (v.model = s(/iphone|ipod|android|blackberry|opera mini|opera mobi|skyfire|maemo|windows phone|palm|iemobile|symbian|symbianos|fennec|j2me/),
                                                            null !== v.model ? (v.type = b[2],
                                                                v.model = String(v.model)) : (v.model = "",
                                                                    o(/bolt|fennec|iris|maemo|minimo|mobi|mowser|netfront|novarra|prism|rx-34|skyfire|tear|xv6875|xv6975|google.wireless.transcoder/) ? v.type = b[2] : o(/opera/) && o(/windows.nt.5/) && o(/htc|xda|mini|vario|samsung\-gt\-i8000|samsung\-sgh\-i9/) ? v.type = b[2] : o(/windows.(nt|xp|me|9)/) && !o(/phone/) || o(/win(9|.9|nt)/) || o(/\(windows 8\)/) ? v.type = b[3] : o(/macintosh|powerpc/) && !o(/silk/) ? (v.type = b[3],
                                                                        v.model = "mac") : o(/linux/) && o(/x11/) ? v.type = b[3] : o(/solaris|sunos|bsd/) ? v.type = b[3] : o(/cros/) ? v.type = b[3] : o(/bot|crawler|spider|yahoo|ia_archiver|covario-ids|findlinks|dataparksearch|larbin|mediapartners-google|ng-search|snappy|teoma|jeeves|tineye/) && !o(/mobile/) ? (v.type = b[3],
                                                                            v.model = "crawler") : v.type = b[2])),
                        h = 0,
                        c = b.length; h < c; h += 1)
                        p(b[h], v.type === b[h]);
                    M.detectDeviceModel && p(l(v.model), !0)
                }
                if (M.detectScreen && (v.screen = {},
                    w && w.mq && (w.mq("only screen and (max-width: 240px)") ? (v.screen.size = "veryVerySmall",
                        p("veryVerySmallScreen", !0)) : w.mq("only screen and (max-width: 320px)") ? (v.screen.size = "verySmall",
                            p("verySmallScreen", !0)) : w.mq("only screen and (max-width: 480px)") && (v.screen.size = "small",
                                p("smallScreen", !0)),
                        v.type !== b[1] && v.type !== b[2] || w.mq("only screen and (-moz-min-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen  and (min-device-pixel-ratio: 1.3), only screen and (min-resolution: 1.3dppx)") && (v.screen.resolution = "high",
                            p("highresolution", !0))),
                    v.type === b[1] || v.type === b[2] ? (t.onresize = function (t) {
                        f(t)
                    }
                        ,
                        f()) : (v.orientation = "landscape",
                            p(v.orientation, !0))),
                    M.detectOS && (x.os = {},
                        y = x.os,
                        "" !== v.model && ("ipad" === v.model || "iphone" === v.model || "ipod" === v.model ? (y.name = "ios",
                            d(y, (o(/os\s([\d_]+)/) ? RegExp.$1 : "").replace(/_/g, "."))) : "android" === v.model ? (y.name = "android",
                                d(y, o(/android\s([\d\.]+)/) ? RegExp.$1 : "")) : "blackberry" === v.model ? (y.name = "blackberry",
                                    d(y, o(/version\/([^\s]+)/) ? RegExp.$1 : "")) : "playbook" === v.model && (y.name = "blackberry",
                                        d(y, o(/os ([^\s]+)/) ? RegExp.$1.replace(";", "") : ""))),
                        y.name || (a("win") || a("16bit") ? (y.name = "windows",
                            a("windows nt 10") ? d(y, "10") : a("windows nt 6.3") ? d(y, "8.1") : a("windows nt 6.2") || o(/\(windows 8\)/) ? d(y, "8") : a("windows nt 6.1") ? d(y, "7") : a("windows nt 6.0") ? d(y, "vista") : a("windows nt 5.2") || a("windows nt 5.1") || a("windows xp") ? d(y, "xp") : a("windows nt 5.0") || a("windows 2000") ? d(y, "2k") : a("winnt") || a("windows nt") ? d(y, "nt") : a("win98") || a("windows 98") ? d(y, "98") : (a("win95") || a("windows 95")) && d(y, "95")) : a("mac") || a("darwin") ? (y.name = "mac os",
                                a("68k") || a("68000") ? d(y, "68k") : a("ppc") || a("powerpc") ? d(y, "ppc") : a("os x") && d(y, (o(/os\sx\s([\d_]+)/) ? RegExp.$1 : "os x").replace(/_/g, "."))) : a("webtv") ? y.name = "webtv" : a("x11") || a("inux") ? y.name = "linux" : a("sunos") ? y.name = "sun" : a("irix") ? y.name = "irix" : a("freebsd") ? y.name = "freebsd" : a("bsd") && (y.name = "bsd")),
                        y.name && (p(y.name, !0),
                            y.major && (u(y.name, y.major),
                                y.minor && u(y.name, y.major, y.minor))),
                        o(/\sx64|\sx86|\swin64|\swow64|\samd64/) ? y.addressRegisterSize = "64bit" : y.addressRegisterSize = "32bit",
                        p(y.addressRegisterSize, !0)),
                    M.detectBrowser && (_ = x.browser,
                        o(/opera|webtv/) || !o(/msie\s([\d\w\.]+)/) && !a("trident") ? a("firefox") ? (_.engine = "gecko",
                            _.name = "firefox",
                            d(_, o(/firefox\/([\d\w\.]+)/) ? RegExp.$1 : "")) : a("gecko/") ? _.engine = "gecko" : a("opera") ? (_.name = "opera",
                                _.engine = "presto",
                                d(_, o(/version\/([\d\.]+)/) ? RegExp.$1 : o(/opera(\s|\/)([\d\.]+)/) ? RegExp.$2 : "")) : a("konqueror") ? _.name = "konqueror" : a("edge") ? (_.engine = "webkit",
                                    _.name = "edge",
                                    d(_, o(/edge\/([\d\.]+)/) ? RegExp.$1 : "")) : a("chrome") ? (_.engine = "webkit",
                                        _.name = "chrome",
                                        d(_, o(/chrome\/([\d\.]+)/) ? RegExp.$1 : "")) : a("iron") ? (_.engine = "webkit",
                                            _.name = "iron") : a("crios") ? (_.name = "chrome",
                                                _.engine = "webkit",
                                                d(_, o(/crios\/([\d\.]+)/) ? RegExp.$1 : "")) : a("fxios") ? (_.name = "firefox",
                                                    _.engine = "webkit",
                                                    d(_, o(/fxios\/([\d\.]+)/) ? RegExp.$1 : "")) : a("applewebkit/") ? (_.name = "safari",
                                                        _.engine = "webkit",
                                                        d(_, o(/version\/([\d\.]+)/) ? RegExp.$1 : "")) : a("mozilla/") && (_.engine = "gecko") : (_.engine = "trident",
                                                            _.name = "ie",
                                                            !t.addEventListener && i.documentMode && 7 === i.documentMode ? d(_, "8.compat") : o(/trident.*rv[ :](\d+)\./) ? d(_, RegExp.$1) : d(_, o(/trident\/4\.0/) ? "8" : RegExp.$1)),
                        _.name && (p(_.name, !0),
                            _.major && (u(_.name, _.major),
                                _.minor && u(_.name, _.major, _.minor))),
                        p(_.engine, !0),
                        _.language = e.userLanguage || e.language,
                        p(_.language, !0)),
                    M.detectPlugins) {
                    for (_.plugins = [],
                        h = T.length - 1; h >= 0; h--)
                        P = T[h],
                            S = !1,
                            t.ActiveXObject ? S = g(P.progIds) : e.plugins && (S = m(P.substrs)),
                            S && (_.plugins.push(P.name),
                                p(P.name, !0));
                    "function" == typeof e.javaEnabled && e.javaEnabled() && (_.plugins.push("java"),
                        p("java", !0))
                }
            }
            var y, _, x = {}, w = t.Modernizr, b = ["tv", "tablet", "mobile", "desktop"], M = {
                addAllFeaturesAsClass: !1,
                detectDevice: !0,
                detectDeviceModel: !0,
                detectScreen: !0,
                detectOS: !0,
                detectBrowser: !0,
                detectPlugins: !0
            }, T = [{
                name: "adobereader",
                substrs: ["Adobe", "Acrobat"],
                progIds: ["AcroPDF.PDF", "PDF.PDFCtrl.5"]
            }, {
                name: "flash",
                substrs: ["Shockwave Flash"],
                progIds: ["ShockwaveFlash.ShockwaveFlash.1"]
            }, {
                name: "wmplayer",
                substrs: ["Windows Media"],
                progIds: ["wmplayer.ocx"]
            }, {
                name: "silverlight",
                substrs: ["Silverlight"],
                progIds: ["AgControl.AgControl"]
            }, {
                name: "quicktime",
                substrs: ["QuickTime"],
                progIds: ["QuickTime.QuickTime"]
            }], P = /[\t\r\n]/g, S = i.documentElement;
            return x.detect = function (t) {
                return v(t)
            }
                ,
                x.init = function () {
                    x !== n && (x.browser = {
                        userAgent: (e.userAgent || e.vendor || t.opera || "").toLowerCase()
                    },
                        x.detect())
                }
                ,
                x.init(),
                x
        }(window, window.navigator, window.document)
    }
    , function (t, e, i) {
        "use strict";
        (function (t) {
            var e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
                return typeof t
            }
                : function (t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                }
                ;
            !function (i, n, r) {
                function a(t, i) {
                    return (void 0 === t ? "undefined" : e(t)) === i
                }
                function o(t) {
                    var e = T.className
                        , i = M._config.classPrefix || "";
                    if (P && (e = e.baseVal),
                        M._config.enableJSClass) {
                        var n = new RegExp("(^|\\s)" + i + "no-js(\\s|$)");
                        e = e.replace(n, "$1" + i + "js$2")
                    }
                    M._config.enableClasses && (e += " " + i + t.join(" " + i),
                        P ? T.className.baseVal = e : T.className = e)
                }
                function s() {
                    return "function" != typeof n.createElement ? n.createElement(arguments[0]) : P ? n.createElementNS.call(n, "http://www.w3.org/2000/svg", arguments[0]) : n.createElement.apply(n, arguments)
                }
                function h() {
                    var t = n.body;
                    return t || (t = s(P ? "svg" : "body"),
                        t.fake = !0),
                        t
                }
                function l(t, e, i, r) {
                    var a, o, l, c, u = "modernizr", p = s("div"), d = h();
                    if (parseInt(i, 10))
                        for (; i--;)
                            l = s("div"),
                                l.id = r ? r[i] : u + (i + 1),
                                p.appendChild(l);
                    return a = s("style"),
                        a.type = "text/css",
                        a.id = "s" + u,
                        (d.fake ? d : p).appendChild(a),
                        d.appendChild(p),
                        a.styleSheet ? a.styleSheet.cssText = t : a.appendChild(n.createTextNode(t)),
                        p.id = u,
                        d.fake && (d.style.background = "",
                            d.style.overflow = "hidden",
                            c = T.style.overflow,
                            T.style.overflow = "hidden",
                            T.appendChild(d)),
                        o = e(p, t),
                        d.fake ? (d.parentNode.removeChild(d),
                            T.style.overflow = c,
                            T.offsetHeight) : p.parentNode.removeChild(p),
                        !!o
                }
                function c(t, e) {
                    return !!~("" + t).indexOf(e)
                }
                function u(t) {
                    return t.replace(/([a-z])-([a-z])/g, function (t, e, i) {
                        return e + i.toUpperCase()
                    }).replace(/^-/, "")
                }
                function p(t, e) {
                    return function () {
                        return t.apply(e, arguments)
                    }
                }
                function d(t, e, i) {
                    var n;
                    for (var r in t)
                        if (t[r] in e)
                            return !1 === i ? t[r] : (n = e[t[r]],
                                a(n, "function") ? p(n, i || e) : n);
                    return !1
                }
                function f(t) {
                    return t.replace(/([A-Z])/g, function (t, e) {
                        return "-" + e.toLowerCase()
                    }).replace(/^ms-/, "-ms-")
                }
                function m(t, e) {
                    var n = t.length;
                    if ("CSS" in i && "supports" in i.CSS) {
                        for (; n--;)
                            if (i.CSS.supports(f(t[n]), e))
                                return !0;
                        return !1
                    }
                    if ("CSSSupportsRule" in i) {
                        for (var a = []; n--;)
                            a.push("(" + f(t[n]) + ":" + e + ")");
                        return a = a.join(" or "),
                            l("@supports (" + a + ") { #modernizr { position: absolute; } }", function (t) {
                                return "absolute" == getComputedStyle(t, null).position
                            })
                    }
                    return r
                }
                function g(t, e, i, n) {
                    function o() {
                        l && (delete R.style,
                            delete R.modElem)
                    }
                    if (n = !a(n, "undefined") && n,
                        !a(i, "undefined")) {
                        var h = m(t, i);
                        if (!a(h, "undefined"))
                            return h
                    }
                    for (var l, p, d, f, g, v = ["modernizr", "tspan"]; !R.style;)
                        l = !0,
                            R.modElem = s(v.shift()),
                            R.style = R.modElem.style;
                    for (d = t.length,
                        p = 0; p < d; p++)
                        if (f = t[p],
                            g = R.style[f],
                            c(f, "-") && (f = u(f)),
                            R.style[f] !== r) {
                            if (n || a(i, "undefined"))
                                return o(),
                                    "pfx" != e || f;
                            try {
                                R.style[f] = i
                            } catch (t) { }
                            if (R.style[f] != g)
                                return o(),
                                    "pfx" != e || f
                        }
                    return o(),
                        !1
                }
                function v(t, e, i, n, r) {
                    var o = t.charAt(0).toUpperCase() + t.slice(1)
                        , s = (t + " " + L.join(o + " ") + o).split(" ");
                    return a(e, "string") || a(e, "undefined") ? g(s, e, n, r) : (s = (t + " " + C.join(o + " ") + o).split(" "),
                        d(s, e, i))
                }
                function y(t, e, i) {
                    return v(t, r, r, e, i)
                }
                function _(t, i) {
                    if ("object" == (void 0 === t ? "undefined" : e(t)))
                        for (var n in t)
                            I(t, n) && _(n, t[n]);
                    else {
                        t = t.toLowerCase();
                        var r = t.split(".")
                            , a = M[r[0]];
                        if (2 == r.length && (a = a[r[1]]),
                            void 0 !== a)
                            return M;
                        i = "function" == typeof i ? i() : i,
                            1 == r.length ? M[r[0]] = i : (!M[r[0]] || M[r[0]] instanceof Boolean || (M[r[0]] = new Boolean(M[r[0]])),
                                M[r[0]][r[1]] = i),
                            o([(i && 0 != i ? "" : "no-") + r.join("-")]),
                            M._trigger(t, i)
                    }
                    return M
                }
                var x = []
                    , w = []
                    , b = {
                        _version: "3.3.1",
                        _config: {
                            classPrefix: "",
                            enableClasses: !0,
                            enableJSClass: !0,
                            usePrefixes: !0
                        },
                        _q: [],
                        on: function (t, e) {
                            var i = this;
                            setTimeout(function () {
                                e(i[t])
                            }, 0)
                        },
                        addTest: function (t, e, i) {
                            w.push({
                                name: t,
                                fn: e,
                                options: i
                            })
                        },
                        addAsyncTest: function (t) {
                            w.push({
                                name: null,
                                fn: t
                            })
                        }
                    }
                    , M = function () { };
                M.prototype = b,
                    M = new M,
                    /*!
          {
            "name": "Cookies",
            "property": "cookies",
            "tags": ["storage"],
            "authors": ["tauren"]
          }
          !*/
                    M.addTest("cookies", function () {
                        try {
                            n.cookie = "cookietest=1";
                            var t = -1 != n.cookie.indexOf("cookietest=");
                            return n.cookie = "cookietest=1; expires=Thu, 01-Jan-1970 00:00:01 GMT",
                                t
                        } catch (t) {
                            return !1
                        }
                    }),
                    /*!
          {
            "name": "Geolocation API",
            "property": "geolocation",
            "caniuse": "geolocation",
            "tags": ["media"],
            "notes": [{
              "name": "MDN documentation",
              "href": "https://developer.mozilla.org/en-US/docs/WebAPI/Using_geolocation"
            }],
            "polyfills": [
              "joshuabell-polyfill",
              "webshims",
              "geo-location-javascript",
              "geolocation-api-polyfill"
            ]
          }
          !*/
                    M.addTest("geolocation", "geolocation" in navigator);
                var T = n.documentElement
                    , P = "svg" === T.nodeName.toLowerCase();
                P || function (i, n) {
                    function r(t, e) {
                        var i = t.createElement("p")
                            , n = t.getElementsByTagName("head")[0] || t.documentElement;
                        return i.innerHTML = "x<style>" + e + "</style>",
                            n.insertBefore(i.lastChild, n.firstChild)
                    }
                    function a() {
                        var t = x.elements;
                        return "string" == typeof t ? t.split(" ") : t
                    }
                    function o(t, e) {
                        var i = x.elements;
                        "string" != typeof i && (i = i.join(" ")),
                            "string" != typeof t && (t = t.join(" ")),
                            x.elements = i + " " + t,
                            u(e)
                    }
                    function s(t) {
                        var e = _[t[v]];
                        return e || (e = {},
                            y++,
                            t[v] = y,
                            _[y] = e),
                            e
                    }
                    function h(t, e, i) {
                        if (e || (e = n),
                            d)
                            return e.createElement(t);
                        i || (i = s(e));
                        var r;
                        return r = i.cache[t] ? i.cache[t].cloneNode() : g.test(t) ? (i.cache[t] = i.createElem(t)).cloneNode() : i.createElem(t),
                            !r.canHaveChildren || m.test(t) || r.tagUrn ? r : i.frag.appendChild(r)
                    }
                    function l(t, e) {
                        if (t || (t = n),
                            d)
                            return t.createDocumentFragment();
                        e = e || s(t);
                        for (var i = e.frag.cloneNode(), r = 0, o = a(), h = o.length; r < h; r++)
                            i.createElement(o[r]);
                        return i
                    }
                    function c(t, e) {
                        e.cache || (e.cache = {},
                            e.createElem = t.createElement,
                            e.createFrag = t.createDocumentFragment,
                            e.frag = e.createFrag()),
                            t.createElement = function (i) {
                                return x.shivMethods ? h(i, t, e) : e.createElem(i)
                            }
                            ,
                            t.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + a().join().replace(/[\w\-:]+/g, function (t) {
                                return e.createElem(t),
                                    e.frag.createElement(t),
                                    'c("' + t + '")'
                            }) + ");return n}")(x, e.frag)
                    }
                    function u(t) {
                        t || (t = n);
                        var e = s(t);
                        return !x.shivCSS || p || e.hasCSS || (e.hasCSS = !!r(t, "article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}")),
                            d || c(t, e),
                            t
                    }
                    var p, d, f = i.html5 || {}, m = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i, g = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i, v = "_html5shiv", y = 0, _ = {};
                    !function () {
                        try {
                            var t = n.createElement("a");
                            t.innerHTML = "<xyz></xyz>",
                                p = "hidden" in t,
                                d = 1 == t.childNodes.length || function () {
                                    n.createElement("a");
                                    var t = n.createDocumentFragment();
                                    return void 0 === t.cloneNode || void 0 === t.createDocumentFragment || void 0 === t.createElement
                                }()
                        } catch (t) {
                            p = !0,
                                d = !0
                        }
                    }();
                    var x = {
                        elements: f.elements || "abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video",
                        version: "3.7.3",
                        shivCSS: !1 !== f.shivCSS,
                        supportsUnknownElements: d,
                        shivMethods: !1 !== f.shivMethods,
                        type: "default",
                        shivDocument: u,
                        createElement: h,
                        createDocumentFragment: l,
                        addElements: o
                    };
                    i.html5 = x,
                        u(n),
                        "object" == e(t) && t.exports && (t.exports = x)
                }(void 0 !== i ? i : this, n);
                var S = b._config.usePrefixes ? " -webkit- -moz- -o- -ms- ".split(" ") : ["", ""];
                b._prefixes = S,
                    /*!
          {
            "name": "Inline SVG",
            "property": "inlinesvg",
            "caniuse": "svg-html5",
            "tags": ["svg"],
            "notes": [{
              "name": "Test page",
              "href": "https://paulirish.com/demo/inline-svg"
            }, {
              "name": "Test page and results",
              "href": "https://codepen.io/eltonmesquita/full/GgXbvo/"
            }],
            "polyfills": ["inline-svg-polyfill"],
            "knownBugs": ["False negative on some Chromia browsers."]
          }
          !*/
                    M.addTest("inlinesvg", function () {
                        var t = s("div");
                        return t.innerHTML = "<svg/>",
                            "http://www.w3.org/2000/svg" == ("undefined" != typeof SVGRect && t.firstChild && t.firstChild.namespaceURI)
                    });
                var A = b.testStyles = l;
                /*!
      {
        "name": "Touch Events",
        "property": "touchevents",
        "caniuse" : "touch",
        "tags": ["media", "attribute"],
        "notes": [{
          "name": "Touch Events spec",
          "href": "https://www.w3.org/TR/2013/WD-touch-events-20130124/"
        }],
        "warnings": [
          "Indicates if the browser supports the Touch Events spec, and does not necessarily reflect a touchscreen device"
        ],
        "knownBugs": [
          "False-positive on some configurations of Nokia N900",
          "False-positive on some BlackBerry 6.0 builds – https://github.com/Modernizr/Modernizr/issues/372#issuecomment-3112695"
        ]
      }
      !*/
                M.addTest("touchevents", function () {
                    var t;
                    if ("ontouchstart" in i || i.DocumentTouch && n instanceof DocumentTouch)
                        t = !0;
                    else {
                        var e = ["@media (", S.join("touch-enabled),("), "heartz", ")", "{#modernizr{top:9px;position:absolute}}"].join("");
                        A(e, function (e) {
                            t = 9 === e.offsetTop
                        })
                    }
                    return t
                });
                var E = "Moz O ms Webkit"
                    , L = b._config.usePrefixes ? E.split(" ") : [];
                b._cssomPrefixes = L;
                var C = b._config.usePrefixes ? E.toLowerCase().split(" ") : [];
                b._domPrefixes = C;
                var O = {
                    elem: s("modernizr")
                };
                M._q.push(function () {
                    delete O.elem
                });
                var R = {
                    style: O.elem.style
                };
                M._q.unshift(function () {
                    delete R.style
                }),
                    b.testAllProps = v,
                    b.testAllProps = y,
                    /*!
          {
            "name": "Flexbox",
            "property": "flexbox",
            "caniuse": "flexbox",
            "tags": ["css"],
            "notes": [{
              "name": "The _new_ flexbox",
              "href": "http://dev.w3.org/csswg/css3-flexbox"
            }],
            "warnings": [
              "A `true` result for this detect does not imply that the `flex-wrap` property is supported; see the `flexwrap` detect."
            ]
          }
          !*/
                    M.addTest("flexbox", y("flexBasis", "1px", !0));
                var I;
                !function () {
                    var t = {}.hasOwnProperty;
                    I = a(t, "undefined") || a(t.call, "undefined") ? function (t, e) {
                        return e in t && a(t.constructor.prototype[e], "undefined")
                    }
                        : function (e, i) {
                            return t.call(e, i)
                        }
                }(),
                    b._l = {},
                    b.on = function (t, e) {
                        this._l[t] || (this._l[t] = []),
                            this._l[t].push(e),
                            M.hasOwnProperty(t) && setTimeout(function () {
                                M._trigger(t, M[t])
                            }, 0)
                    }
                    ,
                    b._trigger = function (t, e) {
                        if (this._l[t]) {
                            var i = this._l[t];
                            setTimeout(function () {
                                var t;
                                for (t = 0; t < i.length; t++)
                                    (0,
                                        i[t])(e)
                            }, 0),
                                delete this._l[t]
                        }
                    }
                    ,
                    M._q.push(function () {
                        b.addTest = _
                    }),
                    function () {
                        var t, e, i, n, r, o, s;
                        for (var h in w)
                            if (w.hasOwnProperty(h)) {
                                if (t = [],
                                    e = w[h],
                                    e.name && (t.push(e.name.toLowerCase()),
                                        e.options && e.options.aliases && e.options.aliases.length))
                                    for (i = 0; i < e.options.aliases.length; i++)
                                        t.push(e.options.aliases[i].toLowerCase());
                                for (n = a(e.fn, "function") ? e.fn() : e.fn,
                                    r = 0; r < t.length; r++)
                                    o = t[r],
                                        s = o.split("."),
                                        1 === s.length ? M[s[0]] = n : (!M[s[0]] || M[s[0]] instanceof Boolean || (M[s[0]] = new Boolean(M[s[0]])),
                                            M[s[0]][s[1]] = n),
                                        x.push((n ? "" : "no-") + s.join("-"))
                            }
                    }(),
                    o(x),
                    delete b.addTest,
                    delete b.addAsyncTest;
                for (var k = 0; k < M._q.length; k++)
                    M._q[k]();
                i.Modernizr = M
            }(window, document)
        }
        ).call(e, i(53)(t))
    }
    , function (t, e, i) {
        (function (n) {
            var r, a, o, s = void 0 !== t && t.exports && void 0 !== n ? n : this || window;
            (s._gsQueue || (s._gsQueue = [])).push(function () {
                "use strict";
                s._gsDefine("plugins.CSSRulePlugin", ["plugins.TweenPlugin", "TweenLite", "plugins.CSSPlugin"], function (t, e, i) {
                    var n = function () {
                        t.call(this, "cssRule"),
                            this._overwriteProps.length = 0
                    }
                        , r = s.document
                        , a = i.prototype.setRatio
                        , o = n.prototype = new i;
                    return o._propName = "cssRule",
                        o.constructor = n,
                        n.version = "0.6.6",
                        n.API = 2,
                        n.getRule = function (t) {
                            var e, i, n, a, o = r.all ? "rules" : "cssRules", s = r.styleSheets, h = s.length, l = ":" === t.charAt(0);
                            for (t = (l ? "" : ",") + t.split("::").join(":").toLowerCase() + ",",
                                l && (a = []); --h > -1;) {
                                try {
                                    if (!(i = s[h][o]))
                                        continue;
                                    e = i.length
                                } catch (t) {
                                    continue
                                }
                                for (; --e > -1;)
                                    if (n = i[e],
                                        n.selectorText && -1 !== ("," + n.selectorText.split("::").join(":").toLowerCase() + ",").indexOf(t)) {
                                        if (!l)
                                            return n.style;
                                        a.push(n.style)
                                    }
                            }
                            return a
                        }
                        ,
                        o._onInitTween = function (t, e, n) {
                            if (void 0 === t.cssText)
                                return !1;
                            var a = t._gsProxy = t._gsProxy || r.createElement("div");
                            return this._ss = t,
                                this._proxy = a.style,
                                a.style.cssText = t.cssText,
                                i.prototype._onInitTween.call(this, a, e, n),
                                !0
                        }
                        ,
                        o.setRatio = function (t) {
                            a.call(this, t),
                                this._ss.cssText = this._proxy.cssText
                        }
                        ,
                        t.activate([n]),
                        n
                }, !0)
            }),
                s._gsDefine && s._gsQueue.pop()(),
                function (n) {
                    "use strict";
                    var h = function () {
                        return (s.GreenSockGlobals || s).CSSRulePlugin
                    };
                    void 0 !== t && t.exports ? (i(20),
                        t.exports = h()) : (a = [i(20)],
                            r = h,
                            void 0 !== (o = "function" == typeof r ? r.apply(e, a) : r) && (t.exports = o))
                }()
        }
        ).call(e, i(10))
    }
    , function (t, e, i) {
        (function (i) {
            var n, r, a = void 0 !== t && t.exports && void 0 !== i ? i : this || window;
            (a._gsQueue || (a._gsQueue = [])).push(function () {
                "use strict";
                a._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function (t, e, i) {
                    var n = function (t) {
                        var e, i = [], n = t.length;
                        for (e = 0; e !== n; i.push(t[e++]))
                            ;
                        return i
                    }
                        , r = function (t, e, i) {
                            var n, r, a = t.cycle;
                            for (n in a)
                                r = a[n],
                                    t[n] = "function" == typeof r ? r(i, e[i]) : r[i % r.length];
                            delete t.cycle
                        }
                        , a = function (t, e, n) {
                            i.call(this, t, e, n),
                                this._cycle = 0,
                                this._yoyo = !0 === this.vars.yoyo || !!this.vars.yoyoEase,
                                this._repeat = this.vars.repeat || 0,
                                this._repeatDelay = this.vars.repeatDelay || 0,
                                this._dirty = !0,
                                this.render = a.prototype.render
                        }
                        , o = i._internals
                        , s = o.isSelector
                        , h = o.isArray
                        , l = a.prototype = i.to({}, .1, {})
                        , c = [];
                    a.version = "1.20.2",
                        l.constructor = a,
                        l.kill()._gc = !1,
                        a.killTweensOf = a.killDelayedCallsTo = i.killTweensOf,
                        a.getTweensOf = i.getTweensOf,
                        a.lagSmoothing = i.lagSmoothing,
                        a.ticker = i.ticker,
                        a.render = i.render,
                        l.invalidate = function () {
                            return this._yoyo = !0 === this.vars.yoyo || !!this.vars.yoyoEase,
                                this._repeat = this.vars.repeat || 0,
                                this._repeatDelay = this.vars.repeatDelay || 0,
                                this._yoyoEase = null,
                                this._uncache(!0),
                                i.prototype.invalidate.call(this)
                        }
                        ,
                        l.updateTo = function (t, e) {
                            var n, r = this.ratio, a = this.vars.immediateRender || t.immediateRender;
                            e && this._startTime < this._timeline._time && (this._startTime = this._timeline._time,
                                this._uncache(!1),
                                this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
                            for (n in t)
                                this.vars[n] = t[n];
                            if (this._initted || a)
                                if (e)
                                    this._initted = !1,
                                        a && this.render(0, !0, !0);
                                else if (this._gc && this._enabled(!0, !1),
                                    this._notifyPluginsOfEnabled && this._firstPT && i._onPluginEvent("_onDisable", this),
                                    this._time / this._duration > .998) {
                                    var o = this._totalTime;
                                    this.render(0, !0, !1),
                                        this._initted = !1,
                                        this.render(o, !0, !1)
                                } else if (this._initted = !1,
                                    this._init(),
                                    this._time > 0 || a)
                                    for (var s, h = 1 / (1 - r), l = this._firstPT; l;)
                                        s = l.s + l.c,
                                            l.c *= h,
                                            l.s = s - l.c,
                                            l = l._next;
                            return this
                        }
                        ,
                        l.render = function (t, e, n) {
                            this._initted || 0 === this._duration && this.vars.repeat && this.invalidate();
                            var r, a, s, h, l, c, u, p, d, f = this._dirty ? this.totalDuration() : this._totalDuration, m = this._time, g = this._totalTime, v = this._cycle, y = this._duration, _ = this._rawPrevTime;
                            if (t >= f - 1e-7 && t >= 0 ? (this._totalTime = f,
                                this._cycle = this._repeat,
                                this._yoyo && 0 != (1 & this._cycle) ? (this._time = 0,
                                    this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = y,
                                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1),
                                this._reversed || (r = !0,
                                    a = "onComplete",
                                    n = n || this._timeline.autoRemoveChildren),
                                0 === y && (this._initted || !this.vars.lazy || n) && (this._startTime === this._timeline._duration && (t = 0),
                                    (_ < 0 || t <= 0 && t >= -1e-7 || 1e-10 === _ && "isPause" !== this.data) && _ !== t && (n = !0,
                                        _ > 1e-10 && (a = "onReverseComplete")),
                                    this._rawPrevTime = p = !e || t || _ === t ? t : 1e-10)) : t < 1e-7 ? (this._totalTime = this._time = this._cycle = 0,
                                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                                        (0 !== g || 0 === y && _ > 0) && (a = "onReverseComplete",
                                            r = this._reversed),
                                        t < 0 && (this._active = !1,
                                            0 === y && (this._initted || !this.vars.lazy || n) && (_ >= 0 && (n = !0),
                                                this._rawPrevTime = p = !e || t || _ === t ? t : 1e-10)),
                                        this._initted || (n = !0)) : (this._totalTime = this._time = t,
                                            0 !== this._repeat && (h = y + this._repeatDelay,
                                                this._cycle = this._totalTime / h >> 0,
                                                0 !== this._cycle && this._cycle === this._totalTime / h && g <= t && this._cycle--,
                                                this._time = this._totalTime - this._cycle * h,
                                                this._yoyo && 0 != (1 & this._cycle) && (this._time = y - this._time,
                                                    (d = this._yoyoEase || this.vars.yoyoEase) && (this._yoyoEase || (!0 !== d || this._initted ? this._yoyoEase = d = !0 === d ? this._ease : d instanceof Ease ? d : Ease.map[d] : (d = this.vars.ease,
                                                        this._yoyoEase = d = d ? d instanceof Ease ? d : "function" == typeof d ? new Ease(d, this.vars.easeParams) : Ease.map[d] || i.defaultEase : i.defaultEase)),
                                                        this.ratio = d ? 1 - d.getRatio((y - this._time) / y) : 0)),
                                                this._time > y ? this._time = y : this._time < 0 && (this._time = 0)),
                                            this._easeType && !d ? (l = this._time / y,
                                                c = this._easeType,
                                                u = this._easePower,
                                                (1 === c || 3 === c && l >= .5) && (l = 1 - l),
                                                3 === c && (l *= 2),
                                                1 === u ? l *= l : 2 === u ? l *= l * l : 3 === u ? l *= l * l * l : 4 === u && (l *= l * l * l * l),
                                                1 === c ? this.ratio = 1 - l : 2 === c ? this.ratio = l : this._time / y < .5 ? this.ratio = l / 2 : this.ratio = 1 - l / 2) : d || (this.ratio = this._ease.getRatio(this._time / y))),
                                m === this._time && !n && v === this._cycle)
                                return void (g !== this._totalTime && this._onUpdate && (e || this._callback("onUpdate")));
                            if (!this._initted) {
                                if (this._init(),
                                    !this._initted || this._gc)
                                    return;
                                if (!n && this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration))
                                    return this._time = m,
                                        this._totalTime = g,
                                        this._rawPrevTime = _,
                                        this._cycle = v,
                                        o.lazyTweens.push(this),
                                        void (this._lazy = [t, e]);
                                !this._time || r || d ? r && this._ease._calcEnd && !d && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1)) : this.ratio = this._ease.getRatio(this._time / y)
                            }
                            for (!1 !== this._lazy && (this._lazy = !1),
                                this._active || !this._paused && this._time !== m && t >= 0 && (this._active = !0),
                                0 === g && (2 === this._initted && t > 0 && this._init(),
                                    this._startAt && (t >= 0 ? this._startAt.render(t, e, n) : a || (a = "_dummyGS")),
                                    this.vars.onStart && (0 === this._totalTime && 0 !== y || e || this._callback("onStart"))),
                                s = this._firstPT; s;)
                                s.f ? s.t[s.p](s.c * this.ratio + s.s) : s.t[s.p] = s.c * this.ratio + s.s,
                                    s = s._next;
                            this._onUpdate && (t < 0 && this._startAt && this._startTime && this._startAt.render(t, e, n),
                                e || (this._totalTime !== g || a) && this._callback("onUpdate")),
                                this._cycle !== v && (e || this._gc || this.vars.onRepeat && this._callback("onRepeat")),
                                a && (this._gc && !n || (t < 0 && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(t, e, n),
                                    r && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                                        this._active = !1),
                                    !e && this.vars[a] && this._callback(a),
                                    0 === y && 1e-10 === this._rawPrevTime && 1e-10 !== p && (this._rawPrevTime = 0)))
                        }
                        ,
                        a.to = function (t, e, i) {
                            return new a(t, e, i)
                        }
                        ,
                        a.from = function (t, e, i) {
                            return i.runBackwards = !0,
                                i.immediateRender = 0 != i.immediateRender,
                                new a(t, e, i)
                        }
                        ,
                        a.fromTo = function (t, e, i, n) {
                            return n.startAt = i,
                                n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                                new a(t, e, n)
                        }
                        ,
                        a.staggerTo = a.allTo = function (t, e, o, l, u, p, d) {
                            l = l || 0;
                            var f, m, g, v, y = 0, _ = [], x = function () {
                                o.onComplete && o.onComplete.apply(o.onCompleteScope || this, arguments),
                                    u.apply(d || o.callbackScope || this, p || c)
                            }, w = o.cycle, b = o.startAt && o.startAt.cycle;
                            for (h(t) || ("string" == typeof t && (t = i.selector(t) || t),
                                s(t) && (t = n(t))),
                                t = t || [],
                                l < 0 && (t = n(t),
                                    t.reverse(),
                                    l *= -1),
                                f = t.length - 1,
                                g = 0; g <= f; g++) {
                                m = {};
                                for (v in o)
                                    m[v] = o[v];
                                if (w && (r(m, t, g),
                                    null != m.duration && (e = m.duration,
                                        delete m.duration)),
                                    b) {
                                    b = m.startAt = {};
                                    for (v in o.startAt)
                                        b[v] = o.startAt[v];
                                    r(m.startAt, t, g)
                                }
                                m.delay = y + (m.delay || 0),
                                    g === f && u && (m.onComplete = x),
                                    _[g] = new a(t[g], e, m),
                                    y += l
                            }
                            return _
                        }
                        ,
                        a.staggerFrom = a.allFrom = function (t, e, i, n, r, o, s) {
                            return i.runBackwards = !0,
                                i.immediateRender = 0 != i.immediateRender,
                                a.staggerTo(t, e, i, n, r, o, s)
                        }
                        ,
                        a.staggerFromTo = a.allFromTo = function (t, e, i, n, r, o, s, h) {
                            return n.startAt = i,
                                n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                                a.staggerTo(t, e, n, r, o, s, h)
                        }
                        ,
                        a.delayedCall = function (t, e, i, n, r) {
                            return new a(e, 0, {
                                delay: t,
                                onComplete: e,
                                onCompleteParams: i,
                                callbackScope: n,
                                onReverseComplete: e,
                                onReverseCompleteParams: i,
                                immediateRender: !1,
                                useFrames: r,
                                overwrite: 0
                            })
                        }
                        ,
                        a.set = function (t, e) {
                            return new a(t, 0, e)
                        }
                        ,
                        a.isTweening = function (t) {
                            return i.getTweensOf(t, !0).length > 0
                        }
                        ;
                    var u = function (t, e) {
                        for (var n = [], r = 0, a = t._first; a;)
                            a instanceof i ? n[r++] = a : (e && (n[r++] = a),
                                n = n.concat(u(a, e)),
                                r = n.length),
                                a = a._next;
                        return n
                    }
                        , p = a.getAllTweens = function (e) {
                            return u(t._rootTimeline, e).concat(u(t._rootFramesTimeline, e))
                        }
                        ;
                    a.killAll = function (t, i, n, r) {
                        null == i && (i = !0),
                            null == n && (n = !0);
                        var a, o, s, h = p(0 != r), l = h.length, c = i && n && r;
                        for (s = 0; s < l; s++)
                            o = h[s],
                                (c || o instanceof e || (a = o.target === o.vars.onComplete) && n || i && !a) && (t ? o.totalTime(o._reversed ? 0 : o.totalDuration()) : o._enabled(!1, !1))
                    }
                        ,
                        a.killChildTweensOf = function (t, e) {
                            if (null != t) {
                                var r, l, c, u, p, d = o.tweenLookup;
                                if ("string" == typeof t && (t = i.selector(t) || t),
                                    s(t) && (t = n(t)),
                                    h(t))
                                    for (u = t.length; --u > -1;)
                                        a.killChildTweensOf(t[u], e);
                                else {
                                    r = [];
                                    for (c in d)
                                        for (l = d[c].target.parentNode; l;)
                                            l === t && (r = r.concat(d[c].tweens)),
                                                l = l.parentNode;
                                    for (p = r.length,
                                        u = 0; u < p; u++)
                                        e && r[u].totalTime(r[u].totalDuration()),
                                            r[u]._enabled(!1, !1)
                                }
                            }
                        }
                        ;
                    var d = function (t, i, n, r) {
                        i = !1 !== i,
                            n = !1 !== n,
                            r = !1 !== r;
                        for (var a, o, s = p(r), h = i && n && r, l = s.length; --l > -1;)
                            o = s[l],
                                (h || o instanceof e || (a = o.target === o.vars.onComplete) && n || i && !a) && o.paused(t)
                    };
                    return a.pauseAll = function (t, e, i) {
                        d(!0, t, e, i)
                    }
                        ,
                        a.resumeAll = function (t, e, i) {
                            d(!1, t, e, i)
                        }
                        ,
                        a.globalTimeScale = function (e) {
                            var n = t._rootTimeline
                                , r = i.ticker.time;
                            return arguments.length ? (e = e || 1e-10,
                                n._startTime = r - (r - n._startTime) * n._timeScale / e,
                                n = t._rootFramesTimeline,
                                r = i.ticker.frame,
                                n._startTime = r - (r - n._startTime) * n._timeScale / e,
                                n._timeScale = t._rootTimeline._timeScale = e,
                                e) : n._timeScale
                        }
                        ,
                        l.progress = function (t, e) {
                            return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 != (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), e) : this._time / this.duration()
                        }
                        ,
                        l.totalProgress = function (t, e) {
                            return arguments.length ? this.totalTime(this.totalDuration() * t, e) : this._totalTime / this.totalDuration()
                        }
                        ,
                        l.time = function (t, e) {
                            return arguments.length ? (this._dirty && this.totalDuration(),
                                t > this._duration && (t = this._duration),
                                this._yoyo && 0 != (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)),
                                this.totalTime(t, e)) : this._time
                        }
                        ,
                        l.duration = function (e) {
                            return arguments.length ? t.prototype.duration.call(this, e) : this._duration
                        }
                        ,
                        l.totalDuration = function (t) {
                            return arguments.length ? -1 === this._repeat ? this : this.duration((t - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat,
                                this._dirty = !1),
                                this._totalDuration)
                        }
                        ,
                        l.repeat = function (t) {
                            return arguments.length ? (this._repeat = t,
                                this._uncache(!0)) : this._repeat
                        }
                        ,
                        l.repeatDelay = function (t) {
                            return arguments.length ? (this._repeatDelay = t,
                                this._uncache(!0)) : this._repeatDelay
                        }
                        ,
                        l.yoyo = function (t) {
                            return arguments.length ? (this._yoyo = t,
                                this) : this._yoyo
                        }
                        ,
                        a
                }, !0),
                    a._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function (t, e, i) {
                        var n = function (t) {
                            e.call(this, t),
                                this._labels = {},
                                this.autoRemoveChildren = !0 === this.vars.autoRemoveChildren,
                                this.smoothChildTiming = !0 === this.vars.smoothChildTiming,
                                this._sortChildren = !0,
                                this._onUpdate = this.vars.onUpdate;
                            var i, n, r = this.vars;
                            for (n in r)
                                i = r[n],
                                    h(i) && -1 !== i.join("").indexOf("{self}") && (r[n] = this._swapSelfInParams(i));
                            h(r.tweens) && this.add(r.tweens, 0, r.align, r.stagger)
                        }
                            , r = i._internals
                            , o = n._internals = {}
                            , s = r.isSelector
                            , h = r.isArray
                            , l = r.lazyTweens
                            , c = r.lazyRender
                            , u = a._gsDefine.globals
                            , p = function (t) {
                                var e, i = {};
                                for (e in t)
                                    i[e] = t[e];
                                return i
                            }
                            , d = function (t, e, i) {
                                var n, r, a = t.cycle;
                                for (n in a)
                                    r = a[n],
                                        t[n] = "function" == typeof r ? r(i, e[i]) : r[i % r.length];
                                delete t.cycle
                            }
                            , f = o.pauseCallback = function () { }
                            , m = function (t) {
                                var e, i = [], n = t.length;
                                for (e = 0; e !== n; i.push(t[e++]))
                                    ;
                                return i
                            }
                            , g = n.prototype = new e;
                        return n.version = "1.20.2",
                            g.constructor = n,
                            g.kill()._gc = g._forcingPlayhead = g._hasPause = !1,
                            g.to = function (t, e, n, r) {
                                var a = n.repeat && u.TweenMax || i;
                                return e ? this.add(new a(t, e, n), r) : this.set(t, n, r)
                            }
                            ,
                            g.from = function (t, e, n, r) {
                                return this.add((n.repeat && u.TweenMax || i).from(t, e, n), r)
                            }
                            ,
                            g.fromTo = function (t, e, n, r, a) {
                                var o = r.repeat && u.TweenMax || i;
                                return e ? this.add(o.fromTo(t, e, n, r), a) : this.set(t, r, a)
                            }
                            ,
                            g.staggerTo = function (t, e, r, a, o, h, l, c) {
                                var u, f, g = new n({
                                    onComplete: h,
                                    onCompleteParams: l,
                                    callbackScope: c,
                                    smoothChildTiming: this.smoothChildTiming
                                }), v = r.cycle;
                                for ("string" == typeof t && (t = i.selector(t) || t),
                                    t = t || [],
                                    s(t) && (t = m(t)),
                                    a = a || 0,
                                    a < 0 && (t = m(t),
                                        t.reverse(),
                                        a *= -1),
                                    f = 0; f < t.length; f++)
                                    u = p(r),
                                        u.startAt && (u.startAt = p(u.startAt),
                                            u.startAt.cycle && d(u.startAt, t, f)),
                                        v && (d(u, t, f),
                                            null != u.duration && (e = u.duration,
                                                delete u.duration)),
                                        g.to(t[f], e, u, f * a);
                                return this.add(g, o)
                            }
                            ,
                            g.staggerFrom = function (t, e, i, n, r, a, o, s) {
                                return i.immediateRender = 0 != i.immediateRender,
                                    i.runBackwards = !0,
                                    this.staggerTo(t, e, i, n, r, a, o, s)
                            }
                            ,
                            g.staggerFromTo = function (t, e, i, n, r, a, o, s, h) {
                                return n.startAt = i,
                                    n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                                    this.staggerTo(t, e, n, r, a, o, s, h)
                            }
                            ,
                            g.call = function (t, e, n, r) {
                                return this.add(i.delayedCall(0, t, e, n), r)
                            }
                            ,
                            g.set = function (t, e, n) {
                                return n = this._parseTimeOrLabel(n, 0, !0),
                                    null == e.immediateRender && (e.immediateRender = n === this._time && !this._paused),
                                    this.add(new i(t, 0, e), n)
                            }
                            ,
                            n.exportRoot = function (t, e) {
                                t = t || {},
                                    null == t.smoothChildTiming && (t.smoothChildTiming = !0);
                                var r, a, o = new n(t), s = o._timeline;
                                for (null == e && (e = !0),
                                    s._remove(o, !0),
                                    o._startTime = 0,
                                    o._rawPrevTime = o._time = o._totalTime = s._time,
                                    r = s._first; r;)
                                    a = r._next,
                                        e && r instanceof i && r.target === r.vars.onComplete || o.add(r, r._startTime - r._delay),
                                        r = a;
                                return s.add(o, 0),
                                    o
                            }
                            ,
                            g.add = function (r, a, o, s) {
                                var l, c, u, p, d, f;
                                if ("number" != typeof a && (a = this._parseTimeOrLabel(a, 0, !0, r)),
                                    !(r instanceof t)) {
                                    if (r instanceof Array || r && r.push && h(r)) {
                                        for (o = o || "normal",
                                            s = s || 0,
                                            l = a,
                                            c = r.length,
                                            u = 0; u < c; u++)
                                            h(p = r[u]) && (p = new n({
                                                tweens: p
                                            })),
                                                this.add(p, l),
                                                "string" != typeof p && "function" != typeof p && ("sequence" === o ? l = p._startTime + p.totalDuration() / p._timeScale : "start" === o && (p._startTime -= p.delay())),
                                                l += s;
                                        return this._uncache(!0)
                                    }
                                    if ("string" == typeof r)
                                        return this.addLabel(r, a);
                                    if ("function" != typeof r)
                                        throw "Cannot add " + r + " into the timeline; it is not a tween, timeline, function, or string.";
                                    r = i.delayedCall(0, r)
                                }
                                if (e.prototype.add.call(this, r, a),
                                    r._time && r.render((this.rawTime() - r._startTime) * r._timeScale, !1, !1),
                                    (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration())
                                    for (d = this,
                                        f = d.rawTime() > r._startTime; d._timeline;)
                                        f && d._timeline.smoothChildTiming ? d.totalTime(d._totalTime, !0) : d._gc && d._enabled(!0, !1),
                                            d = d._timeline;
                                return this
                            }
                            ,
                            g.remove = function (e) {
                                if (e instanceof t) {
                                    this._remove(e, !1);
                                    var i = e._timeline = e.vars.useFrames ? t._rootFramesTimeline : t._rootTimeline;
                                    return e._startTime = (e._paused ? e._pauseTime : i._time) - (e._reversed ? e.totalDuration() - e._totalTime : e._totalTime) / e._timeScale,
                                        this
                                }
                                if (e instanceof Array || e && e.push && h(e)) {
                                    for (var n = e.length; --n > -1;)
                                        this.remove(e[n]);
                                    return this
                                }
                                return "string" == typeof e ? this.removeLabel(e) : this.kill(null, e)
                            }
                            ,
                            g._remove = function (t, i) {
                                return e.prototype._remove.call(this, t, i),
                                    this._last ? this._time > this.duration() && (this._time = this._duration,
                                        this._totalTime = this._totalDuration) : this._time = this._totalTime = this._duration = this._totalDuration = 0,
                                    this
                            }
                            ,
                            g.append = function (t, e) {
                                return this.add(t, this._parseTimeOrLabel(null, e, !0, t))
                            }
                            ,
                            g.insert = g.insertMultiple = function (t, e, i, n) {
                                return this.add(t, e || 0, i, n)
                            }
                            ,
                            g.appendMultiple = function (t, e, i, n) {
                                return this.add(t, this._parseTimeOrLabel(null, e, !0, t), i, n)
                            }
                            ,
                            g.addLabel = function (t, e) {
                                return this._labels[t] = this._parseTimeOrLabel(e),
                                    this
                            }
                            ,
                            g.addPause = function (t, e, n, r) {
                                var a = i.delayedCall(0, f, n, r || this);
                                return a.vars.onComplete = a.vars.onReverseComplete = e,
                                    a.data = "isPause",
                                    this._hasPause = !0,
                                    this.add(a, t)
                            }
                            ,
                            g.removeLabel = function (t) {
                                return delete this._labels[t],
                                    this
                            }
                            ,
                            g.getLabelTime = function (t) {
                                return null != this._labels[t] ? this._labels[t] : -1
                            }
                            ,
                            g._parseTimeOrLabel = function (e, i, n, r) {
                                var a, o;
                                if (r instanceof t && r.timeline === this)
                                    this.remove(r);
                                else if (r && (r instanceof Array || r.push && h(r)))
                                    for (o = r.length; --o > -1;)
                                        r[o] instanceof t && r[o].timeline === this && this.remove(r[o]);
                                if (a = this.duration() > 99999999999 ? this.recent().endTime(!1) : this._duration,
                                    "string" == typeof i)
                                    return this._parseTimeOrLabel(i, n && "number" == typeof e && null == this._labels[i] ? e - a : 0, n);
                                if (i = i || 0,
                                    "string" != typeof e || !isNaN(e) && null == this._labels[e])
                                    null == e && (e = a);
                                else {
                                    if (-1 === (o = e.indexOf("=")))
                                        return null == this._labels[e] ? n ? this._labels[e] = a + i : i : this._labels[e] + i;
                                    i = parseInt(e.charAt(o - 1) + "1", 10) * Number(e.substr(o + 1)),
                                        e = o > 1 ? this._parseTimeOrLabel(e.substr(0, o - 1), 0, n) : a
                                }
                                return Number(e) + i
                            }
                            ,
                            g.seek = function (t, e) {
                                return this.totalTime("number" == typeof t ? t : this._parseTimeOrLabel(t), !1 !== e)
                            }
                            ,
                            g.stop = function () {
                                return this.paused(!0)
                            }
                            ,
                            g.gotoAndPlay = function (t, e) {
                                return this.play(t, e)
                            }
                            ,
                            g.gotoAndStop = function (t, e) {
                                return this.pause(t, e)
                            }
                            ,
                            g.render = function (t, e, i) {
                                this._gc && this._enabled(!0, !1);
                                var n, r, a, o, s, h, u, p = this._dirty ? this.totalDuration() : this._totalDuration, d = this._time, f = this._startTime, m = this._timeScale, g = this._paused;
                                if (t >= p - 1e-7 && t >= 0)
                                    this._totalTime = this._time = p,
                                        this._reversed || this._hasPausedChild() || (r = !0,
                                            o = "onComplete",
                                            s = !!this._timeline.autoRemoveChildren,
                                            0 === this._duration && (t <= 0 && t >= -1e-7 || this._rawPrevTime < 0 || 1e-10 === this._rawPrevTime) && this._rawPrevTime !== t && this._first && (s = !0,
                                                this._rawPrevTime > 1e-10 && (o = "onReverseComplete"))),
                                        this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : 1e-10,
                                        t = p + 1e-4;
                                else if (t < 1e-7)
                                    if (this._totalTime = this._time = 0,
                                        (0 !== d || 0 === this._duration && 1e-10 !== this._rawPrevTime && (this._rawPrevTime > 0 || t < 0 && this._rawPrevTime >= 0)) && (o = "onReverseComplete",
                                            r = this._reversed),
                                        t < 0)
                                        this._active = !1,
                                            this._timeline.autoRemoveChildren && this._reversed ? (s = r = !0,
                                                o = "onReverseComplete") : this._rawPrevTime >= 0 && this._first && (s = !0),
                                            this._rawPrevTime = t;
                                    else {
                                        if (this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : 1e-10,
                                            0 === t && r)
                                            for (n = this._first; n && 0 === n._startTime;)
                                                n._duration || (r = !1),
                                                    n = n._next;
                                        t = 0,
                                            this._initted || (s = !0)
                                    }
                                else {
                                    if (this._hasPause && !this._forcingPlayhead && !e) {
                                        if (t >= d)
                                            for (n = this._first; n && n._startTime <= t && !h;)
                                                n._duration || "isPause" !== n.data || n.ratio || 0 === n._startTime && 0 === this._rawPrevTime || (h = n),
                                                    n = n._next;
                                        else
                                            for (n = this._last; n && n._startTime >= t && !h;)
                                                n._duration || "isPause" === n.data && n._rawPrevTime > 0 && (h = n),
                                                    n = n._prev;
                                        h && (this._time = t = h._startTime,
                                            this._totalTime = t + this._cycle * (this._totalDuration + this._repeatDelay))
                                    }
                                    this._totalTime = this._time = this._rawPrevTime = t
                                }
                                if (this._time !== d && this._first || i || s || h) {
                                    if (this._initted || (this._initted = !0),
                                        this._active || !this._paused && this._time !== d && t > 0 && (this._active = !0),
                                        0 === d && this.vars.onStart && (0 === this._time && this._duration || e || this._callback("onStart")),
                                        (u = this._time) >= d)
                                        for (n = this._first; n && (a = n._next,
                                            u === this._time && (!this._paused || g));)
                                            (n._active || n._startTime <= u && !n._paused && !n._gc) && (h === n && this.pause(),
                                                n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)),
                                                n = a;
                                    else
                                        for (n = this._last; n && (a = n._prev,
                                            u === this._time && (!this._paused || g));) {
                                            if (n._active || n._startTime <= d && !n._paused && !n._gc) {
                                                if (h === n) {
                                                    for (h = n._prev; h && h.endTime() > this._time;)
                                                        h.render(h._reversed ? h.totalDuration() - (t - h._startTime) * h._timeScale : (t - h._startTime) * h._timeScale, e, i),
                                                            h = h._prev;
                                                    h = null,
                                                        this.pause()
                                                }
                                                n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)
                                            }
                                            n = a
                                        }
                                    this._onUpdate && (e || (l.length && c(),
                                        this._callback("onUpdate"))),
                                        o && (this._gc || f !== this._startTime && m === this._timeScale || (0 === this._time || p >= this.totalDuration()) && (r && (l.length && c(),
                                            this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                                            this._active = !1),
                                            !e && this.vars[o] && this._callback(o)))
                                }
                            }
                            ,
                            g._hasPausedChild = function () {
                                for (var t = this._first; t;) {
                                    if (t._paused || t instanceof n && t._hasPausedChild())
                                        return !0;
                                    t = t._next
                                }
                                return !1
                            }
                            ,
                            g.getChildren = function (t, e, n, r) {
                                r = r || -9999999999;
                                for (var a = [], o = this._first, s = 0; o;)
                                    o._startTime < r || (o instanceof i ? !1 !== e && (a[s++] = o) : (!1 !== n && (a[s++] = o),
                                        !1 !== t && (a = a.concat(o.getChildren(!0, e, n)),
                                            s = a.length))),
                                        o = o._next;
                                return a
                            }
                            ,
                            g.getTweensOf = function (t, e) {
                                var n, r, a = this._gc, o = [], s = 0;
                                for (a && this._enabled(!0, !0),
                                    n = i.getTweensOf(t),
                                    r = n.length; --r > -1;)
                                    (n[r].timeline === this || e && this._contains(n[r])) && (o[s++] = n[r]);
                                return a && this._enabled(!1, !0),
                                    o
                            }
                            ,
                            g.recent = function () {
                                return this._recent
                            }
                            ,
                            g._contains = function (t) {
                                for (var e = t.timeline; e;) {
                                    if (e === this)
                                        return !0;
                                    e = e.timeline
                                }
                                return !1
                            }
                            ,
                            g.shiftChildren = function (t, e, i) {
                                i = i || 0;
                                for (var n, r = this._first, a = this._labels; r;)
                                    r._startTime >= i && (r._startTime += t),
                                        r = r._next;
                                if (e)
                                    for (n in a)
                                        a[n] >= i && (a[n] += t);
                                return this._uncache(!0)
                            }
                            ,
                            g._kill = function (t, e) {
                                if (!t && !e)
                                    return this._enabled(!1, !1);
                                for (var i = e ? this.getTweensOf(e) : this.getChildren(!0, !0, !1), n = i.length, r = !1; --n > -1;)
                                    i[n]._kill(t, e) && (r = !0);
                                return r
                            }
                            ,
                            g.clear = function (t) {
                                var e = this.getChildren(!1, !0, !0)
                                    , i = e.length;
                                for (this._time = this._totalTime = 0; --i > -1;)
                                    e[i]._enabled(!1, !1);
                                return !1 !== t && (this._labels = {}),
                                    this._uncache(!0)
                            }
                            ,
                            g.invalidate = function () {
                                for (var e = this._first; e;)
                                    e.invalidate(),
                                        e = e._next;
                                return t.prototype.invalidate.call(this)
                            }
                            ,
                            g._enabled = function (t, i) {
                                if (t === this._gc)
                                    for (var n = this._first; n;)
                                        n._enabled(t, !0),
                                            n = n._next;
                                return e.prototype._enabled.call(this, t, i)
                            }
                            ,
                            g.totalTime = function (e, i, n) {
                                this._forcingPlayhead = !0;
                                var r = t.prototype.totalTime.apply(this, arguments);
                                return this._forcingPlayhead = !1,
                                    r
                            }
                            ,
                            g.duration = function (t) {
                                return arguments.length ? (0 !== this.duration() && 0 !== t && this.timeScale(this._duration / t),
                                    this) : (this._dirty && this.totalDuration(),
                                        this._duration)
                            }
                            ,
                            g.totalDuration = function (t) {
                                if (!arguments.length) {
                                    if (this._dirty) {
                                        for (var e, i, n = 0, r = this._last, a = 999999999999; r;)
                                            e = r._prev,
                                                r._dirty && r.totalDuration(),
                                                r._startTime > a && this._sortChildren && !r._paused ? this.add(r, r._startTime - r._delay) : a = r._startTime,
                                                r._startTime < 0 && !r._paused && (n -= r._startTime,
                                                    this._timeline.smoothChildTiming && (this._startTime += r._startTime / this._timeScale),
                                                    this.shiftChildren(-r._startTime, !1, -9999999999),
                                                    a = 0),
                                                i = r._startTime + r._totalDuration / r._timeScale,
                                                i > n && (n = i),
                                                r = e;
                                        this._duration = this._totalDuration = n,
                                            this._dirty = !1
                                    }
                                    return this._totalDuration
                                }
                                return t && this.totalDuration() ? this.timeScale(this._totalDuration / t) : this
                            }
                            ,
                            g.paused = function (e) {
                                if (!e)
                                    for (var i = this._first, n = this._time; i;)
                                        i._startTime === n && "isPause" === i.data && (i._rawPrevTime = 0),
                                            i = i._next;
                                return t.prototype.paused.apply(this, arguments)
                            }
                            ,
                            g.usesFrames = function () {
                                for (var e = this._timeline; e._timeline;)
                                    e = e._timeline;
                                return e === t._rootFramesTimeline
                            }
                            ,
                            g.rawTime = function (t) {
                                return t && (this._paused || this._repeat && this.time() > 0 && this.totalProgress() < 1) ? this._totalTime % (this._duration + this._repeatDelay) : this._paused ? this._totalTime : (this._timeline.rawTime(t) - this._startTime) * this._timeScale
                            }
                            ,
                            n
                    }, !0),
                    a._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function (t, e, i) {
                        var n = function (e) {
                            t.call(this, e),
                                this._repeat = this.vars.repeat || 0,
                                this._repeatDelay = this.vars.repeatDelay || 0,
                                this._cycle = 0,
                                this._yoyo = !0 === this.vars.yoyo,
                                this._dirty = !0
                        }
                            , r = e._internals
                            , o = r.lazyTweens
                            , s = r.lazyRender
                            , h = a._gsDefine.globals
                            , l = new i(null, null, 1, 0)
                            , c = n.prototype = new t;
                        return c.constructor = n,
                            c.kill()._gc = !1,
                            n.version = "1.20.2",
                            c.invalidate = function () {
                                return this._yoyo = !0 === this.vars.yoyo,
                                    this._repeat = this.vars.repeat || 0,
                                    this._repeatDelay = this.vars.repeatDelay || 0,
                                    this._uncache(!0),
                                    t.prototype.invalidate.call(this)
                            }
                            ,
                            c.addCallback = function (t, i, n, r) {
                                return this.add(e.delayedCall(0, t, n, r), i)
                            }
                            ,
                            c.removeCallback = function (t, e) {
                                if (t)
                                    if (null == e)
                                        this._kill(null, t);
                                    else
                                        for (var i = this.getTweensOf(t, !1), n = i.length, r = this._parseTimeOrLabel(e); --n > -1;)
                                            i[n]._startTime === r && i[n]._enabled(!1, !1);
                                return this
                            }
                            ,
                            c.removePause = function (e) {
                                return this.removeCallback(t._internals.pauseCallback, e)
                            }
                            ,
                            c.tweenTo = function (t, i) {
                                i = i || {};
                                var n, r, a, o = {
                                    ease: l,
                                    useFrames: this.usesFrames(),
                                    immediateRender: !1
                                }, s = i.repeat && h.TweenMax || e;
                                for (r in i)
                                    o[r] = i[r];
                                return o.time = this._parseTimeOrLabel(t),
                                    n = Math.abs(Number(o.time) - this._time) / this._timeScale || .001,
                                    a = new s(this, n, o),
                                    o.onStart = function () {
                                        a.target.paused(!0),
                                            a.vars.time !== a.target.time() && n === a.duration() && a.duration(Math.abs(a.vars.time - a.target.time()) / a.target._timeScale),
                                            i.onStart && i.onStart.apply(i.onStartScope || i.callbackScope || a, i.onStartParams || [])
                                    }
                                    ,
                                    a
                            }
                            ,
                            c.tweenFromTo = function (t, e, i) {
                                i = i || {},
                                    t = this._parseTimeOrLabel(t),
                                    i.startAt = {
                                        onComplete: this.seek,
                                        onCompleteParams: [t],
                                        callbackScope: this
                                    },
                                    i.immediateRender = !1 !== i.immediateRender;
                                var n = this.tweenTo(e, i);
                                return n.duration(Math.abs(n.vars.time - t) / this._timeScale || .001)
                            }
                            ,
                            c.render = function (t, e, i) {
                                this._gc && this._enabled(!0, !1);
                                var n, r, a, h, l, c, u, p, d = this._dirty ? this.totalDuration() : this._totalDuration, f = this._duration, m = this._time, g = this._totalTime, v = this._startTime, y = this._timeScale, _ = this._rawPrevTime, x = this._paused, w = this._cycle;
                                if (t >= d - 1e-7 && t >= 0)
                                    this._locked || (this._totalTime = d,
                                        this._cycle = this._repeat),
                                        this._reversed || this._hasPausedChild() || (r = !0,
                                            h = "onComplete",
                                            l = !!this._timeline.autoRemoveChildren,
                                            0 === this._duration && (t <= 0 && t >= -1e-7 || _ < 0 || 1e-10 === _) && _ !== t && this._first && (l = !0,
                                                _ > 1e-10 && (h = "onReverseComplete"))),
                                        this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : 1e-10,
                                        this._yoyo && 0 != (1 & this._cycle) ? this._time = t = 0 : (this._time = f,
                                            t = f + 1e-4);
                                else if (t < 1e-7)
                                    if (this._locked || (this._totalTime = this._cycle = 0),
                                        this._time = 0,
                                        (0 !== m || 0 === f && 1e-10 !== _ && (_ > 0 || t < 0 && _ >= 0) && !this._locked) && (h = "onReverseComplete",
                                            r = this._reversed),
                                        t < 0)
                                        this._active = !1,
                                            this._timeline.autoRemoveChildren && this._reversed ? (l = r = !0,
                                                h = "onReverseComplete") : _ >= 0 && this._first && (l = !0),
                                            this._rawPrevTime = t;
                                    else {
                                        if (this._rawPrevTime = f || !e || t || this._rawPrevTime === t ? t : 1e-10,
                                            0 === t && r)
                                            for (n = this._first; n && 0 === n._startTime;)
                                                n._duration || (r = !1),
                                                    n = n._next;
                                        t = 0,
                                            this._initted || (l = !0)
                                    }
                                else if (0 === f && _ < 0 && (l = !0),
                                    this._time = this._rawPrevTime = t,
                                    this._locked || (this._totalTime = t,
                                        0 !== this._repeat && (c = f + this._repeatDelay,
                                            this._cycle = this._totalTime / c >> 0,
                                            0 !== this._cycle && this._cycle === this._totalTime / c && g <= t && this._cycle--,
                                            this._time = this._totalTime - this._cycle * c,
                                            this._yoyo && 0 != (1 & this._cycle) && (this._time = f - this._time),
                                            this._time > f ? (this._time = f,
                                                t = f + 1e-4) : this._time < 0 ? this._time = t = 0 : t = this._time)),
                                    this._hasPause && !this._forcingPlayhead && !e) {
                                    if ((t = this._time) >= m || this._repeat && w !== this._cycle)
                                        for (n = this._first; n && n._startTime <= t && !u;)
                                            n._duration || "isPause" !== n.data || n.ratio || 0 === n._startTime && 0 === this._rawPrevTime || (u = n),
                                                n = n._next;
                                    else
                                        for (n = this._last; n && n._startTime >= t && !u;)
                                            n._duration || "isPause" === n.data && n._rawPrevTime > 0 && (u = n),
                                                n = n._prev;
                                    u && u._startTime < f && (this._time = t = u._startTime,
                                        this._totalTime = t + this._cycle * (this._totalDuration + this._repeatDelay))
                                }
                                if (this._cycle !== w && !this._locked) {
                                    var b = this._yoyo && 0 != (1 & w)
                                        , M = b === (this._yoyo && 0 != (1 & this._cycle))
                                        , T = this._totalTime
                                        , P = this._cycle
                                        , S = this._rawPrevTime
                                        , A = this._time;
                                    if (this._totalTime = w * f,
                                        this._cycle < w ? b = !b : this._totalTime += f,
                                        this._time = m,
                                        this._rawPrevTime = 0 === f ? _ - 1e-4 : _,
                                        this._cycle = w,
                                        this._locked = !0,
                                        m = b ? 0 : f,
                                        this.render(m, e, 0 === f),
                                        e || this._gc || this.vars.onRepeat && (this._cycle = P,
                                            this._locked = !1,
                                            this._callback("onRepeat")),
                                        m !== this._time)
                                        return;
                                    if (M && (this._cycle = w,
                                        this._locked = !0,
                                        m = b ? f + 1e-4 : -1e-4,
                                        this.render(m, !0, !1)),
                                        this._locked = !1,
                                        this._paused && !x)
                                        return;
                                    this._time = A,
                                        this._totalTime = T,
                                        this._cycle = P,
                                        this._rawPrevTime = S
                                }
                                if (!(this._time !== m && this._first || i || l || u))
                                    return void (g !== this._totalTime && this._onUpdate && (e || this._callback("onUpdate")));
                                if (this._initted || (this._initted = !0),
                                    this._active || !this._paused && this._totalTime !== g && t > 0 && (this._active = !0),
                                    0 === g && this.vars.onStart && (0 === this._totalTime && this._totalDuration || e || this._callback("onStart")),
                                    (p = this._time) >= m)
                                    for (n = this._first; n && (a = n._next,
                                        p === this._time && (!this._paused || x));)
                                        (n._active || n._startTime <= this._time && !n._paused && !n._gc) && (u === n && this.pause(),
                                            n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)),
                                            n = a;
                                else
                                    for (n = this._last; n && (a = n._prev,
                                        p === this._time && (!this._paused || x));) {
                                        if (n._active || n._startTime <= m && !n._paused && !n._gc) {
                                            if (u === n) {
                                                for (u = n._prev; u && u.endTime() > this._time;)
                                                    u.render(u._reversed ? u.totalDuration() - (t - u._startTime) * u._timeScale : (t - u._startTime) * u._timeScale, e, i),
                                                        u = u._prev;
                                                u = null,
                                                    this.pause()
                                            }
                                            n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)
                                        }
                                        n = a
                                    }
                                this._onUpdate && (e || (o.length && s(),
                                    this._callback("onUpdate"))),
                                    h && (this._locked || this._gc || v !== this._startTime && y === this._timeScale || (0 === this._time || d >= this.totalDuration()) && (r && (o.length && s(),
                                        this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                                        this._active = !1),
                                        !e && this.vars[h] && this._callback(h)))
                            }
                            ,
                            c.getActive = function (t, e, i) {
                                null == t && (t = !0),
                                    null == e && (e = !0),
                                    null == i && (i = !1);
                                var n, r, a = [], o = this.getChildren(t, e, i), s = 0, h = o.length;
                                for (n = 0; n < h; n++)
                                    r = o[n],
                                        r.isActive() && (a[s++] = r);
                                return a
                            }
                            ,
                            c.getLabelAfter = function (t) {
                                t || 0 !== t && (t = this._time);
                                var e, i = this.getLabelsArray(), n = i.length;
                                for (e = 0; e < n; e++)
                                    if (i[e].time > t)
                                        return i[e].name;
                                return null
                            }
                            ,
                            c.getLabelBefore = function (t) {
                                null == t && (t = this._time);
                                for (var e = this.getLabelsArray(), i = e.length; --i > -1;)
                                    if (e[i].time < t)
                                        return e[i].name;
                                return null
                            }
                            ,
                            c.getLabelsArray = function () {
                                var t, e = [], i = 0;
                                for (t in this._labels)
                                    e[i++] = {
                                        time: this._labels[t],
                                        name: t
                                    };
                                return e.sort(function (t, e) {
                                    return t.time - e.time
                                }),
                                    e
                            }
                            ,
                            c.invalidate = function () {
                                return this._locked = !1,
                                    t.prototype.invalidate.call(this)
                            }
                            ,
                            c.progress = function (t, e) {
                                return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 != (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), e) : this._time / this.duration() || 0
                            }
                            ,
                            c.totalProgress = function (t, e) {
                                return arguments.length ? this.totalTime(this.totalDuration() * t, e) : this._totalTime / this.totalDuration() || 0
                            }
                            ,
                            c.totalDuration = function (e) {
                                return arguments.length ? -1 !== this._repeat && e ? this.timeScale(this.totalDuration() / e) : this : (this._dirty && (t.prototype.totalDuration.call(this),
                                    this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat),
                                    this._totalDuration)
                            }
                            ,
                            c.time = function (t, e) {
                                return arguments.length ? (this._dirty && this.totalDuration(),
                                    t > this._duration && (t = this._duration),
                                    this._yoyo && 0 != (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)),
                                    this.totalTime(t, e)) : this._time
                            }
                            ,
                            c.repeat = function (t) {
                                return arguments.length ? (this._repeat = t,
                                    this._uncache(!0)) : this._repeat
                            }
                            ,
                            c.repeatDelay = function (t) {
                                return arguments.length ? (this._repeatDelay = t,
                                    this._uncache(!0)) : this._repeatDelay
                            }
                            ,
                            c.yoyo = function (t) {
                                return arguments.length ? (this._yoyo = t,
                                    this) : this._yoyo
                            }
                            ,
                            c.currentLabel = function (t) {
                                return arguments.length ? this.seek(t, !0) : this.getLabelBefore(this._time + 1e-8)
                            }
                            ,
                            n
                    }, !0),
                    function () {
                        var t = 180 / Math.PI
                            , e = []
                            , i = []
                            , n = []
                            , r = {}
                            , o = a._gsDefine.globals
                            , s = function (t, e, i, n) {
                                i === n && (i = n - (n - e) / 1e6),
                                    t === e && (e = t + (i - t) / 1e6),
                                    this.a = t,
                                    this.b = e,
                                    this.c = i,
                                    this.d = n,
                                    this.da = n - t,
                                    this.ca = i - t,
                                    this.ba = e - t
                            }
                            , h = function (t, e, i, n) {
                                var r = {
                                    a: t
                                }
                                    , a = {}
                                    , o = {}
                                    , s = {
                                        c: n
                                    }
                                    , h = (t + e) / 2
                                    , l = (e + i) / 2
                                    , c = (i + n) / 2
                                    , u = (h + l) / 2
                                    , p = (l + c) / 2
                                    , d = (p - u) / 8;
                                return r.b = h + (t - h) / 4,
                                    a.b = u + d,
                                    r.c = a.a = (r.b + a.b) / 2,
                                    a.c = o.a = (u + p) / 2,
                                    o.b = p - d,
                                    s.b = c + (n - c) / 4,
                                    o.c = s.a = (o.b + s.b) / 2,
                                    [r, a, o, s]
                            }
                            , l = function (t, r, a, o, s) {
                                var l, c, u, p, d, f, m, g, v, y, _, x, w, b = t.length - 1, M = 0, T = t[0].a;
                                for (l = 0; l < b; l++)
                                    d = t[M],
                                        c = d.a,
                                        u = d.d,
                                        p = t[M + 1].d,
                                        s ? (_ = e[l],
                                            x = i[l],
                                            w = (x + _) * r * .25 / (o ? .5 : n[l] || .5),
                                            f = u - (u - c) * (o ? .5 * r : 0 !== _ ? w / _ : 0),
                                            m = u + (p - u) * (o ? .5 * r : 0 !== x ? w / x : 0),
                                            g = u - (f + ((m - f) * (3 * _ / (_ + x) + .5) / 4 || 0))) : (f = u - (u - c) * r * .5,
                                                m = u + (p - u) * r * .5,
                                                g = u - (f + m) / 2),
                                        f += g,
                                        m += g,
                                        d.c = v = f,
                                        d.b = 0 !== l ? T : T = d.a + .6 * (d.c - d.a),
                                        d.da = u - c,
                                        d.ca = v - c,
                                        d.ba = T - c,
                                        a ? (y = h(c, T, v, u),
                                            t.splice(M, 1, y[0], y[1], y[2], y[3]),
                                            M += 4) : M++,
                                        T = m;
                                d = t[M],
                                    d.b = T,
                                    d.c = T + .4 * (d.d - T),
                                    d.da = d.d - d.a,
                                    d.ca = d.c - d.a,
                                    d.ba = T - d.a,
                                    a && (y = h(d.a, T, d.c, d.d),
                                        t.splice(M, 1, y[0], y[1], y[2], y[3]))
                            }
                            , c = function (t, n, r, a) {
                                var o, h, l, c, u, p, d = [];
                                if (a)
                                    for (t = [a].concat(t),
                                        h = t.length; --h > -1;)
                                        "string" == typeof (p = t[h][n]) && "=" === p.charAt(1) && (t[h][n] = a[n] + Number(p.charAt(0) + p.substr(2)));
                                if ((o = t.length - 2) < 0)
                                    return d[0] = new s(t[0][n], 0, 0, t[0][n]),
                                        d;
                                for (h = 0; h < o; h++)
                                    l = t[h][n],
                                        c = t[h + 1][n],
                                        d[h] = new s(l, 0, 0, c),
                                        r && (u = t[h + 2][n],
                                            e[h] = (e[h] || 0) + (c - l) * (c - l),
                                            i[h] = (i[h] || 0) + (u - c) * (u - c));
                                return d[h] = new s(t[h][n], 0, 0, t[h + 1][n]),
                                    d
                            }
                            , u = function (t, a, o, s, h, u) {
                                var p, d, f, m, g, v, y, _, x = {}, w = [], b = u || t[0];
                                h = "string" == typeof h ? "," + h + "," : ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",
                                    null == a && (a = 1);
                                for (d in t[0])
                                    w.push(d);
                                if (t.length > 1) {
                                    for (_ = t[t.length - 1],
                                        y = !0,
                                        p = w.length; --p > -1;)
                                        if (d = w[p],
                                            Math.abs(b[d] - _[d]) > .05) {
                                            y = !1;
                                            break
                                        }
                                    y && (t = t.concat(),
                                        u && t.unshift(u),
                                        t.push(t[1]),
                                        u = t[t.length - 3])
                                }
                                for (e.length = i.length = n.length = 0,
                                    p = w.length; --p > -1;)
                                    d = w[p],
                                        r[d] = -1 !== h.indexOf("," + d + ","),
                                        x[d] = c(t, d, r[d], u);
                                for (p = e.length; --p > -1;)
                                    e[p] = Math.sqrt(e[p]),
                                        i[p] = Math.sqrt(i[p]);
                                if (!s) {
                                    for (p = w.length; --p > -1;)
                                        if (r[d])
                                            for (f = x[w[p]],
                                                v = f.length - 1,
                                                m = 0; m < v; m++)
                                                g = f[m + 1].da / i[m] + f[m].da / e[m] || 0,
                                                    n[m] = (n[m] || 0) + g * g;
                                    for (p = n.length; --p > -1;)
                                        n[p] = Math.sqrt(n[p])
                                }
                                for (p = w.length,
                                    m = o ? 4 : 1; --p > -1;)
                                    d = w[p],
                                        f = x[d],
                                        l(f, a, o, s, r[d]),
                                        y && (f.splice(0, m),
                                            f.splice(f.length - m, m));
                                return x
                            }
                            , p = function (t, e, i) {
                                e = e || "soft";
                                var n, r, a, o, h, l, c, u, p, d, f, m = {}, g = "cubic" === e ? 3 : 2, v = "soft" === e, y = [];
                                if (v && i && (t = [i].concat(t)),
                                    null == t || t.length < g + 1)
                                    throw "invalid Bezier data";
                                for (p in t[0])
                                    y.push(p);
                                for (l = y.length; --l > -1;) {
                                    for (p = y[l],
                                        m[p] = h = [],
                                        d = 0,
                                        u = t.length,
                                        c = 0; c < u; c++)
                                        n = null == i ? t[c][p] : "string" == typeof (f = t[c][p]) && "=" === f.charAt(1) ? i[p] + Number(f.charAt(0) + f.substr(2)) : Number(f),
                                            v && c > 1 && c < u - 1 && (h[d++] = (n + h[d - 2]) / 2),
                                            h[d++] = n;
                                    for (u = d - g + 1,
                                        d = 0,
                                        c = 0; c < u; c += g)
                                        n = h[c],
                                            r = h[c + 1],
                                            a = h[c + 2],
                                            o = 2 === g ? 0 : h[c + 3],
                                            h[d++] = f = 3 === g ? new s(n, r, a, o) : new s(n, (2 * r + n) / 3, (2 * r + a) / 3, a);
                                    h.length = d
                                }
                                return m
                            }
                            , d = function (t, e, i) {
                                for (var n, r, a, o, s, h, l, c, u, p, d, f = 1 / i, m = t.length; --m > -1;)
                                    for (p = t[m],
                                        a = p.a,
                                        o = p.d - a,
                                        s = p.c - a,
                                        h = p.b - a,
                                        n = r = 0,
                                        c = 1; c <= i; c++)
                                        l = f * c,
                                            u = 1 - l,
                                            n = r - (r = (l * l * o + 3 * u * (l * s + u * h)) * l),
                                            d = m * i + c - 1,
                                            e[d] = (e[d] || 0) + n * n
                            }
                            , f = function (t, e) {
                                e = e >> 0 || 6;
                                var i, n, r, a, o = [], s = [], h = 0, l = 0, c = e - 1, u = [], p = [];
                                for (i in t)
                                    d(t[i], o, e);
                                for (r = o.length,
                                    n = 0; n < r; n++)
                                    h += Math.sqrt(o[n]),
                                        a = n % e,
                                        p[a] = h,
                                        a === c && (l += h,
                                            a = n / e >> 0,
                                            u[a] = p,
                                            s[a] = l,
                                            h = 0,
                                            p = []);
                                return {
                                    length: l,
                                    lengths: s,
                                    segments: u
                                }
                            }
                            , m = a._gsDefine.plugin({
                                propName: "bezier",
                                priority: -1,
                                version: "1.3.8",
                                API: 2,
                                global: !0,
                                init: function (t, e, i) {
                                    this._target = t,
                                        e instanceof Array && (e = {
                                            values: e
                                        }),
                                        this._func = {},
                                        this._mod = {},
                                        this._props = [],
                                        this._timeRes = null == e.timeResolution ? 6 : parseInt(e.timeResolution, 10);
                                    var n, r, a, o, s, h = e.values || [], l = {}, c = h[0], d = e.autoRotate || i.vars.orientToBezier;
                                    this._autoRotate = d ? d instanceof Array ? d : [["x", "y", "rotation", !0 === d ? 0 : Number(d) || 0]] : null;
                                    for (n in c)
                                        this._props.push(n);
                                    for (a = this._props.length; --a > -1;)
                                        n = this._props[a],
                                            this._overwriteProps.push(n),
                                            r = this._func[n] = "function" == typeof t[n],
                                            l[n] = r ? t[n.indexOf("set") || "function" != typeof t["get" + n.substr(3)] ? n : "get" + n.substr(3)]() : parseFloat(t[n]),
                                            s || l[n] !== h[0][n] && (s = l);
                                    if (this._beziers = "cubic" !== e.type && "quadratic" !== e.type && "soft" !== e.type ? u(h, isNaN(e.curviness) ? 1 : e.curviness, !1, "thruBasic" === e.type, e.correlate, s) : p(h, e.type, l),
                                        this._segCount = this._beziers[n].length,
                                        this._timeRes) {
                                        var m = f(this._beziers, this._timeRes);
                                        this._length = m.length,
                                            this._lengths = m.lengths,
                                            this._segments = m.segments,
                                            this._l1 = this._li = this._s1 = this._si = 0,
                                            this._l2 = this._lengths[0],
                                            this._curSeg = this._segments[0],
                                            this._s2 = this._curSeg[0],
                                            this._prec = 1 / this._curSeg.length
                                    }
                                    if (d = this._autoRotate)
                                        for (this._initialRotations = [],
                                            d[0] instanceof Array || (this._autoRotate = d = [d]),
                                            a = d.length; --a > -1;) {
                                            for (o = 0; o < 3; o++)
                                                n = d[a][o],
                                                    this._func[n] = "function" == typeof t[n] && t[n.indexOf("set") || "function" != typeof t["get" + n.substr(3)] ? n : "get" + n.substr(3)];
                                            n = d[a][2],
                                                this._initialRotations[a] = (this._func[n] ? this._func[n].call(this._target) : this._target[n]) || 0,
                                                this._overwriteProps.push(n)
                                        }
                                    return this._startRatio = i.vars.runBackwards ? 1 : 0,
                                        !0
                                },
                                set: function (e) {
                                    var i, n, r, a, o, s, h, l, c, u, p = this._segCount, d = this._func, f = this._target, m = e !== this._startRatio;
                                    if (this._timeRes) {
                                        if (c = this._lengths,
                                            u = this._curSeg,
                                            e *= this._length,
                                            r = this._li,
                                            e > this._l2 && r < p - 1) {
                                            for (l = p - 1; r < l && (this._l2 = c[++r]) <= e;)
                                                ;
                                            this._l1 = c[r - 1],
                                                this._li = r,
                                                this._curSeg = u = this._segments[r],
                                                this._s2 = u[this._s1 = this._si = 0]
                                        } else if (e < this._l1 && r > 0) {
                                            for (; r > 0 && (this._l1 = c[--r]) >= e;)
                                                ;
                                            0 === r && e < this._l1 ? this._l1 = 0 : r++,
                                                this._l2 = c[r],
                                                this._li = r,
                                                this._curSeg = u = this._segments[r],
                                                this._s1 = u[(this._si = u.length - 1) - 1] || 0,
                                                this._s2 = u[this._si]
                                        }
                                        if (i = r,
                                            e -= this._l1,
                                            r = this._si,
                                            e > this._s2 && r < u.length - 1) {
                                            for (l = u.length - 1; r < l && (this._s2 = u[++r]) <= e;)
                                                ;
                                            this._s1 = u[r - 1],
                                                this._si = r
                                        } else if (e < this._s1 && r > 0) {
                                            for (; r > 0 && (this._s1 = u[--r]) >= e;)
                                                ;
                                            0 === r && e < this._s1 ? this._s1 = 0 : r++,
                                                this._s2 = u[r],
                                                this._si = r
                                        }
                                        s = (r + (e - this._s1) / (this._s2 - this._s1)) * this._prec || 0
                                    } else
                                        i = e < 0 ? 0 : e >= 1 ? p - 1 : p * e >> 0,
                                            s = (e - i * (1 / p)) * p;
                                    for (n = 1 - s,
                                        r = this._props.length; --r > -1;)
                                        a = this._props[r],
                                            o = this._beziers[a][i],
                                            h = (s * s * o.da + 3 * n * (s * o.ca + n * o.ba)) * s + o.a,
                                            this._mod[a] && (h = this._mod[a](h, f)),
                                            d[a] ? f[a](h) : f[a] = h;
                                    if (this._autoRotate) {
                                        var g, v, y, _, x, w, b, M = this._autoRotate;
                                        for (r = M.length; --r > -1;)
                                            a = M[r][2],
                                                w = M[r][3] || 0,
                                                b = !0 === M[r][4] ? 1 : t,
                                                o = this._beziers[M[r][0]],
                                                g = this._beziers[M[r][1]],
                                                o && g && (o = o[i],
                                                    g = g[i],
                                                    v = o.a + (o.b - o.a) * s,
                                                    _ = o.b + (o.c - o.b) * s,
                                                    v += (_ - v) * s,
                                                    _ += (o.c + (o.d - o.c) * s - _) * s,
                                                    y = g.a + (g.b - g.a) * s,
                                                    x = g.b + (g.c - g.b) * s,
                                                    y += (x - y) * s,
                                                    x += (g.c + (g.d - g.c) * s - x) * s,
                                                    h = m ? Math.atan2(x - y, _ - v) * b + w : this._initialRotations[r],
                                                    this._mod[a] && (h = this._mod[a](h, f)),
                                                    d[a] ? f[a](h) : f[a] = h)
                                    }
                                }
                            })
                            , g = m.prototype;
                        m.bezierThrough = u,
                            m.cubicToQuadratic = h,
                            m._autoCSS = !0,
                            m.quadraticToCubic = function (t, e, i) {
                                return new s(t, (2 * e + t) / 3, (2 * e + i) / 3, i)
                            }
                            ,
                            m._cssRegister = function () {
                                var t = o.CSSPlugin;
                                if (t) {
                                    var e = t._internals
                                        , i = e._parseToProxy
                                        , n = e._setPluginRatio
                                        , r = e.CSSPropTween;
                                    e._registerComplexSpecialProp("bezier", {
                                        parser: function (t, e, a, o, s, h) {
                                            e instanceof Array && (e = {
                                                values: e
                                            }),
                                                h = new m;
                                            var l, c, u, p = e.values, d = p.length - 1, f = [], g = {};
                                            if (d < 0)
                                                return s;
                                            for (l = 0; l <= d; l++)
                                                u = i(t, p[l], o, s, h, d !== l),
                                                    f[l] = u.end;
                                            for (c in e)
                                                g[c] = e[c];
                                            return g.values = f,
                                                s = new r(t, "bezier", 0, 0, u.pt, 2),
                                                s.data = u,
                                                s.plugin = h,
                                                s.setRatio = n,
                                                0 === g.autoRotate && (g.autoRotate = !0),
                                                !g.autoRotate || g.autoRotate instanceof Array || (l = !0 === g.autoRotate ? 0 : Number(g.autoRotate),
                                                    g.autoRotate = null != u.end.left ? [["left", "top", "rotation", l, !1]] : null != u.end.x && [["x", "y", "rotation", l, !1]]),
                                                g.autoRotate && (o._transform || o._enableTransforms(!1),
                                                    u.autoRotate = o._target._gsTransform,
                                                    u.proxy.rotation = u.autoRotate.rotation || 0,
                                                    o._overwriteProps.push("rotation")),
                                                h._onInitTween(u.proxy, g, o._tween),
                                                s
                                        }
                                    })
                                }
                            }
                            ,
                            g._mod = function (t) {
                                for (var e, i = this._overwriteProps, n = i.length; --n > -1;)
                                    (e = t[i[n]]) && "function" == typeof e && (this._mod[i[n]] = e)
                            }
                            ,
                            g._kill = function (t) {
                                var e, i, n = this._props;
                                for (e in this._beziers)
                                    if (e in t)
                                        for (delete this._beziers[e],
                                            delete this._func[e],
                                            i = n.length; --i > -1;)
                                            n[i] === e && n.splice(i, 1);
                                if (n = this._autoRotate)
                                    for (i = n.length; --i > -1;)
                                        t[n[i][2]] && n.splice(i, 1);
                                return this._super._kill.call(this, t)
                            }
                    }(),
                    a._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function (t, e) {
                        var i, n, r, o, s = function () {
                            t.call(this, "css"),
                                this._overwriteProps.length = 0,
                                this.setRatio = s.prototype.setRatio
                        }, h = a._gsDefine.globals, l = {}, c = s.prototype = new t("css");
                        c.constructor = s,
                            s.version = "1.20.0",
                            s.API = 2,
                            s.defaultTransformPerspective = 0,
                            s.defaultSkewType = "compensated",
                            s.defaultSmoothOrigin = !0,
                            c = "px",
                            s.suffixMap = {
                                top: c,
                                right: c,
                                bottom: c,
                                left: c,
                                width: c,
                                height: c,
                                fontSize: c,
                                padding: c,
                                margin: c,
                                perspective: c,
                                lineHeight: ""
                            };
                        var u, p, d, f, m, g, v, y, _ = /(?:\-|\.|\b)(\d|\.|e\-)+/g, x = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g, w = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi, b = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g, M = /(?:\d|\-|\+|=|#|\.)*/g, T = /opacity *= *([^)]*)/i, P = /opacity:([^;]*)/i, S = /alpha\(opacity *=.+?\)/i, A = /^(rgb|hsl)/, E = /([A-Z])/g, L = /-([a-z])/gi, C = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi, O = function (t, e) {
                            return e.toUpperCase()
                        }, R = /(?:Left|Right|Width)/i, I = /(M11|M12|M21|M22)=[\d\-\.e]+/gi, k = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i, z = /,(?=[^\)]*(?:\(|$))/gi, F = /[\s,\(]/i, D = Math.PI / 180, N = 180 / Math.PI, B = {}, U = {
                            style: {}
                        }, j = a.document || {
                            createElement: function () {
                                return U
                            }
                        }, G = function (t, e) {
                            return j.createElementNS ? j.createElementNS(e || "http://www.w3.org/1999/xhtml", t) : j.createElement(t)
                        }, V = G("div"), H = G("img"), W = s._internals = {
                            _specialProps: l
                        }, X = (a.navigator || {}).userAgent || "", Y = function () {
                            var t = X.indexOf("Android")
                                , e = G("a");
                            return d = -1 !== X.indexOf("Safari") && -1 === X.indexOf("Chrome") && (-1 === t || parseFloat(X.substr(t + 8, 2)) > 3),
                                m = d && parseFloat(X.substr(X.indexOf("Version/") + 8, 2)) < 6,
                                f = -1 !== X.indexOf("Firefox"),
                                (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(X) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(X)) && (g = parseFloat(RegExp.$1)),
                                !!e && (e.style.cssText = "top:1px;opacity:.55;",
                                    /^0.55/.test(e.style.opacity))
                        }(), q = function (t) {
                            return T.test("string" == typeof t ? t : (t.currentStyle ? t.currentStyle.filter : t.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1
                        }, Z = function (t) {
                            a.console
                        }, K = "", Q = "", J = function (t, e) {
                            e = e || V;
                            var i, n, r = e.style;
                            if (void 0 !== r[t])
                                return t;
                            for (t = t.charAt(0).toUpperCase() + t.substr(1),
                                i = ["O", "Moz", "ms", "Ms", "Webkit"],
                                n = 5; --n > -1 && void 0 === r[i[n] + t];)
                                ;
                            return n >= 0 ? (Q = 3 === n ? "ms" : i[n],
                                K = "-" + Q.toLowerCase() + "-",
                                Q + t) : null
                        }, $ = j.defaultView ? j.defaultView.getComputedStyle : function () { }
                            , tt = s.getStyle = function (t, e, i, n, r) {
                                var a;
                                return Y || "opacity" !== e ? (!n && t.style[e] ? a = t.style[e] : (i = i || $(t)) ? a = i[e] || i.getPropertyValue(e) || i.getPropertyValue(e.replace(E, "-$1").toLowerCase()) : t.currentStyle && (a = t.currentStyle[e]),
                                    null == r || a && "none" !== a && "auto" !== a && "auto auto" !== a ? a : r) : q(t)
                            }
                            , et = W.convertToPixels = function (t, i, n, r, a) {
                                if ("px" === r || !r && "lineHeight" !== i)
                                    return n;
                                if ("auto" === r || !n)
                                    return 0;
                                var o, h, l, c = R.test(i), u = t, p = V.style, d = n < 0, f = 1 === n;
                                if (d && (n = -n),
                                    f && (n *= 100),
                                    "lineHeight" !== i || r)
                                    if ("%" === r && -1 !== i.indexOf("border"))
                                        o = n / 100 * (c ? t.clientWidth : t.clientHeight);
                                    else {
                                        if (p.cssText = "border:0 solid red;position:" + tt(t, "position") + ";line-height:0;",
                                            "%" !== r && u.appendChild && "v" !== r.charAt(0) && "rem" !== r)
                                            p[c ? "borderLeftWidth" : "borderTopWidth"] = n + r;
                                        else {
                                            if (u = t.parentNode || j.body,
                                                -1 !== tt(u, "display").indexOf("flex") && (p.position = "absolute"),
                                                h = u._gsCache,
                                                l = e.ticker.frame,
                                                h && c && h.time === l)
                                                return h.width * n / 100;
                                            p[c ? "width" : "height"] = n + r
                                        }
                                        u.appendChild(V),
                                            o = parseFloat(V[c ? "offsetWidth" : "offsetHeight"]),
                                            u.removeChild(V),
                                            c && "%" === r && !1 !== s.cacheWidths && (h = u._gsCache = u._gsCache || {},
                                                h.time = l,
                                                h.width = o / n * 100),
                                            0 !== o || a || (o = et(t, i, n, r, !0))
                                    }
                                else
                                    h = $(t).lineHeight,
                                        t.style.lineHeight = n,
                                        o = parseFloat($(t).lineHeight),
                                        t.style.lineHeight = h;
                                return f && (o /= 100),
                                    d ? -o : o
                            }
                            , it = W.calculateOffset = function (t, e, i) {
                                if ("absolute" !== tt(t, "position", i))
                                    return 0;
                                var n = "left" === e ? "Left" : "Top"
                                    , r = tt(t, "margin" + n, i);
                                return t["offset" + n] - (et(t, e, parseFloat(r), r.replace(M, "")) || 0)
                            }
                            , nt = function (t, e) {
                                var i, n, r, a = {};
                                if (e = e || $(t, null))
                                    if (i = e.length)
                                        for (; --i > -1;)
                                            r = e[i],
                                                -1 !== r.indexOf("-transform") && Ct !== r || (a[r.replace(L, O)] = e.getPropertyValue(r));
                                    else
                                        for (i in e)
                                            -1 !== i.indexOf("Transform") && Lt !== i || (a[i] = e[i]);
                                else if (e = t.currentStyle || t.style)
                                    for (i in e)
                                        "string" == typeof i && void 0 === a[i] && (a[i.replace(L, O)] = e[i]);
                                return Y || (a.opacity = q(t)),
                                    n = Ht(t, e, !1),
                                    a.rotation = n.rotation,
                                    a.skewX = n.skewX,
                                    a.scaleX = n.scaleX,
                                    a.scaleY = n.scaleY,
                                    a.x = n.x,
                                    a.y = n.y,
                                    Rt && (a.z = n.z,
                                        a.rotationX = n.rotationX,
                                        a.rotationY = n.rotationY,
                                        a.scaleZ = n.scaleZ),
                                    a.filters && delete a.filters,
                                    a
                            }, rt = function (t, e, i, n, r) {
                                var a, o, s, h = {}, l = t.style;
                                for (o in i)
                                    "cssText" !== o && "length" !== o && isNaN(o) && (e[o] !== (a = i[o]) || r && r[o]) && -1 === o.indexOf("Origin") && ("number" != typeof a && "string" != typeof a || (h[o] = "auto" !== a || "left" !== o && "top" !== o ? "" !== a && "auto" !== a && "none" !== a || "string" != typeof e[o] || "" === e[o].replace(b, "") ? a : 0 : it(t, o),
                                        void 0 !== l[o] && (s = new _t(l, o, l[o], s))));
                                if (n)
                                    for (o in n)
                                        "className" !== o && (h[o] = n[o]);
                                return {
                                    difs: h,
                                    firstMPT: s
                                }
                            }, at = {
                                width: ["Left", "Right"],
                                height: ["Top", "Bottom"]
                            }, ot = ["marginLeft", "marginRight", "marginTop", "marginBottom"], st = function (t, e, i) {
                                if ("svg" === (t.nodeName + "").toLowerCase())
                                    return (i || $(t))[e] || 0;
                                if (t.getCTM && jt(t))
                                    return t.getBBox()[e] || 0;
                                var n = parseFloat("width" === e ? t.offsetWidth : t.offsetHeight)
                                    , r = at[e]
                                    , a = r.length;
                                for (i = i || $(t, null); --a > -1;)
                                    n -= parseFloat(tt(t, "padding" + r[a], i, !0)) || 0,
                                        n -= parseFloat(tt(t, "border" + r[a] + "Width", i, !0)) || 0;
                                return n
                            }, ht = function (t, e) {
                                if ("contain" === t || "auto" === t || "auto auto" === t)
                                    return t + " ";
                                null != t && "" !== t || (t = "0 0");
                                var i, n = t.split(" "), r = -1 !== t.indexOf("left") ? "0%" : -1 !== t.indexOf("right") ? "100%" : n[0], a = -1 !== t.indexOf("top") ? "0%" : -1 !== t.indexOf("bottom") ? "100%" : n[1];
                                if (n.length > 3 && !e) {
                                    for (n = t.split(", ").join(",").split(","),
                                        t = [],
                                        i = 0; i < n.length; i++)
                                        t.push(ht(n[i]));
                                    return t.join(",")
                                }
                                return null == a ? a = "center" === r ? "50%" : "0" : "center" === a && (a = "50%"),
                                    ("center" === r || isNaN(parseFloat(r)) && -1 === (r + "").indexOf("=")) && (r = "50%"),
                                    t = r + " " + a + (n.length > 2 ? " " + n[2] : ""),
                                    e && (e.oxp = -1 !== r.indexOf("%"),
                                        e.oyp = -1 !== a.indexOf("%"),
                                        e.oxr = "=" === r.charAt(1),
                                        e.oyr = "=" === a.charAt(1),
                                        e.ox = parseFloat(r.replace(b, "")),
                                        e.oy = parseFloat(a.replace(b, "")),
                                        e.v = t),
                                    e || t
                            }, lt = function (t, e) {
                                return "function" == typeof t && (t = t(y, v)),
                                    "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) : parseFloat(t) - parseFloat(e) || 0
                            }, ct = function (t, e) {
                                return "function" == typeof t && (t = t(y, v)),
                                    null == t ? e : "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) + e : parseFloat(t) || 0
                            }, ut = function (t, e, i, n) {
                                var r, a, o, s, h;
                                return "function" == typeof t && (t = t(y, v)),
                                    null == t ? s = e : "number" == typeof t ? s = t : (r = 360,
                                        a = t.split("_"),
                                        h = "=" === t.charAt(1),
                                        o = (h ? parseInt(t.charAt(0) + "1", 10) * parseFloat(a[0].substr(2)) : parseFloat(a[0])) * (-1 === t.indexOf("rad") ? 1 : N) - (h ? 0 : e),
                                        a.length && (n && (n[i] = e + o),
                                            -1 !== t.indexOf("short") && (o %= r) !== o % (r / 2) && (o = o < 0 ? o + r : o - r),
                                            -1 !== t.indexOf("_cw") && o < 0 ? o = (o + 9999999999 * r) % r - (o / r | 0) * r : -1 !== t.indexOf("ccw") && o > 0 && (o = (o - 9999999999 * r) % r - (o / r | 0) * r)),
                                        s = e + o),
                                    s < 1e-6 && s > -1e-6 && (s = 0),
                                    s
                            }, pt = {
                                aqua: [0, 255, 255],
                                lime: [0, 255, 0],
                                silver: [192, 192, 192],
                                black: [0, 0, 0],
                                maroon: [128, 0, 0],
                                teal: [0, 128, 128],
                                blue: [0, 0, 255],
                                navy: [0, 0, 128],
                                white: [255, 255, 255],
                                fuchsia: [255, 0, 255],
                                olive: [128, 128, 0],
                                yellow: [255, 255, 0],
                                orange: [255, 165, 0],
                                gray: [128, 128, 128],
                                purple: [128, 0, 128],
                                green: [0, 128, 0],
                                red: [255, 0, 0],
                                pink: [255, 192, 203],
                                cyan: [0, 255, 255],
                                transparent: [255, 255, 255, 0]
                            }, dt = function (t, e, i) {
                                return t = t < 0 ? t + 1 : t > 1 ? t - 1 : t,
                                    255 * (6 * t < 1 ? e + (i - e) * t * 6 : t < .5 ? i : 3 * t < 2 ? e + (i - e) * (2 / 3 - t) * 6 : e) + .5 | 0
                            }, ft = s.parseColor = function (t, e) {
                                var i, n, r, a, o, s, h, l, c, u, p;
                                if (t)
                                    if ("number" == typeof t)
                                        i = [t >> 16, t >> 8 & 255, 255 & t];
                                    else {
                                        if ("," === t.charAt(t.length - 1) && (t = t.substr(0, t.length - 1)),
                                            pt[t])
                                            i = pt[t];
                                        else if ("#" === t.charAt(0))
                                            4 === t.length && (n = t.charAt(1),
                                                r = t.charAt(2),
                                                a = t.charAt(3),
                                                t = "#" + n + n + r + r + a + a),
                                                t = parseInt(t.substr(1), 16),
                                                i = [t >> 16, t >> 8 & 255, 255 & t];
                                        else if ("hsl" === t.substr(0, 3))
                                            if (i = p = t.match(_),
                                                e) {
                                                if (-1 !== t.indexOf("="))
                                                    return t.match(x)
                                            } else
                                                o = Number(i[0]) % 360 / 360,
                                                    s = Number(i[1]) / 100,
                                                    h = Number(i[2]) / 100,
                                                    r = h <= .5 ? h * (s + 1) : h + s - h * s,
                                                    n = 2 * h - r,
                                                    i.length > 3 && (i[3] = Number(t[3])),
                                                    i[0] = dt(o + 1 / 3, n, r),
                                                    i[1] = dt(o, n, r),
                                                    i[2] = dt(o - 1 / 3, n, r);
                                        else
                                            i = t.match(_) || pt.transparent;
                                        i[0] = Number(i[0]),
                                            i[1] = Number(i[1]),
                                            i[2] = Number(i[2]),
                                            i.length > 3 && (i[3] = Number(i[3]))
                                    }
                                else
                                    i = pt.black;
                                return e && !p && (n = i[0] / 255,
                                    r = i[1] / 255,
                                    a = i[2] / 255,
                                    l = Math.max(n, r, a),
                                    c = Math.min(n, r, a),
                                    h = (l + c) / 2,
                                    l === c ? o = s = 0 : (u = l - c,
                                        s = h > .5 ? u / (2 - l - c) : u / (l + c),
                                        o = l === n ? (r - a) / u + (r < a ? 6 : 0) : l === r ? (a - n) / u + 2 : (n - r) / u + 4,
                                        o *= 60),
                                    i[0] = o + .5 | 0,
                                    i[1] = 100 * s + .5 | 0,
                                    i[2] = 100 * h + .5 | 0),
                                    i
                            }
                            , mt = function (t, e) {
                                var i, n, r, a = t.match(gt) || [], o = 0, s = "";
                                if (!a.length)
                                    return t;
                                for (i = 0; i < a.length; i++)
                                    n = a[i],
                                        r = t.substr(o, t.indexOf(n, o) - o),
                                        o += r.length + n.length,
                                        n = ft(n, e),
                                        3 === n.length && n.push(1),
                                        s += r + (e ? "hsla(" + n[0] + "," + n[1] + "%," + n[2] + "%," + n[3] : "rgba(" + n.join(",")) + ")";
                                return s + t.substr(o)
                            }, gt = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
                        for (c in pt)
                            gt += "|" + c + "\\b";
                        gt = new RegExp(gt + ")", "gi"),
                            s.colorStringFilter = function (t) {
                                var e, i = t[0] + " " + t[1];
                                gt.test(i) && (e = -1 !== i.indexOf("hsl(") || -1 !== i.indexOf("hsla("),
                                    t[0] = mt(t[0], e),
                                    t[1] = mt(t[1], e)),
                                    gt.lastIndex = 0
                            }
                            ,
                            e.defaultStringFilter || (e.defaultStringFilter = s.colorStringFilter);
                        var vt = function (t, e, i, n) {
                            if (null == t)
                                return function (t) {
                                    return t
                                }
                                    ;
                            var r, a = e ? (t.match(gt) || [""])[0] : "", o = t.split(a).join("").match(w) || [], s = t.substr(0, t.indexOf(o[0])), h = ")" === t.charAt(t.length - 1) ? ")" : "", l = -1 !== t.indexOf(" ") ? " " : ",", c = o.length, u = c > 0 ? o[0].replace(_, "") : "";
                            return c ? r = e ? function (t) {
                                var e, p, d, f;
                                if ("number" == typeof t)
                                    t += u;
                                else if (n && z.test(t)) {
                                    for (f = t.replace(z, "|").split("|"),
                                        d = 0; d < f.length; d++)
                                        f[d] = r(f[d]);
                                    return f.join(",")
                                }
                                if (e = (t.match(gt) || [a])[0],
                                    p = t.split(e).join("").match(w) || [],
                                    d = p.length,
                                    c > d--)
                                    for (; ++d < c;)
                                        p[d] = i ? p[(d - 1) / 2 | 0] : o[d];
                                return s + p.join(l) + l + e + h + (-1 !== t.indexOf("inset") ? " inset" : "")
                            }
                                : function (t) {
                                    var e, a, p;
                                    if ("number" == typeof t)
                                        t += u;
                                    else if (n && z.test(t)) {
                                        for (a = t.replace(z, "|").split("|"),
                                            p = 0; p < a.length; p++)
                                            a[p] = r(a[p]);
                                        return a.join(",")
                                    }
                                    if (e = t.match(w) || [],
                                        p = e.length,
                                        c > p--)
                                        for (; ++p < c;)
                                            e[p] = i ? e[(p - 1) / 2 | 0] : o[p];
                                    return s + e.join(l) + h
                                }
                                : function (t) {
                                    return t
                                }
                        }
                            , yt = function (t) {
                                return t = t.split(","),
                                    function (e, i, n, r, a, o, s) {
                                        var h, l = (i + "").split(" ");
                                        for (s = {},
                                            h = 0; h < 4; h++)
                                            s[t[h]] = l[h] = l[h] || l[(h - 1) / 2 >> 0];
                                        return r.parse(e, s, a, o)
                                    }
                            }
                            , _t = (W._setPluginRatio = function (t) {
                                this.plugin.setRatio(t);
                                for (var e, i, n, r, a, o = this.data, s = o.proxy, h = o.firstMPT; h;)
                                    e = s[h.v],
                                        h.r ? e = Math.round(e) : e < 1e-6 && e > -1e-6 && (e = 0),
                                        h.t[h.p] = e,
                                        h = h._next;
                                if (o.autoRotate && (o.autoRotate.rotation = o.mod ? o.mod(s.rotation, this.t) : s.rotation),
                                    1 === t || 0 === t)
                                    for (h = o.firstMPT,
                                        a = 1 === t ? "e" : "b"; h;) {
                                        if (i = h.t,
                                            i.type) {
                                            if (1 === i.type) {
                                                for (r = i.xs0 + i.s + i.xs1,
                                                    n = 1; n < i.l; n++)
                                                    r += i["xn" + n] + i["xs" + (n + 1)];
                                                i[a] = r
                                            }
                                        } else
                                            i[a] = i.s + i.xs0;
                                        h = h._next
                                    }
                            }
                                ,
                                function (t, e, i, n, r) {
                                    this.t = t,
                                        this.p = e,
                                        this.v = i,
                                        this.r = r,
                                        n && (n._prev = this,
                                            this._next = n)
                                }
                            )
                            , xt = (W._parseToProxy = function (t, e, i, n, r, a) {
                                var o, s, h, l, c, u = n, p = {}, d = {}, f = i._transform, m = B;
                                for (i._transform = null,
                                    B = e,
                                    n = c = i.parse(t, e, n, r),
                                    B = m,
                                    a && (i._transform = f,
                                        u && (u._prev = null,
                                            u._prev && (u._prev._next = null))); n && n !== u;) {
                                    if (n.type <= 1 && (s = n.p,
                                        d[s] = n.s + n.c,
                                        p[s] = n.s,
                                        a || (l = new _t(n, "s", s, l, n.r),
                                            n.c = 0),
                                        1 === n.type))
                                        for (o = n.l; --o > 0;)
                                            h = "xn" + o,
                                                s = n.p + "_" + h,
                                                d[s] = n.data[h],
                                                p[s] = n[h],
                                                a || (l = new _t(n, h, s, l, n.rxp[h]));
                                    n = n._next
                                }
                                return {
                                    proxy: p,
                                    end: d,
                                    firstMPT: l,
                                    pt: c
                                }
                            }
                                ,
                                W.CSSPropTween = function (t, e, n, r, a, s, h, l, c, u, p) {
                                    this.t = t,
                                        this.p = e,
                                        this.s = n,
                                        this.c = r,
                                        this.n = h || e,
                                        t instanceof xt || o.push(this.n),
                                        this.r = l,
                                        this.type = s || 0,
                                        c && (this.pr = c,
                                            i = !0),
                                        this.b = void 0 === u ? n : u,
                                        this.e = void 0 === p ? n + r : p,
                                        a && (this._next = a,
                                            a._prev = this)
                                }
                            )
                            , wt = function (t, e, i, n, r, a) {
                                var o = new xt(t, e, i, n - i, r, -1, a);
                                return o.b = i,
                                    o.e = o.xs0 = n,
                                    o
                            }
                            , bt = s.parseComplex = function (t, e, i, n, r, a, o, h, l, c) {
                                i = i || a || "",
                                    "function" == typeof n && (n = n(y, v)),
                                    o = new xt(t, e, 0, 0, o, c ? 2 : 1, null, !1, h, i, n),
                                    n += "",
                                    r && gt.test(n + i) && (n = [i, n],
                                        s.colorStringFilter(n),
                                        i = n[0],
                                        n = n[1]);
                                var p, d, f, m, g, w, b, M, T, P, S, A, E, L = i.split(", ").join(",").split(" "), C = n.split(", ").join(",").split(" "), O = L.length, R = !1 !== u;
                                for (-1 === n.indexOf(",") && -1 === i.indexOf(",") || (L = L.join(" ").replace(z, ", ").split(" "),
                                    C = C.join(" ").replace(z, ", ").split(" "),
                                    O = L.length),
                                    O !== C.length && (L = (a || "").split(" "),
                                        O = L.length),
                                    o.plugin = l,
                                    o.setRatio = c,
                                    gt.lastIndex = 0,
                                    p = 0; p < O; p++)
                                    if (m = L[p],
                                        g = C[p],
                                        (M = parseFloat(m)) || 0 === M)
                                        o.appendXtra("", M, lt(g, M), g.replace(x, ""), R && -1 !== g.indexOf("px"), !0);
                                    else if (r && gt.test(m))
                                        A = g.indexOf(")") + 1,
                                            A = ")" + (A ? g.substr(A) : ""),
                                            E = -1 !== g.indexOf("hsl") && Y,
                                            P = g,
                                            m = ft(m, E),
                                            g = ft(g, E),
                                            T = m.length + g.length > 6,
                                            T && !Y && 0 === g[3] ? (o["xs" + o.l] += o.l ? " transparent" : "transparent",
                                                o.e = o.e.split(C[p]).join("transparent")) : (Y || (T = !1),
                                                    E ? o.appendXtra(P.substr(0, P.indexOf("hsl")) + (T ? "hsla(" : "hsl("), m[0], lt(g[0], m[0]), ",", !1, !0).appendXtra("", m[1], lt(g[1], m[1]), "%,", !1).appendXtra("", m[2], lt(g[2], m[2]), T ? "%," : "%" + A, !1) : o.appendXtra(P.substr(0, P.indexOf("rgb")) + (T ? "rgba(" : "rgb("), m[0], g[0] - m[0], ",", !0, !0).appendXtra("", m[1], g[1] - m[1], ",", !0).appendXtra("", m[2], g[2] - m[2], T ? "," : A, !0),
                                                    T && (m = m.length < 4 ? 1 : m[3],
                                                        o.appendXtra("", m, (g.length < 4 ? 1 : g[3]) - m, A, !1))),
                                            gt.lastIndex = 0;
                                    else if (w = m.match(_)) {
                                        if (!(b = g.match(x)) || b.length !== w.length)
                                            return o;
                                        for (f = 0,
                                            d = 0; d < w.length; d++)
                                            S = w[d],
                                                P = m.indexOf(S, f),
                                                o.appendXtra(m.substr(f, P - f), Number(S), lt(b[d], S), "", R && "px" === m.substr(P + S.length, 2), 0 === d),
                                                f = P + S.length;
                                        o["xs" + o.l] += m.substr(f)
                                    } else
                                        o["xs" + o.l] += o.l || o["xs" + o.l] ? " " + g : g;
                                if (-1 !== n.indexOf("=") && o.data) {
                                    for (A = o.xs0 + o.data.s,
                                        p = 1; p < o.l; p++)
                                        A += o["xs" + p] + o.data["xn" + p];
                                    o.e = A + o["xs" + p]
                                }
                                return o.l || (o.type = -1,
                                    o.xs0 = o.e),
                                    o.xfirst || o
                            }
                            , Mt = 9;
                        for (c = xt.prototype,
                            c.l = c.pr = 0; --Mt > 0;)
                            c["xn" + Mt] = 0,
                                c["xs" + Mt] = "";
                        c.xs0 = "",
                            c._next = c._prev = c.xfirst = c.data = c.plugin = c.setRatio = c.rxp = null,
                            c.appendXtra = function (t, e, i, n, r, a) {
                                var o = this
                                    , s = o.l;
                                return o["xs" + s] += a && (s || o["xs" + s]) ? " " + t : t || "",
                                    i || 0 === s || o.plugin ? (o.l++,
                                        o.type = o.setRatio ? 2 : 1,
                                        o["xs" + o.l] = n || "",
                                        s > 0 ? (o.data["xn" + s] = e + i,
                                            o.rxp["xn" + s] = r,
                                            o["xn" + s] = e,
                                            o.plugin || (o.xfirst = new xt(o, "xn" + s, e, i, o.xfirst || o, 0, o.n, r, o.pr),
                                                o.xfirst.xs0 = 0),
                                            o) : (o.data = {
                                                s: e + i
                                            },
                                                o.rxp = {},
                                                o.s = e,
                                                o.c = i,
                                                o.r = r,
                                                o)) : (o["xs" + s] += e + (n || ""),
                                                    o)
                            }
                            ;
                        var Tt = function (t, e) {
                            e = e || {},
                                this.p = e.prefix ? J(t) || t : t,
                                l[t] = l[this.p] = this,
                                this.format = e.formatter || vt(e.defaultValue, e.color, e.collapsible, e.multi),
                                e.parser && (this.parse = e.parser),
                                this.clrs = e.color,
                                this.multi = e.multi,
                                this.keyword = e.keyword,
                                this.dflt = e.defaultValue,
                                this.pr = e.priority || 0
                        }
                            , Pt = W._registerComplexSpecialProp = function (t, e, i) {
                                "object" != typeof e && (e = {
                                    parser: i
                                });
                                var n, r = t.split(","), a = e.defaultValue;
                                for (i = i || [a],
                                    n = 0; n < r.length; n++)
                                    e.prefix = 0 === n && e.prefix,
                                        e.defaultValue = i[n] || a,
                                        new Tt(r[n], e)
                            }
                            , St = W._registerPluginProp = function (t) {
                                if (!l[t]) {
                                    var e = t.charAt(0).toUpperCase() + t.substr(1) + "Plugin";
                                    Pt(t, {
                                        parser: function (t, i, n, r, a, o, s) {
                                            var c = h.com.greensock.plugins[e];
                                            return c ? (c._cssRegister(),
                                                l[n].parse(t, i, n, r, a, o, s)) : (Z(),
                                                    a)
                                        }
                                    })
                                }
                            }
                            ;
                        c = Tt.prototype,
                            c.parseComplex = function (t, e, i, n, r, a) {
                                var o, s, h, l, c, u, p = this.keyword;
                                if (this.multi && (z.test(i) || z.test(e) ? (s = e.replace(z, "|").split("|"),
                                    h = i.replace(z, "|").split("|")) : p && (s = [e],
                                        h = [i])),
                                    h) {
                                    for (l = h.length > s.length ? h.length : s.length,
                                        o = 0; o < l; o++)
                                        e = s[o] = s[o] || this.dflt,
                                            i = h[o] = h[o] || this.dflt,
                                            p && (c = e.indexOf(p),
                                                u = i.indexOf(p),
                                                c !== u && (-1 === u ? s[o] = s[o].split(p).join("") : -1 === c && (s[o] += " " + p)));
                                    e = s.join(", "),
                                        i = h.join(", ")
                                }
                                return bt(t, this.p, e, i, this.clrs, this.dflt, n, this.pr, r, a)
                            }
                            ,
                            c.parse = function (t, e, i, n, a, o, s) {
                                return this.parseComplex(t.style, this.format(tt(t, this.p, r, !1, this.dflt)), this.format(e), a, o)
                            }
                            ,
                            s.registerSpecialProp = function (t, e, i) {
                                Pt(t, {
                                    parser: function (t, n, r, a, o, s, h) {
                                        var l = new xt(t, r, 0, 0, o, 2, r, !1, i);
                                        return l.plugin = s,
                                            l.setRatio = e(t, n, a._tween, r),
                                            l
                                    },
                                    priority: i
                                })
                            }
                            ,
                            s.useSVGTransformAttr = !0;
                        var At, Et = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","), Lt = J("transform"), Ct = K + "transform", Ot = J("transformOrigin"), Rt = null !== J("perspective"), It = W.Transform = function () {
                            this.perspective = parseFloat(s.defaultTransformPerspective) || 0,
                                this.force3D = !(!1 === s.defaultForce3D || !Rt) && (s.defaultForce3D || "auto")
                        }
                            , kt = a.SVGElement, zt = function (t, e, i) {
                                var n, r = j.createElementNS("http://www.w3.org/2000/svg", t), a = /([a-z])([A-Z])/g;
                                for (n in i)
                                    r.setAttributeNS(null, n.replace(a, "$1-$2").toLowerCase(), i[n]);
                                return e.appendChild(r),
                                    r
                            }, Ft = j.documentElement || {}, Dt = function () {
                                var t, e, i, n = g || /Android/i.test(X) && !a.chrome;
                                return j.createElementNS && !n && (t = zt("svg", Ft),
                                    e = zt("rect", t, {
                                        width: 100,
                                        height: 50,
                                        x: 100
                                    }),
                                    i = e.getBoundingClientRect().width,
                                    e.style[Ot] = "50% 50%",
                                    e.style[Lt] = "scaleX(0.5)",
                                    n = i === e.getBoundingClientRect().width && !(f && Rt),
                                    Ft.removeChild(t)),
                                    n
                            }(), Nt = function (t, e, i, n, r, a) {
                                var o, h, l, c, u, p, d, f, m, g, v, y, _, x, w = t._gsTransform, b = Vt(t, !0);
                                w && (_ = w.xOrigin,
                                    x = w.yOrigin),
                                    (!n || (o = n.split(" ")).length < 2) && (d = t.getBBox(),
                                        0 === d.x && 0 === d.y && d.width + d.height === 0 && (d = {
                                            x: parseFloat(t.hasAttribute("x") ? t.getAttribute("x") : t.hasAttribute("cx") ? t.getAttribute("cx") : 0) || 0,
                                            y: parseFloat(t.hasAttribute("y") ? t.getAttribute("y") : t.hasAttribute("cy") ? t.getAttribute("cy") : 0) || 0,
                                            width: 0,
                                            height: 0
                                        }),
                                        e = ht(e).split(" "),
                                        o = [(-1 !== e[0].indexOf("%") ? parseFloat(e[0]) / 100 * d.width : parseFloat(e[0])) + d.x, (-1 !== e[1].indexOf("%") ? parseFloat(e[1]) / 100 * d.height : parseFloat(e[1])) + d.y]),
                                    i.xOrigin = c = parseFloat(o[0]),
                                    i.yOrigin = u = parseFloat(o[1]),
                                    n && b !== Gt && (p = b[0],
                                        d = b[1],
                                        f = b[2],
                                        m = b[3],
                                        g = b[4],
                                        v = b[5],
                                        (y = p * m - d * f) && (h = c * (m / y) + u * (-f / y) + (f * v - m * g) / y,
                                            l = c * (-d / y) + u * (p / y) - (p * v - d * g) / y,
                                            c = i.xOrigin = o[0] = h,
                                            u = i.yOrigin = o[1] = l)),
                                    w && (a && (i.xOffset = w.xOffset,
                                        i.yOffset = w.yOffset,
                                        w = i),
                                        r || !1 !== r && !1 !== s.defaultSmoothOrigin ? (h = c - _,
                                            l = u - x,
                                            w.xOffset += h * b[0] + l * b[2] - h,
                                            w.yOffset += h * b[1] + l * b[3] - l) : w.xOffset = w.yOffset = 0),
                                    a || t.setAttribute("data-svg-origin", o.join(" "))
                            }, Bt = function (t) {
                                var e, i = G("svg", this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"), n = this.parentNode, r = this.nextSibling, a = this.style.cssText;
                                if (Ft.appendChild(i),
                                    i.appendChild(this),
                                    this.style.display = "block",
                                    t)
                                    try {
                                        e = this.getBBox(),
                                            this._originalGetBBox = this.getBBox,
                                            this.getBBox = Bt
                                    } catch (t) { }
                                else
                                    this._originalGetBBox && (e = this._originalGetBBox());
                                return r ? n.insertBefore(this, r) : n.appendChild(this),
                                    Ft.removeChild(i),
                                    this.style.cssText = a,
                                    e
                            }, Ut = function (t) {
                                try {
                                    return t.getBBox()
                                } catch (e) {
                                    return Bt.call(t, !0)
                                }
                            }, jt = function (t) {
                                return !(!(kt && t.getCTM && Ut(t)) || t.parentNode && !t.ownerSVGElement)
                            }, Gt = [1, 0, 0, 1, 0, 0], Vt = function (t, e) {
                                var i, n, r, a, o, s, h = t._gsTransform || new It, l = t.style;
                                if (Lt ? n = tt(t, Ct, null, !0) : t.currentStyle && (n = t.currentStyle.filter.match(I),
                                    n = n && 4 === n.length ? [n[0].substr(4), Number(n[2].substr(4)), Number(n[1].substr(4)), n[3].substr(4), h.x || 0, h.y || 0].join(",") : ""),
                                    i = !n || "none" === n || "matrix(1, 0, 0, 1, 0, 0)" === n,
                                    !Lt || !(s = "none" === $(t).display) && t.parentNode || (s && (a = l.display,
                                        l.display = "block"),
                                        t.parentNode || (o = 1,
                                            Ft.appendChild(t)),
                                        n = tt(t, Ct, null, !0),
                                        i = !n || "none" === n || "matrix(1, 0, 0, 1, 0, 0)" === n,
                                        a ? l.display = a : s && qt(l, "display"),
                                        o && Ft.removeChild(t)),
                                    (h.svg || t.getCTM && jt(t)) && (i && -1 !== (l[Lt] + "").indexOf("matrix") && (n = l[Lt],
                                        i = 0),
                                        r = t.getAttribute("transform"),
                                        i && r && (-1 !== r.indexOf("matrix") ? (n = r,
                                            i = 0) : -1 !== r.indexOf("translate") && (n = "matrix(1,0,0,1," + r.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",") + ")",
                                                i = 0))),
                                    i)
                                    return Gt;
                                for (r = (n || "").match(_) || [],
                                    Mt = r.length; --Mt > -1;)
                                    a = Number(r[Mt]),
                                        r[Mt] = (o = a - (a |= 0)) ? (1e5 * o + (o < 0 ? -.5 : .5) | 0) / 1e5 + a : a;
                                return e && r.length > 6 ? [r[0], r[1], r[4], r[5], r[12], r[13]] : r
                            }, Ht = W.getTransform = function (t, i, n, r) {
                                if (t._gsTransform && n && !r)
                                    return t._gsTransform;
                                var a, o, h, l, c, u, p = n ? t._gsTransform || new It : new It, d = p.scaleX < 0, f = Rt ? parseFloat(tt(t, Ot, i, !1, "0 0 0").split(" ")[2]) || p.zOrigin || 0 : 0, m = parseFloat(s.defaultTransformPerspective) || 0;
                                if (p.svg = !(!t.getCTM || !jt(t)),
                                    p.svg && (Nt(t, tt(t, Ot, i, !1, "50% 50%") + "", p, t.getAttribute("data-svg-origin")),
                                        At = s.useSVGTransformAttr || Dt),
                                    (a = Vt(t)) !== Gt) {
                                    if (16 === a.length) {
                                        var g, v, y, _, x, w = a[0], b = a[1], M = a[2], T = a[3], P = a[4], S = a[5], A = a[6], E = a[7], L = a[8], C = a[9], O = a[10], R = a[12], I = a[13], k = a[14], z = a[11], F = Math.atan2(A, O);
                                        p.zOrigin && (k = -p.zOrigin,
                                            R = L * k - a[12],
                                            I = C * k - a[13],
                                            k = O * k + p.zOrigin - a[14]),
                                            p.rotationX = F * N,
                                            F && (_ = Math.cos(-F),
                                                x = Math.sin(-F),
                                                g = P * _ + L * x,
                                                v = S * _ + C * x,
                                                y = A * _ + O * x,
                                                L = P * -x + L * _,
                                                C = S * -x + C * _,
                                                O = A * -x + O * _,
                                                z = E * -x + z * _,
                                                P = g,
                                                S = v,
                                                A = y),
                                            F = Math.atan2(-M, O),
                                            p.rotationY = F * N,
                                            F && (_ = Math.cos(-F),
                                                x = Math.sin(-F),
                                                g = w * _ - L * x,
                                                v = b * _ - C * x,
                                                y = M * _ - O * x,
                                                C = b * x + C * _,
                                                O = M * x + O * _,
                                                z = T * x + z * _,
                                                w = g,
                                                b = v,
                                                M = y),
                                            F = Math.atan2(b, w),
                                            p.rotation = F * N,
                                            F && (_ = Math.cos(F),
                                                x = Math.sin(F),
                                                g = w * _ + b * x,
                                                v = P * _ + S * x,
                                                y = L * _ + C * x,
                                                b = b * _ - w * x,
                                                S = S * _ - P * x,
                                                C = C * _ - L * x,
                                                w = g,
                                                P = v,
                                                L = y),
                                            p.rotationX && Math.abs(p.rotationX) + Math.abs(p.rotation) > 359.9 && (p.rotationX = p.rotation = 0,
                                                p.rotationY = 180 - p.rotationY),
                                            F = Math.atan2(P, S),
                                            p.scaleX = (1e5 * Math.sqrt(w * w + b * b + M * M) + .5 | 0) / 1e5,
                                            p.scaleY = (1e5 * Math.sqrt(S * S + A * A) + .5 | 0) / 1e5,
                                            p.scaleZ = (1e5 * Math.sqrt(L * L + C * C + O * O) + .5 | 0) / 1e5,
                                            w /= p.scaleX,
                                            P /= p.scaleY,
                                            b /= p.scaleX,
                                            S /= p.scaleY,
                                            Math.abs(F) > 2e-5 ? (p.skewX = F * N,
                                                P = 0,
                                                "simple" !== p.skewType && (p.scaleY *= 1 / Math.cos(F))) : p.skewX = 0,
                                            p.perspective = z ? 1 / (z < 0 ? -z : z) : 0,
                                            p.x = R,
                                            p.y = I,
                                            p.z = k,
                                            p.svg && (p.x -= p.xOrigin - (p.xOrigin * w - p.yOrigin * P),
                                                p.y -= p.yOrigin - (p.yOrigin * b - p.xOrigin * S))
                                    } else if (!Rt || r || !a.length || p.x !== a[4] || p.y !== a[5] || !p.rotationX && !p.rotationY) {
                                        var D = a.length >= 6
                                            , B = D ? a[0] : 1
                                            , U = a[1] || 0
                                            , j = a[2] || 0
                                            , G = D ? a[3] : 1;
                                        p.x = a[4] || 0,
                                            p.y = a[5] || 0,
                                            h = Math.sqrt(B * B + U * U),
                                            l = Math.sqrt(G * G + j * j),
                                            c = B || U ? Math.atan2(U, B) * N : p.rotation || 0,
                                            u = j || G ? Math.atan2(j, G) * N + c : p.skewX || 0,
                                            p.scaleX = h,
                                            p.scaleY = l,
                                            p.rotation = c,
                                            p.skewX = u,
                                            Rt && (p.rotationX = p.rotationY = p.z = 0,
                                                p.perspective = m,
                                                p.scaleZ = 1),
                                            p.svg && (p.x -= p.xOrigin - (p.xOrigin * B + p.yOrigin * j),
                                                p.y -= p.yOrigin - (p.xOrigin * U + p.yOrigin * G))
                                    }
                                    Math.abs(p.skewX) > 90 && Math.abs(p.skewX) < 270 && (d ? (p.scaleX *= -1,
                                        p.skewX += p.rotation <= 0 ? 180 : -180,
                                        p.rotation += p.rotation <= 0 ? 180 : -180) : (p.scaleY *= -1,
                                            p.skewX += p.skewX <= 0 ? 180 : -180)),
                                        p.zOrigin = f;
                                    for (o in p)
                                        p[o] < 2e-5 && p[o] > -2e-5 && (p[o] = 0)
                                }
                                return n && (t._gsTransform = p,
                                    p.svg && (At && t.style[Lt] ? e.delayedCall(.001, function () {
                                        qt(t.style, Lt)
                                    }) : !At && t.getAttribute("transform") && e.delayedCall(.001, function () {
                                        t.removeAttribute("transform")
                                    }))),
                                    p
                            }
                            , Wt = function (t) {
                                var e, i, n = this.data, r = -n.rotation * D, a = r + n.skewX * D, o = (Math.cos(r) * n.scaleX * 1e5 | 0) / 1e5, s = (Math.sin(r) * n.scaleX * 1e5 | 0) / 1e5, h = (Math.sin(a) * -n.scaleY * 1e5 | 0) / 1e5, l = (Math.cos(a) * n.scaleY * 1e5 | 0) / 1e5, c = this.t.style, u = this.t.currentStyle;
                                if (u) {
                                    i = s,
                                        s = -h,
                                        h = -i,
                                        e = u.filter,
                                        c.filter = "";
                                    var p, d, f = this.t.offsetWidth, m = this.t.offsetHeight, v = "absolute" !== u.position, y = "progid:DXImageTransform.Microsoft.Matrix(M11=" + o + ", M12=" + s + ", M21=" + h + ", M22=" + l, _ = n.x + f * n.xPercent / 100, x = n.y + m * n.yPercent / 100;
                                    if (null != n.ox && (p = (n.oxp ? f * n.ox * .01 : n.ox) - f / 2,
                                        d = (n.oyp ? m * n.oy * .01 : n.oy) - m / 2,
                                        _ += p - (p * o + d * s),
                                        x += d - (p * h + d * l)),
                                        v ? (p = f / 2,
                                            d = m / 2,
                                            y += ", Dx=" + (p - (p * o + d * s) + _) + ", Dy=" + (d - (p * h + d * l) + x) + ")") : y += ", sizingMethod='auto expand')",
                                        -1 !== e.indexOf("DXImageTransform.Microsoft.Matrix(") ? c.filter = e.replace(k, y) : c.filter = y + " " + e,
                                        0 !== t && 1 !== t || 1 === o && 0 === s && 0 === h && 1 === l && (v && -1 === y.indexOf("Dx=0, Dy=0") || T.test(e) && 100 !== parseFloat(RegExp.$1) || -1 === e.indexOf(e.indexOf("Alpha")) && c.removeAttribute("filter")),
                                        !v) {
                                        var w, b, P, S = g < 8 ? 1 : -1;
                                        for (p = n.ieOffsetX || 0,
                                            d = n.ieOffsetY || 0,
                                            n.ieOffsetX = Math.round((f - ((o < 0 ? -o : o) * f + (s < 0 ? -s : s) * m)) / 2 + _),
                                            n.ieOffsetY = Math.round((m - ((l < 0 ? -l : l) * m + (h < 0 ? -h : h) * f)) / 2 + x),
                                            Mt = 0; Mt < 4; Mt++)
                                            b = ot[Mt],
                                                w = u[b],
                                                i = -1 !== w.indexOf("px") ? parseFloat(w) : et(this.t, b, parseFloat(w), w.replace(M, "")) || 0,
                                                P = i !== n[b] ? Mt < 2 ? -n.ieOffsetX : -n.ieOffsetY : Mt < 2 ? p - n.ieOffsetX : d - n.ieOffsetY,
                                                c[b] = (n[b] = Math.round(i - P * (0 === Mt || 2 === Mt ? 1 : S))) + "px"
                                    }
                                }
                            }, Xt = W.set3DTransformRatio = W.setTransformRatio = function (t) {
                                var e, i, n, r, a, o, s, h, l, c, u, p, d, m, g, v, y, _, x, w, b, M, T, P = this.data, S = this.t.style, A = P.rotation, E = P.rotationX, L = P.rotationY, C = P.scaleX, O = P.scaleY, R = P.scaleZ, I = P.x, k = P.y, z = P.z, F = P.svg, N = P.perspective, B = P.force3D, U = P.skewY, j = P.skewX;
                                if (U && (j += U,
                                    A += U),
                                    ((1 === t || 0 === t) && "auto" === B && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !B) && !z && !N && !L && !E && 1 === R || At && F || !Rt)
                                    return void (A || j || F ? (A *= D,
                                        M = j * D,
                                        T = 1e5,
                                        i = Math.cos(A) * C,
                                        a = Math.sin(A) * C,
                                        n = Math.sin(A - M) * -O,
                                        o = Math.cos(A - M) * O,
                                        M && "simple" === P.skewType && (e = Math.tan(M - U * D),
                                            e = Math.sqrt(1 + e * e),
                                            n *= e,
                                            o *= e,
                                            U && (e = Math.tan(U * D),
                                                e = Math.sqrt(1 + e * e),
                                                i *= e,
                                                a *= e)),
                                        F && (I += P.xOrigin - (P.xOrigin * i + P.yOrigin * n) + P.xOffset,
                                            k += P.yOrigin - (P.xOrigin * a + P.yOrigin * o) + P.yOffset,
                                            At && (P.xPercent || P.yPercent) && (g = this.t.getBBox(),
                                                I += .01 * P.xPercent * g.width,
                                                k += .01 * P.yPercent * g.height),
                                            g = 1e-6,
                                            I < g && I > -g && (I = 0),
                                            k < g && k > -g && (k = 0)),
                                        x = (i * T | 0) / T + "," + (a * T | 0) / T + "," + (n * T | 0) / T + "," + (o * T | 0) / T + "," + I + "," + k + ")",
                                        F && At ? this.t.setAttribute("transform", "matrix(" + x) : S[Lt] = (P.xPercent || P.yPercent ? "translate(" + P.xPercent + "%," + P.yPercent + "%) matrix(" : "matrix(") + x) : S[Lt] = (P.xPercent || P.yPercent ? "translate(" + P.xPercent + "%," + P.yPercent + "%) matrix(" : "matrix(") + C + ",0,0," + O + "," + I + "," + k + ")");
                                if (f && (g = 1e-4,
                                    C < g && C > -g && (C = R = 2e-5),
                                    O < g && O > -g && (O = R = 2e-5),
                                    !N || P.z || P.rotationX || P.rotationY || (N = 0)),
                                    A || j)
                                    A *= D,
                                        v = i = Math.cos(A),
                                        y = a = Math.sin(A),
                                        j && (A -= j * D,
                                            v = Math.cos(A),
                                            y = Math.sin(A),
                                            "simple" === P.skewType && (e = Math.tan((j - U) * D),
                                                e = Math.sqrt(1 + e * e),
                                                v *= e,
                                                y *= e,
                                                P.skewY && (e = Math.tan(U * D),
                                                    e = Math.sqrt(1 + e * e),
                                                    i *= e,
                                                    a *= e))),
                                        n = -y,
                                        o = v;
                                else {
                                    if (!(L || E || 1 !== R || N || F))
                                        return void (S[Lt] = (P.xPercent || P.yPercent ? "translate(" + P.xPercent + "%," + P.yPercent + "%) translate3d(" : "translate3d(") + I + "px," + k + "px," + z + "px)" + (1 !== C || 1 !== O ? " scale(" + C + "," + O + ")" : ""));
                                    i = o = 1,
                                        n = a = 0
                                }
                                c = 1,
                                    r = s = h = l = u = p = 0,
                                    d = N ? -1 / N : 0,
                                    m = P.zOrigin,
                                    g = 1e-6,
                                    w = ",",
                                    b = "0",
                                    A = L * D,
                                    A && (v = Math.cos(A),
                                        y = Math.sin(A),
                                        h = -y,
                                        u = d * -y,
                                        r = i * y,
                                        s = a * y,
                                        c = v,
                                        d *= v,
                                        i *= v,
                                        a *= v),
                                    A = E * D,
                                    A && (v = Math.cos(A),
                                        y = Math.sin(A),
                                        e = n * v + r * y,
                                        _ = o * v + s * y,
                                        l = c * y,
                                        p = d * y,
                                        r = n * -y + r * v,
                                        s = o * -y + s * v,
                                        c *= v,
                                        d *= v,
                                        n = e,
                                        o = _),
                                    1 !== R && (r *= R,
                                        s *= R,
                                        c *= R,
                                        d *= R),
                                    1 !== O && (n *= O,
                                        o *= O,
                                        l *= O,
                                        p *= O),
                                    1 !== C && (i *= C,
                                        a *= C,
                                        h *= C,
                                        u *= C),
                                    (m || F) && (m && (I += r * -m,
                                        k += s * -m,
                                        z += c * -m + m),
                                        F && (I += P.xOrigin - (P.xOrigin * i + P.yOrigin * n) + P.xOffset,
                                            k += P.yOrigin - (P.xOrigin * a + P.yOrigin * o) + P.yOffset),
                                        I < g && I > -g && (I = b),
                                        k < g && k > -g && (k = b),
                                        z < g && z > -g && (z = 0)),
                                    x = P.xPercent || P.yPercent ? "translate(" + P.xPercent + "%," + P.yPercent + "%) matrix3d(" : "matrix3d(",
                                    x += (i < g && i > -g ? b : i) + w + (a < g && a > -g ? b : a) + w + (h < g && h > -g ? b : h),
                                    x += w + (u < g && u > -g ? b : u) + w + (n < g && n > -g ? b : n) + w + (o < g && o > -g ? b : o),
                                    E || L || 1 !== R ? (x += w + (l < g && l > -g ? b : l) + w + (p < g && p > -g ? b : p) + w + (r < g && r > -g ? b : r),
                                        x += w + (s < g && s > -g ? b : s) + w + (c < g && c > -g ? b : c) + w + (d < g && d > -g ? b : d) + w) : x += ",0,0,0,0,1,0,",
                                    x += I + w + k + w + z + w + (N ? 1 + -z / N : 1) + ")",
                                    S[Lt] = x
                            }
                            ;
                        c = It.prototype,
                            c.x = c.y = c.z = c.skewX = c.skewY = c.rotation = c.rotationX = c.rotationY = c.zOrigin = c.xPercent = c.yPercent = c.xOffset = c.yOffset = 0,
                            c.scaleX = c.scaleY = c.scaleZ = 1,
                            Pt("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin", {
                                parser: function (t, e, i, n, a, o, h) {
                                    if (n._lastParsedTransform === h)
                                        return a;
                                    n._lastParsedTransform = h;
                                    var l, c = h.scale && "function" == typeof h.scale ? h.scale : 0;
                                    "function" == typeof h[i] && (l = h[i],
                                        h[i] = e),
                                        c && (h.scale = c(y, t));
                                    var u, p, d, f, m, g, _, x, w, b = t._gsTransform, M = t.style, T = Et.length, P = h, S = {}, A = Ht(t, r, !0, P.parseTransform), E = P.transform && ("function" == typeof P.transform ? P.transform(y, v) : P.transform);
                                    if (A.skewType = P.skewType || A.skewType || s.defaultSkewType,
                                        n._transform = A,
                                        E && "string" == typeof E && Lt)
                                        p = V.style,
                                            p[Lt] = E,
                                            p.display = "block",
                                            p.position = "absolute",
                                            j.body.appendChild(V),
                                            u = Ht(V, null, !1),
                                            "simple" === A.skewType && (u.scaleY *= Math.cos(u.skewX * D)),
                                            A.svg && (g = A.xOrigin,
                                                _ = A.yOrigin,
                                                u.x -= A.xOffset,
                                                u.y -= A.yOffset,
                                                (P.transformOrigin || P.svgOrigin) && (E = {},
                                                    Nt(t, ht(P.transformOrigin), E, P.svgOrigin, P.smoothOrigin, !0),
                                                    g = E.xOrigin,
                                                    _ = E.yOrigin,
                                                    u.x -= E.xOffset - A.xOffset,
                                                    u.y -= E.yOffset - A.yOffset),
                                                (g || _) && (x = Vt(V, !0),
                                                    u.x -= g - (g * x[0] + _ * x[2]),
                                                    u.y -= _ - (g * x[1] + _ * x[3]))),
                                            j.body.removeChild(V),
                                            u.perspective || (u.perspective = A.perspective),
                                            null != P.xPercent && (u.xPercent = ct(P.xPercent, A.xPercent)),
                                            null != P.yPercent && (u.yPercent = ct(P.yPercent, A.yPercent));
                                    else if ("object" == typeof P) {
                                        if (u = {
                                            scaleX: ct(null != P.scaleX ? P.scaleX : P.scale, A.scaleX),
                                            scaleY: ct(null != P.scaleY ? P.scaleY : P.scale, A.scaleY),
                                            scaleZ: ct(P.scaleZ, A.scaleZ),
                                            x: ct(P.x, A.x),
                                            y: ct(P.y, A.y),
                                            z: ct(P.z, A.z),
                                            xPercent: ct(P.xPercent, A.xPercent),
                                            yPercent: ct(P.yPercent, A.yPercent),
                                            perspective: ct(P.transformPerspective, A.perspective)
                                        },
                                            null != (m = P.directionalRotation))
                                            if ("object" == typeof m)
                                                for (p in m)
                                                    P[p] = m[p];
                                            else
                                                P.rotation = m;
                                        "string" == typeof P.x && -1 !== P.x.indexOf("%") && (u.x = 0,
                                            u.xPercent = ct(P.x, A.xPercent)),
                                            "string" == typeof P.y && -1 !== P.y.indexOf("%") && (u.y = 0,
                                                u.yPercent = ct(P.y, A.yPercent)),
                                            u.rotation = ut("rotation" in P ? P.rotation : "shortRotation" in P ? P.shortRotation + "_short" : "rotationZ" in P ? P.rotationZ : A.rotation, A.rotation, "rotation", S),
                                            Rt && (u.rotationX = ut("rotationX" in P ? P.rotationX : "shortRotationX" in P ? P.shortRotationX + "_short" : A.rotationX || 0, A.rotationX, "rotationX", S),
                                                u.rotationY = ut("rotationY" in P ? P.rotationY : "shortRotationY" in P ? P.shortRotationY + "_short" : A.rotationY || 0, A.rotationY, "rotationY", S)),
                                            u.skewX = ut(P.skewX, A.skewX),
                                            u.skewY = ut(P.skewY, A.skewY)
                                    }
                                    for (Rt && null != P.force3D && (A.force3D = P.force3D,
                                        f = !0),
                                        d = A.force3D || A.z || A.rotationX || A.rotationY || u.z || u.rotationX || u.rotationY || u.perspective,
                                        d || null == P.scale || (u.scaleZ = 1); --T > -1;)
                                        w = Et[T],
                                            ((E = u[w] - A[w]) > 1e-6 || E < -1e-6 || null != P[w] || null != B[w]) && (f = !0,
                                                a = new xt(A, w, A[w], E, a),
                                                w in S && (a.e = S[w]),
                                                a.xs0 = 0,
                                                a.plugin = o,
                                                n._overwriteProps.push(a.n));
                                    return E = P.transformOrigin,
                                        A.svg && (E || P.svgOrigin) && (g = A.xOffset,
                                            _ = A.yOffset,
                                            Nt(t, ht(E), u, P.svgOrigin, P.smoothOrigin),
                                            a = wt(A, "xOrigin", (b ? A : u).xOrigin, u.xOrigin, a, "transformOrigin"),
                                            a = wt(A, "yOrigin", (b ? A : u).yOrigin, u.yOrigin, a, "transformOrigin"),
                                            g === A.xOffset && _ === A.yOffset || (a = wt(A, "xOffset", b ? g : A.xOffset, A.xOffset, a, "transformOrigin"),
                                                a = wt(A, "yOffset", b ? _ : A.yOffset, A.yOffset, a, "transformOrigin")),
                                            E = "0px 0px"),
                                        (E || Rt && d && A.zOrigin) && (Lt ? (f = !0,
                                            w = Ot,
                                            E = (E || tt(t, w, r, !1, "50% 50%")) + "",
                                            a = new xt(M, w, 0, 0, a, -1, "transformOrigin"),
                                            a.b = M[w],
                                            a.plugin = o,
                                            Rt ? (p = A.zOrigin,
                                                E = E.split(" "),
                                                A.zOrigin = (E.length > 2 && (0 === p || "0px" !== E[2]) ? parseFloat(E[2]) : p) || 0,
                                                a.xs0 = a.e = E[0] + " " + (E[1] || "50%") + " 0px",
                                                a = new xt(A, "zOrigin", 0, 0, a, -1, a.n),
                                                a.b = p,
                                                a.xs0 = a.e = A.zOrigin) : a.xs0 = a.e = E) : ht(E + "", A)),
                                        f && (n._transformType = A.svg && At || !d && 3 !== this._transformType ? 2 : 3),
                                        l && (h[i] = l),
                                        c && (h.scale = c),
                                        a
                                },
                                prefix: !0
                            }),
                            Pt("boxShadow", {
                                defaultValue: "0px 0px 0px 0px #999",
                                prefix: !0,
                                color: !0,
                                multi: !0,
                                keyword: "inset"
                            }),
                            Pt("borderRadius", {
                                defaultValue: "0px",
                                parser: function (t, e, i, a, o, s) {
                                    e = this.format(e);
                                    var h, l, c, u, p, d, f, m, g, v, y, _, x, w, b, M, T = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"], P = t.style;
                                    for (g = parseFloat(t.offsetWidth),
                                        v = parseFloat(t.offsetHeight),
                                        h = e.split(" "),
                                        l = 0; l < T.length; l++)
                                        this.p.indexOf("border") && (T[l] = J(T[l])),
                                            p = u = tt(t, T[l], r, !1, "0px"),
                                            -1 !== p.indexOf(" ") && (u = p.split(" "),
                                                p = u[0],
                                                u = u[1]),
                                            d = c = h[l],
                                            f = parseFloat(p),
                                            _ = p.substr((f + "").length),
                                            x = "=" === d.charAt(1),
                                            x ? (m = parseInt(d.charAt(0) + "1", 10),
                                                d = d.substr(2),
                                                m *= parseFloat(d),
                                                y = d.substr((m + "").length - (m < 0 ? 1 : 0)) || "") : (m = parseFloat(d),
                                                    y = d.substr((m + "").length)),
                                            "" === y && (y = n[i] || _),
                                            y !== _ && (w = et(t, "borderLeft", f, _),
                                                b = et(t, "borderTop", f, _),
                                                "%" === y ? (p = w / g * 100 + "%",
                                                    u = b / v * 100 + "%") : "em" === y ? (M = et(t, "borderLeft", 1, "em"),
                                                        p = w / M + "em",
                                                        u = b / M + "em") : (p = w + "px",
                                                            u = b + "px"),
                                                x && (d = parseFloat(p) + m + y,
                                                    c = parseFloat(u) + m + y)),
                                            o = bt(P, T[l], p + " " + u, d + " " + c, !1, "0px", o);
                                    return o
                                },
                                prefix: !0,
                                formatter: vt("0px 0px 0px 0px", !1, !0)
                            }),
                            Pt("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {
                                defaultValue: "0px",
                                parser: function (t, e, i, n, a, o) {
                                    return bt(t.style, i, this.format(tt(t, i, r, !1, "0px 0px")), this.format(e), !1, "0px", a)
                                },
                                prefix: !0,
                                formatter: vt("0px 0px", !1, !0)
                            }),
                            Pt("backgroundPosition", {
                                defaultValue: "0 0",
                                parser: function (t, e, i, n, a, o) {
                                    var s, h, l, c, u, p, d = "background-position", f = r || $(t, null), m = this.format((f ? g ? f.getPropertyValue(d + "-x") + " " + f.getPropertyValue(d + "-y") : f.getPropertyValue(d) : t.currentStyle.backgroundPositionX + " " + t.currentStyle.backgroundPositionY) || "0 0"), v = this.format(e);
                                    if (-1 !== m.indexOf("%") != (-1 !== v.indexOf("%")) && v.split(",").length < 2 && (p = tt(t, "backgroundImage").replace(C, "")) && "none" !== p) {
                                        for (s = m.split(" "),
                                            h = v.split(" "),
                                            H.setAttribute("src", p),
                                            l = 2; --l > -1;)
                                            m = s[l],
                                                (c = -1 !== m.indexOf("%")) !== (-1 !== h[l].indexOf("%")) && (u = 0 === l ? t.offsetWidth - H.width : t.offsetHeight - H.height,
                                                    s[l] = c ? parseFloat(m) / 100 * u + "px" : parseFloat(m) / u * 100 + "%");
                                        m = s.join(" ")
                                    }
                                    return this.parseComplex(t.style, m, v, a, o)
                                },
                                formatter: ht
                            }),
                            Pt("backgroundSize", {
                                defaultValue: "0 0",
                                formatter: function (t) {
                                    return t += "",
                                        ht(-1 === t.indexOf(" ") ? t + " " + t : t)
                                }
                            }),
                            Pt("perspective", {
                                defaultValue: "0px",
                                prefix: !0
                            }),
                            Pt("perspectiveOrigin", {
                                defaultValue: "50% 50%",
                                prefix: !0
                            }),
                            Pt("transformStyle", {
                                prefix: !0
                            }),
                            Pt("backfaceVisibility", {
                                prefix: !0
                            }),
                            Pt("userSelect", {
                                prefix: !0
                            }),
                            Pt("margin", {
                                parser: yt("marginTop,marginRight,marginBottom,marginLeft")
                            }),
                            Pt("padding", {
                                parser: yt("paddingTop,paddingRight,paddingBottom,paddingLeft")
                            }),
                            Pt("clip", {
                                defaultValue: "rect(0px,0px,0px,0px)",
                                parser: function (t, e, i, n, a, o) {
                                    var s, h, l;
                                    return g < 9 ? (h = t.currentStyle,
                                        l = g < 8 ? " " : ",",
                                        s = "rect(" + h.clipTop + l + h.clipRight + l + h.clipBottom + l + h.clipLeft + ")",
                                        e = this.format(e).split(",").join(l)) : (s = this.format(tt(t, this.p, r, !1, this.dflt)),
                                            e = this.format(e)),
                                        this.parseComplex(t.style, s, e, a, o)
                                }
                            }),
                            Pt("textShadow", {
                                defaultValue: "0px 0px 0px #999",
                                color: !0,
                                multi: !0
                            }),
                            Pt("autoRound,strictUnits", {
                                parser: function (t, e, i, n, r) {
                                    return r
                                }
                            }),
                            Pt("border", {
                                defaultValue: "0px solid #000",
                                parser: function (t, e, i, n, a, o) {
                                    var s = tt(t, "borderTopWidth", r, !1, "0px")
                                        , h = this.format(e).split(" ")
                                        , l = h[0].replace(M, "");
                                    return "px" !== l && (s = parseFloat(s) / et(t, "borderTopWidth", 1, l) + l),
                                        this.parseComplex(t.style, this.format(s + " " + tt(t, "borderTopStyle", r, !1, "solid") + " " + tt(t, "borderTopColor", r, !1, "#000")), h.join(" "), a, o)
                                },
                                color: !0,
                                formatter: function (t) {
                                    var e = t.split(" ");
                                    return e[0] + " " + (e[1] || "solid") + " " + (t.match(gt) || ["#000"])[0]
                                }
                            }),
                            Pt("borderWidth", {
                                parser: yt("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")
                            }),
                            Pt("float,cssFloat,styleFloat", {
                                parser: function (t, e, i, n, r, a) {
                                    var o = t.style
                                        , s = "cssFloat" in o ? "cssFloat" : "styleFloat";
                                    return new xt(o, s, 0, 0, r, -1, i, !1, 0, o[s], e)
                                }
                            });
                        var Yt = function (t) {
                            var e, i = this.t, n = i.filter || tt(this.data, "filter") || "", r = this.s + this.c * t | 0;
                            100 === r && (-1 === n.indexOf("atrix(") && -1 === n.indexOf("radient(") && -1 === n.indexOf("oader(") ? (i.removeAttribute("filter"),
                                e = !tt(this.data, "filter")) : (i.filter = n.replace(S, ""),
                                    e = !0)),
                                e || (this.xn1 && (i.filter = n = n || "alpha(opacity=" + r + ")"),
                                    -1 === n.indexOf("pacity") ? 0 === r && this.xn1 || (i.filter = n + " alpha(opacity=" + r + ")") : i.filter = n.replace(T, "opacity=" + r))
                        };
                        Pt("opacity,alpha,autoAlpha", {
                            defaultValue: "1",
                            parser: function (t, e, i, n, a, o) {
                                var s = parseFloat(tt(t, "opacity", r, !1, "1"))
                                    , h = t.style
                                    , l = "autoAlpha" === i;
                                return "string" == typeof e && "=" === e.charAt(1) && (e = ("-" === e.charAt(0) ? -1 : 1) * parseFloat(e.substr(2)) + s),
                                    l && 1 === s && "hidden" === tt(t, "visibility", r) && 0 !== e && (s = 0),
                                    Y ? a = new xt(h, "opacity", s, e - s, a) : (a = new xt(h, "opacity", 100 * s, 100 * (e - s), a),
                                        a.xn1 = l ? 1 : 0,
                                        h.zoom = 1,
                                        a.type = 2,
                                        a.b = "alpha(opacity=" + a.s + ")",
                                        a.e = "alpha(opacity=" + (a.s + a.c) + ")",
                                        a.data = t,
                                        a.plugin = o,
                                        a.setRatio = Yt),
                                    l && (a = new xt(h, "visibility", 0, 0, a, -1, null, !1, 0, 0 !== s ? "inherit" : "hidden", 0 === e ? "hidden" : "inherit"),
                                        a.xs0 = "inherit",
                                        n._overwriteProps.push(a.n),
                                        n._overwriteProps.push(i)),
                                    a
                            }
                        });
                        var qt = function (t, e) {
                            e && (t.removeProperty ? ("ms" !== e.substr(0, 2) && "webkit" !== e.substr(0, 6) || (e = "-" + e),
                                t.removeProperty(e.replace(E, "-$1").toLowerCase())) : t.removeAttribute(e))
                        }
                            , Zt = function (t) {
                                if (this.t._gsClassPT = this,
                                    1 === t || 0 === t) {
                                    this.t.setAttribute("class", 0 === t ? this.b : this.e);
                                    for (var e = this.data, i = this.t.style; e;)
                                        e.v ? i[e.p] = e.v : qt(i, e.p),
                                            e = e._next;
                                    1 === t && this.t._gsClassPT === this && (this.t._gsClassPT = null)
                                } else
                                    this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e)
                            };
                        Pt("className", {
                            parser: function (t, e, n, a, o, s, h) {
                                var l, c, u, p, d, f = t.getAttribute("class") || "", m = t.style.cssText;
                                if (o = a._classNamePT = new xt(t, n, 0, 0, o, 2),
                                    o.setRatio = Zt,
                                    o.pr = -11,
                                    i = !0,
                                    o.b = f,
                                    c = nt(t, r),
                                    u = t._gsClassPT) {
                                    for (p = {},
                                        d = u.data; d;)
                                        p[d.p] = 1,
                                            d = d._next;
                                    u.setRatio(1)
                                }
                                return t._gsClassPT = o,
                                    o.e = "=" !== e.charAt(1) ? e : f.replace(new RegExp("(?:\\s|^)" + e.substr(2) + "(?![\\w-])"), "") + ("+" === e.charAt(0) ? " " + e.substr(2) : ""),
                                    t.setAttribute("class", o.e),
                                    l = rt(t, c, nt(t), h, p),
                                    t.setAttribute("class", f),
                                    o.data = l.firstMPT,
                                    t.style.cssText = m,
                                    o = o.xfirst = a.parse(t, l.difs, o, s)
                            }
                        });
                        var Kt = function (t) {
                            if ((1 === t || 0 === t) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                                var e, i, n, r, a, o = this.t.style, s = l.transform.parse;
                                if ("all" === this.e)
                                    o.cssText = "",
                                        r = !0;
                                else
                                    for (e = this.e.split(" ").join("").split(","),
                                        n = e.length; --n > -1;)
                                        i = e[n],
                                            l[i] && (l[i].parse === s ? r = !0 : i = "transformOrigin" === i ? Ot : l[i].p),
                                            qt(o, i);
                                r && (qt(o, Lt),
                                    (a = this.t._gsTransform) && (a.svg && (this.t.removeAttribute("data-svg-origin"),
                                        this.t.removeAttribute("transform")),
                                        delete this.t._gsTransform))
                            }
                        };
                        for (Pt("clearProps", {
                            parser: function (t, e, n, r, a) {
                                return a = new xt(t, n, 0, 0, a, 2),
                                    a.setRatio = Kt,
                                    a.e = e,
                                    a.pr = -10,
                                    a.data = r._tween,
                                    i = !0,
                                    a
                            }
                        }),
                            c = "bezier,throwProps,physicsProps,physics2D".split(","),
                            Mt = c.length; Mt--;)
                            St(c[Mt]);
                        c = s.prototype,
                            c._firstPT = c._lastParsedTransform = c._transform = null,
                            c._onInitTween = function (t, e, a, h) {
                                if (!t.nodeType)
                                    return !1;
                                this._target = v = t,
                                    this._tween = a,
                                    this._vars = e,
                                    y = h,
                                    u = e.autoRound,
                                    i = !1,
                                    n = e.suffixMap || s.suffixMap,
                                    r = $(t, ""),
                                    o = this._overwriteProps;
                                var c, f, g, _, x, w, b, M, T, S = t.style;
                                if (p && "" === S.zIndex && ("auto" !== (c = tt(t, "zIndex", r)) && "" !== c || this._addLazySet(S, "zIndex", 0)),
                                    "string" == typeof e && (_ = S.cssText,
                                        c = nt(t, r),
                                        S.cssText = _ + ";" + e,
                                        c = rt(t, c, nt(t)).difs,
                                        !Y && P.test(e) && (c.opacity = parseFloat(RegExp.$1)),
                                        e = c,
                                        S.cssText = _),
                                    e.className ? this._firstPT = f = l.className.parse(t, e.className, "className", this, null, null, e) : this._firstPT = f = this.parse(t, e, null),
                                    this._transformType) {
                                    for (T = 3 === this._transformType,
                                        Lt ? d && (p = !0,
                                            "" === S.zIndex && ("auto" !== (b = tt(t, "zIndex", r)) && "" !== b || this._addLazySet(S, "zIndex", 0)),
                                            m && this._addLazySet(S, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (T ? "visible" : "hidden"))) : S.zoom = 1,
                                        g = f; g && g._next;)
                                        g = g._next;
                                    M = new xt(t, "transform", 0, 0, null, 2),
                                        this._linkCSSP(M, null, g),
                                        M.setRatio = Lt ? Xt : Wt,
                                        M.data = this._transform || Ht(t, r, !0),
                                        M.tween = a,
                                        M.pr = -1,
                                        o.pop()
                                }
                                if (i) {
                                    for (; f;) {
                                        for (w = f._next,
                                            g = _; g && g.pr > f.pr;)
                                            g = g._next;
                                        (f._prev = g ? g._prev : x) ? f._prev._next = f : _ = f,
                                            (f._next = g) ? g._prev = f : x = f,
                                            f = w
                                    }
                                    this._firstPT = _
                                }
                                return !0
                            }
                            ,
                            c.parse = function (t, e, i, a) {
                                var o, s, h, c, p, d, f, m, g, _, x = t.style;
                                for (o in e) {
                                    if (d = e[o],
                                        "function" == typeof d && (d = d(y, v)),
                                        s = l[o])
                                        i = s.parse(t, d, o, this, i, a, e);
                                    else {
                                        if ("--" === o.substr(0, 2)) {
                                            this._tween._propLookup[o] = this._addTween.call(this._tween, t.style, "setProperty", $(t).getPropertyValue(o) + "", d + "", o, !1, o);
                                            continue
                                        }
                                        p = tt(t, o, r) + "",
                                            g = "string" == typeof d,
                                            "color" === o || "fill" === o || "stroke" === o || -1 !== o.indexOf("Color") || g && A.test(d) ? (g || (d = ft(d),
                                                d = (d.length > 3 ? "rgba(" : "rgb(") + d.join(",") + ")"),
                                                i = bt(x, o, p, d, !0, "transparent", i, 0, a)) : g && F.test(d) ? i = bt(x, o, p, d, !0, null, i, 0, a) : (h = parseFloat(p),
                                                    f = h || 0 === h ? p.substr((h + "").length) : "",
                                                    "" !== p && "auto" !== p || ("width" === o || "height" === o ? (h = st(t, o, r),
                                                        f = "px") : "left" === o || "top" === o ? (h = it(t, o, r),
                                                            f = "px") : (h = "opacity" !== o ? 0 : 1,
                                                                f = "")),
                                                    _ = g && "=" === d.charAt(1),
                                                    _ ? (c = parseInt(d.charAt(0) + "1", 10),
                                                        d = d.substr(2),
                                                        c *= parseFloat(d),
                                                        m = d.replace(M, "")) : (c = parseFloat(d),
                                                            m = g ? d.replace(M, "") : ""),
                                                    "" === m && (m = o in n ? n[o] : f),
                                                    d = c || 0 === c ? (_ ? c + h : c) + m : e[o],
                                                    f !== m && ("" === m && "lineHeight" !== o || (c || 0 === c) && h && (h = et(t, o, h, f),
                                                        "%" === m ? (h /= et(t, o, 100, "%") / 100,
                                                            !0 !== e.strictUnits && (p = h + "%")) : "em" === m || "rem" === m || "vw" === m || "vh" === m ? h /= et(t, o, 1, m) : "px" !== m && (c = et(t, o, c, m),
                                                                m = "px"),
                                                        _ && (c || 0 === c) && (d = c + h + m))),
                                                    _ && (c += h),
                                                    !h && 0 !== h || !c && 0 !== c ? void 0 !== x[o] && (d || d + "" != "NaN" && null != d) ? (i = new xt(x, o, c || h || 0, 0, i, -1, o, !1, 0, p, d),
                                                        i.xs0 = "none" !== d || "display" !== o && -1 === o.indexOf("Style") ? d : p) : Z(e[o]) : (i = new xt(x, o, h, c - h, i, 0, o, !1 !== u && ("px" === m || "zIndex" === o), 0, p, d),
                                                            i.xs0 = m))
                                    }
                                    a && i && !i.plugin && (i.plugin = a)
                                }
                                return i
                            }
                            ,
                            c.setRatio = function (t) {
                                var e, i, n, r = this._firstPT;
                                if (1 !== t || this._tween._time !== this._tween._duration && 0 !== this._tween._time)
                                    if (t || this._tween._time !== this._tween._duration && 0 !== this._tween._time || -1e-6 === this._tween._rawPrevTime)
                                        for (; r;) {
                                            if (e = r.c * t + r.s,
                                                r.r ? e = Math.round(e) : e < 1e-6 && e > -1e-6 && (e = 0),
                                                r.type)
                                                if (1 === r.type)
                                                    if (2 === (n = r.l))
                                                        r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2;
                                                    else if (3 === n)
                                                        r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3;
                                                    else if (4 === n)
                                                        r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4;
                                                    else if (5 === n)
                                                        r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4 + r.xn4 + r.xs5;
                                                    else {
                                                        for (i = r.xs0 + e + r.xs1,
                                                            n = 1; n < r.l; n++)
                                                            i += r["xn" + n] + r["xs" + (n + 1)];
                                                        r.t[r.p] = i
                                                    }
                                                else
                                                    -1 === r.type ? r.t[r.p] = r.xs0 : r.setRatio && r.setRatio(t);
                                            else
                                                r.t[r.p] = e + r.xs0;
                                            r = r._next
                                        }
                                    else
                                        for (; r;)
                                            2 !== r.type ? r.t[r.p] = r.b : r.setRatio(t),
                                                r = r._next;
                                else
                                    for (; r;) {
                                        if (2 !== r.type)
                                            if (r.r && -1 !== r.type)
                                                if (e = Math.round(r.s + r.c),
                                                    r.type) {
                                                    if (1 === r.type) {
                                                        for (n = r.l,
                                                            i = r.xs0 + e + r.xs1,
                                                            n = 1; n < r.l; n++)
                                                            i += r["xn" + n] + r["xs" + (n + 1)];
                                                        r.t[r.p] = i
                                                    }
                                                } else
                                                    r.t[r.p] = e + r.xs0;
                                            else
                                                r.t[r.p] = r.e;
                                        else
                                            r.setRatio(t);
                                        r = r._next
                                    }
                            }
                            ,
                            c._enableTransforms = function (t) {
                                this._transform = this._transform || Ht(this._target, r, !0),
                                    this._transformType = this._transform.svg && At || !t && 3 !== this._transformType ? 2 : 3
                            }
                            ;
                        var Qt = function (t) {
                            this.t[this.p] = this.e,
                                this.data._linkCSSP(this, this._next, null, !0)
                        };
                        c._addLazySet = function (t, e, i) {
                            var n = this._firstPT = new xt(t, e, 0, 0, this._firstPT, 2);
                            n.e = i,
                                n.setRatio = Qt,
                                n.data = this
                        }
                            ,
                            c._linkCSSP = function (t, e, i, n) {
                                return t && (e && (e._prev = t),
                                    t._next && (t._next._prev = t._prev),
                                    t._prev ? t._prev._next = t._next : this._firstPT === t && (this._firstPT = t._next,
                                        n = !0),
                                    i ? i._next = t : n || null !== this._firstPT || (this._firstPT = t),
                                    t._next = e,
                                    t._prev = i),
                                    t
                            }
                            ,
                            c._mod = function (t) {
                                for (var e = this._firstPT; e;)
                                    "function" == typeof t[e.p] && t[e.p] === Math.round && (e.r = 1),
                                        e = e._next
                            }
                            ,
                            c._kill = function (e) {
                                var i, n, r, a = e;
                                if (e.autoAlpha || e.alpha) {
                                    a = {};
                                    for (n in e)
                                        a[n] = e[n];
                                    a.opacity = 1,
                                        a.autoAlpha && (a.visibility = 1)
                                }
                                for (e.className && (i = this._classNamePT) && (r = i.xfirst,
                                    r && r._prev ? this._linkCSSP(r._prev, i._next, r._prev._prev) : r === this._firstPT && (this._firstPT = i._next),
                                    i._next && this._linkCSSP(i._next, i._next._next, r._prev),
                                    this._classNamePT = null),
                                    i = this._firstPT; i;)
                                    i.plugin && i.plugin !== n && i.plugin._kill && (i.plugin._kill(e),
                                        n = i.plugin),
                                        i = i._next;
                                return t.prototype._kill.call(this, a)
                            }
                            ;
                        var Jt = function (t, e, i) {
                            var n, r, a, o;
                            if (t.slice)
                                for (r = t.length; --r > -1;)
                                    Jt(t[r], e, i);
                            else
                                for (n = t.childNodes,
                                    r = n.length; --r > -1;)
                                    a = n[r],
                                        o = a.type,
                                        a.style && (e.push(nt(a)),
                                            i && i.push(a)),
                                        1 !== o && 9 !== o && 11 !== o || !a.childNodes.length || Jt(a, e, i)
                        };
                        return s.cascadeTo = function (t, i, n) {
                            var r, a, o, s, h = e.to(t, i, n), l = [h], c = [], u = [], p = [], d = e._internals.reservedProps;
                            for (t = h._targets || h.target,
                                Jt(t, c, p),
                                h.render(i, !0, !0),
                                Jt(t, u),
                                h.render(0, !0, !0),
                                h._enabled(!0),
                                r = p.length; --r > -1;)
                                if (a = rt(p[r], c[r], u[r]),
                                    a.firstMPT) {
                                    a = a.difs;
                                    for (o in n)
                                        d[o] && (a[o] = n[o]);
                                    s = {};
                                    for (o in a)
                                        s[o] = c[r][o];
                                    l.push(e.fromTo(p[r], i, s, a))
                                }
                            return l
                        }
                            ,
                            t.activate([s]),
                            s
                    }, !0),
                    function () {
                        var t = a._gsDefine.plugin({
                            propName: "roundProps",
                            version: "1.6.0",
                            priority: -1,
                            API: 2,
                            init: function (t, e, i) {
                                return this._tween = i,
                                    !0
                            }
                        })
                            , e = function (t) {
                                for (; t;)
                                    t.f || t.blob || (t.m = Math.round),
                                        t = t._next
                            }
                            , i = t.prototype;
                        i._onInitAllProps = function () {
                            for (var t, i, n, r = this._tween, a = r.vars.roundProps.join ? r.vars.roundProps : r.vars.roundProps.split(","), o = a.length, s = {}, h = r._propLookup.roundProps; --o > -1;)
                                s[a[o]] = Math.round;
                            for (o = a.length; --o > -1;)
                                for (t = a[o],
                                    i = r._firstPT; i;)
                                    n = i._next,
                                        i.pg ? i.t._mod(s) : i.n === t && (2 === i.f && i.t ? e(i.t._firstPT) : (this._add(i.t, t, i.s, i.c),
                                            n && (n._prev = i._prev),
                                            i._prev ? i._prev._next = n : r._firstPT === i && (r._firstPT = n),
                                            i._next = i._prev = null,
                                            r._propLookup[t] = h)),
                                        i = n;
                            return !1
                        }
                            ,
                            i._add = function (t, e, i, n) {
                                this._addTween(t, e, i, i + n, e, Math.round),
                                    this._overwriteProps.push(e)
                            }
                    }(),
                    function () {
                        a._gsDefine.plugin({
                            propName: "attr",
                            API: 2,
                            version: "0.6.1",
                            init: function (t, e, i, n) {
                                var r, a;
                                if ("function" != typeof t.setAttribute)
                                    return !1;
                                for (r in e)
                                    a = e[r],
                                        "function" == typeof a && (a = a(n, t)),
                                        this._addTween(t, "setAttribute", t.getAttribute(r) + "", a + "", r, !1, r),
                                        this._overwriteProps.push(r);
                                return !0
                            }
                        })
                    }(),
                    a._gsDefine.plugin({
                        propName: "directionalRotation",
                        version: "0.3.1",
                        API: 2,
                        init: function (t, e, i, n) {
                            "object" != typeof e && (e = {
                                rotation: e
                            }),
                                this.finals = {};
                            var r, a, o, s, h, l, c = !0 === e.useRadians ? 2 * Math.PI : 360;
                            for (r in e)
                                "useRadians" !== r && (s = e[r],
                                    "function" == typeof s && (s = s(n, t)),
                                    l = (s + "").split("_"),
                                    a = l[0],
                                    o = parseFloat("function" != typeof t[r] ? t[r] : t[r.indexOf("set") || "function" != typeof t["get" + r.substr(3)] ? r : "get" + r.substr(3)]()),
                                    s = this.finals[r] = "string" == typeof a && "=" === a.charAt(1) ? o + parseInt(a.charAt(0) + "1", 10) * Number(a.substr(2)) : Number(a) || 0,
                                    h = s - o,
                                    l.length && (a = l.join("_"),
                                        -1 !== a.indexOf("short") && (h %= c) !== h % (c / 2) && (h = h < 0 ? h + c : h - c),
                                        -1 !== a.indexOf("_cw") && h < 0 ? h = (h + 9999999999 * c) % c - (h / c | 0) * c : -1 !== a.indexOf("ccw") && h > 0 && (h = (h - 9999999999 * c) % c - (h / c | 0) * c)),
                                    (h > 1e-6 || h < -1e-6) && (this._addTween(t, r, o, o + h, r),
                                        this._overwriteProps.push(r)));
                            return !0
                        },
                        set: function (t) {
                            var e;
                            if (1 !== t)
                                this._super.setRatio.call(this, t);
                            else
                                for (e = this._firstPT; e;)
                                    e.f ? e.t[e.p](this.finals[e.p]) : e.t[e.p] = this.finals[e.p],
                                        e = e._next
                        }
                    })._autoCSS = !0,
                    a._gsDefine("easing.Back", ["easing.Ease"], function (t) {
                        var e, i, n, r = a.GreenSockGlobals || a, o = r.com.greensock, s = 2 * Math.PI, h = Math.PI / 2, l = o._class, c = function (e, i) {
                            var n = l("easing." + e, function () { }, !0)
                                , r = n.prototype = new t;
                            return r.constructor = n,
                                r.getRatio = i,
                                n
                        }, u = t.register || function () { }
                            , p = function (t, e, i, n, r) {
                                var a = l("easing." + t, {
                                    easeOut: new e,
                                    easeIn: new i,
                                    easeInOut: new n
                                }, !0);
                                return u(a, t),
                                    a
                            }, d = function (t, e, i) {
                                this.t = t,
                                    this.v = e,
                                    i && (this.next = i,
                                        i.prev = this,
                                        this.c = i.v - e,
                                        this.gap = i.t - t)
                            }, f = function (e, i) {
                                var n = l("easing." + e, function (t) {
                                    this._p1 = t || 0 === t ? t : 1.70158,
                                        this._p2 = 1.525 * this._p1
                                }, !0)
                                    , r = n.prototype = new t;
                                return r.constructor = n,
                                    r.getRatio = i,
                                    r.config = function (t) {
                                        return new n(t)
                                    }
                                    ,
                                    n
                            }, m = p("Back", f("BackOut", function (t) {
                                return (t -= 1) * t * ((this._p1 + 1) * t + this._p1) + 1
                            }), f("BackIn", function (t) {
                                return t * t * ((this._p1 + 1) * t - this._p1)
                            }), f("BackInOut", function (t) {
                                return (t *= 2) < 1 ? .5 * t * t * ((this._p2 + 1) * t - this._p2) : .5 * ((t -= 2) * t * ((this._p2 + 1) * t + this._p2) + 2)
                            })), g = l("easing.SlowMo", function (t, e, i) {
                                e = e || 0 === e ? e : .7,
                                    null == t ? t = .7 : t > 1 && (t = 1),
                                    this._p = 1 !== t ? e : 0,
                                    this._p1 = (1 - t) / 2,
                                    this._p2 = t,
                                    this._p3 = this._p1 + this._p2,
                                    this._calcEnd = !0 === i
                            }, !0), v = g.prototype = new t;
                        return v.constructor = g,
                            v.getRatio = function (t) {
                                var e = t + (.5 - t) * this._p;
                                return t < this._p1 ? this._calcEnd ? 1 - (t = 1 - t / this._p1) * t : e - (t = 1 - t / this._p1) * t * t * t * e : t > this._p3 ? this._calcEnd ? 1 - (t = (t - this._p3) / this._p1) * t : e + (t - e) * (t = (t - this._p3) / this._p1) * t * t * t : this._calcEnd ? 1 : e
                            }
                            ,
                            g.ease = new g(.7, .7),
                            v.config = g.config = function (t, e, i) {
                                return new g(t, e, i)
                            }
                            ,
                            e = l("easing.SteppedEase", function (t, e) {
                                t = t || 1,
                                    this._p1 = 1 / t,
                                    this._p2 = t + (e ? 0 : 1),
                                    this._p3 = e ? 1 : 0
                            }, !0),
                            v = e.prototype = new t,
                            v.constructor = e,
                            v.getRatio = function (t) {
                                return t < 0 ? t = 0 : t >= 1 && (t = .999999999),
                                    ((this._p2 * t | 0) + this._p3) * this._p1
                            }
                            ,
                            v.config = e.config = function (t, i) {
                                return new e(t, i)
                            }
                            ,
                            i = l("easing.RoughEase", function (e) {
                                e = e || {};
                                for (var i, n, r, a, o, s, h = e.taper || "none", l = [], c = 0, u = 0 | (e.points || 20), p = u, f = !1 !== e.randomize, m = !0 === e.clamp, g = e.template instanceof t ? e.template : null, v = "number" == typeof e.strength ? .4 * e.strength : .4; --p > -1;)
                                    i = f ? Math.random() : 1 / u * p,
                                        n = g ? g.getRatio(i) : i,
                                        "none" === h ? r = v : "out" === h ? (a = 1 - i,
                                            r = a * a * v) : "in" === h ? r = i * i * v : i < .5 ? (a = 2 * i,
                                                r = a * a * .5 * v) : (a = 2 * (1 - i),
                                                    r = a * a * .5 * v),
                                        f ? n += Math.random() * r - .5 * r : p % 2 ? n += .5 * r : n -= .5 * r,
                                        m && (n > 1 ? n = 1 : n < 0 && (n = 0)),
                                        l[c++] = {
                                            x: i,
                                            y: n
                                        };
                                for (l.sort(function (t, e) {
                                    return t.x - e.x
                                }),
                                    s = new d(1, 1, null),
                                    p = u; --p > -1;)
                                    o = l[p],
                                        s = new d(o.x, o.y, s);
                                this._prev = new d(0, 0, 0 !== s.t ? s : s.next)
                            }, !0),
                            v = i.prototype = new t,
                            v.constructor = i,
                            v.getRatio = function (t) {
                                var e = this._prev;
                                if (t > e.t) {
                                    for (; e.next && t >= e.t;)
                                        e = e.next;
                                    e = e.prev
                                } else
                                    for (; e.prev && t <= e.t;)
                                        e = e.prev;
                                return this._prev = e,
                                    e.v + (t - e.t) / e.gap * e.c
                            }
                            ,
                            v.config = function (t) {
                                return new i(t)
                            }
                            ,
                            i.ease = new i,
                            p("Bounce", c("BounceOut", function (t) {
                                return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375
                            }), c("BounceIn", function (t) {
                                return (t = 1 - t) < 1 / 2.75 ? 1 - 7.5625 * t * t : t < 2 / 2.75 ? 1 - (7.5625 * (t -= 1.5 / 2.75) * t + .75) : t < 2.5 / 2.75 ? 1 - (7.5625 * (t -= 2.25 / 2.75) * t + .9375) : 1 - (7.5625 * (t -= 2.625 / 2.75) * t + .984375)
                            }), c("BounceInOut", function (t) {
                                var e = t < .5;
                                return t = e ? 1 - 2 * t : 2 * t - 1,
                                    t < 1 / 2.75 ? t *= 7.5625 * t : t = t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375,
                                    e ? .5 * (1 - t) : .5 * t + .5
                            })),
                            p("Circ", c("CircOut", function (t) {
                                return Math.sqrt(1 - (t -= 1) * t)
                            }), c("CircIn", function (t) {
                                return -(Math.sqrt(1 - t * t) - 1)
                            }), c("CircInOut", function (t) {
                                return (t *= 2) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
                            })),
                            n = function (e, i, n) {
                                var r = l("easing." + e, function (t, e) {
                                    this._p1 = t >= 1 ? t : 1,
                                        this._p2 = (e || n) / (t < 1 ? t : 1),
                                        this._p3 = this._p2 / s * (Math.asin(1 / this._p1) || 0),
                                        this._p2 = s / this._p2
                                }, !0)
                                    , a = r.prototype = new t;
                                return a.constructor = r,
                                    a.getRatio = i,
                                    a.config = function (t, e) {
                                        return new r(t, e)
                                    }
                                    ,
                                    r
                            }
                            ,
                            p("Elastic", n("ElasticOut", function (t) {
                                return this._p1 * Math.pow(2, -10 * t) * Math.sin((t - this._p3) * this._p2) + 1
                            }, .3), n("ElasticIn", function (t) {
                                return -this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2)
                            }, .3), n("ElasticInOut", function (t) {
                                return (t *= 2) < 1 ? this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2) * -.5 : this._p1 * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2) * .5 + 1
                            }, .45)),
                            p("Expo", c("ExpoOut", function (t) {
                                return 1 - Math.pow(2, -10 * t)
                            }), c("ExpoIn", function (t) {
                                return Math.pow(2, 10 * (t - 1)) - .001
                            }), c("ExpoInOut", function (t) {
                                return (t *= 2) < 1 ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * (t - 1)))
                            })),
                            p("Sine", c("SineOut", function (t) {
                                return Math.sin(t * h)
                            }), c("SineIn", function (t) {
                                return 1 - Math.cos(t * h)
                            }), c("SineInOut", function (t) {
                                return -.5 * (Math.cos(Math.PI * t) - 1)
                            })),
                            l("easing.EaseLookup", {
                                find: function (e) {
                                    return t.map[e]
                                }
                            }, !0),
                            u(r.SlowMo, "SlowMo", "ease,"),
                            u(i, "RoughEase", "ease,"),
                            u(e, "SteppedEase", "ease,"),
                            m
                    }, !0)
            }),
                a._gsDefine && a._gsQueue.pop()(),
                function (i, a) {
                    "use strict";
                    var o = {}
                        , s = i.document
                        , h = i.GreenSockGlobals = i.GreenSockGlobals || i;
                    if (!h.TweenLite) {
                        var l, c, u, p, d, f = function (t) {
                            var e, i = t.split("."), n = h;
                            for (e = 0; e < i.length; e++)
                                n[i[e]] = n = n[i[e]] || {};
                            return n
                        }, m = f("com.greensock"), g = function (t) {
                            var e, i = [], n = t.length;
                            for (e = 0; e !== n; i.push(t[e++]))
                                ;
                            return i
                        }, v = function () { }, y = function () {
                            var t = Object.prototype.toString
                                , e = t.call([]);
                            return function (i) {
                                return null != i && (i instanceof Array || "object" == typeof i && !!i.push && t.call(i) === e)
                            }
                        }(), _ = {}, x = function (i, a, s, l) {
                            this.sc = _[i] ? _[i].sc : [],
                                _[i] = this,
                                this.gsClass = null,
                                this.func = s;
                            var c = [];
                            this.check = function (u) {
                                for (var p, d, m, g, v = a.length, y = v; --v > -1;)
                                    (p = _[a[v]] || new x(a[v], [])).gsClass ? (c[v] = p.gsClass,
                                        y--) : u && p.sc.push(this);
                                if (0 === y && s) {
                                    if (d = ("com.greensock." + i).split("."),
                                        m = d.pop(),
                                        g = f(d.join("."))[m] = this.gsClass = s.apply(s, c),
                                        l)
                                        if (h[m] = o[m] = g,
                                            void 0 !== t && t.exports)
                                            if ("TweenMax" === i) {
                                                t.exports = o.TweenMax = g;
                                                for (v in o)
                                                    g[v] = o[v]
                                            } else
                                                o.TweenMax && (o.TweenMax[m] = g);
                                        else
                                            n = [],
                                                void 0 !== (r = function () {
                                                    return g
                                                }
                                                    .apply(e, n)) && (t.exports = r);
                                    for (v = 0; v < this.sc.length; v++)
                                        this.sc[v].check()
                                }
                            }
                                ,
                                this.check(!0)
                        }, w = i._gsDefine = function (t, e, i, n) {
                            return new x(t, e, i, n)
                        }
                            , b = m._class = function (t, e, i) {
                                return e = e || function () { }
                                    ,
                                    w(t, [], function () {
                                        return e
                                    }, i),
                                    e
                            }
                            ;
                        w.globals = h;
                        var M = [0, 0, 1, 1]
                            , T = b("easing.Ease", function (t, e, i, n) {
                                this._func = t,
                                    this._type = i || 0,
                                    this._power = n || 0,
                                    this._params = e ? M.concat(e) : M
                            }, !0)
                            , P = T.map = {}
                            , S = T.register = function (t, e, i, n) {
                                for (var r, a, o, s, h = e.split(","), l = h.length, c = (i || "easeIn,easeOut,easeInOut").split(","); --l > -1;)
                                    for (a = h[l],
                                        r = n ? b("easing." + a, null, !0) : m.easing[a] || {},
                                        o = c.length; --o > -1;)
                                        s = c[o],
                                            P[a + "." + s] = P[s + a] = r[s] = t.getRatio ? t : t[s] || new t
                            }
                            ;
                        for (u = T.prototype,
                            u._calcEnd = !1,
                            u.getRatio = function (t) {
                                if (this._func)
                                    return this._params[0] = t,
                                        this._func.apply(null, this._params);
                                var e = this._type
                                    , i = this._power
                                    , n = 1 === e ? 1 - t : 2 === e ? t : t < .5 ? 2 * t : 2 * (1 - t);
                                return 1 === i ? n *= n : 2 === i ? n *= n * n : 3 === i ? n *= n * n * n : 4 === i && (n *= n * n * n * n),
                                    1 === e ? 1 - n : 2 === e ? n : t < .5 ? n / 2 : 1 - n / 2
                            }
                            ,
                            l = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"],
                            c = l.length; --c > -1;)
                            u = l[c] + ",Power" + c,
                                S(new T(null, null, 1, c), u, "easeOut", !0),
                                S(new T(null, null, 2, c), u, "easeIn" + (0 === c ? ",easeNone" : "")),
                                S(new T(null, null, 3, c), u, "easeInOut");
                        P.linear = m.easing.Linear.easeIn,
                            P.swing = m.easing.Quad.easeInOut;
                        var A = b("events.EventDispatcher", function (t) {
                            this._listeners = {},
                                this._eventTarget = t || this
                        });
                        u = A.prototype,
                            u.addEventListener = function (t, e, i, n, r) {
                                r = r || 0;
                                var a, o, s = this._listeners[t], h = 0;
                                for (this !== p || d || p.wake(),
                                    null == s && (this._listeners[t] = s = []),
                                    o = s.length; --o > -1;)
                                    a = s[o],
                                        a.c === e && a.s === i ? s.splice(o, 1) : 0 === h && a.pr < r && (h = o + 1);
                                s.splice(h, 0, {
                                    c: e,
                                    s: i,
                                    up: n,
                                    pr: r
                                })
                            }
                            ,
                            u.removeEventListener = function (t, e) {
                                var i, n = this._listeners[t];
                                if (n)
                                    for (i = n.length; --i > -1;)
                                        if (n[i].c === e)
                                            return void n.splice(i, 1)
                            }
                            ,
                            u.dispatchEvent = function (t) {
                                var e, i, n, r = this._listeners[t];
                                if (r)
                                    for (e = r.length,
                                        e > 1 && (r = r.slice(0)),
                                        i = this._eventTarget; --e > -1;)
                                        (n = r[e]) && (n.up ? n.c.call(n.s || i, {
                                            type: t,
                                            target: i
                                        }) : n.c.call(n.s || i))
                            }
                            ;
                        var E = i.requestAnimationFrame
                            , L = i.cancelAnimationFrame
                            , C = Date.now || function () {
                                return (new Date).getTime()
                            }
                            , O = C();
                        for (l = ["ms", "moz", "webkit", "o"],
                            c = l.length; --c > -1 && !E;)
                            E = i[l[c] + "RequestAnimationFrame"],
                                L = i[l[c] + "CancelAnimationFrame"] || i[l[c] + "CancelRequestAnimationFrame"];
                        b("Ticker", function (t, e) {
                            var i, n, r, a, o, h = this, l = C(), c = !(!1 === e || !E) && "auto", u = 500, f = 33, m = function (t) {
                                var e, s, c = C() - O;
                                c > u && (l += c - f),
                                    O += c,
                                    h.time = (O - l) / 1e3,
                                    e = h.time - o,
                                    (!i || e > 0 || !0 === t) && (h.frame++,
                                        o += e + (e >= a ? .004 : a - e),
                                        s = !0),
                                    !0 !== t && (r = n(m)),
                                    s && h.dispatchEvent("tick")
                            };
                            A.call(h),
                                h.time = h.frame = 0,
                                h.tick = function () {
                                    m(!0)
                                }
                                ,
                                h.lagSmoothing = function (t, e) {
                                    u = t || 1e10,
                                        f = Math.min(e, u, 0)
                                }
                                ,
                                h.sleep = function () {
                                    null != r && (c && L ? L(r) : clearTimeout(r),
                                        n = v,
                                        r = null,
                                        h === p && (d = !1))
                                }
                                ,
                                h.wake = function (t) {
                                    null !== r ? h.sleep() : t ? l += -O + (O = C()) : h.frame > 10 && (O = C() - u + 5),
                                        n = 0 === i ? v : c && E ? E : function (t) {
                                            return setTimeout(t, 1e3 * (o - h.time) + 1 | 0)
                                        }
                                        ,
                                        h === p && (d = !0),
                                        m(2)
                                }
                                ,
                                h.fps = function (t) {
                                    if (!arguments.length)
                                        return i;
                                    i = t,
                                        a = 1 / (i || 60),
                                        o = this.time + a,
                                        h.wake()
                                }
                                ,
                                h.useRAF = function (t) {
                                    if (!arguments.length)
                                        return c;
                                    h.sleep(),
                                        c = t,
                                        h.fps(i)
                                }
                                ,
                                h.fps(t),
                                setTimeout(function () {
                                    "auto" === c && h.frame < 5 && "hidden" !== s.visibilityState && h.useRAF(!1)
                                }, 1500)
                        }),
                            u = m.Ticker.prototype = new m.events.EventDispatcher,
                            u.constructor = m.Ticker;
                        var R = b("core.Animation", function (t, e) {
                            if (this.vars = e = e || {},
                                this._duration = this._totalDuration = t || 0,
                                this._delay = Number(e.delay) || 0,
                                this._timeScale = 1,
                                this._active = !0 === e.immediateRender,
                                this.data = e.data,
                                this._reversed = !0 === e.reversed,
                                J) {
                                d || p.wake();
                                var i = this.vars.useFrames ? Q : J;
                                i.add(this, i._time),
                                    this.vars.paused && this.paused(!0)
                            }
                        });
                        p = R.ticker = new m.Ticker,
                            u = R.prototype,
                            u._dirty = u._gc = u._initted = u._paused = !1,
                            u._totalTime = u._time = 0,
                            u._rawPrevTime = -1,
                            u._next = u._last = u._onUpdate = u._timeline = u.timeline = null,
                            u._paused = !1;
                        var I = function () {
                            d && C() - O > 2e3 && "hidden" !== s.visibilityState && p.wake();
                            var t = setTimeout(I, 2e3);
                            t.unref && t.unref()
                        };
                        I(),
                            u.play = function (t, e) {
                                return null != t && this.seek(t, e),
                                    this.reversed(!1).paused(!1)
                            }
                            ,
                            u.pause = function (t, e) {
                                return null != t && this.seek(t, e),
                                    this.paused(!0)
                            }
                            ,
                            u.resume = function (t, e) {
                                return null != t && this.seek(t, e),
                                    this.paused(!1)
                            }
                            ,
                            u.seek = function (t, e) {
                                return this.totalTime(Number(t), !1 !== e)
                            }
                            ,
                            u.restart = function (t, e) {
                                return this.reversed(!1).paused(!1).totalTime(t ? -this._delay : 0, !1 !== e, !0)
                            }
                            ,
                            u.reverse = function (t, e) {
                                return null != t && this.seek(t || this.totalDuration(), e),
                                    this.reversed(!0).paused(!1)
                            }
                            ,
                            u.render = function (t, e, i) { }
                            ,
                            u.invalidate = function () {
                                return this._time = this._totalTime = 0,
                                    this._initted = this._gc = !1,
                                    this._rawPrevTime = -1,
                                    !this._gc && this.timeline || this._enabled(!0),
                                    this
                            }
                            ,
                            u.isActive = function () {
                                var t, e = this._timeline, i = this._startTime;
                                return !e || !this._gc && !this._paused && e.isActive() && (t = e.rawTime(!0)) >= i && t < i + this.totalDuration() / this._timeScale - 1e-7
                            }
                            ,
                            u._enabled = function (t, e) {
                                return d || p.wake(),
                                    this._gc = !t,
                                    this._active = this.isActive(),
                                    !0 !== e && (t && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !t && this.timeline && this._timeline._remove(this, !0)),
                                    !1
                            }
                            ,
                            u._kill = function (t, e) {
                                return this._enabled(!1, !1)
                            }
                            ,
                            u.kill = function (t, e) {
                                return this._kill(t, e),
                                    this
                            }
                            ,
                            u._uncache = function (t) {
                                for (var e = t ? this : this.timeline; e;)
                                    e._dirty = !0,
                                        e = e.timeline;
                                return this
                            }
                            ,
                            u._swapSelfInParams = function (t) {
                                for (var e = t.length, i = t.concat(); --e > -1;)
                                    "{self}" === t[e] && (i[e] = this);
                                return i
                            }
                            ,
                            u._callback = function (t) {
                                var e = this.vars
                                    , i = e[t]
                                    , n = e[t + "Params"]
                                    , r = e[t + "Scope"] || e.callbackScope || this;
                                switch (n ? n.length : 0) {
                                    case 0:
                                        i.call(r);
                                        break;
                                    case 1:
                                        i.call(r, n[0]);
                                        break;
                                    case 2:
                                        i.call(r, n[0], n[1]);
                                        break;
                                    default:
                                        i.apply(r, n)
                                }
                            }
                            ,
                            u.eventCallback = function (t, e, i, n) {
                                if ("on" === (t || "").substr(0, 2)) {
                                    var r = this.vars;
                                    if (1 === arguments.length)
                                        return r[t];
                                    null == e ? delete r[t] : (r[t] = e,
                                        r[t + "Params"] = y(i) && -1 !== i.join("").indexOf("{self}") ? this._swapSelfInParams(i) : i,
                                        r[t + "Scope"] = n),
                                        "onUpdate" === t && (this._onUpdate = e)
                                }
                                return this
                            }
                            ,
                            u.delay = function (t) {
                                return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + t - this._delay),
                                    this._delay = t,
                                    this) : this._delay
                            }
                            ,
                            u.duration = function (t) {
                                return arguments.length ? (this._duration = this._totalDuration = t,
                                    this._uncache(!0),
                                    this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== t && this.totalTime(this._totalTime * (t / this._duration), !0),
                                    this) : (this._dirty = !1,
                                        this._duration)
                            }
                            ,
                            u.totalDuration = function (t) {
                                return this._dirty = !1,
                                    arguments.length ? this.duration(t) : this._totalDuration
                            }
                            ,
                            u.time = function (t, e) {
                                return arguments.length ? (this._dirty && this.totalDuration(),
                                    this.totalTime(t > this._duration ? this._duration : t, e)) : this._time
                            }
                            ,
                            u.totalTime = function (t, e, i) {
                                if (d || p.wake(),
                                    !arguments.length)
                                    return this._totalTime;
                                if (this._timeline) {
                                    if (t < 0 && !i && (t += this.totalDuration()),
                                        this._timeline.smoothChildTiming) {
                                        this._dirty && this.totalDuration();
                                        var n = this._totalDuration
                                            , r = this._timeline;
                                        if (t > n && !i && (t = n),
                                            this._startTime = (this._paused ? this._pauseTime : r._time) - (this._reversed ? n - t : t) / this._timeScale,
                                            r._dirty || this._uncache(!1),
                                            r._timeline)
                                            for (; r._timeline;)
                                                r._timeline._time !== (r._startTime + r._totalTime) / r._timeScale && r.totalTime(r._totalTime, !0),
                                                    r = r._timeline
                                    }
                                    this._gc && this._enabled(!0, !1),
                                        this._totalTime === t && 0 !== this._duration || (N.length && tt(),
                                            this.render(t, e, !1),
                                            N.length && tt())
                                }
                                return this
                            }
                            ,
                            u.progress = u.totalProgress = function (t, e) {
                                var i = this.duration();
                                return arguments.length ? this.totalTime(i * t, e) : i ? this._time / i : this.ratio
                            }
                            ,
                            u.startTime = function (t) {
                                return arguments.length ? (t !== this._startTime && (this._startTime = t,
                                    this.timeline && this.timeline._sortChildren && this.timeline.add(this, t - this._delay)),
                                    this) : this._startTime
                            }
                            ,
                            u.endTime = function (t) {
                                return this._startTime + (0 != t ? this.totalDuration() : this.duration()) / this._timeScale
                            }
                            ,
                            u.timeScale = function (t) {
                                if (!arguments.length)
                                    return this._timeScale;
                                if (t = t || 1e-10,
                                    this._timeline && this._timeline.smoothChildTiming) {
                                    var e = this._pauseTime
                                        , i = e || 0 === e ? e : this._timeline.totalTime();
                                    this._startTime = i - (i - this._startTime) * this._timeScale / t
                                }
                                return this._timeScale = t,
                                    this._uncache(!1)
                            }
                            ,
                            u.reversed = function (t) {
                                return arguments.length ? (t != this._reversed && (this._reversed = t,
                                    this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)),
                                    this) : this._reversed
                            }
                            ,
                            u.paused = function (t) {
                                if (!arguments.length)
                                    return this._paused;
                                var e, i, n = this._timeline;
                                return t != this._paused && n && (d || t || p.wake(),
                                    e = n.rawTime(),
                                    i = e - this._pauseTime,
                                    !t && n.smoothChildTiming && (this._startTime += i,
                                        this._uncache(!1)),
                                    this._pauseTime = t ? e : null,
                                    this._paused = t,
                                    this._active = this.isActive(),
                                    !t && 0 !== i && this._initted && this.duration() && (e = n.smoothChildTiming ? this._totalTime : (e - this._startTime) / this._timeScale,
                                        this.render(e, e === this._totalTime, !0))),
                                    this._gc && !t && this._enabled(!0, !1),
                                    this
                            }
                            ;
                        var k = b("core.SimpleTimeline", function (t) {
                            R.call(this, 0, t),
                                this.autoRemoveChildren = this.smoothChildTiming = !0
                        });
                        u = k.prototype = new R,
                            u.constructor = k,
                            u.kill()._gc = !1,
                            u._first = u._last = u._recent = null,
                            u._sortChildren = !1,
                            u.add = u.insert = function (t, e, i, n) {
                                var r, a;
                                if (t._startTime = Number(e || 0) + t._delay,
                                    t._paused && this !== t._timeline && (t._pauseTime = t._startTime + (this.rawTime() - t._startTime) / t._timeScale),
                                    t.timeline && t.timeline._remove(t, !0),
                                    t.timeline = t._timeline = this,
                                    t._gc && t._enabled(!0, !0),
                                    r = this._last,
                                    this._sortChildren)
                                    for (a = t._startTime; r && r._startTime > a;)
                                        r = r._prev;
                                return r ? (t._next = r._next,
                                    r._next = t) : (t._next = this._first,
                                        this._first = t),
                                    t._next ? t._next._prev = t : this._last = t,
                                    t._prev = r,
                                    this._recent = t,
                                    this._timeline && this._uncache(!0),
                                    this
                            }
                            ,
                            u._remove = function (t, e) {
                                return t.timeline === this && (e || t._enabled(!1, !0),
                                    t._prev ? t._prev._next = t._next : this._first === t && (this._first = t._next),
                                    t._next ? t._next._prev = t._prev : this._last === t && (this._last = t._prev),
                                    t._next = t._prev = t.timeline = null,
                                    t === this._recent && (this._recent = this._last),
                                    this._timeline && this._uncache(!0)),
                                    this
                            }
                            ,
                            u.render = function (t, e, i) {
                                var n, r = this._first;
                                for (this._totalTime = this._time = this._rawPrevTime = t; r;)
                                    n = r._next,
                                        (r._active || t >= r._startTime && !r._paused && !r._gc) && (r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, i) : r.render((t - r._startTime) * r._timeScale, e, i)),
                                        r = n
                            }
                            ,
                            u.rawTime = function () {
                                return d || p.wake(),
                                    this._totalTime
                            }
                            ;
                        var z = b("TweenLite", function (t, e, n) {
                            if (R.call(this, e, n),
                                this.render = z.prototype.render,
                                null == t)
                                throw "Cannot tween a null target.";
                            this.target = t = "string" != typeof t ? t : z.selector(t) || t;
                            var r, a, o, s = t.jquery || t.length && t !== i && t[0] && (t[0] === i || t[0].nodeType && t[0].style && !t.nodeType), h = this.vars.overwrite;
                            if (this._overwrite = h = null == h ? K[z.defaultOverwrite] : "number" == typeof h ? h >> 0 : K[h],
                                (s || t instanceof Array || t.push && y(t)) && "number" != typeof t[0])
                                for (this._targets = o = g(t),
                                    this._propLookup = [],
                                    this._siblings = [],
                                    r = 0; r < o.length; r++)
                                    a = o[r],
                                        a ? "string" != typeof a ? a.length && a !== i && a[0] && (a[0] === i || a[0].nodeType && a[0].style && !a.nodeType) ? (o.splice(r--, 1),
                                            this._targets = o = o.concat(g(a))) : (this._siblings[r] = et(a, this, !1),
                                                1 === h && this._siblings[r].length > 1 && nt(a, this, null, 1, this._siblings[r])) : "string" == typeof (a = o[r--] = z.selector(a)) && o.splice(r + 1, 1) : o.splice(r--, 1);
                            else
                                this._propLookup = {},
                                    this._siblings = et(t, this, !1),
                                    1 === h && this._siblings.length > 1 && nt(t, this, null, 1, this._siblings);
                            (this.vars.immediateRender || 0 === e && 0 === this._delay && !1 !== this.vars.immediateRender) && (this._time = -1e-10,
                                this.render(Math.min(0, -this._delay)))
                        }, !0)
                            , F = function (t) {
                                return t && t.length && t !== i && t[0] && (t[0] === i || t[0].nodeType && t[0].style && !t.nodeType)
                            }
                            , D = function (t, e) {
                                var i, n = {};
                                for (i in t)
                                    Z[i] || i in e && "transform" !== i && "x" !== i && "y" !== i && "width" !== i && "height" !== i && "className" !== i && "border" !== i || !(!X[i] || X[i] && X[i]._autoCSS) || (n[i] = t[i],
                                        delete t[i]);
                                t.css = n
                            };
                        u = z.prototype = new R,
                            u.constructor = z,
                            u.kill()._gc = !1,
                            u.ratio = 0,
                            u._firstPT = u._targets = u._overwrittenProps = u._startAt = null,
                            u._notifyPluginsOfEnabled = u._lazy = !1,
                            z.version = "1.20.2",
                            z.defaultEase = u._ease = new T(null, null, 1, 1),
                            z.defaultOverwrite = "auto",
                            z.ticker = p,
                            z.autoSleep = 120,
                            z.lagSmoothing = function (t, e) {
                                p.lagSmoothing(t, e)
                            }
                            ,
                            z.selector = i.$ || i.jQuery || function (t) {
                                var e = i.$ || i.jQuery;
                                return e ? (z.selector = e,
                                    e(t)) : void 0 === s ? t : s.querySelectorAll ? s.querySelectorAll(t) : s.getElementById("#" === t.charAt(0) ? t.substr(1) : t)
                            }
                            ;
                        var N = []
                            , B = {}
                            , U = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi
                            , j = /[\+-]=-?[\.\d]/
                            , G = function (t) {
                                for (var e, i = this._firstPT; i;)
                                    e = i.blob ? 1 === t && this.end ? this.end : t ? this.join("") : this.start : i.c * t + i.s,
                                        i.m ? e = i.m(e, this._target || i.t) : e < 1e-6 && e > -1e-6 && !i.blob && (e = 0),
                                        i.f ? i.fp ? i.t[i.p](i.fp, e) : i.t[i.p](e) : i.t[i.p] = e,
                                        i = i._next
                            }
                            , V = function (t, e, i, n) {
                                var r, a, o, s, h, l, c, u = [], p = 0, d = "", f = 0;
                                for (u.start = t,
                                    u.end = e,
                                    t = u[0] = t + "",
                                    e = u[1] = e + "",
                                    i && (i(u),
                                        t = u[0],
                                        e = u[1]),
                                    u.length = 0,
                                    r = t.match(U) || [],
                                    a = e.match(U) || [],
                                    n && (n._next = null,
                                        n.blob = 1,
                                        u._firstPT = u._applyPT = n),
                                    h = a.length,
                                    s = 0; s < h; s++)
                                    c = a[s],
                                        l = e.substr(p, e.indexOf(c, p) - p),
                                        d += l || !s ? l : ",",
                                        p += l.length,
                                        f ? f = (f + 1) % 5 : "rgba(" === l.substr(-5) && (f = 1),
                                        c === r[s] || r.length <= s ? d += c : (d && (u.push(d),
                                            d = ""),
                                            o = parseFloat(r[s]),
                                            u.push(o),
                                            u._firstPT = {
                                                _next: u._firstPT,
                                                t: u,
                                                p: u.length - 1,
                                                s: o,
                                                c: ("=" === c.charAt(1) ? parseInt(c.charAt(0) + "1", 10) * parseFloat(c.substr(2)) : parseFloat(c) - o) || 0,
                                                f: 0,
                                                m: f && f < 4 ? Math.round : 0
                                            }),
                                        p += c.length;
                                return d += e.substr(p),
                                    d && u.push(d),
                                    u.setRatio = G,
                                    j.test(e) && (u.end = 0),
                                    u
                            }
                            , H = function (t, e, i, n, r, a, o, s, h) {
                                "function" == typeof n && (n = n(h || 0, t));
                                var l, c = typeof t[e], u = "function" !== c ? "" : e.indexOf("set") || "function" != typeof t["get" + e.substr(3)] ? e : "get" + e.substr(3), p = "get" !== i ? i : u ? o ? t[u](o) : t[u]() : t[e], d = "string" == typeof n && "=" === n.charAt(1), f = {
                                    t: t,
                                    p: e,
                                    s: p,
                                    f: "function" === c,
                                    pg: 0,
                                    n: r || e,
                                    m: a ? "function" == typeof a ? a : Math.round : 0,
                                    pr: 0,
                                    c: d ? parseInt(n.charAt(0) + "1", 10) * parseFloat(n.substr(2)) : parseFloat(n) - p || 0
                                };
                                if (("number" != typeof p || "number" != typeof n && !d) && (o || isNaN(p) || !d && isNaN(n) || "boolean" == typeof p || "boolean" == typeof n ? (f.fp = o,
                                    l = V(p, d ? parseFloat(f.s) + f.c : n, s || z.defaultStringFilter, f),
                                    f = {
                                        t: l,
                                        p: "setRatio",
                                        s: 0,
                                        c: 1,
                                        f: 2,
                                        pg: 0,
                                        n: r || e,
                                        pr: 0,
                                        m: 0
                                    }) : (f.s = parseFloat(p),
                                        d || (f.c = parseFloat(n) - f.s || 0))),
                                    f.c)
                                    return (f._next = this._firstPT) && (f._next._prev = f),
                                        this._firstPT = f,
                                        f
                            }
                            , W = z._internals = {
                                isArray: y,
                                isSelector: F,
                                lazyTweens: N,
                                blobDif: V
                            }
                            , X = z._plugins = {}
                            , Y = W.tweenLookup = {}
                            , q = 0
                            , Z = W.reservedProps = {
                                ease: 1,
                                delay: 1,
                                overwrite: 1,
                                onComplete: 1,
                                onCompleteParams: 1,
                                onCompleteScope: 1,
                                useFrames: 1,
                                runBackwards: 1,
                                startAt: 1,
                                onUpdate: 1,
                                onUpdateParams: 1,
                                onUpdateScope: 1,
                                onStart: 1,
                                onStartParams: 1,
                                onStartScope: 1,
                                onReverseComplete: 1,
                                onReverseCompleteParams: 1,
                                onReverseCompleteScope: 1,
                                onRepeat: 1,
                                onRepeatParams: 1,
                                onRepeatScope: 1,
                                easeParams: 1,
                                yoyo: 1,
                                immediateRender: 1,
                                repeat: 1,
                                repeatDelay: 1,
                                data: 1,
                                paused: 1,
                                reversed: 1,
                                autoCSS: 1,
                                lazy: 1,
                                onOverwrite: 1,
                                callbackScope: 1,
                                stringFilter: 1,
                                id: 1,
                                yoyoEase: 1
                            }
                            , K = {
                                none: 0,
                                all: 1,
                                auto: 2,
                                concurrent: 3,
                                allOnStart: 4,
                                preexisting: 5,
                                true: 1,
                                false: 0
                            }
                            , Q = R._rootFramesTimeline = new k
                            , J = R._rootTimeline = new k
                            , $ = 30
                            , tt = W.lazyRender = function () {
                                var t, e = N.length;
                                for (B = {}; --e > -1;)
                                    (t = N[e]) && !1 !== t._lazy && (t.render(t._lazy[0], t._lazy[1], !0),
                                        t._lazy = !1);
                                N.length = 0
                            }
                            ;
                        J._startTime = p.time,
                            Q._startTime = p.frame,
                            J._active = Q._active = !0,
                            setTimeout(tt, 1),
                            R._updateRoot = z.render = function () {
                                var t, e, i;
                                if (N.length && tt(),
                                    J.render((p.time - J._startTime) * J._timeScale, !1, !1),
                                    Q.render((p.frame - Q._startTime) * Q._timeScale, !1, !1),
                                    N.length && tt(),
                                    p.frame >= $) {
                                    $ = p.frame + (parseInt(z.autoSleep, 10) || 120);
                                    for (i in Y) {
                                        for (e = Y[i].tweens,
                                            t = e.length; --t > -1;)
                                            e[t]._gc && e.splice(t, 1);
                                        0 === e.length && delete Y[i]
                                    }
                                    if ((!(i = J._first) || i._paused) && z.autoSleep && !Q._first && 1 === p._listeners.tick.length) {
                                        for (; i && i._paused;)
                                            i = i._next;
                                        i || p.sleep()
                                    }
                                }
                            }
                            ,
                            p.addEventListener("tick", R._updateRoot);
                        var et = function (t, e, i) {
                            var n, r, a = t._gsTweenID;
                            if (Y[a || (t._gsTweenID = a = "t" + q++)] || (Y[a] = {
                                target: t,
                                tweens: []
                            }),
                                e && (n = Y[a].tweens,
                                    n[r = n.length] = e,
                                    i))
                                for (; --r > -1;)
                                    n[r] === e && n.splice(r, 1);
                            return Y[a].tweens
                        }
                            , it = function (t, e, i, n) {
                                var r, a, o = t.vars.onOverwrite;
                                return o && (r = o(t, e, i, n)),
                                    o = z.onOverwrite,
                                    o && (a = o(t, e, i, n)),
                                    !1 !== r && !1 !== a
                            }
                            , nt = function (t, e, i, n, r) {
                                var a, o, s, h;
                                if (1 === n || n >= 4) {
                                    for (h = r.length,
                                        a = 0; a < h; a++)
                                        if ((s = r[a]) !== e)
                                            s._gc || s._kill(null, t, e) && (o = !0);
                                        else if (5 === n)
                                            break;
                                    return o
                                }
                                var l, c = e._startTime + 1e-10, u = [], p = 0, d = 0 === e._duration;
                                for (a = r.length; --a > -1;)
                                    (s = r[a]) === e || s._gc || s._paused || (s._timeline !== e._timeline ? (l = l || rt(e, 0, d),
                                        0 === rt(s, l, d) && (u[p++] = s)) : s._startTime <= c && s._startTime + s.totalDuration() / s._timeScale > c && ((d || !s._initted) && c - s._startTime <= 2e-10 || (u[p++] = s)));
                                for (a = p; --a > -1;)
                                    if (s = u[a],
                                        2 === n && s._kill(i, t, e) && (o = !0),
                                        2 !== n || !s._firstPT && s._initted) {
                                        if (2 !== n && !it(s, e))
                                            continue;
                                        s._enabled(!1, !1) && (o = !0)
                                    }
                                return o
                            }
                            , rt = function (t, e, i) {
                                for (var n = t._timeline, r = n._timeScale, a = t._startTime; n._timeline;) {
                                    if (a += n._startTime,
                                        r *= n._timeScale,
                                        n._paused)
                                        return -100;
                                    n = n._timeline
                                }
                                return a /= r,
                                    a > e ? a - e : i && a === e || !t._initted && a - e < 2e-10 ? 1e-10 : (a += t.totalDuration() / t._timeScale / r) > e + 1e-10 ? 0 : a - e - 1e-10
                            };
                        u._init = function () {
                            var t, e, i, n, r, a, o = this.vars, s = this._overwrittenProps, h = this._duration, l = !!o.immediateRender, c = o.ease;
                            if (o.startAt) {
                                this._startAt && (this._startAt.render(-1, !0),
                                    this._startAt.kill()),
                                    r = {};
                                for (n in o.startAt)
                                    r[n] = o.startAt[n];
                                if (r.overwrite = !1,
                                    r.immediateRender = !0,
                                    r.lazy = l && !1 !== o.lazy,
                                    r.startAt = r.delay = null,
                                    r.onUpdate = o.onUpdate,
                                    r.onUpdateScope = o.onUpdateScope || o.callbackScope || this,
                                    this._startAt = z.to(this.target, 0, r),
                                    l)
                                    if (this._time > 0)
                                        this._startAt = null;
                                    else if (0 !== h)
                                        return
                            } else if (o.runBackwards && 0 !== h)
                                if (this._startAt)
                                    this._startAt.render(-1, !0),
                                        this._startAt.kill(),
                                        this._startAt = null;
                                else {
                                    0 !== this._time && (l = !1),
                                        i = {};
                                    for (n in o)
                                        Z[n] && "autoCSS" !== n || (i[n] = o[n]);
                                    if (i.overwrite = 0,
                                        i.data = "isFromStart",
                                        i.lazy = l && !1 !== o.lazy,
                                        i.immediateRender = l,
                                        this._startAt = z.to(this.target, 0, i),
                                        l) {
                                        if (0 === this._time)
                                            return
                                    } else
                                        this._startAt._init(),
                                            this._startAt._enabled(!1),
                                            this.vars.immediateRender && (this._startAt = null)
                                }
                            if (this._ease = c = c ? c instanceof T ? c : "function" == typeof c ? new T(c, o.easeParams) : P[c] || z.defaultEase : z.defaultEase,
                                o.easeParams instanceof Array && c.config && (this._ease = c.config.apply(c, o.easeParams)),
                                this._easeType = this._ease._type,
                                this._easePower = this._ease._power,
                                this._firstPT = null,
                                this._targets)
                                for (a = this._targets.length,
                                    t = 0; t < a; t++)
                                    this._initProps(this._targets[t], this._propLookup[t] = {}, this._siblings[t], s ? s[t] : null, t) && (e = !0);
                            else
                                e = this._initProps(this.target, this._propLookup, this._siblings, s, 0);
                            if (e && z._onPluginEvent("_onInitAllProps", this),
                                s && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)),
                                o.runBackwards)
                                for (i = this._firstPT; i;)
                                    i.s += i.c,
                                        i.c = -i.c,
                                        i = i._next;
                            this._onUpdate = o.onUpdate,
                                this._initted = !0
                        }
                            ,
                            u._initProps = function (t, e, n, r, a) {
                                var o, s, h, l, c, u;
                                if (null == t)
                                    return !1;
                                B[t._gsTweenID] && tt(),
                                    this.vars.css || t.style && t !== i && t.nodeType && X.css && !1 !== this.vars.autoCSS && D(this.vars, t);
                                for (o in this.vars)
                                    if (u = this.vars[o],
                                        Z[o])
                                        u && (u instanceof Array || u.push && y(u)) && -1 !== u.join("").indexOf("{self}") && (this.vars[o] = u = this._swapSelfInParams(u, this));
                                    else if (X[o] && (l = new X[o])._onInitTween(t, this.vars[o], this, a)) {
                                        for (this._firstPT = c = {
                                            _next: this._firstPT,
                                            t: l,
                                            p: "setRatio",
                                            s: 0,
                                            c: 1,
                                            f: 1,
                                            n: o,
                                            pg: 1,
                                            pr: l._priority,
                                            m: 0
                                        },
                                            s = l._overwriteProps.length; --s > -1;)
                                            e[l._overwriteProps[s]] = this._firstPT;
                                        (l._priority || l._onInitAllProps) && (h = !0),
                                            (l._onDisable || l._onEnable) && (this._notifyPluginsOfEnabled = !0),
                                            c._next && (c._next._prev = c)
                                    } else
                                        e[o] = H.call(this, t, o, "get", u, o, 0, null, this.vars.stringFilter, a);
                                return r && this._kill(r, t) ? this._initProps(t, e, n, r, a) : this._overwrite > 1 && this._firstPT && n.length > 1 && nt(t, this, e, this._overwrite, n) ? (this._kill(e, t),
                                    this._initProps(t, e, n, r, a)) : (this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration) && (B[t._gsTweenID] = !0),
                                        h)
                            }
                            ,
                            u.render = function (t, e, i) {
                                var n, r, a, o, s = this._time, h = this._duration, l = this._rawPrevTime;
                                if (t >= h - 1e-7 && t >= 0)
                                    this._totalTime = this._time = h,
                                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1,
                                        this._reversed || (n = !0,
                                            r = "onComplete",
                                            i = i || this._timeline.autoRemoveChildren),
                                        0 === h && (this._initted || !this.vars.lazy || i) && (this._startTime === this._timeline._duration && (t = 0),
                                            (l < 0 || t <= 0 && t >= -1e-7 || 1e-10 === l && "isPause" !== this.data) && l !== t && (i = !0,
                                                l > 1e-10 && (r = "onReverseComplete")),
                                            this._rawPrevTime = o = !e || t || l === t ? t : 1e-10);
                                else if (t < 1e-7)
                                    this._totalTime = this._time = 0,
                                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                                        (0 !== s || 0 === h && l > 0) && (r = "onReverseComplete",
                                            n = this._reversed),
                                        t < 0 && (this._active = !1,
                                            0 === h && (this._initted || !this.vars.lazy || i) && (l >= 0 && (1e-10 !== l || "isPause" !== this.data) && (i = !0),
                                                this._rawPrevTime = o = !e || t || l === t ? t : 1e-10)),
                                        (!this._initted || this._startAt && this._startAt.progress()) && (i = !0);
                                else if (this._totalTime = this._time = t,
                                    this._easeType) {
                                    var c = t / h
                                        , u = this._easeType
                                        , p = this._easePower;
                                    (1 === u || 3 === u && c >= .5) && (c = 1 - c),
                                        3 === u && (c *= 2),
                                        1 === p ? c *= c : 2 === p ? c *= c * c : 3 === p ? c *= c * c * c : 4 === p && (c *= c * c * c * c),
                                        this.ratio = 1 === u ? 1 - c : 2 === u ? c : t / h < .5 ? c / 2 : 1 - c / 2
                                } else
                                    this.ratio = this._ease.getRatio(t / h);
                                if (this._time !== s || i) {
                                    if (!this._initted) {
                                        if (this._init(),
                                            !this._initted || this._gc)
                                            return;
                                        if (!i && this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration))
                                            return this._time = this._totalTime = s,
                                                this._rawPrevTime = l,
                                                N.push(this),
                                                void (this._lazy = [t, e]);
                                        this._time && !n ? this.ratio = this._ease.getRatio(this._time / h) : n && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                                    }
                                    for (!1 !== this._lazy && (this._lazy = !1),
                                        this._active || !this._paused && this._time !== s && t >= 0 && (this._active = !0),
                                        0 === s && (this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : r || (r = "_dummyGS")),
                                            this.vars.onStart && (0 === this._time && 0 !== h || e || this._callback("onStart"))),
                                        a = this._firstPT; a;)
                                        a.f ? a.t[a.p](a.c * this.ratio + a.s) : a.t[a.p] = a.c * this.ratio + a.s,
                                            a = a._next;
                                    this._onUpdate && (t < 0 && this._startAt && -1e-4 !== t && this._startAt.render(t, e, i),
                                        e || (this._time !== s || n || i) && this._callback("onUpdate")),
                                        r && (this._gc && !i || (t < 0 && this._startAt && !this._onUpdate && -1e-4 !== t && this._startAt.render(t, e, i),
                                            n && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                                                this._active = !1),
                                            !e && this.vars[r] && this._callback(r),
                                            0 === h && 1e-10 === this._rawPrevTime && 1e-10 !== o && (this._rawPrevTime = 0)))
                                }
                            }
                            ,
                            u._kill = function (t, e, i) {
                                if ("all" === t && (t = null),
                                    null == t && (null == e || e === this.target))
                                    return this._lazy = !1,
                                        this._enabled(!1, !1);
                                e = "string" != typeof e ? e || this._targets || this.target : z.selector(e) || e;
                                var n, r, a, o, s, h, l, c, u, p = i && this._time && i._startTime === this._startTime && this._timeline === i._timeline;
                                if ((y(e) || F(e)) && "number" != typeof e[0])
                                    for (n = e.length; --n > -1;)
                                        this._kill(t, e[n], i) && (h = !0);
                                else {
                                    if (this._targets) {
                                        for (n = this._targets.length; --n > -1;)
                                            if (e === this._targets[n]) {
                                                s = this._propLookup[n] || {},
                                                    this._overwrittenProps = this._overwrittenProps || [],
                                                    r = this._overwrittenProps[n] = t ? this._overwrittenProps[n] || {} : "all";
                                                break
                                            }
                                    } else {
                                        if (e !== this.target)
                                            return !1;
                                        s = this._propLookup,
                                            r = this._overwrittenProps = t ? this._overwrittenProps || {} : "all"
                                    }
                                    if (s) {
                                        if (l = t || s,
                                            c = t !== r && "all" !== r && t !== s && ("object" != typeof t || !t._tempKill),
                                            i && (z.onOverwrite || this.vars.onOverwrite)) {
                                            for (a in l)
                                                s[a] && (u || (u = []),
                                                    u.push(a));
                                            if ((u || !t) && !it(this, i, e, u))
                                                return !1
                                        }
                                        for (a in l)
                                            (o = s[a]) && (p && (o.f ? o.t[o.p](o.s) : o.t[o.p] = o.s,
                                                h = !0),
                                                o.pg && o.t._kill(l) && (h = !0),
                                                o.pg && 0 !== o.t._overwriteProps.length || (o._prev ? o._prev._next = o._next : o === this._firstPT && (this._firstPT = o._next),
                                                    o._next && (o._next._prev = o._prev),
                                                    o._next = o._prev = null),
                                                delete s[a]),
                                                c && (r[a] = 1);
                                        !this._firstPT && this._initted && this._enabled(!1, !1)
                                    }
                                }
                                return h
                            }
                            ,
                            u.invalidate = function () {
                                return this._notifyPluginsOfEnabled && z._onPluginEvent("_onDisable", this),
                                    this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null,
                                    this._notifyPluginsOfEnabled = this._active = this._lazy = !1,
                                    this._propLookup = this._targets ? {} : [],
                                    R.prototype.invalidate.call(this),
                                    this.vars.immediateRender && (this._time = -1e-10,
                                        this.render(Math.min(0, -this._delay))),
                                    this
                            }
                            ,
                            u._enabled = function (t, e) {
                                if (d || p.wake(),
                                    t && this._gc) {
                                    var i, n = this._targets;
                                    if (n)
                                        for (i = n.length; --i > -1;)
                                            this._siblings[i] = et(n[i], this, !0);
                                    else
                                        this._siblings = et(this.target, this, !0)
                                }
                                return R.prototype._enabled.call(this, t, e),
                                    !(!this._notifyPluginsOfEnabled || !this._firstPT) && z._onPluginEvent(t ? "_onEnable" : "_onDisable", this)
                            }
                            ,
                            z.to = function (t, e, i) {
                                return new z(t, e, i)
                            }
                            ,
                            z.from = function (t, e, i) {
                                return i.runBackwards = !0,
                                    i.immediateRender = 0 != i.immediateRender,
                                    new z(t, e, i)
                            }
                            ,
                            z.fromTo = function (t, e, i, n) {
                                return n.startAt = i,
                                    n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                                    new z(t, e, n)
                            }
                            ,
                            z.delayedCall = function (t, e, i, n, r) {
                                return new z(e, 0, {
                                    delay: t,
                                    onComplete: e,
                                    onCompleteParams: i,
                                    callbackScope: n,
                                    onReverseComplete: e,
                                    onReverseCompleteParams: i,
                                    immediateRender: !1,
                                    lazy: !1,
                                    useFrames: r,
                                    overwrite: 0
                                })
                            }
                            ,
                            z.set = function (t, e) {
                                return new z(t, 0, e)
                            }
                            ,
                            z.getTweensOf = function (t, e) {
                                if (null == t)
                                    return [];
                                t = "string" != typeof t ? t : z.selector(t) || t;
                                var i, n, r, a;
                                if ((y(t) || F(t)) && "number" != typeof t[0]) {
                                    for (i = t.length,
                                        n = []; --i > -1;)
                                        n = n.concat(z.getTweensOf(t[i], e));
                                    for (i = n.length; --i > -1;)
                                        for (a = n[i],
                                            r = i; --r > -1;)
                                            a === n[r] && n.splice(i, 1)
                                } else if (t._gsTweenID)
                                    for (n = et(t).concat(),
                                        i = n.length; --i > -1;)
                                        (n[i]._gc || e && !n[i].isActive()) && n.splice(i, 1);
                                return n || []
                            }
                            ,
                            z.killTweensOf = z.killDelayedCallsTo = function (t, e, i) {
                                "object" == typeof e && (i = e,
                                    e = !1);
                                for (var n = z.getTweensOf(t, e), r = n.length; --r > -1;)
                                    n[r]._kill(i, t)
                            }
                            ;
                        var at = b("plugins.TweenPlugin", function (t, e) {
                            this._overwriteProps = (t || "").split(","),
                                this._propName = this._overwriteProps[0],
                                this._priority = e || 0,
                                this._super = at.prototype
                        }, !0);
                        if (u = at.prototype,
                            at.version = "1.19.0",
                            at.API = 2,
                            u._firstPT = null,
                            u._addTween = H,
                            u.setRatio = G,
                            u._kill = function (t) {
                                var e, i = this._overwriteProps, n = this._firstPT;
                                if (null != t[this._propName])
                                    this._overwriteProps = [];
                                else
                                    for (e = i.length; --e > -1;)
                                        null != t[i[e]] && i.splice(e, 1);
                                for (; n;)
                                    null != t[n.n] && (n._next && (n._next._prev = n._prev),
                                        n._prev ? (n._prev._next = n._next,
                                            n._prev = null) : this._firstPT === n && (this._firstPT = n._next)),
                                        n = n._next;
                                return !1
                            }
                            ,
                            u._mod = u._roundProps = function (t) {
                                for (var e, i = this._firstPT; i;)
                                    e = t[this._propName] || null != i.n && t[i.n.split(this._propName + "_").join("")],
                                        e && "function" == typeof e && (2 === i.f ? i.t._applyPT.m = e : i.m = e),
                                        i = i._next
                            }
                            ,
                            z._onPluginEvent = function (t, e) {
                                var i, n, r, a, o, s = e._firstPT;
                                if ("_onInitAllProps" === t) {
                                    for (; s;) {
                                        for (o = s._next,
                                            n = r; n && n.pr > s.pr;)
                                            n = n._next;
                                        (s._prev = n ? n._prev : a) ? s._prev._next = s : r = s,
                                            (s._next = n) ? n._prev = s : a = s,
                                            s = o
                                    }
                                    s = e._firstPT = r
                                }
                                for (; s;)
                                    s.pg && "function" == typeof s.t[t] && s.t[t]() && (i = !0),
                                        s = s._next;
                                return i
                            }
                            ,
                            at.activate = function (t) {
                                for (var e = t.length; --e > -1;)
                                    t[e].API === at.API && (X[(new t[e])._propName] = t[e]);
                                return !0
                            }
                            ,
                            w.plugin = function (t) {
                                if (!(t && t.propName && t.init && t.API))
                                    throw "illegal plugin definition.";
                                var e, i = t.propName, n = t.priority || 0, r = t.overwriteProps, a = {
                                    init: "_onInitTween",
                                    set: "setRatio",
                                    kill: "_kill",
                                    round: "_mod",
                                    mod: "_mod",
                                    initAll: "_onInitAllProps"
                                }, o = b("plugins." + i.charAt(0).toUpperCase() + i.substr(1) + "Plugin", function () {
                                    at.call(this, i, n),
                                        this._overwriteProps = r || []
                                }, !0 === t.global), s = o.prototype = new at(i);
                                s.constructor = o,
                                    o.API = t.API;
                                for (e in a)
                                    "function" == typeof t[e] && (s[a[e]] = t[e]);
                                return o.version = t.version,
                                    at.activate([o]),
                                    o
                            }
                            ,
                            l = i._gsQueue) {
                            for (c = 0; c < l.length; c++)
                                l[c]();
                            for (u in _)
                                _[u].func || i.console.log("GSAP encountered missing dependency: " + u)
                        }
                        d = !1
                    }
                }(void 0 !== t && t.exports && void 0 !== i ? i : this || window)
        }
        ).call(e, i(10))
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function a(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , s = i(0)
            , h = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(s)
            , l = i(2)
            , c = function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }(l)
            , u = i(5)
            , p = function (t) {
                function e() {
                    n(this, e);
                    var t = r(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this));
                    return t.isBlowing = !1,
                        t.speed = 0,
                        t.acc = 0,
                        t.targetSpeed = 0,
                        t
                }
                return a(e, t),
                    o(e, [{
                        key: "createGeometry",
                        value: function () {
                            this.redMat = new h.MeshPhongMaterial({
                                color: 11351333,
                                shading: h.FlatShading
                            }),
                                this.greyMat = new h.MeshPhongMaterial({
                                    color: 6635340,
                                    shading: h.FlatShading
                                }),
                                this.yellowMat = new h.MeshPhongMaterial({
                                    color: 16634486,
                                    shading: h.FlatShading
                                });
                            var t = new h.BoxGeometry(10, 10, 20)
                                , e = new h.BoxGeometry(10, 10, 3)
                                , i = new h.BoxGeometry(10, 30, 2);
                            i.applyMatrix((new h.Matrix4).makeTranslation(0, 25, 0)),
                                this.core = new h.Mesh(t, this.greyMat);
                            var n = new h.Mesh(i, this.redMat);
                            n.position.z = 15;
                            var r = n.clone();
                            r.rotation.z = Math.PI / 2;
                            var a = n.clone();
                            a.rotation.z = Math.PI;
                            var o = n.clone();
                            o.rotation.z = -Math.PI / 2,
                                this.sphere = new h.Mesh(e, this.yellowMat),
                                this.sphere.position.z = 15,
                                this.propeller = new h.Group,
                                this.propeller.add(n),
                                this.propeller.add(r),
                                this.propeller.add(a),
                                this.propeller.add(o),
                                this.group = new h.Group,
                                this.group.name = "fan",
                                this.group.add(this.core),
                                this.group.add(this.propeller),
                                this.group.add(this.sphere)
                        }
                    }, {
                        key: "update",
                        value: function (t, e) {
                            this.group.lookAt(new h.Vector3(0, 80, 60)),
                                this.tPosX = (0,
                                    u.rule3)(t, -200, 200, -250, 250),
                                this.tPosY = (0,
                                    u.rule3)(e, -200, 200, 350, -150),
                                this.group.position.x += (this.tPosX - this.group.position.x) / 10,
                                this.group.position.y += (this.tPosY - this.group.position.y) / 10,
                                this.isBlowing && this.speed < .4 ? (this.acc += .001,
                                    this.speed += this.acc) : this.isBlowing || (this.acc = 0,
                                        this.speed *= .98),
                                this.propeller.rotation.z += this.speed
                        }
                    }]),
                    e
            }(c.default);
        e.default = p
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function a(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , s = i(0)
            , h = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(s)
            , l = i(2)
            , c = function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }(l)
            , u = function (t) {
                function e() {
                    n(this, e);
                    var t = r(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this));
                    return t.maxSpeed = 48,
                        t
                }
                return a(e, t),
                    o(e, [{
                        key: "createGeometry",
                        value: function () {
                            var t = new h.MeshPhongMaterial({
                                color: 1050375,
                                shading: h.FlatShading
                            })
                                , e = (new h.MeshPhongMaterial({
                                    color: 11815737,
                                    shininess: 0,
                                    shading: h.FlatShading
                                }),
                                    new h.MeshPhongMaterial({
                                        color: 8044430,
                                        shininess: 0,
                                        shading: h.FlatShading
                                    }),
                                    new h.MeshPhongMaterial({
                                        color: 14442309,
                                        shininess: 0,
                                        shading: h.FlatShading
                                    }))
                                , i = (new h.MeshPhongMaterial({
                                    color: 14711383,
                                    shading: h.FlatShading
                                }),
                                    new h.MeshPhongMaterial({
                                        color: 10786697,
                                        shading: h.FlatShading
                                    }));
                            new h.MeshPhongMaterial({
                                color: 16752293,
                                shading: h.FlatShading
                            });
                            this.runningCycle = 0,
                                this.group = new h.Group,
                                this.group.name = "wolf",
                                this.body = new h.Group;
                            var n = new h.CubeGeometry(15, 15, 20, 1);
                            this.torso = new h.Mesh(n, t);
                            var r = new h.CubeGeometry(20, 20, 40, 1);
                            r.applyMatrix((new h.Matrix4).makeTranslation(0, 0, 20)),
                                this.head = new h.Mesh(r, t),
                                this.head.position.z = 12,
                                this.head.position.y = 2;
                            var a = new h.CubeGeometry(10, 4, 20, 1);
                            a.applyMatrix((new h.Matrix4).makeTranslation(0, -2, 10)),
                                this.mouth = new h.Mesh(a, t),
                                this.mouth.position.y = -8,
                                this.mouth.rotation.x = .4,
                                this.mouth.position.z = 4,
                                this.heroHolder = new h.Group,
                                this.heroHolder.position.z = 20,
                                this.mouth.add(this.heroHolder);
                            var o = new h.CubeGeometry(2, 2, 1, 1);
                            o.vertices[1].x -= 1,
                                o.vertices[4].x += 1,
                                o.vertices[5].x += 1,
                                o.vertices[0].x -= 1;
                            for (var s = 0; s < 3; s++) {
                                var l = new h.Mesh(o, i);
                                l.position.x = 2.5 * s - 2.8,
                                    l.position.y = 1,
                                    l.position.z = 19;
                                var c = new h.Mesh(o, i);
                                c.rotation.y = Math.PI / 2,
                                    c.position.z = 12 + 2.5 * s,
                                    c.position.y = 1,
                                    c.position.x = 4;
                                var u = c.clone();
                                c.position.x = -4,
                                    this.mouth.add(l),
                                    this.mouth.add(c),
                                    this.mouth.add(u)
                            }
                            var p = new h.CubeGeometry(6, 1, 14);
                            p.applyMatrix((new h.Matrix4).makeTranslation(0, 0, 7)),
                                this.tongue = new h.Mesh(p, e),
                                this.tongue.position.z = 2,
                                this.tongue.rotation.x = -.2,
                                this.mouth.add(this.tongue);
                            var d = new h.CubeGeometry(4, 4, 4, 1);
                            this.nose = new h.Mesh(d, e),
                                this.nose.position.z = 39.5,
                                this.nose.position.y = 9,
                                this.head.add(this.nose),
                                this.head.add(this.mouth);
                            var f = new h.CubeGeometry(2, 3, 3);
                            this.eyeL = new h.Mesh(f, i),
                                this.eyeL.position.x = 10,
                                this.eyeL.position.z = 5,
                                this.eyeL.position.y = 5,
                                this.eyeL.castShadow = !0,
                                this.head.add(this.eyeL);
                            var m = new h.CubeGeometry(.6, 1, 1);
                            this.iris = new h.Mesh(m, t),
                                this.iris.position.x = 1.2,
                                this.iris.position.y = -1,
                                this.iris.position.z = 1,
                                this.eyeL.add(this.iris),
                                this.eyeR = this.eyeL.clone(),
                                this.eyeR.children[0].position.x = -this.iris.position.x,
                                this.eyeR.position.x = -this.eyeL.position.x,
                                this.head.add(this.eyeR);
                            var g = new h.CubeGeometry(8, 6, 2, 1);
                            g.vertices[1].x -= 4,
                                g.vertices[4].x += 4,
                                g.vertices[5].x += 4,
                                g.vertices[5].z -= 2,
                                g.vertices[0].x -= 4,
                                g.vertices[0].z -= 2,
                                g.applyMatrix((new h.Matrix4).makeTranslation(0, 3, 0)),
                                this.earL = new h.Mesh(g, t),
                                this.earL.position.x = 6,
                                this.earL.position.z = 1,
                                this.earL.position.y = 10,
                                this.earL.castShadow = !0,
                                this.head.add(this.earL),
                                this.earR = this.earL.clone(),
                                this.earR.position.x = -this.earL.position.x,
                                this.earR.rotation.z = -this.earL.rotation.z,
                                this.head.add(this.earR);
                            var f = new h.CubeGeometry(2, 4, 4)
                                , v = new h.CylinderGeometry(5, 2, 20, 4, 1);
                            v.applyMatrix((new h.Matrix4).makeTranslation(0, 10, 0)),
                                v.applyMatrix((new h.Matrix4).makeRotationX(-Math.PI / 2)),
                                v.applyMatrix((new h.Matrix4).makeRotationZ(Math.PI / 4)),
                                this.tail = new h.Mesh(v, t),
                                this.tail.position.z = -10,
                                this.tail.position.y = 4,
                                this.torso.add(this.tail);
                            var y = new h.CylinderGeometry(1.5, 0, 10);
                            y.applyMatrix((new h.Matrix4).makeTranslation(0, -5, 0)),
                                this.pawFL = new h.Mesh(y, t),
                                this.pawFL.position.y = -7.5,
                                this.pawFL.position.z = 8.5,
                                this.pawFL.position.x = 5.5,
                                this.torso.add(this.pawFL),
                                this.pawFR = this.pawFL.clone(),
                                this.pawFR.position.x = -this.pawFL.position.x,
                                this.torso.add(this.pawFR),
                                this.pawBR = this.pawFR.clone(),
                                this.pawBR.position.z = -this.pawFL.position.z,
                                this.torso.add(this.pawBR),
                                this.pawBL = this.pawBR.clone(),
                                this.pawBL.position.x = this.pawFL.position.x,
                                this.torso.add(this.pawBL),
                                this.group.add(this.body),
                                this.torso.add(this.head),
                                this.body.add(this.torso),
                                this.torso.castShadow = !0,
                                this.head.castShadow = !0,
                                this.pawFL.castShadow = !0,
                                this.pawFR.castShadow = !0,
                                this.pawBL.castShadow = !0,
                                this.pawBR.castShadow = !0
                        }
                    }, {
                        key: "run",
                        value: function (t, e) {
                            var i = Math.min(t, this.maxSpeed);
                            this.runningCycle += e * i * .7,
                                this.runningCycle = this.runningCycle % (2 * Math.PI);
                            var n = this.runningCycle;
                            this.pawFR.rotation.x = Math.sin(n) * Math.PI / 4,
                                this.pawFR.position.y = -5.5 - Math.sin(n),
                                this.pawFR.position.z = 7.5 + Math.cos(n),
                                this.pawFL.rotation.x = Math.sin(n + .4) * Math.PI / 4,
                                this.pawFL.position.y = -5.5 - Math.sin(n + .4),
                                this.pawFL.position.z = 7.5 + Math.cos(n + .4),
                                this.pawBL.rotation.x = Math.sin(n + 2) * Math.PI / 4,
                                this.pawBL.position.y = -5.5 - Math.sin(n + 3.8),
                                this.pawBL.position.z = -7.5 + Math.cos(n + 3.8),
                                this.pawBR.rotation.x = Math.sin(n + 2.4) * Math.PI / 4,
                                this.pawBR.position.y = -5.5 - Math.sin(n + 3.4),
                                this.pawBR.position.z = -7.5 + Math.cos(n + 3.4),
                                this.torso.rotation.x = Math.sin(n) * Math.PI / 8,
                                this.torso.position.y = 3 - 3 * Math.sin(n + Math.PI / 2),
                                this.head.rotation.x = .4 * Math.sin(-n - 1) - .1,
                                this.mouth.rotation.x = .2 + .4 * Math.sin(n + Math.PI + .3),
                                this.tail.rotation.x = .2 + Math.sin(n - Math.PI / 2),
                                this.eyeR.scale.y = .5 + .5 * Math.sin(n + Math.PI)
                        }
                    }, {
                        key: "nod",
                        value: function () {
                            var t = this
                                , e = 1 + 2 * Math.random()
                                , i = -Math.PI / 3 + .5 * Math.random()
                                , n = Math.PI / 3 - .2 + .4 * Math.random();
                            TweenMax.to(this.head.rotation, e, {
                                x: n,
                                y: i,
                                ease: Power4.easeInOut,
                                onComplete: function () {
                                    t.nod()
                                }
                            });
                            var r = -Math.PI / 4;
                            TweenMax.to(this.tail.rotation, e / 8, {
                                y: r,
                                ease: Power1.easeInOut,
                                yoyo: !0,
                                repeat: 8
                            }),
                                TweenMax.to([this.eyeR.scale, this.eyeL.scale], e / 20, {
                                    y: 0,
                                    ease: Power1.easeInOut,
                                    yoyo: !0,
                                    repeat: 1
                                })
                        }
                    }, {
                        key: "sit",
                        value: function (t) {
                            var e = this
                                , i = 1.2
                                , n = Power4.easeOut;
                            TweenMax.to(this.torso.rotation, i, {
                                x: -1.3,
                                ease: n
                            }),
                                TweenMax.to(this.torso.position, i, {
                                    y: -5,
                                    ease: n,
                                    onComplete: function () {
                                        e.nod(),
                                            "function" == typeof t && t()
                                    }
                                }),
                                TweenMax.to(this.head.rotation, i, {
                                    x: Math.PI / 3,
                                    y: -Math.PI / 3,
                                    ease: n
                                }),
                                TweenMax.to(this.tail.rotation, i, {
                                    x: 2,
                                    y: Math.PI / 4,
                                    ease: n
                                }),
                                TweenMax.to(this.pawBL.rotation, i, {
                                    x: -.1,
                                    ease: n
                                }),
                                TweenMax.to(this.pawBR.rotation, i, {
                                    x: -.1,
                                    ease: n
                                }),
                                TweenMax.to(this.pawFL.rotation, i, {
                                    x: 1,
                                    ease: n
                                }),
                                TweenMax.to(this.pawFR.rotation, i, {
                                    x: 1,
                                    ease: n
                                }),
                                TweenMax.to(this.mouth.rotation, i, {
                                    x: .3,
                                    ease: n
                                }),
                                TweenMax.to(this.eyeL.scale, i, {
                                    y: 1,
                                    ease: n
                                }),
                                TweenMax.to(this.eyeR.scale, i, {
                                    y: 1,
                                    ease: n
                                })
                        }
                    }]),
                    e
            }(c.default);
        e.default = u
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , h = i(0)
            , l = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(h)
            , c = i(2)
            , u = n(c)
            , p = i(29)
            , d = n(p)
            , f = function (t) {
                function e() {
                    r(this, e);
                    var t = a(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this));
                    return t.woolNodes = 10,
                        t.gravity = -.8,
                        t.accuracy = 1,
                        t.woolSegLength = 2,
                        t
                }
                return o(e, t),
                    s(e, [{
                        key: "createGeometry",
                        value: function () {
                            var t = new l.MeshPhongMaterial({
                                color: 6491413,
                                shading: l.FlatShading
                            })
                                , e = new l.LineBasicMaterial({
                                    color: 6491413,
                                    linewidth: 3
                                });
                            this.group = new l.Group,
                                this.ballRay = 8,
                                this.verts = [];
                            for (var i = new l.Geometry, n = 0; n < this.woolNodes; n++) {
                                var r = new l.Vector3(0, -n * this.woolSegLength, 0);
                                i.vertices.push(r);
                                var a = new d.default;
                                a.x = a.oldx = r.x,
                                    a.y = a.oldy = r.y,
                                    a.z = 0,
                                    a.fx = a.fy = 0,
                                    a.isRootNode = 0 == n,
                                    a.vertex = r,
                                    n > 0 && a.attach(this.verts[n - 1], this.woolSegLength),
                                    this.verts.push(a)
                            }
                            this.string = new l.Line(i, e);
                            var o = new l.SphereGeometry(this.ballRay, 5, 4);
                            this.body = new l.Mesh(o, t),
                                this.body.position.y = -this.woolSegLength * this.woolNodes;
                            var s = new l.TorusGeometry(this.ballRay, .5, 3, 10, 2 * Math.PI);
                            this.wire1 = new l.Mesh(s, t),
                                this.wire1.position.x = 1,
                                this.wire1.rotation.x = -Math.PI / 4,
                                this.wire2 = this.wire1.clone(),
                                this.wire2.position.y = 1,
                                this.wire2.position.x = -1,
                                this.wire1.rotation.x = -Math.PI / 4 + .5,
                                this.wire1.rotation.y = -Math.PI / 6,
                                this.wire3 = this.wire1.clone(),
                                this.wire3.rotation.x = -Math.PI / 2 + .3,
                                this.wire4 = this.wire1.clone(),
                                this.wire4.position.x = -1,
                                this.wire4.rotation.x = -Math.PI / 2 + .7,
                                this.wire5 = this.wire1.clone(),
                                this.wire5.position.x = 2,
                                this.wire5.rotation.x = -Math.PI / 2 + 1,
                                this.wire6 = this.wire1.clone(),
                                this.wire6.position.x = 2,
                                this.wire6.position.z = 1,
                                this.wire6.rotation.x = 1,
                                this.wire7 = this.wire1.clone(),
                                this.wire7.position.x = 1.5,
                                this.wire7.rotation.x = 1.1,
                                this.wire8 = this.wire1.clone(),
                                this.wire8.position.x = 1,
                                this.wire8.rotation.x = 1.3,
                                this.wire9 = this.wire1.clone(),
                                this.wire9.scale.set(1.2, 1.1, 1.1),
                                this.wire9.rotation.z = Math.PI / 2,
                                this.wire9.rotation.y = Math.PI / 2,
                                this.wire9.position.y = 1,
                                this.body.add(this.wire1),
                                this.body.add(this.wire2),
                                this.body.add(this.wire3),
                                this.body.add(this.wire4),
                                this.body.add(this.wire5),
                                this.body.add(this.wire6),
                                this.body.add(this.wire7),
                                this.body.add(this.wire8),
                                this.body.add(this.wire9),
                                this.group.add(this.string),
                                this.group.add(this.body)
                        }
                    }, {
                        key: "update",
                        value: function (t, e, i) {
                            for (var n = this.accuracy; n--;) {
                                for (var r = this.woolNodes; r--;) {
                                    var a = this.verts[r];
                                    if (a.isRootNode)
                                        a.x = t,
                                            a.y = e,
                                            a.z = i;
                                    else {
                                        for (var o = a.constraints.length; o--;) {
                                            var s = a.constraints[o]
                                                , h = s.p1.x - s.p2.x
                                                , l = s.p1.y - s.p2.y
                                                , c = Math.sqrt(h * h + l * l)
                                                , u = (s.length - c) / c
                                                , p = h * u * .5
                                                , d = l * u * .5;
                                            s.p1.x += p,
                                                s.p1.y += d,
                                                s.p2.x -= p,
                                                s.p2.y -= d,
                                                s.p1.z = s.p2.z = i
                                        }
                                        r == this.woolNodes - 1 && (this.body.position.x = this.verts[r].x,
                                            this.body.position.y = this.verts[r].y,
                                            this.body.position.z = this.verts[r].z,
                                            this.body.rotation.z += a.y <= this.ballRay ? (a.oldx - a.x) / 10 : Math.min(Math.max(h / 2, -.1), .1))
                                    }
                                    a.y < this.ballRay && (a.y = this.ballRay)
                                }
                                for (r = this.woolNodes; r--;)
                                    this.verts[r].update(this.gravity);
                                this.string.geometry.verticesNeedUpdate = !0
                            }
                        }
                    }, {
                        key: "receivePower",
                        value: function (t) {
                            this.verts[this.woolNodes - 1].add_force(t.x, t.y)
                        }
                    }]),
                    e
            }(u.default);
        e.default = f
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function t(e, i, r) {
            n(this, t),
                this.p1 = e,
                this.p2 = i,
                this.length = r
        };
        e.default = r
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , a = i(28)
            , o = function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }(a)
            , s = function () {
                function t() {
                    n(this, t),
                        this.x = 0,
                        this.y = 0,
                        this.z = 0,
                        this.oldx = 0,
                        this.oldy = 0,
                        this.fx = 0,
                        this.fy = 0,
                        this.isRootNode = !1,
                        this.constraints = [],
                        this.vertex = null
                }
                return r(t, [{
                    key: "update",
                    value: function (t) {
                        this.add_force(0, t);
                        var e = this.x + .9 * (this.x - this.oldx) + this.fx
                            , i = this.y + .9 * (this.y - this.oldy) + this.fy;
                        this.oldx = this.x,
                            this.oldy = this.y,
                            this.x = e,
                            this.y = i,
                            this.vertex.x = this.x,
                            this.vertex.y = this.y,
                            this.vertex.z = this.z,
                            this.fy = this.fx = 0
                    }
                }, {
                    key: "attach",
                    value: function (t, e) {
                        this.constraints.push(new o.default(this, t, e))
                    }
                }, {
                    key: "add_force",
                    value: function (t, e) {
                        this.fx += t,
                            this.fy += e
                    }
                }]),
                    t
            }();
        e.default = s
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , a = i(0)
            , o = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(a)
            , s = function () {
                function t(e) {
                    n(this, t),
                        this.pool = e,
                        this.color = {
                            r: 0,
                            g: 0,
                            b: 0
                        };
                    var i = new o.MeshPhongMaterial({
                        transparent: !0,
                        opacity: .5,
                        shading: o.FlatShading
                    });
                    this.mesh = this.makeCube(i, 4, 4, 4, 0, 0, 0, 0, 0, 0),
                        this.pool.push(this)
                }
                return r(t, [{
                    key: "makeCube",
                    value: function (t, e, i, n, r, a, s, h, l, c) {
                        var u = new o.BoxGeometry(e, i, n)
                            , p = new o.Mesh(u, t);
                        return p.position.x = r,
                            p.position.y = a,
                            p.position.z = s,
                            p.rotation.x = h,
                            p.rotation.y = l,
                            p.rotation.z = c,
                            p
                    }
                }, {
                    key: "initialize",
                    value: function () {
                        this.mesh.rotation.x = 0,
                            this.mesh.rotation.y = 0,
                            this.mesh.rotation.z = 0,
                            this.mesh.position.x = 0,
                            this.mesh.position.y = 0,
                            this.mesh.position.z = 0,
                            this.mesh.scale.x = 1,
                            this.mesh.scale.y = 1,
                            this.mesh.scale.z = 1,
                            this.mesh.material.opacity = .5,
                            this.pool.push(this)
                    }
                }, {
                    key: "updateColor",
                    value: function () {
                        this.mesh.material.color.setRGB(this.color.r, this.color.g, this.color.b)
                    }
                }, {
                    key: "fly",
                    value: function () {
                        var t = Strong.easeOut
                            , e = this.mesh.position.x
                            , i = this.mesh.position.y
                            , n = this.mesh.position.z
                            , r = {
                                type: "cubic",
                                values: [{
                                    x: e,
                                    y: i,
                                    z: n
                                }, {
                                    x: e + 30 - 10 * Math.random(),
                                    y: i + 20 + 2 * Math.random(),
                                    z: n + 20
                                }, {
                                    x: e + 10 + 20 * Math.random(),
                                    y: i + 40 + 5 * Math.random(),
                                    z: n - 30
                                }, {
                                    x: e + 50 - 20 * Math.random(),
                                    y: i + 70 + 10 * Math.random(),
                                    z: n + 20
                                }]
                            };
                        TweenMax.to(this.mesh.position, 10, {
                            bezier: r,
                            ease: t
                        }),
                            TweenMax.to(this.mesh.rotation, 10, {
                                x: Math.random() * Math.PI * 3,
                                y: Math.random() * Math.PI * 3,
                                ease: t
                            }),
                            TweenMax.to(this.mesh.scale, 10, {
                                x: 5 + 5 * Math.random(),
                                y: 5 + 5 * Math.random(),
                                z: 5 + 5 * Math.random(),
                                ease: t
                            }),
                            TweenMax.to(this.mesh.material, 10, {
                                opacity: 0,
                                ease: t,
                                onComplete: this.initialize.bind(this)
                            })
                    }
                }, {
                    key: "fire",
                    value: function (t, e) {
                        var i = Strong.easeOut
                            , n = (this.mesh.position.x,
                                this.mesh.position.y)
                            , r = this.mesh.position.z;
                        TweenMax.to(this.mesh.position, 1, {
                            x: 0,
                            y: n - 2 * t,
                            z: Math.max(r + 15 * t, r + 40),
                            ease: i
                        }),
                            TweenMax.to(this.mesh.rotation, 1, {
                                x: Math.random() * Math.PI * 3,
                                y: Math.random() * Math.PI * 3,
                                ease: i
                            });
                        var a = [{
                            x: 1,
                            y: 1,
                            z: 1
                        }, {
                            x: t / e + .3 * Math.random(),
                            y: t / e + .3 * Math.random(),
                            z: 2 * t / e + .3 * Math.random()
                        }, {
                            x: t / e + .5 * Math.random(),
                            y: t / e + .5 * Math.random(),
                            z: 2 * t / e + .5 * Math.random()
                        }, {
                            x: 2 * t / e + .5 * Math.random(),
                            y: 2 * t / e + .5 * Math.random(),
                            z: 4 * t / e + .5 * Math.random()
                        }, {
                            x: 2 * t + 5 * Math.random(),
                            y: 2 * t + 5 * Math.random(),
                            z: 2 * t + 5 * Math.random()
                        }];
                        TweenMax.to(this.mesh.scale, 2, {
                            bezier: a,
                            ease: i,
                            onComplete: this.initialize.bind(this)
                        }),
                            TweenMax.to(this.mesh.material, 1, {
                                opacity: 0,
                                ease: i
                            });
                        var o = [{
                            r: 1,
                            g: 205 / 255,
                            b: 74 / 255
                        }, {
                            r: 1,
                            g: 205 / 255,
                            b: 74 / 255
                        }, {
                            r: 1,
                            g: 205 / 255,
                            b: 74 / 255
                        }, {
                            r: 247 / 255,
                            g: 34 / 255,
                            b: 50 / 255
                        }, {
                            r: 0,
                            g: 0,
                            b: 0
                        }];
                        TweenMax.to(this.color, 1, {
                            bezier: o,
                            ease: Strong.easeOut,
                            onUpdate: this.updateColor.bind(this)
                        })
                    }
                }]),
                    t
            }();
        e.default = s
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , a = i(0)
            , o = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(a)
            , s = function () {
                function t(e) {
                    n(this, t),
                        this.col = e,
                        this.create()
                }
                return r(t, [{
                    key: "create",
                    value: function () {
                        var t, e, i, n, r, a, s, h = Math.random();
                        h < .33 ? (i = 10 + 30 * Math.random(),
                            n = 10 + 30 * Math.random(),
                            r = 10 + 30 * Math.random(),
                            t = new o.BoxGeometry(i, n, r)) : h < .66 ? (e = 10 + 20 * Math.random(),
                                t = new o.TetrahedronGeometry(e)) : (e = 5 + 30 * Math.random(),
                                    a = 2 + Math.floor(2 * Math.random()),
                                    s = 2 + Math.floor(2 * Math.random()),
                                    t = new o.SphereGeometry(e, a, s));
                        var l = new o.MeshPhongMaterial({
                            color: this.col,
                            shading: o.FlatShading
                        });
                        this.mesh = new o.Mesh(t, l)
                    }
                }]),
                    t
            }();
        e.default = s
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , a = i(0)
            , o = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(a)
            , s = function () {
                function t() {
                    n(this, t);
                    var e = new o.MeshPhongMaterial({
                        color: 8044430,
                        shininess: 0,
                        shading: o.FlatShading
                    })
                        , i = new o.MeshPhongMaterial({
                            color: 14442309,
                            shininess: 0,
                            shading: o.FlatShading
                        });
                    this.mesh = new o.Group;
                    var r = new o.CubeGeometry(10, 10, 10, 1)
                        , a = new o.CubeGeometry(5, 5, 5, 1);
                    this.parts = [];
                    for (var s = 0; s < 10; s++) {
                        var h = new o.Mesh(r, i)
                            , l = new o.Mesh(a, e);
                        l.scale.set(.5, .5, .5),
                            this.parts.push(h),
                            this.parts.push(l),
                            this.mesh.add(h),
                            this.mesh.add(l)
                    }
                }
                return r(t, [{
                    key: "explose",
                    value: function () {
                        for (var t = 0; t < this.parts.length; t++) {
                            var e = 100 * Math.random() - 50
                                , i = 100 * Math.random() - 50
                                , n = 100 * Math.random() - 50
                                , r = this.parts[t];
                            r.position.set(0, 0, 0),
                                r.scale.set(1, 1, 1),
                                r.visible = !0;
                            var a = .5 + .5 * Math.random();
                            TweenMax.to(r.position, a, {
                                x: e,
                                y: i,
                                z: n,
                                ease: Power4.easeOut
                            }),
                                TweenMax.to(r.scale, a, {
                                    x: .01,
                                    y: .01,
                                    z: .01,
                                    ease: Power4.easeOut,
                                    onComplete: this.removeParticle.bind(this),
                                    onCompleteParams: [r]
                                })
                        }
                    }
                }, {
                    key: "removeParticle",
                    value: function (t) {
                        t.visible = !1
                    }
                }]),
                    t
            }();
        e.default = s
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = i(0)
            , a = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(r)
            , o = function t() {
                n(this, t),
                    this.angle = 0,
                    this.mesh = new a.Group;
                var e = new a.CylinderGeometry(5, 3, 10, 4, 1);
                e.vertices[8].y += 2,
                    e.vertices[9].y -= 3;
                var i = new a.MeshPhongMaterial({
                    color: 8044430,
                    shininess: 0,
                    shading: a.FlatShading
                })
                    , r = new a.MeshPhongMaterial({
                        color: 14442309,
                        shininess: 0,
                        shading: a.FlatShading
                    });
                this.body = new a.Mesh(e, r);
                var o = new a.CubeGeometry(5, 10, 1, 1);
                o.applyMatrix((new a.Matrix4).makeTranslation(0, 5, 0)),
                    o.vertices[2].x -= 1,
                    o.vertices[3].x -= 1,
                    o.vertices[6].x += 1,
                    o.vertices[7].x += 1,
                    this.leaf1 = new a.Mesh(o, i),
                    this.leaf1.position.y = 7,
                    this.leaf1.rotation.z = .3,
                    this.leaf1.rotation.x = .2,
                    this.leaf2 = this.leaf1.clone(),
                    this.leaf2.scale.set(1, 1.3, 1),
                    this.leaf2.position.y = 7,
                    this.leaf2.rotation.z = -.3,
                    this.leaf2.rotation.x = -.2,
                    this.mesh.add(this.body),
                    this.mesh.add(this.leaf1),
                    this.mesh.add(this.leaf2),
                    this.body.traverse(function (t) {
                        t instanceof a.Mesh && (t.castShadow = !0,
                            t.receiveShadow = !0)
                    })
            };
        e.default = o
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , a = i(0)
            , o = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(a)
            , s = function () {
                function t() {
                    n(this, t);
                    var e = new o.MeshPhongMaterial({
                        color: 14711383,
                        shading: o.FlatShading
                    })
                        , i = new o.MeshPhongMaterial({
                            color: 1050375,
                            shading: o.FlatShading
                        })
                        , r = new o.MeshPhongMaterial({
                            color: 10786697,
                            shading: o.FlatShading
                        });
                    this.angle = 0,
                        this.status = "ready",
                        this.mesh = new o.Group;
                    var a = new o.CubeGeometry(6, 6, 6, 1);
                    this.body = new o.Mesh(a, i);
                    var s = new o.CubeGeometry(5, 5, 7, 1);
                    this.head = new o.Mesh(s, e),
                        this.head.position.z = 6,
                        this.head.position.y = -.5;
                    var h = new o.CubeGeometry(1.5, 1.5, 1.5, 1);
                    this.nose = new o.Mesh(h, i),
                        this.nose.position.z = 4,
                        this.nose.position.y = 2;
                    var l = new o.CubeGeometry(1, 3, 3);
                    this.eyeL = new o.Mesh(l, r),
                        this.eyeL.position.x = 2.2,
                        this.eyeL.position.z = -.5,
                        this.eyeL.position.y = .8,
                        this.eyeL.castShadow = !0,
                        this.head.add(this.eyeL);
                    var c = new o.CubeGeometry(.5, 1, 1);
                    this.iris = new o.Mesh(c, i),
                        this.iris.position.x = .5,
                        this.iris.position.y = .8,
                        this.iris.position.z = .8,
                        this.eyeL.add(this.iris),
                        this.eyeR = this.eyeL.clone(),
                        this.eyeR.children[0].position.x = -this.iris.position.x,
                        this.eyeR.position.x = -this.eyeL.position.x;
                    var u = new o.CubeGeometry(.5, 2, .5, 1);
                    u.applyMatrix((new o.Matrix4).makeTranslation(0, 1, 0));
                    for (var p = 0; p < 9; p++) {
                        var d = p % 3
                            , f = Math.floor(p / 3)
                            , m = new o.Mesh(u, i);
                        m.rotation.x = -Math.PI / 2 + Math.PI / 12 * d - .5 + Math.random(),
                            m.position.z = -3,
                            m.position.y = 2 * d - 2,
                            m.position.x = 2 * f - 2,
                            this.body.add(m);
                        var g = new o.Mesh(u, i);
                        g.position.y = 3,
                            g.position.x = 2 * d - 2,
                            g.position.z = 2 * f - 2,
                            g.rotation.z = Math.PI / 6 - Math.PI / 6 * d - .5 + Math.random(),
                            this.body.add(g);
                        var v = new o.Mesh(u, i);
                        v.position.x = 3,
                            v.position.y = 2 * d - 2,
                            v.position.z = 2 * f - 2,
                            v.rotation.z = -Math.PI / 2 + Math.PI / 12 * d - .5 + Math.random(),
                            this.body.add(v);
                        var y = new o.Mesh(u, i);
                        y.position.x = -3,
                            y.position.y = 2 * d - 2,
                            y.position.z = 2 * f - 2,
                            y.rotation.z = Math.PI / 2 - Math.PI / 12 * d - .5 + Math.random(),
                            this.body.add(y)
                    }
                    this.head.add(this.eyeR);
                    var _ = new o.CubeGeometry(2, 2, .5, 1);
                    this.earL = new o.Mesh(_, e),
                        this.earL.position.x = 2.5,
                        this.earL.position.z = -2.5,
                        this.earL.position.y = 2.5,
                        this.earL.rotation.z = -Math.PI / 12,
                        this.earL.castShadow = !0,
                        this.head.add(this.earL),
                        this.earR = this.earL.clone(),
                        this.earR.position.x = -this.earL.position.x,
                        this.earR.rotation.z = -this.earL.rotation.z,
                        this.earR.castShadow = !0,
                        this.head.add(this.earR);
                    var x = new o.CubeGeometry(1, 1, .5, 1);
                    this.mouth = new o.Mesh(x, i),
                        this.mouth.position.z = 3.5,
                        this.mouth.position.y = -1.5,
                        this.head.add(this.mouth),
                        this.mesh.add(this.body),
                        this.body.add(this.head),
                        this.head.add(this.nose),
                        this.mesh.traverse(function (t) {
                            t instanceof o.Mesh && (t.castShadow = !0,
                                t.receiveShadow = !0)
                        })
                }
                return r(t, [{
                    key: "nod",
                    value: function () {
                        var t = this
                            , e = .1 + .5 * Math.random()
                            , i = -Math.PI / 4 + Math.random() * Math.PI / 2;
                        TweenMax.to(this.head.rotation, e, {
                            y: i,
                            onComplete: function () {
                                t.nod()
                            }
                        })
                    }
                }]),
                    t
            }();
        e.default = s
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = i(0)
            , a = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(r)
            , o = i(36)
            , s = function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }(o)
            , h = function t(e) {
                n(this, t),
                    this.materials = e,
                    this.mesh = new a.Object3D,
                    this.trunc = new s.default(this.materials),
                    this.mesh.add(this.trunc.mesh)
            };
        e.default = h
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = i(0)
            , a = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(r)
            , o = function t(e) {
                n(this, t);
                var i = 50 + 150 * Math.random()
                    , r = 1 + 5 * Math.random()
                    , o = 5 + 5 * Math.random()
                    , s = e
                    , h = s[0]
                    , l = new a.CylinderGeometry(r, o, i, 3, 3);
                l.applyMatrix((new a.Matrix4).makeTranslation(0, i / 2, 0)),
                    this.mesh = new a.Mesh(l, h);
                for (var c = 0; c < l.vertices.length; c++) {
                    var u = Math.random()
                        , p = l.vertices[c];
                    if (p.x += -u + Math.random() * u * 2,
                        p.y += -u + Math.random() * u * 2,
                        p.z += -u + Math.random() * u * 2,
                        l.computeVertexNormals(),
                        Math.random() > .7) {
                        var d = 3 * Math.random()
                            , f = new a.CubeGeometry(d, d, d, 1)
                            , m = s[Math.floor(Math.random() * s.length)]
                            , g = new a.Mesh(f, m);
                        g.position.x = p.x,
                            g.position.y = p.y + 3,
                            g.position.z = p.z,
                            g.rotation.x = Math.random() * Math.PI,
                            g.rotation.y = Math.random() * Math.PI,
                            this.mesh.add(g)
                    }
                    if (Math.random() > .5 && p.y > 10 && p.y < i - 10) {
                        var v = 3 + 5 * Math.random()
                            , y = .2 + Math.random()
                            , _ = new a.CylinderGeometry(y / 2, y, v, 3, 1);
                        _.applyMatrix((new a.Matrix4).makeTranslation(0, v / 2, 0));
                        var x = new a.Mesh(_, h);
                        x.position.x = p.x,
                            x.position.y = p.y,
                            x.position.z = p.z;
                        var w = new a.Vector3(p.x, 2, p.z)
                            , b = new a.Vector3(0, 1, 0);
                        x.quaternion.setFromUnitVectors(b, w.clone().normalize()),
                            this.mesh.add(x)
                    }
                }
                this.mesh.castShadow = !0
            };
        e.default = o
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function r() {
            document.documentElement.classList.remove("not-ready")
        }
        function a() {
            r(),
                f = new w.default;
            var t = location.hash.substring(1);
            window.addEventListener("resize", o, !1),
                document.addEventListener("mousemove", l, !1),
                document.addEventListener("mousedown", c, !1),
                document.addEventListener("mouseup", u, !1),
                window.addEventListener("mousewheel", p, !1),
                document.addEventListener("keyup", d, !1),
                m = document.getElementsByClassName("size-disclaimer")[0],
                g = new M.default,
                o(),
                f.switchWorld(t),
                f.loop()
        }
        function o() {
            _.default.winHeight = window.innerHeight,
                _.default.winWidth = window.innerWidth,
                _.default.winWidth < 600 ? (_.default.allowExperience = !1,
                    s()) : (_.default.allowExperience = !0,
                        h(),
                        f.updateSize())
        }
        function s() {
            TweenMax.set(m, {
                visibility: "visible"
            }),
                g.updateColor(11169152)
        }
        function h() {
            TweenMax.set(m, {
                visibility: "hidden"
            })
        }
        function l(t) {
            _.default.mousePos.x = t.clientX,
                _.default.mousePos.y = t.clientY,
                _.default.mousePos.px = _.default.mousePos.x / _.default.winWidth * 2 - 1,
                _.default.mousePos.py = _.default.mousePos.y / _.default.winHeight * 2 - 1,
                _.default.mousePos.cx = _.default.mousePos.x - _.default.winWidth / 2,
                _.default.mousePos.cy = _.default.mousePos.y - _.default.winHeight / 2,
                f.mouseMove(_.default.mousePos)
        }
        function c(t) {
            f.mouseDown(_.default.mousePos)
        }
        function u(t) {
            f.mouseUp(_.default.mousePos)
        }
        function p(t) {
            f.mouseWheel(t.wheelDeltaY)
        }
        function d(t) {
            f.keyUp(t.keyCode)
        }
        i(22),
            i(21),
            i(24);
        var f, m, g, v = i(23), y = (n(v),
            i(1)), _ = n(y), x = i(6), w = n(x), b = i(7), M = n(b);
        Modernizr.mobile ? r() : document.addEventListener("DOMContentLoaded", a)
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , a = null
            , o = function () {
                function t() {
                    if (n(this, t),
                        a)
                        return a;
                    this.order = document.getElementsByClassName("experience-info-order")[0],
                        this.title = document.getElementsByClassName("experience-info-title")[0],
                        this.instruction = document.getElementsByClassName("experience-info-instructions")[0],
                        this.line = CSSRulePlugin.getRule(".experience-info-order:after"),
                        TweenMax.set(this.order, {
                            y: 10,
                            autoAlpha: 0
                        }),
                        TweenMax.set(this.title, {
                            y: 10,
                            autoAlpha: 0
                        }),
                        TweenMax.set(this.instruction, {
                            y: 10,
                            autoAlpha: 0
                        }),
                        TweenMax.set(this.line, {
                            cssRule: {
                                widht: 0,
                                autoAlpha: 0
                            }
                        }),
                        TweenMax.set(this.line, {
                            cssRule: {
                                widht: 0,
                                autoAlpha: 0
                            }
                        }),
                        a = this
                }
                return r(t, [{
                    key: "update",
                    value: function (t, e) {
                        var i = this;
                        this.hide(function () {
                            TweenMax.set(i.line, {
                                cssRule: {
                                    backgroundColor: e.tc
                                }
                            }),
                                i.order.innerHTML = "0" + (t + 1),
                                TweenMax.set(i.order, {
                                    y: 10,
                                    color: e.tc
                                }),
                                i.title.innerHTML = e.title,
                                TweenMax.set(i.title, {
                                    y: 10,
                                    color: e.tc
                                }),
                                i.instruction.innerHTML = e.instruction,
                                TweenMax.set(i.instruction, {
                                    y: 10,
                                    color: e.tc
                                }),
                                i.show()
                        })
                    }
                }, {
                    key: "hide",
                    value: function (t) {
                        this.hideTl = new TimelineMax({
                            onComplete: t
                        }),
                            this.hideTl.add("start"),
                            this.hideTl.to(this.line, .6, {
                                cssRule: {
                                    width: 0,
                                    autoAlpha: 0
                                },
                                ease: Power4.easeIn
                            }, "start"),
                            this.hideTl.to(this.order, .3, {
                                y: -10,
                                autoAlpha: 0,
                                ease: Power4.easeIn
                            }, "start"),
                            this.hideTl.to(this.title, .3, {
                                y: -10,
                                autoAlpha: 0,
                                ease: Power4.easeIn
                            }, "start+=.1"),
                            this.hideTl.to(this.instruction, .3, {
                                y: -10,
                                autoAlpha: 0,
                                ease: Power4.easeIn
                            }, "start+=.2")
                    }
                }, {
                    key: "show",
                    value: function (t) {
                        this.showTl = new TimelineMax({
                            onComplete: t
                        }),
                            this.showTl.add("start"),
                            this.showTl.to(this.line, .4, {
                                cssRule: {
                                    width: 30,
                                    autoAlpha: 1
                                },
                                ease: Power4.easeOut
                            }, "start"),
                            this.showTl.to(this.order, .4, {
                                y: 0,
                                autoAlpha: 1,
                                ease: Power4.easeOut
                            }, "start"),
                            this.showTl.to(this.title, .4, {
                                y: 0,
                                autoAlpha: 1,
                                ease: Power4.easeOut
                            }, "start+=.1"),
                            this.showTl.to(this.instruction, .4, {
                                y: 0,
                                autoAlpha: 1,
                                ease: Power4.easeOut
                            }, "start+=.2")
                    }
                }]),
                    t
            }();
        e.default = o
    }
    , function (t, e, i) {
        "use strict";
        function n(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , a = null
            , o = function () {
                function t() {
                    if (n(this, t),
                        a)
                        return a;
                    this.homeUi = document.getElementsByClassName("home-ui")[0],
                        this.title = document.getElementsByClassName("home-ui-title")[0],
                        this.description = document.getElementsByClassName("home-ui-description")[0],
                        this.ctaBgr = document.getElementsByClassName("home-ui-cta-bgr")[0],
                        this.cta = document.getElementsByClassName("home-ui-cta")[0],
                        this.ctaText = document.getElementsByClassName("home-ui-cta-text")[0],
                        TweenMax.set(this.homeUi, {
                            autoAlpha: 0
                        }),
                        TweenMax.set(this.title, {
                            autoAlpha: 0
                        }),
                        TweenMax.set(this.description, {
                            autoAlpha: 0
                        }),
                        TweenMax.set(this.cta, {
                            autoAlpha: 0
                        }),
                        TweenMax.set(this.ctaBgr, {
                            autoAlpha: 0
                        }),
                        a = this
                }
                return r(t, [{
                    key: "update",
                    value: function (t, e, i) {
                        var n = this;
                        this.hide(function () {
                            n.title.innerHTML = t,
                                TweenMax.set(n.title, {
                                    y: 10,
                                    color: i
                                }),
                                n.description.innerHTML = e,
                                TweenMax.set(n.description, {
                                    y: 10
                                }),
                                TweenMax.to(n.ctaBgr, 1, {
                                    borderColor: i
                                }),
                                TweenMax.to(n.ctaText, 1, {
                                    color: i
                                }),
                                n.show()
                        })
                    }
                }, {
                    key: "hide",
                    value: function (t) {
                        var e = this;
                        this.tlCtaClose = new TimelineMax({
                            onComplete: t
                        }),
                            this.tlCtaClose.to(this.ctaText, .15, {
                                scale: 0,
                                ease: Power4.easeIn
                            }),
                            this.tlCtaClose.to(this.ctaBgr, .15, {
                                scale: 0,
                                ease: Power4.easeIn
                            }),
                            this.tlCtaClose.add("textes"),
                            this.tlCtaClose.to(this.title, .3, {
                                y: -10,
                                autoAlpha: 0,
                                ease: Power4.easeIn
                            }, "textes +=.15"),
                            this.tlCtaClose.to(this.description, .3, {
                                y: -10,
                                autoAlpha: 0,
                                ease: Power4.easeIn
                            }, "textes += .1"),
                            this.tlCtaClose.add(function () {
                                TweenMax.set(e.cta, {
                                    autoAlpha: 0
                                })
                            })
                    }
                }, {
                    key: "show",
                    value: function (t) {
                        this.tlCtaOpen = new TimelineMax({
                            onComplete: t
                        }),
                            this.tlCtaOpen.set(this.homeUi, {
                                autoAlpha: 1
                            }),
                            this.tlCtaOpen.set(this.cta, {
                                autoAlpha: 1
                            }),
                            this.tlCtaOpen.set(this.ctaBgr, {
                                autoAlpha: 1
                            }),
                            this.tlCtaOpen.to(this.title, .3, {
                                y: 0,
                                autoAlpha: 1,
                                ease: Power4.easeOut
                            }, "textes +=.15"),
                            this.tlCtaOpen.to(this.description, .3, {
                                y: 0,
                                autoAlpha: 1,
                                ease: Power4.easeOut
                            }, "textes += .1"),
                            this.tlCtaOpen.add("cta"),
                            this.tlCtaOpen.to(this.ctaText, .15, {
                                scale: 1,
                                ease: Power4.easeOut
                            }, "cta +=.15"),
                            this.tlCtaOpen.to(this.ctaBgr, .15, {
                                scale: 1,
                                ease: Power4.easeOut
                            }, "cta +=.15")
                    }
                }]),
                    t
            }();
        e.default = o
    }
    , function (t, e, i) {
        "use strict";
        t.exports = function () {
            return new function () {
                this.resolve = null,
                    this.reject = null,
                    this.promise = new Promise(function (t, e) {
                        this.resolve = t,
                            this.reject = e
                    }
                        .bind(this))
            }
        }
    }
    , function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = function t() {
            t.get = function (e) {
                return t.shaders[e]
            }
        };
        n.prototype = {
            loadShaders: function (t, e, i) {
                n.shaders = t,
                    this.baseUrl = e || "./",
                    this.callback = i,
                    this.batchLoad(this, "onShadersReady")
            },
            batchLoad: function (t, e) {
                var i = 0;
                for (var r in n.shaders) {
                    i++;
                    var a = new XMLHttpRequest;
                    a.onload = function (r, a) {
                        return function () {
                            n.shaders[r] = a.responseText,
                                --i <= 0 && t[e]()
                        }
                    }(r, a),
                        a.open("get", t.baseUrl + r + ".glsl", !0),
                        a.send()
                }
            },
            onShadersReady: function () {
                this.callback && this.callback()
            }
        },
            e.default = n
    }
    , function (t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = i(0)
            , r = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(n)
            , a = function (t) {
                var e, i, n;
                return t.init = function (a, o, s, h, l) {
                    var c = s.getContext();
                    if (!c.getExtension("OES_texture_float"))
                        throw new Error("float textures not supported");
                    if (0 == c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS))
                        throw new Error("vertex shader cannot read textures");
                    e = new r.Scene,
                        i = new r.OrthographicCamera(-1, 1, 1, -1, 1 / Math.pow(2, 53), 1);
                    var u = {
                        minFilter: r.NearestFilter,
                        magFilter: r.NearestFilter,
                        format: r.RGBAFormat,
                        type: Modernizr.ios ? r.HalfFloatType : r.FloatType
                    };
                    n = new r.WebGLRenderTarget(a, o, u);
                    var p = new r.BufferGeometry;
                    p.addAttribute("position", new r.BufferAttribute(new Float32Array([-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, 1, 0]), 3)),
                        p.addAttribute("uv", new r.BufferAttribute(new Float32Array([0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0]), 2)),
                        e.add(new r.Mesh(p, h));
                    for (var d = a * o, f = new Float32Array(3 * d), m = 0; m < d; m++) {
                        var g = 3 * m;
                        f[g] = m % a / a,
                            f[g + 1] = m / a / o
                    }
                    var v = new r.BufferGeometry;
                    v.addAttribute("position", new r.BufferAttribute(f, 3)),
                        t.particles = new r.Points(v, l),
                        t.renderer = s
                }
                    ,
                    t.update = function () {
                        t.renderer.render(e, i, n, !0),
                            t.particles.material.uniforms.positions.value = n.texture
                    }
                    ,
                    t
            }({});
        e.default = a
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , h = function t(e, i, n) {
                null === e && (e = Function.prototype);
                var r = Object.getOwnPropertyDescriptor(e, i);
                if (void 0 === r) {
                    var a = Object.getPrototypeOf(e);
                    return null === a ? void 0 : t(a, i, n)
                }
                if ("value" in r)
                    return r.value;
                var o = r.get;
                if (void 0 !== o)
                    return o.call(n)
            }
            , l = i(0)
            , c = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(l)
            , u = i(1)
            , p = n(u)
            , d = i(4)
            , f = n(d)
            , m = i(12)
            , g = n(m)
            , v = i(3)
            , y = n(v)
            , _ = function (t) {
                function e(t, i, n, o) {
                    r(this, e);
                    var s = a(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t, i, n, o));
                    return s.name = "bird",
                        s.controls.enabled = !1,
                        s
                }
                return o(e, t),
                    s(e, [{
                        key: "createCharacter",
                        value: function () {
                            this.character = new g.default,
                                this.character.init(),
                                this.character.group.position.set(0, 30, 0),
                                this.scene.add(this.character.group),
                                this.bird1 = new g.default,
                                this.bird1.init(),
                                this.bird1.group.position.x = -250,
                                this.bird1.side = "right",
                                this.bird1.group.scale.set(.8, .8, .8),
                                this.bird1.group.position.y = 22,
                                this.scene.add(this.bird1.group),
                                this.bird2 = new g.default,
                                this.bird2.init(),
                                this.bird2.group.position.x = 250,
                                this.bird2.side = "left",
                                this.bird2.group.scale.set(.8, .8, .8),
                                this.bird2.group.position.y = 22,
                                this.scene.add(this.bird2.group),
                                this.character.group.visible = !1,
                                this.bird1.group.visible = !1,
                                this.bird2.group.visible = !1
                        }
                    }, {
                        key: "createLights",
                        value: function () {
                            this.globalLight = new c.HemisphereLight(16777215, 5592405, 1),
                                this.shadowLight = new c.DirectionalLight(16777215, .4),
                                this.shadowLight.position.set(100, 250, 75),
                                this.shadowLight.castShadow = !0,
                                this.shadowLight.shadow.camera.left = -600,
                                this.shadowLight.shadow.camera.right = 600,
                                this.shadowLight.shadow.camera.top = 600,
                                this.shadowLight.shadow.camera.bottom = -600,
                                this.shadowLight.shadow.camera.near = 1,
                                this.shadowLight.shadow.camera.far = 600,
                                this.shadowLight.shadow.mapSize.width = this.shadowLight.shadow.mapSize.height = 2048,
                                this.scene.add(this.globalLight),
                                this.scene.add(this.shadowLight)
                        }
                    }, {
                        key: "render",
                        value: function () {
                            var t = this;
                            if (this.isHiding)
                                this.character.fix();
                            else {
                                var i = p.default.mousePos.cx / 200
                                    , n = p.default.mousePos.cy / 200
                                    , r = Math.min(Math.max(i, -Math.PI / 3), Math.PI / 3)
                                    , a = Math.min(Math.max(n, -Math.PI / 3), Math.PI / 3);
                                this.character.look(r, a),
                                    this.character.hAngle < -Math.PI / 5 && !this.bird1.intervalRunning ? (this.bird1.lookAway(!0),
                                        this.bird1.intervalRunning = !0,
                                        this.bird1.behaviourInterval = setInterval(function () {
                                            t.bird1.lookAway(!1)
                                        }, 1500)) : this.character.hAngle > 0 && this.bird1.intervalRunning ? (this.bird1.stare(),
                                            clearInterval(this.bird1.behaviourInterval),
                                            this.bird1.intervalRunning = !1) : this.character.hAngle > Math.PI / 5 && !this.bird2.intervalRunning ? (this.bird2.lookAway(!0),
                                                this.bird2.intervalRunning = !0,
                                                this.bird2.behaviourInterval = setInterval(function () {
                                                    t.bird2.lookAway(!1)
                                                }, 1500)) : this.character.hAngle < 0 && this.bird2.intervalRunning && (this.bird2.stare(),
                                                    clearInterval(this.bird2.behaviourInterval),
                                                    this.bird2.intervalRunning = !1),
                                    this.bird1.look(this.bird1.shyAngles.h, this.bird1.shyAngles.v),
                                    this.bird1.bodyBird.material.color.setRGB(this.bird1.color.r, this.bird1.color.g, this.bird1.color.b),
                                    this.bird2.look(this.bird2.shyAngles.h, this.bird2.shyAngles.v),
                                    this.bird2.bodyBird.material.color.setRGB(this.bird2.color.r, this.bird2.color.g, this.bird2.color.b)
                            }
                            h(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "render", this).call(this)
                        }
                    }, {
                        key: "show",
                        value: function (t, e) {
                            var i = this;
                            this.character.group.visible = !0,
                                this.bird1.group.visible = !0,
                                this.bird2.group.visible = !0,
                                "none" == t ? (TweenMax.from(this.bird1.group.position, .8, {
                                    x: -3e3,
                                    ease: Power4.easeOut
                                }),
                                    TweenMax.from(this.bird2.group.position, .8, {
                                        x: 3e3,
                                        ease: Power4.easeOut
                                    })) : "right" == t ? (TweenMax.from(this.bird1.group.position, .8, {
                                        x: 2500,
                                        ease: Power4.easeOut
                                    }),
                                        TweenMax.from(this.character.group.position, .8, {
                                            x: 3e3,
                                            delay: .1,
                                            ease: Power4.easeOut
                                        }),
                                        TweenMax.from(this.bird2.group.position, .8, {
                                            x: 3500,
                                            delay: .2,
                                            ease: Power4.easeOut
                                        })) : (TweenMax.from(this.bird1.group.position, .8, {
                                            x: -3500,
                                            delay: .2,
                                            ease: Power4.easeOut
                                        }),
                                            TweenMax.from(this.character.group.position, .8, {
                                                x: -3e3,
                                                delay: .1,
                                                ease: Power4.easeOut
                                            }),
                                            TweenMax.from(this.bird2.group.position, .8, {
                                                x: -2500,
                                                ease: Power4.easeOut
                                            })),
                                TweenMax.to(this.camera.position, 1, {
                                    z: 1e3,
                                    y: 300,
                                    ease: Power4.easeInOut,
                                    onUpdate: function () {
                                        i.camera.lookAt(i.vectorLookAt)
                                    },
                                    onComplete: e
                                })
                        }
                    }, {
                        key: "hide",
                        value: function (t, e) {
                            var i = this;
                            this.isHiding = !0,
                                "none" == t ? (TweenMax.to(this.bird1.group.position, .8, {
                                    x: -3e3,
                                    ease: Power4.easeIn
                                }),
                                    TweenMax.to(this.bird2.group.position, .8, {
                                        x: 3e3,
                                        ease: Power4.easeIn
                                    })) : "right" == t ? (TweenMax.to(this.bird1.group.position, .8, {
                                        x: 2500,
                                        delay: .2,
                                        ease: Power4.easeIn
                                    }),
                                        TweenMax.to(this.character.group.position, .8, {
                                            x: 3e3,
                                            delay: .1,
                                            ease: Power4.easeIn
                                        }),
                                        TweenMax.to(this.bird2.group.position, .8, {
                                            x: 3500,
                                            ease: Power4.easeIn
                                        })) : (TweenMax.to(this.bird1.group.position, .8, {
                                            x: -3500,
                                            ease: Power4.easeIn
                                        }),
                                            TweenMax.to(this.character.group.position, .8, {
                                                x: -3e3,
                                                delay: .1,
                                                ease: Power4.easeIn
                                            }),
                                            TweenMax.to(this.bird2.group.position, .8, {
                                                x: -2500,
                                                delay: .2,
                                                ease: Power4.easeIn
                                            })),
                                TweenMax.to(this.camera.position, 1, {
                                    z: y.default.camZ,
                                    y: y.default.camY,
                                    ease: Power4.easeInOut,
                                    onUpdate: function () {
                                        i.camera.lookAt(i.vectorLookAt)
                                    },
                                    onComplete: e
                                })
                        }
                    }]),
                    e
            }(f.default);
        e.default = _
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , h = function t(e, i, n) {
                null === e && (e = Function.prototype);
                var r = Object.getOwnPropertyDescriptor(e, i);
                if (void 0 === r) {
                    var a = Object.getPrototypeOf(e);
                    return null === a ? void 0 : t(a, i, n)
                }
                if ("value" in r)
                    return r.value;
                var o = r.get;
                if (void 0 !== o)
                    return o.call(n)
            }
            , l = i(0)
            , c = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(l)
            , u = i(1)
            , p = n(u)
            , d = i(4)
            , f = n(d)
            , m = i(13)
            , g = n(m)
            , v = i(27)
            , y = n(v)
            , _ = i(3)
            , x = n(_)
            , w = function (t) {
                function e(t, i, n, o) {
                    r(this, e);
                    var s = a(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t, i, n, o));
                    return s.name = "cat",
                        s.controls.enabled = !1,
                        s.isInteracting = !1,
                        s
                }
                return o(e, t),
                    s(e, [{
                        key: "createCharacter",
                        value: function () {
                            this.ballWallDepth = 28,
                                this.time = 0,
                                this.character = new g.default,
                                this.character.init(),
                                this.character.group.position.set(0, 0, 0),
                                this.character.group.scale.set(2.3, 2.3, 2.3),
                                this.scene.add(this.character.group),
                                this.ball = new y.default,
                                this.ball.init(),
                                this.scene.add(this.ball.group),
                                this.character.group.visible = !1
                        }
                    }, {
                        key: "createLights",
                        value: function () {
                            this.globalLight = new c.HemisphereLight(16777215, 5592405, 1),
                                this.shadowLight = new c.DirectionalLight(16777215, .4),
                                this.shadowLight.position.set(100, 250, 75),
                                this.shadowLight.castShadow = !0,
                                this.shadowLight.shadow.camera.left = -400,
                                this.shadowLight.shadow.camera.right = 400,
                                this.shadowLight.shadow.camera.top = 400,
                                this.shadowLight.shadow.camera.bottom = -400,
                                this.shadowLight.shadow.camera.near = 1,
                                this.shadowLight.shadow.camera.far = 400,
                                this.shadowLight.shadow.mapSize.width = this.shadowLight.shadow.mapSize.height = 2048,
                                this.scene.add(this.globalLight),
                                this.scene.add(this.shadowLight)
                        }
                    }, {
                        key: "getBallPos",
                        value: function () {
                            var t = new c.Vector3;
                            t.set(p.default.mousePos.x / window.innerWidth * 2 - 1, -p.default.mousePos.y / window.innerHeight * 2 + 1, .1),
                                t.unproject(this.camera);
                            var e = t.sub(this.camera.position).normalize()
                                , i = (this.ballWallDepth - this.camera.position.z) / e.z;
                            return this.camera.position.clone().add(e.multiplyScalar(i))
                        }
                    }, {
                        key: "render",
                        value: function () {
                            if (this.time += .05,
                                this.character.updateTail(this.time),
                                this.isInteracting) {
                                var t = this.getBallPos();
                                this.ball.update(t.x, t.y, t.z),
                                    this.ball.receivePower(this.character.transferPower),
                                    this.character.interactWithBall(this.ball.body.position)
                            } else
                                this.character.fix();
                            h(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "render", this).call(this)
                        }
                    }, {
                        key: "show",
                        value: function (t, e) {
                            var i = this;
                            this.character.group.visible = !0,
                                "none" == t || ("right" == t ? TweenMax.from(this.character.group.position, 1, {
                                    x: 3e3,
                                    ease: Power4.easeOut
                                }) : TweenMax.from(this.character.group.position, 1, {
                                    x: -3e3,
                                    ease: Power4.easeOut
                                })),
                                TweenMax.to(this.character.group.scale, 1, {
                                    x: 1,
                                    y: 1,
                                    z: 1,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.camera.position, 1, {
                                    z: 350,
                                    y: 250,
                                    ease: Power4.easeInOut,
                                    onUpdate: function () {
                                        i.camera.lookAt(i.vectorLookAt)
                                    },
                                    onComplete: function () {
                                        i.isInteracting = !0,
                                            "function" == typeof e && e()
                                    }
                                })
                        }
                    }, {
                        key: "hide",
                        value: function (t, e) {
                            var i = this;
                            this.isInteracting = !1,
                                "none" == t || ("right" == t ? TweenMax.to(this.character.group.position, 1, {
                                    x: 3e3,
                                    ease: Power4.easeIn
                                }) : TweenMax.to(this.character.group.position, 1, {
                                    x: -3e3,
                                    ease: Power4.easeIn
                                })),
                                TweenMax.to(this.character.group.scale, 1, {
                                    x: 2.3,
                                    y: 2.3,
                                    z: 2.3,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.camera.position, 1, {
                                    z: x.default.camZ,
                                    y: x.default.camY,
                                    ease: Power4.easeInOut,
                                    onUpdate: function () {
                                        i.camera.lookAt(i.vectorLookAt)
                                    },
                                    onComplete: e
                                })
                        }
                    }]),
                    e
            }(f.default);
        e.default = w
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , h = function t(e, i, n) {
                null === e && (e = Function.prototype);
                var r = Object.getOwnPropertyDescriptor(e, i);
                if (void 0 === r) {
                    var a = Object.getPrototypeOf(e);
                    return null === a ? void 0 : t(a, i, n)
                }
                if ("value" in r)
                    return r.value;
                var o = r.get;
                if (void 0 !== o)
                    return o.call(n)
            }
            , l = i(0)
            , c = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(l)
            , u = i(1)
            , p = (n(u),
                i(4))
            , d = n(p)
            , f = i(14)
            , m = n(f)
            , g = i(30)
            , v = n(g)
            , y = i(5)
            , _ = i(3)
            , x = n(_)
            , w = function (t) {
                function e(t, i, n, o) {
                    r(this, e);
                    var s = a(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t, i, n, o));
                    return s.name = "dragon",
                        s.controls.enabled = !1,
                        s.awaitingSmokeParticles = [],
                        s.sneezeDelay = 500,
                        s.scene.fog = new c.Fog(6630967, 2e3, 2100),
                        s.score = document.getElementsByClassName("dragon-score")[0],
                        s
                }
                return o(e, t),
                    s(e, [{
                        key: "createCharacter",
                        value: function () {
                            this.camTargetPos = new c.Vector3(-500, 100, 300),
                                this.character = new m.default,
                                this.character.init(),
                                this.character.group.position.set(0, 70, 0),
                                this.character.group.scale.set(2, 2, 2),
                                this.character.group.visible = !1,
                                this.scene.add(this.character.group)
                        }
                    }, {
                        key: "createLights",
                        value: function () {
                            this.globalLight = new c.HemisphereLight(16777215, 5592405, 1),
                                this.shadowLight = new c.DirectionalLight(16777215, .4),
                                this.shadowLight.position.set(100, 250, 75),
                                this.shadowLight.castShadow = !0,
                                this.shadowLight.shadow.camera.left = -400,
                                this.shadowLight.shadow.camera.right = 400,
                                this.shadowLight.shadow.camera.top = 400,
                                this.shadowLight.shadow.camera.bottom = -400,
                                this.shadowLight.shadow.camera.near = 1,
                                this.shadowLight.shadow.camera.far = 400,
                                this.shadowLight.shadow.mapSize.width = this.shadowLight.shadow.mapSize.height = 2048,
                                this.scene.add(this.globalLight),
                                this.scene.add(this.shadowLight)
                        }
                    }, {
                        key: "getSmokeParticle",
                        value: function () {
                            return this.awaitingSmokeParticles.length || new v.default(this.awaitingSmokeParticles),
                                this.awaitingSmokeParticles.pop()
                        }
                    }, {
                        key: "sneeze",
                        value: function () {
                            this.character.sneeze(),
                                this.score.innerHTML = "00"
                        }
                    }, {
                        key: "mouseUp",
                        value: function () {
                            this.sneezeTimeout && clearTimeout(this.sneezeTimeout),
                                this.character.sneezingRate += (this.character.maxSneezingRate - this.character.sneezingRate) / 20,
                                this.score.innerHTML = parseInt(100 * this.character.sneezingRate / this.character.maxSneezingRate),
                                this.character.prepareToSneeze(),
                                this.sneezeTimeout = setTimeout(this.sneeze.bind(this), this.sneezeDelay),
                                this.character.isSneezing = !0
                        }
                    }, {
                        key: "mouseMove",
                        value: function (t) {
                            if (!this.isHiding) {
                                var e = Math.PI / 2 + (0,
                                    y.rule3)(t.px, -1, 1, Math.PI / 2, -Math.PI / 2)
                                    , i = 160 + (0,
                                        y.rule3)(t.py, -1, 1, 100, -100);
                                this.camTargetPos.x = 500 * Math.cos(e),
                                    this.camTargetPos.y = i,
                                    this.camTargetPos.z = 700 * Math.sin(e)
                            }
                        }
                    }, {
                        key: "render",
                        value: function () {
                            if (this.isHiding || (this.camera.position.x += (this.camTargetPos.x - this.camera.position.x) / 20,
                                this.camera.position.y += (this.camTargetPos.y - this.camera.position.y) / 20,
                                this.camera.position.z += (this.camTargetPos.z - this.camera.position.z) / 20,
                                this.camera.lookAt(this.vectorLookAt)),
                                this.character.isSneezing || this.character.update(),
                                this.character.timeSmoke > 0) {
                                var t = Math.random() > .5 ? this.character.noseL : this.character.noseR
                                    , i = this.getSmokeParticle()
                                    , n = t.localToWorld(new c.Vector3(0, 0, 2));
                                i.mesh.position.x = n.x,
                                    i.mesh.position.y = n.y,
                                    i.mesh.position.z = n.z,
                                    i.mesh.material.color.setHex(5592405),
                                    i.mesh.material.opacity = .2,
                                    this.scene.add(i.mesh),
                                    i.fly(),
                                    this.character.timeSmoke--
                            }
                            if (this.character.timeFire > 0) {
                                var t = Math.random() > .5 ? this.character.noseL : this.character.noseR
                                    , r = (Math.random(),
                                        this.getSmokeParticle())
                                    , a = t.localToWorld(new c.Vector3(0, 0, 2));
                                r.mesh.position.x = a.x,
                                    r.mesh.position.y = a.y,
                                    r.mesh.position.z = a.z,
                                    r.color = {
                                        r: 1,
                                        g: 205 / 255,
                                        b: 74 / 255
                                    },
                                    r.mesh.material.color.setRGB(r.color.r, r.color.g, r.color.b),
                                    r.mesh.material.opacity = 1,
                                    this.scene.add(r.mesh),
                                    r.fire(this.character.fireRate, this.character.maxSneezingRate),
                                    this.character.timeFire--
                            }
                            h(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "render", this).call(this)
                        }
                    }, {
                        key: "show",
                        value: function (t, e) {
                            TweenMax.set(this.score, {
                                display: "block"
                            }),
                                this.character.group.visible = !0,
                                "none" == t || (this.character.group.position.x = "right" == t ? 3e3 : -3e3),
                                TweenMax.killTweensOf([this.character.group.scale, this.character.group.position, this.scene.fog, this.score]),
                                TweenMax.to(this.character.group.scale, 1, {
                                    x: 1,
                                    y: 1,
                                    z: 1,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.character.group.position, 1, {
                                    x: 0,
                                    y: 35,
                                    ease: Power4.easeOut
                                }),
                                TweenMax.to(this.scene.fog, 1, {
                                    near: 300,
                                    far: 1e3,
                                    delay: 1,
                                    ease: Power4.easeOut
                                }),
                                TweenMax.to(this.score, 1, {
                                    autoAlpha: 1,
                                    delay: 2,
                                    ease: Power4.easeOut
                                })
                        }
                    }, {
                        key: "hide",
                        value: function (t, e) {
                            var i = this;
                            this.isHiding = !0,
                                TweenMax.killTweensOf([this.character.group.scale, this.character.group.position, this.scene.fog, this.score, this.camera.position]),
                                "none" == t ? TweenMax.to(this.character.group.position, 1, {
                                    y: 70,
                                    ease: Power4.easeIn
                                }) : "right" == t ? TweenMax.to(this.character.group.position, 1, {
                                    x: 3e3,
                                    y: 70,
                                    ease: Power4.easeIn
                                }) : TweenMax.to(this.character.group.position, 1, {
                                    x: -3e3,
                                    y: 70,
                                    ease: Power4.easeIn
                                }),
                                TweenMax.to(this.character.group.scale, 1, {
                                    x: 2,
                                    y: 2,
                                    z: 2,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.camera.position, 1, {
                                    x: 0,
                                    z: x.default.camZ,
                                    y: x.default.camY,
                                    ease: Power4.easeInOut,
                                    onUpdate: function () {
                                        i.camera.lookAt(i.vectorLookAt)
                                    },
                                    onComplete: e
                                }),
                                TweenMax.to(this.scene.fog, .2, {
                                    near: 2e3,
                                    far: 2100,
                                    ease: Power4.easeOut
                                }),
                                TweenMax.to(this.score, .5, {
                                    autoAlpha: 0,
                                    ease: Power4.easeOut
                                })
                        }
                    }]),
                    e
            }(d.default);
        e.default = w
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , h = function t(e, i, n) {
                null === e && (e = Function.prototype);
                var r = Object.getOwnPropertyDescriptor(e, i);
                if (void 0 === r) {
                    var a = Object.getPrototypeOf(e);
                    return null === a ? void 0 : t(a, i, n)
                }
                if ("value" in r)
                    return r.value;
                var o = r.get;
                if (void 0 !== o)
                    return o.call(n)
            }
            , l = i(0)
            , c = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(l)
            , u = i(4)
            , p = n(u)
            , d = i(15)
            , f = n(d)
            , m = i(31)
            , g = n(m)
            , v = i(5)
            , y = i(1)
            , _ = n(y)
            , x = i(3)
            , w = (n(x),
                function (t) {
                    function e(t, i, n, o) {
                        r(this, e);
                        var s = a(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t, i, n, o));
                        return s.name = "fish",
                            s.controls.enabled = !1,
                            s.isHiding = !1,
                            s.interval = setInterval(s.flyParticle.bind(s), 70),
                            s
                    }
                    return o(e, t),
                        s(e, [{
                            key: "defineVariables",
                            value: function () {
                                this.xLimit,
                                    this.yLimit,
                                    this.colors = ["#dff69e", "#00ceff", "#002bca", "#ff00e0", "#3f159f", "#71b583", "#00a2ff"],
                                    this.flyingParticles = [],
                                    this.waitingParticles = [],
                                    this.maxParticlesZ = 600,
                                    this.speed = {
                                        x: 0,
                                        y: 0
                                    },
                                    this.smoothing = 10,
                                    this.halfPI = Math.PI / 2
                            }
                        }, {
                            key: "createFloor",
                            value: function () { }
                        }, {
                            key: "updateSize",
                            value: function (t, i) {
                                this.ang = this.camera.fov / 2 * Math.PI / 180,
                                    this.yLimit = (this.camera.position.z + this.maxParticlesZ) * Math.tan(this.ang),
                                    this.xLimit = this.yLimit * this.camera.aspect,
                                    h(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "updateSize", this).call(this, t, i)
                            }
                        }, {
                            key: "updateSpeed",
                            value: function (t) {
                                this.speed.x += (t.x / this.width * 100 - this.speed.x) / 10,
                                    this.speed.y += ((t.y - this.height / 2) / 10 - this.speed.y) / 10
                            }
                        }, {
                            key: "createCharacter",
                            value: function () {
                                this.character = new f.default,
                                    this.character.init(),
                                    this.character.group.position.y = 100,
                                    this.character.group.rotation.y = -Math.PI / 2,
                                    this.character.group.visible = !1,
                                    this.scene.add(this.character.group)
                            }
                        }, {
                            key: "render",
                            value: function () {
                                this.isHiding || (this.updateSpeed(_.default.mousePos),
                                    this.character.group.position.x += (_.default.mousePos.x - this.width / 2 - this.character.group.position.x) / this.smoothing,
                                    this.character.group.position.y += (10 * -this.speed.y - this.character.group.position.y) / this.smoothing,
                                    this.character.swim(this.speed, this.smoothing));
                                for (var t = this.isHiding ? 10 : .2, i = 0; i < this.flyingParticles.length; i++) {
                                    var n = this.flyingParticles[i];
                                    n.mesh.rotation.y += 1 / n.mesh.scale.x * .05,
                                        n.mesh.rotation.x += 1 / n.mesh.scale.x * .05,
                                        n.mesh.rotation.z += 1 / n.mesh.scale.x * .05,
                                        n.mesh.position.x += -10 - 1 / n.mesh.scale.x * (this.speed.x + .1) * t,
                                        n.mesh.position.y += 1 / n.mesh.scale.x * (this.speed.y + .1) * t,
                                        n.mesh.position.x < -this.xLimit - 80 && (this.scene.remove(n.mesh),
                                            this.waitingParticles.push(this.flyingParticles.splice(i, 1)[0]),
                                            i--)
                                }
                                h(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "render", this).call(this)
                            }
                        }, {
                            key: "getParticle",
                            value: function () {
                                if (this.waitingParticles.length)
                                    return this.waitingParticles.pop();
                                var t = this.getRandomColor();
                                return new g.default(t)
                            }
                        }, {
                            key: "flyParticle",
                            value: function () {
                                var t = this.getParticle();
                                t.mesh.position.x = this.xLimit,
                                    t.mesh.position.y = -this.yLimit + Math.random() * this.yLimit * 2,
                                    t.mesh.position.z = Math.random() * this.maxParticlesZ;
                                var e = .1 + Math.random();
                                t.mesh.scale.set(e, e, e),
                                    this.flyingParticles.push(t),
                                    this.scene.add(t.mesh)
                            }
                        }, {
                            key: "getRandomColor",
                            value: function () {
                                var t = (0,
                                    v.hexToRgb)(this.colors[Math.floor(Math.random() * this.colors.length)]);
                                return new c.Color("rgb(" + t.r + "," + t.g + "," + t.b + ")")
                            }
                        }, {
                            key: "show",
                            value: function (t, e) {
                                this.character.group.visible = !0,
                                    "none" == t || (this.character.group.position.x = "right" == t ? 3e3 : -3e3),
                                    TweenMax.to(this.character.group.position, 1, {
                                        x: 0,
                                        y: 0,
                                        ease: Power4.easeOut
                                    }),
                                    TweenMax.to(this.character.group.rotation, 1, {
                                        y: 0,
                                        ease: Power4.easeOut
                                    })
                            }
                        }, {
                            key: "hide",
                            value: function (t, e) {
                                var i = this;
                                this.isHiding = !0,
                                    this.interval && clearInterval(this.interval),
                                    "none" == t ? TweenMax.to(this.character.group.position, 1, {
                                        x: 0,
                                        y: 100,
                                        ease: Power4.easeIn
                                    }) : "right" == t ? TweenMax.to(this.character.group.position, 1, {
                                        x: 3e3,
                                        y: 100,
                                        ease: Power4.easeIn
                                    }) : TweenMax.to(this.character.group.position, 1, {
                                        x: -3e3,
                                        y: 100,
                                        ease: Power4.easeIn
                                    }),
                                    TweenMax.to(this.speed, .5, {
                                        x: 0,
                                        y: 0,
                                        ease: Power4.easeOut,
                                        onUpdate: function () {
                                            i.character.swim(i.speed, 10)
                                        }
                                    }),
                                    TweenMax.to(this.character.group.rotation, 1, {
                                        y: -Math.PI / 2,
                                        delay: .5,
                                        ease: Power4.easeOut,
                                        onComplete: e
                                    })
                            }
                        }, {
                            key: "destroy",
                            value: function () {
                                for (this.interval && clearInterval(this.interval); this.waitingParticles.length;) {
                                    var t = this.waitingParticles.pop();
                                    t.mesh.geometry.dispose(),
                                        t.mesh.material.dispose(),
                                        t = null
                                }
                                for (; this.flyingParticles.length;) {
                                    var i = this.flyingParticles.pop();
                                    i.mesh.geometry.dispose(),
                                        i.mesh.material.dispose(),
                                        this.scene.remove(i.mesh),
                                        i = null
                                }
                                h(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "destroy", this).call(this)
                            }
                        }]),
                        e
                }(p.default));
        e.default = w
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , h = function t(e, i, n) {
                null === e && (e = Function.prototype);
                var r = Object.getOwnPropertyDescriptor(e, i);
                if (void 0 === r) {
                    var a = Object.getPrototypeOf(e);
                    return null === a ? void 0 : t(a, i, n)
                }
                if ("value" in r)
                    return r.value;
                var o = r.get;
                if (void 0 !== o)
                    return o.call(n)
            }
            , l = i(0)
            , c = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(l)
            , u = i(1)
            , p = (n(u),
                i(6))
            , d = n(p)
            , f = i(4)
            , m = n(f)
            , g = i(50)
            , v = n(g)
            , y = i(9)
            , _ = n(y)
            , x = i(3)
            , w = n(x)
            , b = i(11)
            , M = n(b)
            , T = i(18)
            , P = n(T)
            , S = i(39)
            , A = n(S)
            , E = function (t) {
                function e(t, i, n, o) {
                    r(this, e);
                    var s = a(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t, i, n, o));
                    return s.isExperiment = !1,
                        s.moh = new d.default,
                        s.selectedCharacter = s.charactersArray[s.moh.currentExperience],
                        s.firstSelection = !0,
                        s.controls.enabled = !1,
                        s.camCycleMove = {
                            angle: 0
                        },
                        s.background = new P.default,
                        s.ui = new A.default,
                        s.navController = new M.default,
                        s.ui.cta.addEventListener("mousedown", s.goExperience.bind(s)),
                        s.wheelenabled = !1,
                        s.enableWheel(),
                        s.initCharactersPos(),
                        s.createWordsParticles(),
                        s
                }
                return o(e, t),
                    s(e, [{
                        key: "mouseWheel",
                        value: function (t) {
                            this.wheelenabled && (Math.abs(t) < 15 || (this.disableWheel(),
                                t < 0 ? this.selectNext() : this.selectPrevious()))
                        }
                    }, {
                        key: "enableWheel",
                        value: function () {
                            this.wheelenabled = !0
                        }
                    }, {
                        key: "disableWheel",
                        value: function () {
                            this.wheelenabled = !1,
                                this.toWheel = setTimeout(this.enableWheel.bind(this), 1200)
                        }
                    }, {
                        key: "selectNext",
                        value: function () {
                            if (!(this.selectedCharacter.userData.index >= this.charactersArray.length - 1)) {
                                var t = this.charactersArray[this.selectedCharacter.userData.index + 1];
                                this.updateSelection(t)
                            }
                        }
                    }, {
                        key: "selectPrevious",
                        value: function () {
                            if (!(this.selectedCharacter.userData.index < 1)) {
                                var t = this.charactersArray[this.selectedCharacter.userData.index - 1];
                                this.updateSelection(t)
                            }
                        }
                    }, {
                        key: "createWordsParticles",
                        value: function () {
                            var t = this;
                            this.wordsParticles = new v.default(this.renderer),
                                this.wordsParticles.init(function () {
                                    t.scene.add(t.wordsParticles.particles),
                                        t.fboReady = !0,
                                        t.updateSelection(t.selectedCharacter)
                                })
                        }
                    }, {
                        key: "goExperience",
                        value: function () {
                            this.audioController.play(this.audioController.goExpFile),
                                this.moh.directionHideTo = "none",
                                this.moh.directionShowFrom = "none",
                                this.moh.switchWorld(this.selectedCharacter.userData.name)
                        }
                    }, {
                        key: "hide",
                        value: function (t, e) {
                            var i = this;
                            this.isHiding = !0,
                                this.ui.hide(),
                                this.hideCharacters(function () {
                                    i.wordsParticles.hide(e)
                                })
                        }
                    }, {
                        key: "show",
                        value: function (t, e) { }
                    }, {
                        key: "createCharacter",
                        value: function () {
                            this.raycaster = new c.Raycaster,
                                this.mousePos = new c.Vector2,
                                this.characters = _.default,
                                this.charactersArray = [],
                                this.collidersArray = [],
                                this.scaleMultiplier = w.default.scaleMultiplier,
                                this.charSpacing = 300;
                            for (var t = 0, e = this.characters.length; t < e; t++) {
                                var i = this.characters[t]
                                    , n = t * this.charSpacing - e / 2 * this.charSpacing;
                                n *= this.scaleMultiplier,
                                    i.o = new i.c,
                                    i.o.init(),
                                    i.o.group.position.y = i.posy * this.scaleMultiplier,
                                    i.o.group.rotation.y = i.rotationY,
                                    i.o.group.scale.set(i.scale * this.scaleMultiplier, i.scale * this.scaleMultiplier, i.scale * this.scaleMultiplier),
                                    i.wrapper = new c.Group,
                                    i.wrapper.add(i.o.group),
                                    i.wrapper.position.x = n,
                                    i.wrapper.visible = !1,
                                    i.wrapper.userData = {
                                        index: t,
                                        name: i.n,
                                        title: i.title,
                                        description: i.description,
                                        bc: i.bc,
                                        tc: i.tc,
                                        holder: i.o
                                    },
                                    this.scene.add(i.wrapper),
                                    this.charactersArray.push(i.wrapper),
                                    this.collidersArray.push(i.o.collider)
                            }
                        }
                    }, {
                        key: "mouseDown",
                        value: function (t) {
                            this.mousePos.x = t.px,
                                this.mousePos.y = -t.py,
                                this.raycaster.setFromCamera(this.mousePos, this.camera);
                            var e = this.raycaster.intersectObjects(this.collidersArray);
                            e.length > 0 && this.updateSelection(e[0].object.parent.parent)
                        }
                    }, {
                        key: "render",
                        value: function () {
                            this.fboReady && this.wordsParticles.updateRender();
                            for (var t = 0, i = this.charactersArray.length; t < i; t++) {
                                var n = this.charactersArray[t].userData.holder;
                                this.isHiding ? n.fix() : this.charactersArray[t] != this.selectedCharacter || this.audioController.audioMute ? n.idle() : n.swing()
                            }
                            h(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "render", this).call(this)
                        }
                    }, {
                        key: "updateSelection",
                        value: function (t) {
                            var e = this;
                            this.oldSelectedCharacter = this.selectedCharacter,
                                this.selectedCharacter = t;
                            var i = t
                                , n = i.userData.index;
                            this.audioController.play("random"),
                                this.ui.update(i.userData.title, i.userData.description, i.userData.tc),
                                this.navController.updateColor(i.userData.tc);
                            var r = n > this.oldSelectedCharacter.userData.index ? "right" : "left";
                            this.background.update(i.userData.bc, r),
                                this.wordsParticles.updateText(n, i.userData.bc);
                            for (var a = 0, o = this.charactersArray.length; a < o; a++) {
                                var s = this.charactersArray[a]
                                    , h = s.userData.index
                                    , l = h - n
                                    , c = s == i ? 0 : this.firstSelection ? 1 : 0
                                    , u = 0 === l ? 1.5 : .9
                                    , p = l < 0 ? -300 : l > 0 ? 300 : 0
                                    , d = p + l * this.charSpacing * 1;
                                d *= this.scaleMultiplier;
                                var f = s === i ? 400 : -300;
                                f *= this.scaleMultiplier,
                                    TweenMax.to(s.position, 1, {
                                        x: d,
                                        z: f,
                                        delay: c,
                                        ease: Power4.easeOut
                                    }),
                                    TweenMax.to(s.scale, 1, {
                                        x: u,
                                        y: u,
                                        z: u,
                                        delay: c,
                                        ease: Power4.easeOut
                                    })
                            }
                            var m = n - this.oldSelectedCharacter.userData.index
                                , g = 200 * Math.abs(m) * this.scaleMultiplier
                                , v = 100 * Math.abs(m) * this.scaleMultiplier;
                            this.camCycleMove.angle = this.camCycleMove.angle % 3.14,
                                TweenMax.to(this.camCycleMove, 1, {
                                    angle: 3.14,
                                    ease: Power4.easeOut,
                                    onUpdate: function () {
                                        e.camera.position.y = w.default.camY + Math.sin(e.camCycleMove.angle) * v,
                                            e.camera.position.z = w.default.camZ + Math.sin(e.camCycleMove.angle) * g
                                    },
                                    onComplete: function () { }
                                }),
                                this.firstSelection = !1
                        }
                    }, {
                        key: "initCharactersPos",
                        value: function () {
                            for (var t = this.selectedCharacter.userData.index, e = 0, i = this.charactersArray.length; e < i; e++) {
                                var n = this.charactersArray[e]
                                    , r = n.userData.index
                                    , a = r - t
                                    , o = a < 0 ? -3e3 : a > 0 ? 3e3 : 0
                                    , s = o + a * this.charSpacing * 1;
                                s *= this.scaleMultiplier,
                                    n.position.x = s,
                                    n.visible = !0
                            }
                        }
                    }, {
                        key: "hideCharacters",
                        value: function (t) {
                            var e = this.selectedCharacter.userData.index
                                , t = t
                                , i = Math.max(e + 1, this.charactersArray.length - e - 1)
                                , n = new TimelineMax({
                                    onComplete: t
                                });
                            n.add("start");
                            for (var r = 0, a = this.charactersArray.length; r < a; r++) {
                                var o = this.charactersArray[r]
                                    , s = o.userData.index
                                    , h = s - e
                                    , l = h < 0 ? -3e3 : h > 0 ? 3e3 : 0
                                    , c = l + h * this.charSpacing * 1;
                                c *= this.scaleMultiplier;
                                var u = .05 * (i - Math.abs(h));
                                n.to(o.position, .5, {
                                    x: c,
                                    z: 0,
                                    y: 0,
                                    delay: u,
                                    ease: Power4.easeIn
                                }, "start"),
                                    n.to(o.scale, .5, {
                                        x: 1,
                                        y: 1,
                                        z: 1,
                                        delay: u,
                                        ease: Power4.easeIn
                                    }, "start")
                            }
                            n.to(this.camera.position, .5, {
                                z: w.default.camZ,
                                y: w.default.camY,
                                ease: Power4.easeOut
                            }, "start")
                        }
                    }, {
                        key: "destroy",
                        value: function () {
                            this.ui.cta.removeEventListener("mousedown", this.goExperience.bind(this)),
                                clearTimeout(this.toWheel),
                                h(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "destroy", this).call(this)
                        }
                    }]),
                    e
            }(m.default);
        e.default = E
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , h = function t(e, i, n) {
                null === e && (e = Function.prototype);
                var r = Object.getOwnPropertyDescriptor(e, i);
                if (void 0 === r) {
                    var a = Object.getPrototypeOf(e);
                    return null === a ? void 0 : t(a, i, n)
                }
                if ("value" in r)
                    return r.value;
                var o = r.get;
                if (void 0 !== o)
                    return o.call(n)
            }
            , l = i(0)
            , c = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(l)
            , u = i(1)
            , p = n(u)
            , d = i(4)
            , f = n(d)
            , m = i(16)
            , g = n(m)
            , v = i(25)
            , y = n(v)
            , _ = i(3)
            , x = n(_)
            , w = function (t) {
                function e(t, i, n, o) {
                    r(this, e);
                    var s = a(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t, i, n, o));
                    return s.name = "lion",
                        s.controls.enabled = !1,
                        s
                }
                return o(e, t),
                    s(e, [{
                        key: "createCharacter",
                        value: function () {
                            this.character = new g.default,
                                this.character.init(),
                                this.character.group.position.set(0, 100, 0),
                                this.character.group.visible = !1,
                                this.scene.add(this.character.group),
                                this.fan = new y.default,
                                this.fan.init(),
                                this.fan.group.position.z = 350,
                                this.scene.add(this.fan.group)
                        }
                    }, {
                        key: "createLights",
                        value: function () {
                            this.globalLight = new c.HemisphereLight(16777215, 5592405, 1),
                                this.shadowLight = new c.DirectionalLight(16777215, .4),
                                this.shadowLight.position.set(100, 250, 75),
                                this.shadowLight.castShadow = !0,
                                this.shadowLight.shadow.camera.left = -400,
                                this.shadowLight.shadow.camera.right = 400,
                                this.shadowLight.shadow.camera.top = 400,
                                this.shadowLight.shadow.camera.bottom = -400,
                                this.shadowLight.shadow.camera.near = 1,
                                this.shadowLight.shadow.camera.far = 400,
                                this.shadowLight.shadow.mapSize.width = this.shadowLight.shadow.mapSize.height = 2048,
                                this.scene.add(this.globalLight),
                                this.scene.add(this.shadowLight)
                        }
                    }, {
                        key: "hide",
                        value: function (t, e) {
                            this.isHiding = !0,
                                "none" == t || ("right" == t ? TweenMax.to(this.character.group.position, 1, {
                                    x: 3e3,
                                    ease: Power4.easeIn
                                }) : TweenMax.to(this.character.group.position, 1, {
                                    x: -3e3,
                                    ease: Power4.easeIn
                                })),
                                TweenMax.to(this.camera.position, 1, {
                                    z: x.default.camZ,
                                    y: x.default.camY,
                                    ease: Power4.easeInOut,
                                    onComplete: e
                                })
                        }
                    }, {
                        key: "show",
                        value: function (t, e) {
                            this.character.group.visible = !0,
                                "none" == t || ("right" == t ? TweenMax.from(this.character.group.position, 1, {
                                    x: 3e3,
                                    ease: Power4.easeOut
                                }) : TweenMax.from(this.character.group.position, 1, {
                                    x: -3e3,
                                    ease: Power4.easeOut
                                })),
                                this.camera.lookAt(new c.Vector3(0, 0, 0)),
                                TweenMax.to(this.camera.position, 1, {
                                    z: 1e3,
                                    y: 250,
                                    ease: Power4.easeInOut,
                                    onUpdate: function () { },
                                    onComplete: e
                                })
                        }
                    }, {
                        key: "mouseMove",
                        value: function (t) { }
                    }, {
                        key: "mouseDown",
                        value: function (t) {
                            this.fan.isBlowing = !0
                        }
                    }, {
                        key: "mouseUp",
                        value: function (t) {
                            this.fan.isBlowing = !1
                        }
                    }, {
                        key: "render",
                        value: function () {
                            this.fan.update(p.default.mousePos.cx, p.default.mousePos.cy),
                                this.isHiding ? this.character.fix() : this.fan.isBlowing ? this.character.cool(p.default.mousePos.cx, p.default.mousePos.cy) : this.character.look(p.default.mousePos.cx, p.default.mousePos.cy),
                                h(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "render", this).call(this)
                        }
                    }]),
                    e
            }(f.default);
        e.default = w
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" != typeof e && "function" != typeof e ? t : e
        }
        function o(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
                e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , h = function t(e, i, n) {
                null === e && (e = Function.prototype);
                var r = Object.getOwnPropertyDescriptor(e, i);
                if (void 0 === r) {
                    var a = Object.getPrototypeOf(e);
                    return null === a ? void 0 : t(a, i, n)
                }
                if ("value" in r)
                    return r.value;
                var o = r.get;
                if (void 0 !== o)
                    return o.call(n)
            }
            , l = i(0)
            , c = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(l)
            , u = i(1)
            , p = (n(u),
                i(4))
            , d = n(p)
            , f = i(17)
            , m = n(f)
            , g = i(26)
            , v = n(g)
            , y = i(34)
            , _ = n(y)
            , x = i(33)
            , w = n(x)
            , b = i(32)
            , M = n(b)
            , T = i(35)
            , P = n(T)
            , S = i(3)
            , A = n(S)
            , E = function (t) {
                function e(t, i, n, o) {
                    r(this, e);
                    var s = a(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t, i, n, o));
                    return s.name = "rabbit",
                        s.controls.enabled = !1,
                        s.scene.fog = new c.Fog(14084838, 1600, 3500),
                        s
                }
                return o(e, t),
                    s(e, [{
                        key: "defineVariables",
                        value: function () {
                            this.speed = 6,
                                this.delta = 0,
                                this.fogNear = 160,
                                this.fogFar = 350,
                                this.floorRadius = 200,
                                this.distance = 0,
                                this.level = 1,
                                this.levelInterval,
                                this.levelUpdateFreq = 3e3,
                                this.initSpeed = 5,
                                this.maxSpeed = 48,
                                this.initMonsterPos = 1.5,
                                this.monsterPos = .7,
                                this.monsterPosTarget = .7,
                                this.floorRotation = 0,
                                this.collisionObstacle = 10,
                                this.collisionBonus = 20,
                                this.gameStatus = "intro",
                                this.cameraPosGame = 160,
                                this.cameraPosGameOver = 260,
                                this.monsterAcceleration = .004,
                                this.malusClearColor = 11815737,
                                this.malusClearAlpha = 0,
                                this.PI = Math.PI,
                                this.clock = new c.Clock,
                                this.fieldDistance = document.getElementsByClassName("top-score")[0],
                                this.fieldGameOver = document.getElementsByClassName("gameover-instructions")[0],
                                this.defineMaterials()
                        }
                    }, {
                        key: "createLights",
                        value: function () {
                            this.globalLight = new c.AmbientLight(16777215, .9),
                                this.shadowLight = new c.DirectionalLight(16777215, 1),
                                this.shadowLight.position.set(-30, 400, 200),
                                this.shadowLight.castShadow = !0,
                                this.shadowLight.shadow.camera.left = -400,
                                this.shadowLight.shadow.camera.right = 400,
                                this.shadowLight.shadow.camera.top = 400,
                                this.shadowLight.shadow.camera.bottom = -400,
                                this.shadowLight.shadow.camera.near = 1,
                                this.shadowLight.shadow.camera.far = 2e3,
                                this.shadowLight.shadow.mapSize.width = this.shadowLight.shadow.mapSize.height = 2048,
                                this.scene.add(this.globalLight),
                                this.scene.add(this.shadowLight)
                        }
                    }, {
                        key: "mouseDown",
                        value: function (t) {
                            "play" == this.gameStatus ? this.character.jump(this.speed) : "readyToReplay" == this.gameStatus && this.replay()
                        }
                    }, {
                        key: "createCharacter",
                        value: function () {
                            this.character = new m.default,
                                this.character.init(),
                                this.character.group.position.set(0, 0, 0),
                                this.character.group.scale.set(8, 8, 8),
                                this.character.group.visible = !1,
                                this.character.nod(),
                                this.scene.add(this.character.group),
                                this.monster = new v.default,
                                this.monster.init(),
                                this.monster.group.position.z = 20,
                                this.monster.body.rotation.y = Math.PI / 2,
                                this.monster.group.visible = !1,
                                this.scene.add(this.monster.group),
                                this.updateMonsterPosition(),
                                this.carrot = new w.default,
                                this.scene.add(this.carrot.mesh),
                                this.obstacle = new _.default,
                                this.obstacle.body.rotation.y = -Math.PI / 2,
                                this.obstacle.mesh.scale.set(1.1, 1.1, 1.1),
                                this.obstacle.mesh.position.y = this.floorRadius + 4,
                                this.obstacle.nod(),
                                this.scene.add(this.obstacle.mesh),
                                this.bonusParticles = new M.default,
                                this.bonusParticles.mesh.visible = !1,
                                this.scene.add(this.bonusParticles.mesh)
                        }
                    }, {
                        key: "createFloor",
                        value: function () {
                            this.floorShadow = new c.Mesh(new c.SphereGeometry(this.floorRadius, 50, 50), new c.MeshPhongMaterial({
                                color: 8044430,
                                specular: 0,
                                shininess: 1,
                                transparent: !0,
                                opacity: .5
                            })),
                                this.floorShadow.receiveShadow = !0,
                                this.floorGrass = new c.Mesh(new c.SphereGeometry(this.floorRadius - .5, 50, 50), new c.MeshBasicMaterial({
                                    color: 8044430
                                })),
                                this.floorGrass.receiveShadow = !1,
                                this.floor = new c.Group,
                                this.floor.position.y = 10 * -this.floorRadius,
                                this.floor.add(this.floorShadow),
                                this.floor.add(this.floorGrass),
                                this.scene.add(this.floor),
                                this.createFirs()
                        }
                    }, {
                        key: "updateMonsterPosition",
                        value: function () {
                            this.monster.run(this.speed, this.delta),
                                this.monsterPosTarget -= this.delta * this.monsterAcceleration,
                                this.monsterPos += (this.monsterPosTarget - this.monsterPos) * this.delta,
                                this.monsterPos < .56 && this.gameOver();
                            var t = Math.PI * this.monsterPos;
                            this.monster.group.position.y = -this.floorRadius + Math.sin(t) * (this.floorRadius + 12),
                                this.monster.group.position.x = Math.cos(t) * (this.floorRadius + 15),
                                this.monster.group.rotation.z = -Math.PI / 2 + t
                        }
                    }, {
                        key: "gameOver",
                        value: function () {
                            var t = this;
                            this.initMonsterPos = .56,
                                TweenMax.set(this.fieldGameOver, {
                                    display: "block"
                                }),
                                TweenMax.to(this.fieldGameOver, 3, {
                                    autoAlpha: 1,
                                    ease: Power4.easeOut
                                }),
                                TweenMax.to(this.camera.position, 1, {
                                    z: this.cameraPosGameOver,
                                    ease: Power4.easeInOut,
                                    onUpdate: function () {
                                        t.camera.lookAt(new c.Vector3(0, 30, 0))
                                    }
                                }),
                                this.gameStatus = "gameOver",
                                this.monster.sit(function () {
                                    t.gameStatus = "readyToReplay"
                                }),
                                this.character.hang(),
                                this.monster.heroHolder.add(this.character.group),
                                TweenMax.to(this, 1, {
                                    speed: 0
                                }),
                                TweenMax.to(this, 1, {
                                    speed: 0
                                }),
                                this.carrot.mesh.visible = !1,
                                this.obstacle.mesh.visible = !1,
                                clearInterval(this.levelInterval)
                        }
                    }, {
                        key: "replay",
                        value: function () {
                            var t = this;
                            this.gameStatus = "preparingToReplay",
                                TweenMax.to(this.fieldGameOver, .5, {
                                    autoAlpha: 0,
                                    ease: Power4.easeIn
                                }),
                                TweenMax.killTweensOf(this.monster.pawFL.position),
                                TweenMax.killTweensOf(this.monster.pawFR.position),
                                TweenMax.killTweensOf(this.monster.pawBL.position),
                                TweenMax.killTweensOf(this.monster.pawBR.position),
                                TweenMax.killTweensOf(this.monster.pawFL.rotation),
                                TweenMax.killTweensOf(this.monster.pawFR.rotation),
                                TweenMax.killTweensOf(this.monster.pawBL.rotation),
                                TweenMax.killTweensOf(this.monster.pawBR.rotation),
                                TweenMax.killTweensOf(this.monster.tail.rotation),
                                TweenMax.killTweensOf(this.monster.head.rotation),
                                TweenMax.killTweensOf(this.monster.eyeL.scale),
                                TweenMax.killTweensOf(this.monster.eyeR.scale),
                                this.monster.tail.rotation.y = 0,
                                TweenMax.to(this.camera.position, 3, {
                                    z: this.cameraPosGame,
                                    x: 0,
                                    y: 30,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.monster.torso.rotation, 2, {
                                    x: 0,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.monster.torso.position, 2, {
                                    y: 0,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.monster.pawFL.rotation, 2, {
                                    x: 0,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.monster.pawFR.rotation, 2, {
                                    x: 0,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.monster.mouth.rotation, 2, {
                                    x: .5,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.monster.head.rotation, 2, {
                                    y: 0,
                                    x: -.3,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.character.group.position, 2, {
                                    x: 20,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.character.head.rotation, 2, {
                                    x: 0,
                                    y: 0,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.monster.mouth.rotation, 2, {
                                    x: .2,
                                    ease: Power4.easeInOut
                                }),
                                TweenMax.to(this.monster.mouth.rotation, 1, {
                                    x: .4,
                                    ease: Power4.easeIn,
                                    delay: 1,
                                    onComplete: function () {
                                        t.resetGame()
                                    }
                                })
                        }
                    }, {
                        key: "createFirs",
                        value: function () {
                            for (var t = 0; t < 100; t++) {
                                var e = t * (2 * Math.PI) / 100
                                    , i = Math.PI / 2;
                                i += Math.random() > .05 ? .25 + .3 * Math.random() : -.35 - .1 * Math.random();
                                var n = new P.default(this.mats);
                                n.mesh.position.x = Math.sin(i) * Math.cos(e) * this.floorRadius,
                                    n.mesh.position.y = Math.sin(i) * Math.sin(e) * (this.floorRadius - 10),
                                    n.mesh.position.z = Math.cos(i) * this.floorRadius;
                                var r = n.mesh.position.clone()
                                    , a = new c.Vector3(0, 1, 0);
                                n.mesh.quaternion.setFromUnitVectors(a, r.clone().normalize()),
                                    this.floor.add(n.mesh)
                            }
                        }
                    }, {
                        key: "updateCarrotPosition",
                        value: function () {
                            this.carrot.mesh.rotation.y += 6 * this.delta,
                                this.carrot.mesh.rotation.z = Math.PI / 2 - (this.floorRotation + this.carrot.angle),
                                this.carrot.mesh.position.y = -this.floorRadius + Math.sin(this.floorRotation + this.carrot.angle) * (this.floorRadius + 50),
                                this.carrot.mesh.position.x = Math.cos(this.floorRotation + this.carrot.angle) * (this.floorRadius + 50)
                        }
                    }, {
                        key: "updateObstaclePosition",
                        value: function () {
                            "flying" != this.obstacle.status && (this.floorRotation + this.obstacle.angle > 2.5 && (this.obstacle.angle = -this.floorRotation + .3 * Math.random(),
                                this.obstacle.body.rotation.y = Math.random() * Math.PI * 2),
                                this.obstacle.mesh.rotation.z = this.floorRotation + this.obstacle.angle - Math.PI / 2,
                                this.obstacle.mesh.position.y = -this.floorRadius + Math.sin(this.floorRotation + this.obstacle.angle) * (this.floorRadius + 3),
                                this.obstacle.mesh.position.x = Math.cos(this.floorRotation + this.obstacle.angle) * (this.floorRadius + 3))
                        }
                    }, {
                        key: "updateFloorRotation",
                        value: function () {
                            this.floorRotation += .03 * this.delta * this.speed,
                                this.floorRotation = this.floorRotation % (2 * Math.PI),
                                this.floor.rotation.z = this.floorRotation
                        }
                    }, {
                        key: "checkCollision",
                        value: function () {
                            var t = this.character.group.position.clone().sub(this.carrot.mesh.position.clone())
                                , e = this.character.group.position.clone().sub(this.obstacle.mesh.position.clone());
                            t.length() < this.collisionBonus && this.getBonus(),
                                e.length() < this.collisionObstacle && "flying" != this.obstacle.status && this.getMalus()
                        }
                    }, {
                        key: "getBonus",
                        value: function () {
                            this.bonusParticles.mesh.position.copy(this.carrot.mesh.position),
                                this.bonusParticles.mesh.visible = !0,
                                this.bonusParticles.explose(),
                                this.carrot.angle += Math.PI / 2,
                                this.monsterPosTarget += .025
                        }
                    }, {
                        key: "getMalus",
                        value: function () {
                            var t = this;
                            this.obstacle.status = "flying";
                            var e = Math.random() > .5 ? -20 - 10 * Math.random() : 20 + 5 * Math.random();
                            TweenMax.to(this.obstacle.mesh.position, 4, {
                                x: e,
                                y: 50 * Math.random(),
                                z: 350,
                                ease: Power4.easeOut
                            }),
                                TweenMax.to(this.obstacle.mesh.rotation, 4, {
                                    x: 3 * Math.PI,
                                    z: 3 * Math.PI,
                                    y: 6 * Math.PI,
                                    ease: Power4.easeOut,
                                    onComplete: function () {
                                        t.obstacle.status = "ready",
                                            t.obstacle.body.rotation.y = Math.random() * Math.PI * 2,
                                            t.obstacle.angle = -t.floorRotation - .4 * Math.random(),
                                            t.obstacle.angle = t.obstacle.angle % (2 * Math.PI),
                                            t.obstacle.mesh.rotation.x = 0,
                                            t.obstacle.mesh.rotation.y = 0,
                                            t.obstacle.mesh.rotation.z = 0,
                                            t.obstacle.mesh.position.z = 0
                                    }
                                }),
                                this.monsterPosTarget -= .04,
                                TweenMax.from(this, .5, {
                                    malusClearAlpha: .5,
                                    onUpdate: function () {
                                        t.renderer.setClearColor(t.malusClearColor, t.malusClearAlpha)
                                    }
                                })
                        }
                    }, {
                        key: "updateDistance",
                        value: function () {
                            this.distance += this.delta * this.speed;
                            var t = this.distance / 2;
                            this.fieldDistance.innerHTML = Math.floor(t)
                        }
                    }, {
                        key: "updateLevel",
                        value: function () {
                            this.speed >= this.maxSpeed || (this.level++,
                                this.speed += 2)
                        }
                    }, {
                        key: "render",
                        value: function () {
                            this.clock && (this.delta = this.clock.getDelta()),
                                this.updateFloorRotation(),
                                "outro" == this.gameStatus && this.character.fix(),
                                "play" != this.gameStatus && "intro" != this.gameStatus || ("running" == this.character.status && this.character.run(this.delta, this.speed),
                                    this.updateDistance(),
                                    this.updateMonsterPosition(),
                                    this.updateCarrotPosition(),
                                    this.updateObstaclePosition(),
                                    this.checkCollision()),
                                h(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "render", this).call(this)
                        }
                    }, {
                        key: "resetGame",
                        value: function () {
                            this.scene.add(this.character.group),
                                this.character.group.rotation.y = Math.PI / 2,
                                this.character.group.position.y = 0,
                                this.character.group.position.z = 0,
                                this.character.group.position.x = 0,
                                this.monsterPos = this.initMonsterPos,
                                this.monsterPosTarget = .65,
                                this.speed = this.initSpeed,
                                this.level = 0,
                                this.distance = 0,
                                this.carrot.mesh.visible = !0,
                                this.obstacle.mesh.visible = !0,
                                this.gameStatus = "play",
                                this.character.status = "running",
                                this.character.nod(),
                                this.updateLevel(),
                                this.levelInterval = setInterval(this.updateLevel.bind(this), this.levelUpdateFreq)
                        }
                    }, {
                        key: "defineMaterials",
                        value: function () {
                            this.blackMat = new c.MeshPhongMaterial({
                                color: 1050375,
                                shading: c.FlatShading
                            }),
                                this.brownMat = new c.MeshPhongMaterial({
                                    color: 11815737,
                                    shininess: 0,
                                    shading: c.FlatShading
                                }),
                                this.greenMat = new c.MeshPhongMaterial({
                                    color: 8044430,
                                    shininess: 0,
                                    shading: c.FlatShading
                                }),
                                this.pinkMat = new c.MeshPhongMaterial({
                                    color: 14442309,
                                    shininess: 0,
                                    shading: c.FlatShading
                                }),
                                this.lightBrownMat = new c.MeshPhongMaterial({
                                    color: 14711383,
                                    shading: c.FlatShading
                                }),
                                this.whiteMat = new c.MeshPhongMaterial({
                                    color: 10786697,
                                    shading: c.FlatShading
                                }),
                                this.skinMat = new c.MeshPhongMaterial({
                                    color: 16752293,
                                    shading: c.FlatShading
                                }),
                                this.mats = [this.blackMat, this.brownMat, this.pinkMat, this.whiteMat, this.greenMat, this.lightBrownMat, this.pinkMat]
                        }
                    }, {
                        key: "show",
                        value: function (t, e) {
                            var i = this;
                            this.initMonsterPos = 1.5,
                                this.character.group.visible = !0,
                                this.tlShow = new TimelineMax({
                                    onComplete: function () {
                                        i.resetGame(),
                                            i.monster.group.visible = !0
                                    }
                                }),
                                this.tlShow.add("start"),
                                this.tlShow.set(this.fieldDistance, {
                                    display: "block"
                                }),
                                this.tlShow.to(this.fieldDistance, 2, {
                                    autoAlpha: 1
                                }, "start"),
                                "none" == t || (this.character.group.position.x = "right" == t ? 3e3 : -3e3),
                                this.tlShow.to(this.character.group.position, 2, {
                                    x: 0,
                                    y: 0,
                                    ease: Power4.easeOut
                                }, "start"),
                                this.tlShow.to(this.character.group.rotation, 1, {
                                    y: Math.PI / 2,
                                    ease: Power4.easeOut
                                }, "start+=.5"),
                                this.tlShow.to(this.character.group.scale, 2, {
                                    x: 1,
                                    y: 1,
                                    z: 1,
                                    ease: Power4.easeOut
                                }, "start"),
                                this.tlShow.to(this.camera.position, 2, {
                                    x: 0,
                                    y: 30,
                                    z: this.cameraPosGame,
                                    ease: Power4.easeOut,
                                    onUpdate: function () {
                                        i.camera.lookAt(new c.Vector3(0, 30, 0))
                                    }
                                }, "start"),
                                this.tlShow.to(this.scene.fog, 1, {
                                    near: this.fogNear,
                                    far: this.fogFar,
                                    ease: Power4.easeOut
                                }, "start+=.5"),
                                this.tlShow.to(this.floor.position, 1, {
                                    y: -this.floorRadius,
                                    ease: Power4.easeOut
                                }, "start+=.5")
                        }
                    }, {
                        key: "hide",
                        value: function (t, e) {
                            var i = this;
                            this.gameStatus = "outro",
                                this.monster.group.visible = !1,
                                this.obstacle.mesh.visible = !1,
                                this.carrot.mesh.visible = !1,
                                this.bonusParticles.mesh.visible = !1,
                                this.tlHide = new TimelineMax({
                                    onComplete: e
                                }),
                                this.tlHide.add("start"),
                                this.tlHide.to(this.shadowLight.position, 2, {
                                    x: A.default.shadowLightX,
                                    y: A.default.shadowLightY,
                                    z: A.default.shadowLightZ,
                                    intensity: A.default.shadowLightIntensity
                                }),
                                this.tlHide.to(this.fieldDistance, 1, {
                                    autoAlpha: 0,
                                    onComplete: function () {
                                        TweenMax.set(i.fieldDistance, {
                                            display: "none"
                                        })
                                    }
                                }, "start"),
                                this.tlHide.to(this.fieldGameOver, 1, {
                                    autoAlpha: 0,
                                    onComplete: function () {
                                        TweenMax.set(i.fieldGameOver, {
                                            display: "none"
                                        })
                                    }
                                }, "start"),
                                this.tlHide.to(this.character.group.rotation, 2, {
                                    y: 0,
                                    ease: Power4.easeOut
                                }, "start"),
                                this.tlHide.to(this.character.group.scale, 2, {
                                    x: 8,
                                    y: 8,
                                    z: 8,
                                    ease: Power4.easeOut
                                }, "start"),
                                "none" == t ? this.tlHide.to(this.character.group.position, 2, {
                                    x: 0,
                                    y: 0,
                                    ease: Power4.easeIn
                                }, "start") : "right" == t ? this.tlHide.to(this.character.group.position, 2, {
                                    x: 3e3,
                                    y: 0,
                                    ease: Power4.easeIn
                                }, "start") : this.tlHide.to(this.character.group.position, 2, {
                                    x: -3e3,
                                    y: 0,
                                    ease: Power4.easeIn
                                }, "start"),
                                this.tlHide.to(this.camera.position, 2, {
                                    z: A.default.camZ,
                                    y: A.default.camY,
                                    ease: Power4.easeOut,
                                    onUpdate: function () {
                                        i.camera.lookAt(new c.Vector3(0, 30, 0))
                                    }
                                }, "start"),
                                this.tlHide.to(this.scene.fog, 2, {
                                    near: 10 * this.fogNear,
                                    far: 10 * this.fogFar,
                                    ease: Power4.easeOut
                                }, "start"),
                                this.tlHide.to(this.floor.position, 2, {
                                    y: 10 * -this.floorRadius,
                                    ease: Power4.easeOut
                                }, "start")
                        }
                    }]),
                    e
            }(d.default);
        e.default = E
    }
    , function (t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function r(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var a = function () {
            function t(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value" in n && (n.writable = !0),
                        Object.defineProperty(t, n.key, n)
                }
            }
            return function (e, i, n) {
                return i && t(e.prototype, i),
                    n && t(e, n),
                    e
            }
        }()
            , o = i(0)
            , s = function (t) {
                if (t && t.__esModule)
                    return t;
                var e = {};
                if (null != t)
                    for (var i in t)
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e.default = t,
                    e
            }(o)
            , h = i(41)
            , l = n(h)
            , c = i(42)
            , u = n(c)
            , p = i(40)
            , d = i(52)
            , f = null
            , m = !1
            , g = function () {
                function t(e) {
                    if (r(this, t),
                        f)
                        return f;
                    this.bgr1 = document.getElementsByClassName("bgr1")[0],
                        this.bgr2 = document.getElementsByClassName("bgr2")[0],
                        this.bgrBack = this.bgr1,
                        this.bgrFront = this.bgr2,
                        this.renderer = e,
                        this.index = this.oldIndex = 0,
                        this.color = this.oldColor = 0,
                        this.timer = 0,
                        this.isVisible = !1,
                        f = this
                }
                return a(t, [{
                    key: "init",
                    value: function (t) {
                        var e = this;
                        if (m)
                            return void t();
                        this.callback = t,
                            this.fontReady.then(function () {
                                e.createTexts()
                            })
                    }
                }, {
                    key: "createTexts",
                    value: function () {
                        this.texts = ["Chilliness", "Petting", "Relief", "Paranoia", "Hope", "Truth"],
                            this.timer = 0,
                            this.particlesColumns = 2048,
                            this.particlesRows = 190,
                            this.particlesCount = this.particlesColumns * this.particlesRows,
                            this.titleCanvas = document.createElement("canvas"),
                            this.ctx = this.titleCanvas.getContext("2d"),
                            this.ctx.scale(2, 2),
                            this.titleCanvas.width = this.particlesColumns,
                            this.titleCanvas.height = this.particlesColumns,
                            this.ctx.textAlign = "center",
                            this.ctx.font = "240px 'Yeseva'";
                        for (var t = 0, e = 0, i = this.texts.length; e < i; e++) {
                            t += 180;
                            var n = this.texts[e].toUpperCase();
                            n = n.split("").join(""),
                                this.ctx.fillText(n, this.titleCanvas.width / 2, t),
                                t += 10
                        }
                        this.tex = new s.CanvasTexture(this.titleCanvas),
                            (new l.default).loadShaders({
                                simulation_vs: "",
                                simulation_fs: "",
                                render_vs: "",
                                render_fs: ""
                            }, "./glsl/titlePoints/", this.createPoints.bind(this)),
                            m = !0
                    }
                }, {
                    key: "createPoints",
                    value: function () {
                        this.simulationShader = new s.ShaderMaterial({
                            uniforms: {
                                timer: {
                                    type: "f",
                                    value: this.timer
                                },
                                currentPosition: {
                                    type: "f",
                                    value: 0
                                },
                                newPosition: {
                                    type: "f",
                                    value: 0
                                },
                                texture: {
                                    type: "t",
                                    value: this.tex
                                },
                                texSize: {
                                    type: "f",
                                    value: this.particlesColumns
                                },
                                texStep: {
                                    type: "f",
                                    value: this.particlesRows
                                },
                                depth: {
                                    type: "f",
                                    value: 300
                                },
                                scale: {
                                    type: "f",
                                    value: 7e3
                                },
                                animRatio: {
                                    type: "f",
                                    value: 0
                                },
                                hideRatio: {
                                    type: "f",
                                    value: 2
                                }
                            },
                            vertexShader: l.default.get("simulation_vs"),
                            fragmentShader: l.default.get("simulation_fs"),
                            transparent: !0,
                            side: s.DoubleSide
                        }),
                            this.renderShader = new s.ShaderMaterial({
                                uniforms: {
                                    positions: {
                                        type: "t",
                                        value: null
                                    },
                                    currentCol: {
                                        type: "v3",
                                        value: new s.Vector3(1, 1, 1)
                                    },
                                    newCol: {
                                        type: "v3",
                                        value: new s.Vector3(1, 1, 1)
                                    },
                                    pointSize: {
                                        type: "f",
                                        value: 1
                                    },
                                    animRatio: {
                                        type: "f",
                                        value: 0
                                    }
                                },
                                vertexShader: l.default.get("render_vs"),
                                fragmentShader: l.default.get("render_fs"),
                                transparent: !0,
                                blending: s.AdditiveBlending,
                                side: s.DoubleSide
                            }),
                            u.default.init(this.particlesColumns, this.particlesRows, this.renderer, this.simulationShader, this.renderShader),
                            this.particles = u.default.particles,
                            this.particles.position.z = -4e3,
                            this.particles.position.y = 200,
                            this.callback()
                    }
                }, {
                    key: "updateText",
                    value: function (t, e) {
                        this.index = t,
                            this.color = e,
                            this.simulationShader.uniforms.currentPosition.value = this.oldIndex,
                            this.simulationShader.uniforms.newPosition.value = this.index,
                            this.renderShader.uniforms.animRatio.value = 0,
                            this.renderShader.uniforms.currentCol.value = new s.Color(this.oldColor),
                            this.renderShader.uniforms.newCol.value = new s.Color(this.color),
                            TweenMax.to(this.renderShader.uniforms.animRatio, .5, {
                                value: 2,
                                ease: Linear.easeNone
                            }),
                            this.simulationShader.uniforms.animRatio.value = 0,
                            TweenMax.to(this.simulationShader.uniforms.animRatio, 1.5, {
                                value: 2,
                                ease: Linear.easeNone
                            }),
                            this.oldIndex = t,
                            this.oldColor = e,
                            this.show()
                    }
                }, {
                    key: "hide",
                    value: function (t) {
                        this.isVisible = !1,
                            TweenMax.to(this.simulationShader.uniforms.hideRatio, 1, {
                                value: 2,
                                ease: Linear.easeNone,
                                onComplete: t
                            })
                    }
                }, {
                    key: "show",
                    value: function () {
                        this.isVisible || (this.isVisible = !0,
                            this.simulationShader.uniforms.hideRatio.value = 2,
                            TweenMax.to(this.simulationShader.uniforms.hideRatio, 2, {
                                value: 0,
                                ease: Linear.easeNone
                            }))
                    }
                }, {
                    key: "updateRender",
                    value: function () {
                        this.timer++,
                            this.simulationShader.uniforms.timer.value = this.timer,
                            u.default.update()
                    }
                }, {
                    key: "fontReady",
                    get: function () {
                        var t = new p;
                        try {
                            d.load({
                                custom: {
                                    families: ["YesevaOne"]
                                },
                                loading: function () { },
                                active: function () {
                                    t.resolve()
                                },
                                inactive: function () {
                                    t.resolve()
                                }
                            })
                        } catch (e) {
                            t.resolve()
                        }
                        return t.promise
                    }
                }]),
                    t
            }();
        e.default = g
    }
    , function (t, e) {
        t.exports = function (t) {
            function e(e, i) {
                function n() {
                    return 2 * Math.PI / 60 / 60 * k.autoRotateSpeed
                }
                function r() {
                    return Math.pow(.95, k.zoomSpeed)
                }
                function a(t) {
                    G.theta -= t
                }
                function o(t) {
                    G.phi -= t
                }
                function s(e) {
                    k.object instanceof t.PerspectiveCamera ? V /= e : k.object instanceof t.OrthographicCamera ? (k.object.zoom = Math.max(k.minZoom, Math.min(k.maxZoom, k.object.zoom * e)),
                        k.object.updateProjectionMatrix(),
                        W = !0) : k.enableZoom = !1
                }
                function h(e) {
                    k.object instanceof t.PerspectiveCamera ? V *= e : k.object instanceof t.OrthographicCamera ? (k.object.zoom = Math.max(k.minZoom, Math.min(k.maxZoom, k.object.zoom / e)),
                        k.object.updateProjectionMatrix(),
                        W = !0) : k.enableZoom = !1
                }
                function l(t) {
                    X.set(t.clientX, t.clientY)
                }
                function c(t) {
                    J.set(t.clientX, t.clientY)
                }
                function u(t) {
                    Z.set(t.clientX, t.clientY)
                }
                function p(t) {
                    Y.set(t.clientX, t.clientY),
                        q.subVectors(Y, X);
                    var e = k.domElement === document ? k.domElement.body : k.domElement;
                    a(2 * Math.PI * q.x / e.clientWidth * k.rotateSpeed),
                        o(2 * Math.PI * q.y / e.clientHeight * k.rotateSpeed),
                        X.copy(Y),
                        k.update()
                }
                function d(t) {
                    $.set(t.clientX, t.clientY),
                        tt.subVectors($, J),
                        tt.y > 0 ? s(r()) : tt.y < 0 && h(r()),
                        J.copy($),
                        k.update()
                }
                function f(t) {
                    K.set(t.clientX, t.clientY),
                        Q.subVectors(K, Z),
                        nt(Q.x, Q.y),
                        Z.copy(K),
                        k.update()
                }
                function m(t) { }
                function g(t) {
                    t.deltaY < 0 ? h(r()) : t.deltaY > 0 && s(r()),
                        k.update()
                }
                function v(t) {
                    switch (t.keyCode) {
                        case k.keys.UP:
                            nt(0, k.keyPanSpeed),
                                k.update();
                            break;
                        case k.keys.BOTTOM:
                            nt(0, -k.keyPanSpeed),
                                k.update();
                            break;
                        case k.keys.LEFT:
                            nt(k.keyPanSpeed, 0),
                                k.update();
                            break;
                        case k.keys.RIGHT:
                            nt(-k.keyPanSpeed, 0),
                                k.update()
                    }
                }
                function y(t) {
                    X.set(t.touches[0].pageX, t.touches[0].pageY)
                }
                function _(t) {
                    var e = t.touches[0].pageX - t.touches[1].pageX
                        , i = t.touches[0].pageY - t.touches[1].pageY
                        , n = Math.sqrt(e * e + i * i);
                    J.set(0, n)
                }
                function x(t) {
                    Z.set(t.touches[0].pageX, t.touches[0].pageY)
                }
                function w(t) {
                    Y.set(t.touches[0].pageX, t.touches[0].pageY),
                        q.subVectors(Y, X);
                    var e = k.domElement === document ? k.domElement.body : k.domElement;
                    a(2 * Math.PI * q.x / e.clientWidth * k.rotateSpeed),
                        o(2 * Math.PI * q.y / e.clientHeight * k.rotateSpeed),
                        X.copy(Y),
                        k.update()
                }
                function b(t) {
                    var e = t.touches[0].pageX - t.touches[1].pageX
                        , i = t.touches[0].pageY - t.touches[1].pageY
                        , n = Math.sqrt(e * e + i * i);
                    $.set(0, n),
                        tt.subVectors($, J),
                        tt.y > 0 ? h(r()) : tt.y < 0 && s(r()),
                        J.copy($),
                        k.update()
                }
                function M(t) {
                    K.set(t.touches[0].pageX, t.touches[0].pageY),
                        Q.subVectors(K, Z),
                        nt(Q.x, Q.y),
                        Z.copy(K),
                        k.update()
                }
                function T(t) { }
                function P(t) {
                    if (!1 !== k.enabled) {
                        if (t.preventDefault(),
                            t.button === k.mouseButtons.ORBIT) {
                            if (!1 === k.enableRotate)
                                return;
                            l(t),
                                B = N.ROTATE
                        } else if (t.button === k.mouseButtons.ZOOM) {
                            if (!1 === k.enableZoom)
                                return;
                            c(t),
                                B = N.DOLLY
                        } else if (t.button === k.mouseButtons.PAN) {
                            if (!1 === k.enablePan)
                                return;
                            u(t),
                                B = N.PAN
                        }
                        B !== N.NONE && (document.addEventListener("mousemove", S, !1),
                            document.addEventListener("mouseup", A, !1),
                            k.dispatchEvent(F))
                    }
                }
                function S(t) {
                    if (!1 !== k.enabled)
                        if (t.preventDefault(),
                            B === N.ROTATE) {
                            if (!1 === k.enableRotate)
                                return;
                            p(t)
                        } else if (B === N.DOLLY) {
                            if (!1 === k.enableZoom)
                                return;
                            d(t)
                        } else if (B === N.PAN) {
                            if (!1 === k.enablePan)
                                return;
                            f(t)
                        }
                }
                function A(t) {
                    !1 !== k.enabled && (m(t),
                        document.removeEventListener("mousemove", S, !1),
                        document.removeEventListener("mouseup", A, !1),
                        k.dispatchEvent(D),
                        B = N.NONE)
                }
                function E(t) {
                    !1 === k.enabled || !1 === k.enableZoom || B !== N.NONE && B !== N.ROTATE || (t.preventDefault(),
                        t.stopPropagation(),
                        g(t),
                        k.dispatchEvent(F),
                        k.dispatchEvent(D))
                }
                function L(t) {
                    !1 !== k.enabled && !1 !== k.enableKeys && !1 !== k.enablePan && v(t)
                }
                function C(t) {
                    if (!1 !== k.enabled) {
                        switch (t.touches.length) {
                            case 1:
                                if (!1 === k.enableRotate)
                                    return;
                                y(t),
                                    B = N.TOUCH_ROTATE;
                                break;
                            case 2:
                                if (!1 === k.enableZoom)
                                    return;
                                _(t),
                                    B = N.TOUCH_DOLLY;
                                break;
                            case 3:
                                if (!1 === k.enablePan)
                                    return;
                                x(t),
                                    B = N.TOUCH_PAN;
                                break;
                            default:
                                B = N.NONE
                        }
                        B !== N.NONE && k.dispatchEvent(F)
                    }
                }
                function O(t) {
                    if (!1 !== k.enabled)
                        switch (t.preventDefault(),
                        t.stopPropagation(),
                        t.touches.length) {
                            case 1:
                                if (!1 === k.enableRotate)
                                    return;
                                if (B !== N.TOUCH_ROTATE)
                                    return;
                                w(t);
                                break;
                            case 2:
                                if (!1 === k.enableZoom)
                                    return;
                                if (B !== N.TOUCH_DOLLY)
                                    return;
                                b(t);
                                break;
                            case 3:
                                if (!1 === k.enablePan)
                                    return;
                                if (B !== N.TOUCH_PAN)
                                    return;
                                M(t);
                                break;
                            default:
                                B = N.NONE
                        }
                }
                function R(t) {
                    !1 !== k.enabled && (T(t),
                        k.dispatchEvent(D),
                        B = N.NONE)
                }
                function I(t) {
                    t.preventDefault()
                }
                this.object = e,
                    this.domElement = void 0 !== i ? i : document,
                    this.enabled = !0,
                    this.target = new t.Vector3,
                    this.minDistance = 0,
                    this.maxDistance = 1 / 0,
                    this.minZoom = 0,
                    this.maxZoom = 1 / 0,
                    this.minPolarAngle = 0,
                    this.maxPolarAngle = Math.PI,
                    this.minAzimuthAngle = -1 / 0,
                    this.maxAzimuthAngle = 1 / 0,
                    this.enableDamping = !1,
                    this.dampingFactor = .25,
                    this.enableZoom = !0,
                    this.zoomSpeed = 1,
                    this.enableRotate = !0,
                    this.rotateSpeed = 1,
                    this.enablePan = !0,
                    this.keyPanSpeed = 7,
                    this.autoRotate = !1,
                    this.autoRotateSpeed = 2,
                    this.enableKeys = !0,
                    this.keys = {
                        LEFT: 37,
                        UP: 38,
                        RIGHT: 39,
                        BOTTOM: 40
                    },
                    this.mouseButtons = {
                        ORBIT: t.MOUSE.LEFT,
                        ZOOM: t.MOUSE.MIDDLE,
                        PAN: t.MOUSE.RIGHT
                    },
                    this.target0 = this.target.clone(),
                    this.position0 = this.object.position.clone(),
                    this.zoom0 = this.object.zoom,
                    this.getPolarAngle = function () {
                        return j.phi
                    }
                    ,
                    this.getAzimuthalAngle = function () {
                        return j.theta
                    }
                    ,
                    this.reset = function () {
                        k.target.copy(k.target0),
                            k.object.position.copy(k.position0),
                            k.object.zoom = k.zoom0,
                            k.object.updateProjectionMatrix(),
                            k.dispatchEvent(z),
                            k.update(),
                            B = N.NONE
                    }
                    ,
                    this.update = function () {
                        var i = new t.Vector3
                            , r = (new t.Quaternion).setFromUnitVectors(e.up, new t.Vector3(0, 1, 0))
                            , o = r.clone().inverse()
                            , s = new t.Vector3
                            , h = new t.Quaternion;
                        return function () {
                            var t = k.object.position;
                            return i.copy(t).sub(k.target),
                                i.applyQuaternion(r),
                                j.setFromVector3(i),
                                k.autoRotate && B === N.NONE && a(n()),
                                j.theta += G.theta,
                                j.phi += G.phi,
                                j.theta = Math.max(k.minAzimuthAngle, Math.min(k.maxAzimuthAngle, j.theta)),
                                j.phi = Math.max(k.minPolarAngle, Math.min(k.maxPolarAngle, j.phi)),
                                j.makeSafe(),
                                j.radius *= V,
                                j.radius = Math.max(k.minDistance, Math.min(k.maxDistance, j.radius)),
                                k.target.add(H),
                                i.setFromSpherical(j),
                                i.applyQuaternion(o),
                                t.copy(k.target).add(i),
                                k.object.lookAt(k.target),
                                !0 === k.enableDamping ? (G.theta *= 1 - k.dampingFactor,
                                    G.phi *= 1 - k.dampingFactor) : G.set(0, 0, 0),
                                V = 1,
                                H.set(0, 0, 0),
                                !!(W || s.distanceToSquared(k.object.position) > U || 8 * (1 - h.dot(k.object.quaternion)) > U) && (k.dispatchEvent(z),
                                    s.copy(k.object.position),
                                    h.copy(k.object.quaternion),
                                    W = !1,
                                    !0)
                        }
                    }(),
                    this.dispose = function () {
                        k.domElement.removeEventListener("contextmenu", I, !1),
                            k.domElement.removeEventListener("mousedown", P, !1),
                            k.domElement.removeEventListener("wheel", E, !1),
                            k.domElement.removeEventListener("touchstart", C, !1),
                            k.domElement.removeEventListener("touchend", R, !1),
                            k.domElement.removeEventListener("touchmove", O, !1),
                            document.removeEventListener("mousemove", S, !1),
                            document.removeEventListener("mouseup", A, !1),
                            window.removeEventListener("keydown", L, !1)
                    }
                    ;
                var k = this
                    , z = {
                        type: "change"
                    }
                    , F = {
                        type: "start"
                    }
                    , D = {
                        type: "end"
                    }
                    , N = {
                        NONE: -1,
                        ROTATE: 0,
                        DOLLY: 1,
                        PAN: 2,
                        TOUCH_ROTATE: 3,
                        TOUCH_DOLLY: 4,
                        TOUCH_PAN: 5
                    }
                    , B = N.NONE
                    , U = 1e-6
                    , j = new t.Spherical
                    , G = new t.Spherical
                    , V = 1
                    , H = new t.Vector3
                    , W = !1
                    , X = new t.Vector2
                    , Y = new t.Vector2
                    , q = new t.Vector2
                    , Z = new t.Vector2
                    , K = new t.Vector2
                    , Q = new t.Vector2
                    , J = new t.Vector2
                    , $ = new t.Vector2
                    , tt = new t.Vector2
                    , et = function () {
                        var e = new t.Vector3;
                        return function (t, i) {
                            e.setFromMatrixColumn(i, 0),
                                e.multiplyScalar(-t),
                                H.add(e)
                        }
                    }()
                    , it = function () {
                        var e = new t.Vector3;
                        return function (t, i) {
                            e.setFromMatrixColumn(i, 1),
                                e.multiplyScalar(t),
                                H.add(e)
                        }
                    }()
                    , nt = function () {
                        var e = new t.Vector3;
                        return function (i, n) {
                            var r = k.domElement === document ? k.domElement.body : k.domElement;
                            if (k.object instanceof t.PerspectiveCamera) {
                                var a = k.object.position;
                                e.copy(a).sub(k.target);
                                var o = e.length();
                                o *= Math.tan(k.object.fov / 2 * Math.PI / 180),
                                    et(2 * i * o / r.clientHeight, k.object.matrix),
                                    it(2 * n * o / r.clientHeight, k.object.matrix)
                            } else
                                k.object instanceof t.OrthographicCamera ? (et(i * (k.object.right - k.object.left) / k.object.zoom / r.clientWidth, k.object.matrix),
                                    it(n * (k.object.top - k.object.bottom) / k.object.zoom / r.clientHeight, k.object.matrix)) : k.enablePan = !1
                        }
                    }();
                k.domElement.addEventListener("contextmenu", I, !1),
                    k.domElement.addEventListener("mousedown", P, !1),
                    k.domElement.addEventListener("wheel", E, !1),
                    k.domElement.addEventListener("touchstart", C, !1),
                    k.domElement.addEventListener("touchend", R, !1),
                    k.domElement.addEventListener("touchmove", O, !1),
                    window.addEventListener("keydown", L, !1),
                    this.update()
            }
            return e.prototype = Object.create(t.EventDispatcher.prototype),
                e.prototype.constructor = e,
                Object.defineProperties(e.prototype, {
                    center: {
                        get: function () {
                            return this.target
                        }
                    },
                    noZoom: {
                        get: function () {
                            return !this.enableZoom
                        },
                        set: function (t) {
                            this.enableZoom = !t
                        }
                    },
                    noRotate: {
                        get: function () {
                            return !this.enableRotate
                        },
                        set: function (t) {
                            this.enableRotate = !t
                        }
                    },
                    noPan: {
                        get: function () {
                            return !this.enablePan
                        },
                        set: function (t) {
                            this.enablePan = !t
                        }
                    },
                    noKeys: {
                        get: function () {
                            return !this.enableKeys
                        },
                        set: function (t) {
                            this.enableKeys = !t
                        }
                    },
                    staticMoving: {
                        get: function () {
                            return !this.enableDamping
                        },
                        set: function (t) {
                            this.enableDamping = !t
                        }
                    },
                    dynamicDampingFactor: {
                        get: function () {
                            return this.dampingFactor
                        },
                        set: function (t) {
                            this.dampingFactor = t
                        }
                    }
                }),
                e
        }
    }
    , function (t, e, i) {
        var n;
        !function () {
            function r(t, e, i) {
                return t.call.apply(t.bind, arguments)
            }
            function a(t, e, i) {
                if (!t)
                    throw Error();
                if (2 < arguments.length) {
                    var n = Array.prototype.slice.call(arguments, 2);
                    return function () {
                        var i = Array.prototype.slice.call(arguments);
                        return Array.prototype.unshift.apply(i, n),
                            t.apply(e, i)
                    }
                }
                return function () {
                    return t.apply(e, arguments)
                }
            }
            function o(t, e, i) {
                return o = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? r : a,
                    o.apply(null, arguments)
            }
            function s(t, e) {
                this.a = t,
                    this.o = e || t,
                    this.c = this.o.document
            }
            function h(t, e, i, n) {
                if (e = t.c.createElement(e),
                    i)
                    for (var r in i)
                        i.hasOwnProperty(r) && ("style" == r ? e.style.cssText = i[r] : e.setAttribute(r, i[r]));
                return n && e.appendChild(t.c.createTextNode(n)),
                    e
            }
            function l(t, e, i) {
                t = t.c.getElementsByTagName(e)[0],
                    t || (t = document.documentElement),
                    t.insertBefore(i, t.lastChild)
            }
            function c(t) {
                t.parentNode && t.parentNode.removeChild(t)
            }
            function u(t, e, i) {
                e = e || [],
                    i = i || [];
                for (var n = t.className.split(/\s+/), r = 0; r < e.length; r += 1) {
                    for (var a = !1, o = 0; o < n.length; o += 1)
                        if (e[r] === n[o]) {
                            a = !0;
                            break
                        }
                    a || n.push(e[r])
                }
                for (e = [],
                    r = 0; r < n.length; r += 1) {
                    for (a = !1,
                        o = 0; o < i.length; o += 1)
                        if (n[r] === i[o]) {
                            a = !0;
                            break
                        }
                    a || e.push(n[r])
                }
                t.className = e.join(" ").replace(/\s+/g, " ").replace(/^\s+|\s+$/, "")
            }
            function p(t, e) {
                for (var i = t.className.split(/\s+/), n = 0, r = i.length; n < r; n++)
                    if (i[n] == e)
                        return !0;
                return !1
            }
            function d(t) {
                return t.o.location.hostname || t.a.location.hostname
            }
            function f(t, e, i) {
                function n() {
                    s && r && a && (s(o),
                        s = null)
                }
                e = h(t, "link", {
                    rel: "stylesheet",
                    href: e,
                    media: "all"
                });
                var r = !1
                    , a = !0
                    , o = null
                    , s = i || null;
                at ? (e.onload = function () {
                    r = !0,
                        n()
                }
                    ,
                    e.onerror = function () {
                        r = !0,
                            o = Error("Stylesheet failed to load"),
                            n()
                    }
                ) : setTimeout(function () {
                    r = !0,
                        n()
                }, 0),
                    l(t, "head", e)
            }
            function m(t, e, i, n) {
                var r = t.c.getElementsByTagName("head")[0];
                if (r) {
                    var a = h(t, "script", {
                        src: e
                    })
                        , o = !1;
                    return a.onload = a.onreadystatechange = function () {
                        o || this.readyState && "loaded" != this.readyState && "complete" != this.readyState || (o = !0,
                            i && i(null),
                            a.onload = a.onreadystatechange = null,
                            "HEAD" == a.parentNode.tagName && r.removeChild(a))
                    }
                        ,
                        r.appendChild(a),
                        setTimeout(function () {
                            o || (o = !0,
                                i && i(Error("Script load timeout")))
                        }, n || 5e3),
                        a
                }
                return null
            }
            function g() {
                this.a = 0,
                    this.c = null
            }
            function v(t) {
                return t.a++,
                    function () {
                        t.a--,
                            _(t)
                    }
            }
            function y(t, e) {
                t.c = e,
                    _(t)
            }
            function _(t) {
                0 == t.a && t.c && (t.c(),
                    t.c = null)
            }
            function x(t) {
                this.a = t || "-"
            }
            function w(t, e) {
                this.c = t,
                    this.f = 4,
                    this.a = "n";
                var i = (e || "n4").match(/^([nio])([1-9])$/i);
                i && (this.a = i[1],
                    this.f = parseInt(i[2], 10))
            }
            function b(t) {
                return P(t) + " " + t.f + "00 300px " + M(t.c)
            }
            function M(t) {
                var e = [];
                t = t.split(/,\s*/);
                for (var i = 0; i < t.length; i++) {
                    var n = t[i].replace(/['"]/g, "");
                    -1 != n.indexOf(" ") || /^\d/.test(n) ? e.push("'" + n + "'") : e.push(n)
                }
                return e.join(",")
            }
            function T(t) {
                return t.a + t.f
            }
            function P(t) {
                var e = "normal";
                return "o" === t.a ? e = "oblique" : "i" === t.a && (e = "italic"),
                    e
            }
            function S(t) {
                var e = 4
                    , i = "n"
                    , n = null;
                return t && ((n = t.match(/(normal|oblique|italic)/i)) && n[1] && (i = n[1].substr(0, 1).toLowerCase()),
                    (n = t.match(/([1-9]00|normal|bold)/i)) && n[1] && (/bold/i.test(n[1]) ? e = 7 : /[1-9]00/.test(n[1]) && (e = parseInt(n[1].substr(0, 1), 10)))),
                    i + e
            }
            function A(t, e) {
                this.c = t,
                    this.f = t.o.document.documentElement,
                    this.h = e,
                    this.a = new x("-"),
                    this.j = !1 !== e.events,
                    this.g = !1 !== e.classes
            }
            function E(t) {
                t.g && u(t.f, [t.a.c("wf", "loading")]),
                    C(t, "loading")
            }
            function L(t) {
                if (t.g) {
                    var e = p(t.f, t.a.c("wf", "active"))
                        , i = []
                        , n = [t.a.c("wf", "loading")];
                    e || i.push(t.a.c("wf", "inactive")),
                        u(t.f, i, n)
                }
                C(t, "inactive")
            }
            function C(t, e, i) {
                t.j && t.h[e] && (i ? t.h[e](i.c, T(i)) : t.h[e]())
            }
            function O() {
                this.c = {}
            }
            function R(t, e, i) {
                var n, r = [];
                for (n in e)
                    if (e.hasOwnProperty(n)) {
                        var a = t.c[n];
                        a && r.push(a(e[n], i))
                    }
                return r
            }
            function I(t, e) {
                this.c = t,
                    this.f = e,
                    this.a = h(this.c, "span", {
                        "aria-hidden": "true"
                    }, this.f)
            }
            function k(t) {
                l(t.c, "body", t.a)
            }
            function z(t) {
                return "display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:" + M(t.c) + ";font-style:" + P(t) + ";font-weight:" + t.f + "00;"
            }
            function F(t, e, i, n, r, a) {
                this.g = t,
                    this.j = e,
                    this.a = n,
                    this.c = i,
                    this.f = r || 3e3,
                    this.h = a || void 0
            }
            function D(t, e, i, n, r, a, o) {
                this.v = t,
                    this.B = e,
                    this.c = i,
                    this.a = n,
                    this.s = o || "BESbswy",
                    this.f = {},
                    this.w = r || 3e3,
                    this.u = a || null,
                    this.m = this.j = this.h = this.g = null,
                    this.g = new I(this.c, this.s),
                    this.h = new I(this.c, this.s),
                    this.j = new I(this.c, this.s),
                    this.m = new I(this.c, this.s),
                    t = new w(this.a.c + ",serif", T(this.a)),
                    t = z(t),
                    this.g.a.style.cssText = t,
                    t = new w(this.a.c + ",sans-serif", T(this.a)),
                    t = z(t),
                    this.h.a.style.cssText = t,
                    t = new w("serif", T(this.a)),
                    t = z(t),
                    this.j.a.style.cssText = t,
                    t = new w("sans-serif", T(this.a)),
                    t = z(t),
                    this.m.a.style.cssText = t,
                    k(this.g),
                    k(this.h),
                    k(this.j),
                    k(this.m)
            }
            function N() {
                if (null === st) {
                    var t = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent);
                    st = !!t && (536 > parseInt(t[1], 10) || 536 === parseInt(t[1], 10) && 11 >= parseInt(t[2], 10))
                }
                return st
            }
            function B(t, e, i) {
                for (var n in ot)
                    if (ot.hasOwnProperty(n) && e === t.f[ot[n]] && i === t.f[ot[n]])
                        return !0;
                return !1
            }
            function U(t) {
                var e, i = t.g.a.offsetWidth, n = t.h.a.offsetWidth;
                (e = i === t.f.serif && n === t.f["sans-serif"]) || (e = N() && B(t, i, n)),
                    e ? rt() - t.A >= t.w ? N() && B(t, i, n) && (null === t.u || t.u.hasOwnProperty(t.a.c)) ? G(t, t.v) : G(t, t.B) : j(t) : G(t, t.v)
            }
            function j(t) {
                setTimeout(o(function () {
                    U(this)
                }, t), 50)
            }
            function G(t, e) {
                setTimeout(o(function () {
                    c(this.g.a),
                        c(this.h.a),
                        c(this.j.a),
                        c(this.m.a),
                        e(this.a)
                }, t), 0)
            }
            function V(t, e, i) {
                this.c = t,
                    this.a = e,
                    this.f = 0,
                    this.m = this.j = !1,
                    this.s = i
            }
            function H(t) {
                0 == --t.f && t.j && (t.m ? (t = t.a,
                    t.g && u(t.f, [t.a.c("wf", "active")], [t.a.c("wf", "loading"), t.a.c("wf", "inactive")]),
                    C(t, "active")) : L(t.a))
            }
            function W(t) {
                this.j = t,
                    this.a = new O,
                    this.h = 0,
                    this.f = this.g = !0
            }
            function X(t, e, i, n, r) {
                var a = 0 == --t.h;
                (t.f || t.g) && setTimeout(function () {
                    var t = r || null
                        , s = n || null || {};
                    if (0 === i.length && a)
                        L(e.a);
                    else {
                        e.f += i.length,
                            a && (e.j = a);
                        var h, l = [];
                        for (h = 0; h < i.length; h++) {
                            var c = i[h]
                                , p = s[c.c]
                                , d = e.a
                                , f = c;
                            if (d.g && u(d.f, [d.a.c("wf", f.c, T(f).toString(), "loading")]),
                                C(d, "fontloading", f),
                                d = null,
                                null === ht)
                                if (window.FontFace) {
                                    var f = /Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent)
                                        , m = /OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent) && /Apple/.exec(window.navigator.vendor);
                                    ht = f ? 42 < parseInt(f[1], 10) : !m
                                } else
                                    ht = !1;
                            d = ht ? new F(o(e.g, e), o(e.h, e), e.c, c, e.s, p) : new D(o(e.g, e), o(e.h, e), e.c, c, e.s, t, p),
                                l.push(d)
                        }
                        for (h = 0; h < l.length; h++)
                            l[h].start()
                    }
                }, 0)
            }
            function Y(t, e, i) {
                var n = []
                    , r = i.timeout;
                E(e);
                var n = R(t.a, i, t.c)
                    , a = new V(t.c, e, r);
                for (t.h = n.length,
                    e = 0,
                    i = n.length; e < i; e++)
                    n[e].load(function (e, i, n) {
                        X(t, a, e, i, n)
                    })
            }
            function q(t, e) {
                this.c = t,
                    this.a = e
            }
            function Z(t, e) {
                this.c = t,
                    this.a = e
            }
            function K(t, e) {
                this.c = t || lt,
                    this.a = [],
                    this.f = [],
                    this.g = e || ""
            }
            function Q(t, e) {
                for (var i = e.length, n = 0; n < i; n++) {
                    var r = e[n].split(":");
                    3 == r.length && t.f.push(r.pop());
                    var a = "";
                    2 == r.length && "" != r[1] && (a = ":"),
                        t.a.push(r.join(a))
                }
            }
            function J(t) {
                if (0 == t.a.length)
                    throw Error("No fonts to load!");
                if (-1 != t.c.indexOf("kit="))
                    return t.c;
                for (var e = t.a.length, i = [], n = 0; n < e; n++)
                    i.push(t.a[n].replace(/ /g, "+"));
                return e = t.c + "?family=" + i.join("%7C"),
                    0 < t.f.length && (e += "&subset=" + t.f.join(",")),
                    0 < t.g.length && (e += "&text=" + encodeURIComponent(t.g)),
                    e
            }
            function $(t) {
                this.f = t,
                    this.a = [],
                    this.c = {}
            }
            function tt(t) {
                for (var e = t.f.length, i = 0; i < e; i++) {
                    var n = t.f[i].split(":")
                        , r = n[0].replace(/\+/g, " ")
                        , a = ["n4"];
                    if (2 <= n.length) {
                        var o, s = n[1];
                        if (o = [],
                            s)
                            for (var s = s.split(","), h = s.length, l = 0; l < h; l++) {
                                var c;
                                if (c = s[l],
                                    c.match(/^[\w-]+$/)) {
                                    var u = dt.exec(c.toLowerCase());
                                    if (null == u)
                                        c = "";
                                    else {
                                        if (c = u[2],
                                            c = null == c || "" == c ? "n" : pt[c],
                                            null == (u = u[1]) || "" == u)
                                            u = "4";
                                        else
                                            var p = ut[u]
                                                , u = p || (isNaN(u) ? "4" : u.substr(0, 1));
                                        c = [c, u].join("")
                                    }
                                } else
                                    c = "";
                                c && o.push(c)
                            }
                        0 < o.length && (a = o),
                            3 == n.length && (n = n[2],
                                o = [],
                                n = n ? n.split(",") : o,
                                0 < n.length && (n = ct[n[0]]) && (t.c[r] = n))
                    }
                    for (t.c[r] || (n = ct[r]) && (t.c[r] = n),
                        n = 0; n < a.length; n += 1)
                        t.a.push(new w(r, a[n]))
                }
            }
            function et(t, e) {
                this.c = t,
                    this.a = e
            }
            function it(t, e) {
                this.c = t,
                    this.a = e
            }
            function nt(t, e) {
                this.c = t,
                    this.f = e,
                    this.a = []
            }
            var rt = Date.now || function () {
                return +new Date
            }
                , at = !!window.FontFace;
            x.prototype.c = function (t) {
                for (var e = [], i = 0; i < arguments.length; i++)
                    e.push(arguments[i].replace(/[\W_]+/g, "").toLowerCase());
                return e.join(this.a)
            }
                ,
                F.prototype.start = function () {
                    var t = this.c.o.document
                        , e = this
                        , i = rt()
                        , n = new Promise(function (n, r) {
                            function a() {
                                rt() - i >= e.f ? r() : t.fonts.load(b(e.a), e.h).then(function (t) {
                                    1 <= t.length ? n() : setTimeout(a, 25)
                                }, function () {
                                    r()
                                })
                            }
                            a()
                        }
                        )
                        , r = null
                        , a = new Promise(function (t, i) {
                            r = setTimeout(i, e.f)
                        }
                        );
                    Promise.race([a, n]).then(function () {
                        r && (clearTimeout(r),
                            r = null),
                            e.g(e.a)
                    }, function () {
                        e.j(e.a)
                    })
                }
                ;
            var ot = {
                D: "serif",
                C: "sans-serif"
            }
                , st = null;
            D.prototype.start = function () {
                this.f.serif = this.j.a.offsetWidth,
                    this.f["sans-serif"] = this.m.a.offsetWidth,
                    this.A = rt(),
                    U(this)
            }
                ;
            var ht = null;
            V.prototype.g = function (t) {
                var e = this.a;
                e.g && u(e.f, [e.a.c("wf", t.c, T(t).toString(), "active")], [e.a.c("wf", t.c, T(t).toString(), "loading"), e.a.c("wf", t.c, T(t).toString(), "inactive")]),
                    C(e, "fontactive", t),
                    this.m = !0,
                    H(this)
            }
                ,
                V.prototype.h = function (t) {
                    var e = this.a;
                    if (e.g) {
                        var i = p(e.f, e.a.c("wf", t.c, T(t).toString(), "active"))
                            , n = []
                            , r = [e.a.c("wf", t.c, T(t).toString(), "loading")];
                        i || n.push(e.a.c("wf", t.c, T(t).toString(), "inactive")),
                            u(e.f, n, r)
                    }
                    C(e, "fontinactive", t),
                        H(this)
                }
                ,
                W.prototype.load = function (t) {
                    this.c = new s(this.j, t.context || this.j),
                        this.g = !1 !== t.events,
                        this.f = !1 !== t.classes,
                        Y(this, new A(this.c, t), t)
                }
                ,
                q.prototype.load = function (t) {
                    function e() {
                        if (a["__mti_fntLst" + n]) {
                            var i, r = a["__mti_fntLst" + n](), o = [];
                            if (r)
                                for (var s = 0; s < r.length; s++) {
                                    var h = r[s].fontfamily;
                                    void 0 != r[s].fontStyle && void 0 != r[s].fontWeight ? (i = r[s].fontStyle + r[s].fontWeight,
                                        o.push(new w(h, i))) : o.push(new w(h))
                                }
                            t(o)
                        } else
                            setTimeout(function () {
                                e()
                            }, 50)
                    }
                    var i = this
                        , n = i.a.projectId
                        , r = i.a.version;
                    if (n) {
                        var a = i.c.o;
                        m(this.c, (i.a.api || "https://fast.fonts.net/jsapi") + "/" + n + ".js" + (r ? "?v=" + r : ""), function (r) {
                            r ? t([]) : (a["__MonotypeConfiguration__" + n] = function () {
                                return i.a
                            }
                                ,
                                e())
                        }).id = "__MonotypeAPIScript__" + n
                    } else
                        t([])
                }
                ,
                Z.prototype.load = function (t) {
                    var e, i, n = this.a.urls || [], r = this.a.families || [], a = this.a.testStrings || {}, o = new g;
                    for (e = 0,
                        i = n.length; e < i; e++)
                        f(this.c, n[e], v(o));
                    var s = [];
                    for (e = 0,
                        i = r.length; e < i; e++)
                        if (n = r[e].split(":"),
                            n[1])
                            for (var h = n[1].split(","), l = 0; l < h.length; l += 1)
                                s.push(new w(n[0], h[l]));
                        else
                            s.push(new w(n[0]));
                    y(o, function () {
                        t(s, a)
                    })
                }
                ;
            var lt = "https://fonts.googleapis.com/css"
                , ct = {
                    latin: "BESbswy",
                    "latin-ext": "çöüğş",
                    cyrillic: "йяЖ",
                    greek: "αβΣ",
                    khmer: "កខគ",
                    Hanuman: "កខគ"
                }
                , ut = {
                    thin: "1",
                    extralight: "2",
                    "extra-light": "2",
                    ultralight: "2",
                    "ultra-light": "2",
                    light: "3",
                    regular: "4",
                    book: "4",
                    medium: "5",
                    "semi-bold": "6",
                    semibold: "6",
                    "demi-bold": "6",
                    demibold: "6",
                    bold: "7",
                    "extra-bold": "8",
                    extrabold: "8",
                    "ultra-bold": "8",
                    ultrabold: "8",
                    black: "9",
                    heavy: "9",
                    l: "3",
                    r: "4",
                    b: "7"
                }
                , pt = {
                    i: "i",
                    italic: "i",
                    n: "n",
                    normal: "n"
                }
                , dt = /^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/
                , ft = {
                    Arimo: !0,
                    Cousine: !0,
                    Tinos: !0
                };
            et.prototype.load = function (t) {
                var e = new g
                    , i = this.c
                    , n = new K(this.a.api, this.a.text)
                    , r = this.a.families;
                Q(n, r);
                var a = new $(r);
                tt(a),
                    f(i, J(n), v(e)),
                    y(e, function () {
                        t(a.a, a.c, ft)
                    })
            }
                ,
                it.prototype.load = function (t) {
                    var e = this.a.id
                        , i = this.c.o;
                    e ? m(this.c, (this.a.api || "https://use.typekit.net") + "/" + e + ".js", function (e) {
                        if (e)
                            t([]);
                        else if (i.Typekit && i.Typekit.config && i.Typekit.config.fn) {
                            e = i.Typekit.config.fn;
                            for (var n = [], r = 0; r < e.length; r += 2)
                                for (var a = e[r], o = e[r + 1], s = 0; s < o.length; s++)
                                    n.push(new w(a, o[s]));
                            try {
                                i.Typekit.load({
                                    events: !1,
                                    classes: !1,
                                    async: !0
                                })
                            } catch (t) { }
                            t(n)
                        }
                    }, 2e3) : t([])
                }
                ,
                nt.prototype.load = function (t) {
                    var e = this.f.id
                        , i = this.c.o
                        , n = this;
                    e ? (i.__webfontfontdeckmodule__ || (i.__webfontfontdeckmodule__ = {}),
                        i.__webfontfontdeckmodule__[e] = function (e, i) {
                            for (var r = 0, a = i.fonts.length; r < a; ++r) {
                                var o = i.fonts[r];
                                n.a.push(new w(o.name, S("font-weight:" + o.weight + ";font-style:" + o.style)))
                            }
                            t(n.a)
                        }
                        ,
                        m(this.c, (this.f.api || "https://f.fontdeck.com/s/css/js/") + d(this.c) + "/" + e + ".js", function (e) {
                            e && t([])
                        })) : t([])
                }
                ;
            var mt = new W(window);
            mt.a.c.custom = function (t, e) {
                return new Z(e, t)
            }
                ,
                mt.a.c.fontdeck = function (t, e) {
                    return new nt(e, t)
                }
                ,
                mt.a.c.monotype = function (t, e) {
                    return new q(e, t)
                }
                ,
                mt.a.c.typekit = function (t, e) {
                    return new it(e, t)
                }
                ,
                mt.a.c.google = function (t, e) {
                    return new et(e, t)
                }
                ;
            var gt = {
                load: o(mt.load, mt)
            };
            void 0 !== (n = function () {
                return gt
            }
                .call(e, i, e, t)) && (t.exports = n)
        }()
    }
    , function (t, e) {
        t.exports = function (t) {
            return t.webpackPolyfill || (t.deprecate = function () { }
                ,
                t.paths = [],
                t.children || (t.children = []),
                Object.defineProperty(t, "loaded", {
                    enumerable: !0,
                    get: function () {
                        return t.l
                    }
                }),
                Object.defineProperty(t, "id", {
                    enumerable: !0,
                    get: function () {
                        return t.i
                    }
                }),
                t.webpackPolyfill = 1),
                t
        }
    }
]);
//# sourceMappingURL=../scripts/main-a250582853.min.js.map
